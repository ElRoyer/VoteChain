import{E as Nt}from"./eventemitter3.cf430168.js";import{_ as L5,b as Ja}from"./node-stdlib-browser.6b0e4e0c.js";import"./semver.7ad410de.js";import{B as $n}from"./bn.js.b2f94f66.js";import"./util.0775b4ff.js";import"./get-intrinsic.3804c57f.js";import"./inherits.44081206.js";import"./safe-buffer.3510e1d8.js";import"./events.1ed0639b.js";import"./string_decoder.d191aa72.js";import"./sha.js.9b95ab78.js";import"./js-sha3.012d80df.js";import{f as ht}from"./cross-fetch.140379b1.js";import{s as YC}from"./ipfs-unixfs-importer.52974374.js";import"./multihashing-async.5e067dad.js";import"./multihashes.7f388a2b.js";import"./multibase.5721e362.js";import"./uint8arrays.2e5a3914.js";import"./multiformats.98c9d81a.js";import{d as w2}from"./merkletreejs.d8ccf055.js";import{b as zC}from"./bs58.16efedab.js";import{r as C,a as xn}from"./react.bd8c6b34.js";import{l as qC}from"./mime.52ae446f.js";import{j as h,k as _t,n as _,u as QC,a as A,F as ve,b as er}from"./@emotion.f09edc96.js";import{i as P}from"./tiny-invariant.47b24a6d.js";import{Q as jC,a as VC,u as N0,b as D0,c as C1}from"./@tanstack.6850667f.js";import{h as k1,a as en,r as E1,J as GC,C as J,B as b,A as B,i as tr,b as Kt,W as U5,t as F5,c as j2,d as rt,e as ZC,f as XC,g as JC,T as H5,j as K5,s as x1,p as Oe,k as Ta,l as it,m as Yn,n as Ge,P as ek,o as Tn,q as O5,u as gr,v as V2,w as R1,I as A1,S as tk,x as nk,y as ak,z as P1,D as yI,E as rk,F as ik,G as wa,H as fI,K as Mr,M as ke,L as Qt,N as Ia,O as $5}from"./@ethersproject.61720b6f.js";import{u as Ln}from"./ethers.c143de23.js";import{z as y}from"./zod.5e6d7e39.js";import{m as le,t as qt,g as Y5,b as zn,a as ye,$ as z5,C as sk,c as ok,d as ck,e as pk,f as lk,M as dk,h as uk,i as mk,j as hk,k as yk,l as fk,n as gk,o as bk,p as Tk,q as wk,r as Ik,s as vk,u as Ck,S as kk,P as Ek,v as xk,w as Rk,x as Ak,E as Pk,y as Mk,z as _k,A as Sk,B as Wk,D as Bk,F as Nk,G as Dk,H as Lk,I as Uk,J as Fk,K as Hk,L as Kk,N as I2,U as Ok}from"./@radix-ui.d5706e4d.js";import{d as $k}from"./detect-browser.2f4566c2.js";import{_ as Yk}from"./react-qr-code.c8bf8f54.js";import{c as zk}from"./copy-to-clipboard.eb25ebbd.js";import{F as v2}from"./fuse.js.292a3002.js";import{b as qk}from"./form-data.d1f94bc2.js";import{f as q5}from"./fast-deep-equal.a94972be.js";import{v as Qk}from"./uuid.fbc3d34b.js";import"./debug.daa7020b.js";import"./@google.8f915a40.js";import{J as gI,S as jk,g as Vk,H as Gk,I as Zk,f as bI,c as Xk,W as Jk}from"./@walletconnect.65ee18ce.js";import"./is-typedarray.90714367.js";import"./typedarray-to-buffer.9039d6fe.js";import"./query-string.3e5d83f3.js";function eE(t,e){if(typeof t!="object"||t===null)return t;var n=t[Symbol.toPrimitive];if(n!==void 0){var a=n.call(t,e||"default");if(typeof a!="object")return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(t)}function tE(t){var e=eE(t,"string");return typeof e=="symbol"?e:String(e)}function Er(t,e,n){return e=tE(e),e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}const xr={"ipfs://":["https://ipfs-2.thirdwebcdn.com/ipfs/","https://ipfs-3.thirdwebcdn.com/ipfs/","https://ipfs-4.thirdwebcdn.com/ipfs/","https://ipfs-5.thirdwebcdn.com/ipfs/","https://cloudflare-ipfs.com/ipfs/","https://ipfs.io/ipfs/","https://ipfs.thirdwebcdn.com/ipfs/"]},nE="https://upload.nftlabs.co",TI="https://api.pinata.cloud/pinning/pinFileToIPFS";function Q5(t){return Array.isArray(t)?{"ipfs://":t}:t||{}}function j5(t){const e={...t,...xr};for(const n of Object.keys(xr))if(t&&t[n]){const a=t[n].map(r=>r.replace(/\/$/,"")+"/");e[n]=[...a,...xr[n]]}return e}function _r(t){return L5.File&&t instanceof File}function Un(t){return L5.Buffer&&t instanceof Ja.Buffer}function va(t){return!!(t&&t.name&&t.data&&typeof t.name=="string"&&(typeof t.data=="string"||Un(t.data)))}function nr(t){return _r(t)||Un(t)||va(t)}function aE(t,e){if(_r(t)&&_r(e)){if(t.name===e.name&&t.lastModified===e.lastModified&&t.size===e.size)return!0}else{if(Un(t)&&Un(e))return t.equals(e);if(va(t)&&va(e)&&t.name===e.name){if(typeof t.data=="string"&&typeof e.data=="string")return t.data===e.data;if(Un(t.data)&&Un(e.data))return t.data.equals(e.data)}}return!1}function V5(t,e){for(const n of Object.keys(e))for(const a of e[n])if(t.startsWith(a))return t.replace(a,n);return t}function L0(t,e){let n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0;const a=Object.keys(e).find(i=>t.startsWith(i)),r=a?e[a]:[];if(!(!a&&n>0||a&&n>=r.length))return a?t.replace(a,r[n]):t}function G2(t,e){return typeof t=="string"?V5(t,e):typeof t=="object"?!t||nr(t)?t:Array.isArray(t)?t.map(n=>G2(n,e)):Object.fromEntries(Object.entries(t).map(n=>{let[a,r]=n;return[a,G2(r,e)]})):t}function Sr(t,e){return typeof t=="string"?L0(t,e):typeof t=="object"?!t||nr(t)?t:Array.isArray(t)?t.map(n=>Sr(n,e)):Object.fromEntries(Object.entries(t).map(n=>{let[a,r]=n;return[a,Sr(r,e)]})):t}function Z2(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];if(nr(t))return e.push(t),e;if(typeof t=="object"){if(!t)return e;Array.isArray(t)?t.forEach(n=>Z2(n,e)):Object.keys(t).map(n=>Z2(t[n],e))}return e}function X2(t,e){if(nr(t)){if(e.length)return t=e.shift(),t;console.warn("Not enough URIs to replace all files in object.")}return typeof t=="object"?t&&(Array.isArray(t)?t.map(n=>X2(n,e)):Object.fromEntries(Object.entries(t).map(n=>{let[a,r]=n;return[a,X2(r,e)]}))):t}async function rE(t,e){let n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,a=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0;const r=await Promise.all(t.map(async(i,s)=>{const o=e[s];let c;if(typeof i=="string")c=new TextEncoder().encode(i);else if(va(i))typeof i.data=="string"?c=new TextEncoder().encode(i.data):c=i.data;else if(Ja.Buffer.isBuffer(i))c=i;else{const p=await i.arrayBuffer();c=new Uint8Array(p)}return{path:o,content:c}}));return iE(r,n,a)}async function iE(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0,n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0;const a={onlyHash:!0,wrapWithDirectory:e,cidVersion:n},r={put:async()=>{}};let i;for await(const{cid:s}of YC.importer(t,r,a))i=s;return`${i}`}async function sE(t){return(await ht(`${xr["ipfs://"][0]}${t}`,{method:"HEAD",headers:{"x-skip-origin":"true"}})).ok}class oE{async download(e,n){let a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0;if(a>3)throw new Error("[FAILED_TO_DOWNLOAD_ERROR] Failed to download from URI - too many attempts failed.");const r=L0(e,n,a);if(!r)throw new Error("[FAILED_TO_DOWNLOAD_ERROR] Unable to download from URI - all gateway URLs failed to respond.");const i=await ht(r);return i.status>=500||i.status===403||i.status===408?(console.warn(`Request to ${r} failed with status ${i.status} - ${i.statusText}`),this.download(e,n,a+1)):i}}class cE{constructor(e){Er(this,"uploadWithGatewayUrl",void 0),this.uploadWithGatewayUrl=(e==null?void 0:e.uploadWithGatewayUrl)||!1}async uploadBatch(e,n){if((n==null?void 0:n.uploadWithoutDirectory)&&e.length>1)throw new Error("[UPLOAD_WITHOUT_DIRECTORY_ERROR] Cannot upload more than one file or object without directory!");const a=new qk,{form:r,fileNames:i}=this.buildFormData(a,e,n);try{const s=await rE(e,i.map(o=>decodeURIComponent(o)),!(n!=null&&n.uploadWithoutDirectory));if(await sE(s)&&!(n!=null&&n.alwaysUpload))return n!=null&&n.onProgress&&(n==null||n.onProgress({progress:100,total:100})),n!=null&&n.uploadWithoutDirectory?[`ipfs://${s}`]:i.map(o=>`ipfs://${s}/${o}`)}catch{}return this.uploadBatchBrowser(r,i,n)}async getUploadToken(){const e=await ht(`${nE}/grant`,{method:"GET",headers:{"X-APP-NAME":{}.CI?"Storage SDK CI":"Storage SDK"}});if(!e.ok)throw new Error("Failed to get upload token");return await e.text()}buildFormData(e,n,a){const r=new Map,i=[];for(let o=0;o<n.length;o++){const c=n[o];let p="",d=c;if(_r(c))if(a!=null&&a.rewriteFileNames){let m="";if(c.name){const f=c.name.lastIndexOf(".");f>-1&&(m=c.name.substring(f))}p=`${o+a.rewriteFileNames.fileStartNumber}${m}`}else p=`${c.name}`;else va(c)?(d=c.data,a!=null&&a.rewriteFileNames?p=`${o+a.rewriteFileNames.fileStartNumber}`:p=`${c.name}`):a!=null&&a.rewriteFileNames?p=`${o+a.rewriteFileNames.fileStartNumber}`:p=`${o}`;const u=a!=null&&a.uploadWithoutDirectory?"files":`files/${p}`;if(r.has(p)){if(aE(r.get(p),c)){i.push(p);continue}throw new Error(`[DUPLICATE_FILE_NAME_ERROR] File name ${p} was passed for more than one different file.`)}r.set(p,c),i.push(p),e.append("file",new Blob([d]),u)}const s={name:"Storage SDK",keyvalues:{...a==null?void 0:a.metadata}};return e.append("pinataMetadata",JSON.stringify(s)),a!=null&&a.uploadWithoutDirectory&&e.append("pinataOptions",JSON.stringify({wrapWithDirectory:!1})),{form:e,fileNames:i.map(o=>encodeURIComponent(o))}}async uploadBatchBrowser(e,n,a){const r=await this.getUploadToken();return new Promise((i,s)=>{const o=new XMLHttpRequest;let c=setTimeout(()=>{o.abort(),s(new Error("Request to upload timed out! No upload progress received in 30s"))},3e4);o.upload.addEventListener("loadstart",()=>{console.log(`[${Date.now()}] [IPFS] Started`)}),o.upload.addEventListener("progress",p=>{console.log(`[IPFS] Progress Event ${p.loaded}/${p.total}`),clearTimeout(c),p.loaded<p.total?c=setTimeout(()=>{o.abort(),s(new Error("Request to upload timed out! No upload progress received in 30s"))},3e4):console.log(`[${Date.now()}] [IPFS] Uploaded files. Waiting for response.`),p.lengthComputable&&(a==null?void 0:a.onProgress)&&(a==null||a.onProgress({progress:p.loaded,total:p.total}))}),o.addEventListener("load",()=>{if(console.log(`[${Date.now()}] [IPFS] Load`),clearTimeout(c),o.status>=200&&o.status<300){let p;try{p=JSON.parse(o.responseText)}catch{return s(new Error("Failed to parse JSON from upload response"))}const d=p.IpfsHash;if(!d)throw new Error("Failed to get IPFS hash from upload response");return a!=null&&a.uploadWithoutDirectory?i([`ipfs://${d}`]):i(n.map(u=>`ipfs://${d}/${u}`))}return s(new Error(`Upload failed with status ${o.status} - ${o.responseText}`))}),o.addEventListener("error",()=>(console.log("[IPFS] Load"),clearTimeout(c),o.readyState!==0&&o.readyState!==4||o.status===0?s(new Error("This looks like a network error, the endpoint might be blocked by an internet provider or a firewall.")):s(new Error("Unknown upload error occured")))),o.open("POST",TI),o.setRequestHeader("Authorization",`Bearer ${r}`),o.send(e)})}async uploadBatchNode(e,n,a){const r=await this.getUploadToken();a!=null&&a.onProgress&&console.warn("The onProgress option is only supported in the browser");const i=await ht(TI,{method:"POST",headers:{Authorization:`Bearer ${r}`,...e.getHeaders()},body:e.getBuffer()}),s=await i.json();if(!i.ok)throw console.warn(s),new Error("Failed to upload files to IPFS");const o=s.IpfsHash;if(!o)throw new Error("Failed to upload files to IPFS");return a!=null&&a.uploadWithoutDirectory?[`ipfs://${o}`]:n.map(c=>`ipfs://${o}/${c}`)}}class Gn{constructor(e){Er(this,"uploader",void 0),Er(this,"downloader",void 0),Er(this,"gatewayUrls",void 0),this.uploader=(e==null?void 0:e.uploader)||new cE,this.downloader=(e==null?void 0:e.downloader)||new oE,this.gatewayUrls=j5(Q5(e==null?void 0:e.gatewayUrls))}resolveScheme(e){return L0(e,this.gatewayUrls)}async download(e){return this.downloader.download(e,this.gatewayUrls)}async downloadJSON(e){const a=await(await this.download(e)).json();return Sr(a,this.gatewayUrls)}async upload(e,n){const[a]=await this.uploadBatch([e],n);return a}async uploadBatch(e,n){if(e=e.filter(i=>i!==void 0),!e.length)return[];const a=e.map(i=>nr(i)||typeof i=="string").every(i=>!!i);let r=[];if(a)r=await this.uploader.uploadBatch(e,n);else{const i=(await this.uploadAndReplaceFilesWithHashes(e,n)).map(s=>typeof s=="string"?s:JSON.stringify(s));r=await this.uploader.uploadBatch(i,n)}return(n==null?void 0:n.uploadWithGatewayUrl)||this.uploader.uploadWithGatewayUrl?r.map(i=>this.resolveScheme(i)):r}async uploadAndReplaceFilesWithHashes(e,n){let a=e;a=G2(a,this.gatewayUrls);const r=Z2(a);if(r.length){const i=await this.uploader.uploadBatch(r,n);a=X2(a,i)}return((n==null?void 0:n.uploadWithGatewayUrl)||this.uploader.uploadWithGatewayUrl)&&(a=Sr(a,this.gatewayUrls)),a}}var pE={name:"Ethereum Mainnet",chain:"ETH",icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/ethereum/512.png",height:512,width:512,format:"png"},rpc:["https://ethereum.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://eth-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}","https://mainnet.infura.io/v3/${INFURA_API_KEY}","wss://mainnet.infura.io/ws/v3/${INFURA_API_KEY}","https://api.mycryptoapi.com/eth","https://cloudflare-eth.com","https://ethereum.publicnode.com"],features:[{name:"EIP1559"},{name:"EIP155"}],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://ethereum.org",shortName:"eth",chainId:1,networkId:1,slip44:60,ens:{registry:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"},explorers:[{name:"etherscan",url:"https://etherscan.io",standard:"EIP3091"}],testnet:!1,slug:"ethereum"},lE={name:"Expanse Network",chain:"EXP",rpc:["https://expanse-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node.expanse.tech"],faucets:[],nativeCurrency:{name:"Expanse Network Ether",symbol:"EXP",decimals:18},infoURL:"https://expanse.tech",shortName:"exp",chainId:2,networkId:1,slip44:40,testnet:!1,slug:"expanse-network"},dE={name:"Ropsten",title:"Ethereum Testnet Ropsten",chain:"ETH",rpc:["https://ropsten.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://ropsten.infura.io/v3/${INFURA_API_KEY}","wss://ropsten.infura.io/ws/v3/${INFURA_API_KEY}"],faucets:["http://fauceth.komputing.org?chain=3&address=${ADDRESS}","https://faucet.ropsten.be?${ADDRESS}"],nativeCurrency:{name:"Ropsten Ether",symbol:"ETH",decimals:18},infoURL:"https://github.com/ethereum/ropsten",shortName:"rop",chainId:3,networkId:3,ens:{registry:"0x112234455c3a32fd11230c42e7bccd4a84e02010"},explorers:[{name:"etherscan",url:"https://ropsten.etherscan.io",standard:"EIP3091"}],testnet:!0,slug:"ropsten"},uE={name:"Rinkeby",title:"Ethereum Testnet Rinkeby",chain:"ETH",rpc:["https://rinkeby.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rinkeby.infura.io/v3/${INFURA_API_KEY}","wss://rinkeby.infura.io/ws/v3/${INFURA_API_KEY}"],faucets:["http://fauceth.komputing.org?chain=4&address=${ADDRESS}","https://faucet.rinkeby.io"],nativeCurrency:{name:"Rinkeby Ether",symbol:"ETH",decimals:18},infoURL:"https://www.rinkeby.io",shortName:"rin",chainId:4,networkId:4,ens:{registry:"0xe7410170f87102df0055eb195163a03b7f2bff4a"},explorers:[{name:"etherscan-rinkeby",url:"https://rinkeby.etherscan.io",standard:"EIP3091"}],testnet:!0,slug:"rinkeby"},mE={name:"Goerli",title:"Ethereum Testnet Goerli",chain:"ETH",rpc:["https://goerli.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://eth-goerli.g.alchemy.com/v2/${ALCHEMY_API_KEY}","https://goerli.infura.io/v3/${INFURA_API_KEY}","wss://goerli.infura.io/v3/${INFURA_API_KEY}","https://rpc.goerli.mudit.blog/","https://ethereum-goerli.publicnode.com"],faucets:["https://faucet.paradigm.xyz/","http://fauceth.komputing.org?chain=5&address=${ADDRESS}","https://goerli-faucet.slock.it?address=${ADDRESS}","https://faucet.goerli.mudit.blog"],nativeCurrency:{name:"Goerli Ether",symbol:"ETH",decimals:18},infoURL:"https://goerli.net/#about",shortName:"gor",chainId:5,networkId:5,ens:{registry:"0x112234455c3a32fd11230c42e7bccd4a84e02010"},explorers:[{name:"etherscan-goerli",url:"https://goerli.etherscan.io",standard:"EIP3091"}],icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/ethereum/512.png",height:512,width:512,format:"png"},testnet:!0,slug:"goerli"},hE={name:"Ethereum Classic Testnet Kotti",chain:"ETC",rpc:["https://ethereum-classic-testnet-kotti.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://www.ethercluster.com/kotti"],faucets:[],nativeCurrency:{name:"Kotti Ether",symbol:"KOT",decimals:18},infoURL:"https://explorer.jade.builders/?network=kotti",shortName:"kot",chainId:6,networkId:6,testnet:!0,slug:"ethereum-classic-testnet-kotti"},yE={name:"ThaiChain",chain:"TCH",rpc:["https://thaichain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.dome.cloud","https://rpc.thaichain.org"],faucets:[],features:[{name:"EIP155"},{name:"EIP1559"}],nativeCurrency:{name:"ThaiChain Ether",symbol:"TCH",decimals:18},infoURL:"https://thaichain.io",shortName:"tch",chainId:7,networkId:7,explorers:[{name:"Thaichain Explorer",url:"https://exp.thaichain.org",standard:"EIP3091"}],testnet:!1,slug:"thaichain"},fE={name:"Ubiq",chain:"UBQ",rpc:["https://ubiq.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.octano.dev","https://pyrus2.ubiqscan.io"],faucets:[],nativeCurrency:{name:"Ubiq Ether",symbol:"UBQ",decimals:18},infoURL:"https://ubiqsmart.com",shortName:"ubq",chainId:8,networkId:8,slip44:108,explorers:[{name:"ubiqscan",url:"https://ubiqscan.io",standard:"EIP3091"}],testnet:!1,slug:"ubiq"},gE={name:"Ubiq Network Testnet",chain:"UBQ",rpc:[],faucets:[],nativeCurrency:{name:"Ubiq Testnet Ether",symbol:"TUBQ",decimals:18},infoURL:"https://ethersocial.org",shortName:"tubq",chainId:9,networkId:2,testnet:!0,slug:"ubiq-network-testnet"},bE={name:"Optimism",chain:"ETH",rpc:["https://optimism.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://opt-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}","https://optimism-mainnet.infura.io/v3/${INFURA_API_KEY}","https://mainnet.optimism.io/"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://optimism.io",shortName:"oeth",chainId:10,networkId:10,explorers:[{name:"etherscan",url:"https://optimistic.etherscan.io",standard:"EIP3091"}],icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/optimism/512.png",height:512,width:512,format:"png"},testnet:!1,slug:"optimism"},TE={name:"Metadium Mainnet",chain:"META",rpc:["https://metadium.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.metadium.com/prod"],faucets:[],nativeCurrency:{name:"Metadium Mainnet Ether",symbol:"META",decimals:18},infoURL:"https://metadium.com",shortName:"meta",chainId:11,networkId:11,slip44:916,testnet:!1,slug:"metadium"},wE={name:"Metadium Testnet",chain:"META",rpc:["https://metadium-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.metadium.com/dev"],faucets:[],nativeCurrency:{name:"Metadium Testnet Ether",symbol:"KAL",decimals:18},infoURL:"https://metadium.com",shortName:"kal",chainId:12,networkId:12,testnet:!0,slug:"metadium-testnet"},IE={name:"Diode Testnet Staging",chain:"DIODE",rpc:["https://diode-testnet-staging.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://staging.diode.io:8443/","wss://staging.diode.io:8443/ws"],faucets:[],nativeCurrency:{name:"Staging Diodes",symbol:"sDIODE",decimals:18},infoURL:"https://diode.io/staging",shortName:"dstg",chainId:13,networkId:13,testnet:!0,slug:"diode-testnet-staging"},vE={name:"Flare Mainnet",chain:"FLR",icon:{url:"ipfs://QmevAevHxRkK2zVct2Eu6Y7s38YC4SmiAiw9X7473pVtmL",width:382,height:382,format:"png"},rpc:["https://flare.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://flare-api.flare.network/ext/C/rpc"],faucets:[],nativeCurrency:{name:"Flare",symbol:"FLR",decimals:18},infoURL:"https://flare.xyz",shortName:"flr",chainId:14,networkId:14,explorers:[{name:"blockscout",url:"https://flare-explorer.flare.network",standard:"EIP3091"}],testnet:!1,slug:"flare"},CE={name:"Diode Prenet",chain:"DIODE",rpc:["https://diode-prenet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://prenet.diode.io:8443/","wss://prenet.diode.io:8443/ws"],faucets:[],nativeCurrency:{name:"Diodes",symbol:"DIODE",decimals:18},infoURL:"https://diode.io/prenet",shortName:"diode",chainId:15,networkId:15,testnet:!1,slug:"diode-prenet"},kE={name:"Flare Testnet Coston",chain:"FLR",icon:{url:"ipfs://QmW7Ljv2eLQ1poRrhJBaVWJBF1TyfZ8QYxDeELRo6sssrj",width:382,height:382,format:"png"},rpc:["https://flare-testnet-coston.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://coston-api.flare.network/ext/bc/C/rpc"],faucets:["https://faucet.towolabs.com","https://fauceth.komputing.org?chain=16&address=${ADDRESS}"],nativeCurrency:{name:"Coston Flare",symbol:"CFLR",decimals:18},infoURL:"https://flare.xyz",shortName:"cflr",chainId:16,networkId:16,explorers:[{name:"blockscout",url:"https://coston-explorer.flare.network",standard:"EIP3091"}],testnet:!0,slug:"flare-testnet-coston"},EE={name:"ThaiChain 2.0 ThaiFi",chain:"TCH",rpc:["https://thaichain-2-0-thaifi.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.thaifi.com"],faucets:[],nativeCurrency:{name:"Thaifi Ether",symbol:"TFI",decimals:18},infoURL:"https://exp.thaifi.com",shortName:"tfi",chainId:17,networkId:17,testnet:!1,slug:"thaichain-2-0-thaifi"},xE={name:"ThunderCore Testnet",chain:"TST",rpc:["https://thundercore-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.thundercore.com"],faucets:["https://faucet-testnet.thundercore.com"],nativeCurrency:{name:"ThunderCore Testnet Token",symbol:"TST",decimals:18},infoURL:"https://thundercore.com",shortName:"TST",chainId:18,networkId:18,explorers:[{name:"thundercore-blockscout-testnet",url:"https://explorer-testnet.thundercore.com",standard:"EIP3091"}],testnet:!0,slug:"thundercore-testnet"},RE={name:"Songbird Canary-Network",chain:"SGB",icon:{url:"ipfs://QmXyvnrZY8FUxSULfnKKA99sAEkjAHtvhRx5WeHixgaEdu",width:382,height:382,format:"png"},rpc:["https://songbird-canary-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://songbird-api.flare.network/ext/C/rpc","https://sgb.ftso.com.au/ext/bc/C/rpc","https://sgb.lightft.so/rpc","https://sgb-rpc.ftso.eu"],faucets:[],nativeCurrency:{name:"Songbird",symbol:"SGB",decimals:18},infoURL:"https://flare.xyz",shortName:"sgb",chainId:19,networkId:19,explorers:[{name:"blockscout",url:"https://songbird-explorer.flare.network",standard:"EIP3091"}],testnet:!1,slug:"songbird-canary-network"},AE={name:"Elastos Smart Chain",chain:"ETH",rpc:["https://elastos-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.elastos.io/eth"],faucets:["https://faucet.elastos.org/"],nativeCurrency:{name:"Elastos",symbol:"ELA",decimals:18},infoURL:"https://www.elastos.org/",shortName:"esc",chainId:20,networkId:20,explorers:[{name:"elastos esc explorer",url:"https://esc.elastos.io",standard:"EIP3091"}],testnet:!1,slug:"elastos-smart-chain"},PE={name:"Elastos Smart Chain Testnet",chain:"ETH",rpc:["https://elastos-smart-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api-testnet.elastos.io/eth"],faucets:["https://esc-faucet.elastos.io/"],nativeCurrency:{name:"Elastos",symbol:"tELA",decimals:18},infoURL:"https://www.elastos.org/",shortName:"esct",chainId:21,networkId:21,explorers:[{name:"elastos esc explorer",url:"https://esc-testnet.elastos.io",standard:"EIP3091"}],testnet:!0,slug:"elastos-smart-chain-testnet"},ME={name:"ELA-DID-Sidechain Mainnet",chain:"ETH",rpc:[],faucets:[],nativeCurrency:{name:"Elastos",symbol:"ELA",decimals:18},infoURL:"https://www.elastos.org/",shortName:"eladid",chainId:22,networkId:22,testnet:!1,slug:"ela-did-sidechain"},_E={name:"ELA-DID-Sidechain Testnet",chain:"ETH",rpc:[],faucets:[],nativeCurrency:{name:"Elastos",symbol:"tELA",decimals:18},infoURL:"https://elaeth.io/",shortName:"eladidt",chainId:23,networkId:23,testnet:!0,slug:"ela-did-sidechain-testnet"},SE={name:"KardiaChain Mainnet",chain:"KAI",icon:{url:"ipfs://QmXoHaZXJevc59GuzEgBhwRSH6kio1agMRvL8bD93pARRV",format:"png",width:297,height:297},rpc:["https://kardiachain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.kardiachain.io"],faucets:[],nativeCurrency:{name:"KardiaChain",symbol:"KAI",decimals:18},infoURL:"https://kardiachain.io",shortName:"kardiachain",chainId:24,networkId:0,redFlags:["reusedChainId"],testnet:!1,slug:"kardiachain"},WE={name:"Cronos Mainnet Beta",chain:"CRO",rpc:["https://cronos-beta.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm.cronos.org","https://cronos-evm.publicnode.com"],features:[{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"Cronos",symbol:"CRO",decimals:18},infoURL:"https://cronos.org/",shortName:"cro",chainId:25,networkId:25,explorers:[{name:"Cronos Explorer",url:"https://cronoscan.com",standard:"none"}],testnet:!1,slug:"cronos-beta"},BE={name:"Genesis L1 testnet",chain:"genesis",rpc:["https://genesis-l1-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testrpc.genesisl1.org"],faucets:[],nativeCurrency:{name:"L1 testcoin",symbol:"L1test",decimals:18},infoURL:"https://www.genesisl1.com",shortName:"L1test",chainId:26,networkId:26,explorers:[{name:"Genesis L1 testnet explorer",url:"https://testnet.genesisl1.org",standard:"none"}],testnet:!0,slug:"genesis-l1-testnet"},NE={name:"ShibaChain",chain:"SHIB",rpc:["https://shibachain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.shibachain.net"],faucets:[],nativeCurrency:{name:"SHIBA INU COIN",symbol:"SHIB",decimals:18},infoURL:"https://www.shibachain.net",shortName:"shib",chainId:27,networkId:27,explorers:[{name:"Shiba Explorer",url:"https://exp.shibachain.net",standard:"none"}],testnet:!1,slug:"shibachain"},DE={name:"Boba Network Rinkeby Testnet",chain:"ETH",rpc:["https://boba-network-rinkeby-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rinkeby.boba.network/"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://boba.network",shortName:"BobaRinkeby",chainId:28,networkId:28,explorers:[{name:"Blockscout",url:"https://blockexplorer.rinkeby.boba.network",standard:"none"}],parent:{type:"L2",chain:"eip155-4",bridges:[{url:"https://gateway.rinkeby.boba.network"}]},testnet:!0,slug:"boba-network-rinkeby-testnet"},LE={name:"Genesis L1",chain:"genesis",rpc:["https://genesis-l1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.genesisl1.org"],faucets:[],nativeCurrency:{name:"L1 coin",symbol:"L1",decimals:18},infoURL:"https://www.genesisl1.com",shortName:"L1",chainId:29,networkId:29,explorers:[{name:"Genesis L1 blockchain explorer",url:"https://explorer.genesisl1.org",standard:"none"}],testnet:!1,slug:"genesis-l1"},UE={name:"RSK Mainnet",chain:"RSK",rpc:["https://rsk.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://public-node.rsk.co","https://mycrypto.rsk.co"],faucets:["https://faucet.rsk.co/"],nativeCurrency:{name:"Smart Bitcoin",symbol:"RBTC",decimals:18},infoURL:"https://rsk.co",shortName:"rsk",chainId:30,networkId:30,slip44:137,explorers:[{name:"RSK Explorer",url:"https://explorer.rsk.co",standard:"EIP3091"}],testnet:!1,slug:"rsk"},FE={name:"RSK Testnet",chain:"RSK",rpc:["https://rsk-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://public-node.testnet.rsk.co","https://mycrypto.testnet.rsk.co"],faucets:["https://faucet.rsk.co/"],nativeCurrency:{name:"Testnet Smart Bitcoin",symbol:"tRBTC",decimals:18},infoURL:"https://rsk.co",shortName:"trsk",chainId:31,networkId:31,explorers:[{name:"RSK Testnet Explorer",url:"https://explorer.testnet.rsk.co",standard:"EIP3091"}],testnet:!0,slug:"rsk-testnet"},HE={name:"GoodData Testnet",chain:"GooD",rpc:["https://gooddata-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://test2.goodata.io"],faucets:[],nativeCurrency:{name:"GoodData Testnet Ether",symbol:"GooD",decimals:18},infoURL:"https://www.goodata.org",shortName:"GooDT",chainId:32,networkId:32,testnet:!0,slug:"gooddata-testnet"},KE={name:"GoodData Mainnet",chain:"GooD",rpc:["https://gooddata.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.goodata.io"],faucets:[],nativeCurrency:{name:"GoodData Mainnet Ether",symbol:"GooD",decimals:18},infoURL:"https://www.goodata.org",shortName:"GooD",chainId:33,networkId:33,testnet:!1,slug:"gooddata"},OE={name:"Dithereum Testnet",chain:"DTH",icon:{url:"ipfs://QmSHN5GtRGpMMpszSn1hF47ZSLRLqrLxWsQ48YYdJPyjLf",width:500,height:500,format:"png"},rpc:["https://dithereum-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node-testnet.dithereum.io"],faucets:["https://faucet.dithereum.org"],nativeCurrency:{name:"Dither",symbol:"DTH",decimals:18},infoURL:"https://dithereum.org",shortName:"dth",chainId:34,networkId:34,testnet:!0,slug:"dithereum-testnet"},$E={name:"TBWG Chain",chain:"TBWG",rpc:["https://tbwg-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.tbwg.io"],faucets:[],nativeCurrency:{name:"TBWG Ether",symbol:"TBG",decimals:18},infoURL:"https://tbwg.io",shortName:"tbwg",chainId:35,networkId:35,testnet:!1,slug:"tbwg-chain"},YE={name:"Dxchain Mainnet",chain:"Dxchain",icon:{url:"ipfs://QmYBup5bWoBfkaHntbcgW8Ji7ncad7f53deJ4Q55z4PNQs",width:128,height:128,format:"png"},rpc:["https://dxchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.dxchain.com"],faucets:[],nativeCurrency:{name:"Dxchain",symbol:"DX",decimals:18},infoURL:"https://www.dxchain.com/",shortName:"dx",chainId:36,networkId:36,explorers:[{name:"dxscan",url:"https://dxscan.io",standard:"EIP3091"}],testnet:!1,slug:"dxchain"},zE={name:"SeedCoin-Network",chain:"SeedCoin-Network",rpc:["https://seedcoin-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node.seedcoin.network"],faucets:[],nativeCurrency:{name:"SeedCoin",symbol:"SEED",decimals:18},infoURL:"https://www.seedcoin.network/",shortName:"SEED",icon:{url:"ipfs://QmSchLvCCZjBzcv5n22v1oFDAc2yHJ42NERyjZeL9hBgrh",width:64,height:64,format:"png"},chainId:37,networkId:37,testnet:!1,slug:"seedcoin-network"},qE={name:"Valorbit",chain:"VAL",rpc:["https://valorbit.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.valorbit.com/v2"],faucets:[],nativeCurrency:{name:"Valorbit",symbol:"VAL",decimals:18},infoURL:"https://valorbit.com",shortName:"val",chainId:38,networkId:38,slip44:538,testnet:!1,slug:"valorbit"},QE={name:"Unicorn Ultra Testnet",chain:"u2u",rpc:["https://unicorn-ultra-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.uniultra.xyz"],faucets:["https://faucet.uniultra.xyz"],nativeCurrency:{name:"Unicorn Ultra",symbol:"U2U",decimals:18},infoURL:"https://uniultra.xyz",shortName:"u2u",chainId:39,networkId:39,icon:{url:"ipfs://QmcW64RgqQVHnNbVFyfaMNKt7dJvFqEbfEHZmeyeK8dpEa",width:512,height:512,format:"png"},explorers:[{icon:{url:"ipfs://QmcW64RgqQVHnNbVFyfaMNKt7dJvFqEbfEHZmeyeK8dpEa",width:512,height:512,format:"png"},name:"U2U Explorer",url:"https://testnet.uniultra.xyz",standard:"EIP3091"}],testnet:!0,slug:"unicorn-ultra-testnet"},jE={name:"Telos EVM Mainnet",chain:"TLOS",rpc:["https://telos-evm.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.telos.net/evm"],faucets:[],nativeCurrency:{name:"Telos",symbol:"TLOS",decimals:18},infoURL:"https://telos.net",shortName:"TelosEVM",chainId:40,networkId:40,explorers:[{name:"teloscan",url:"https://teloscan.io",standard:"EIP3091"}],icon:{url:"ipfs://QmdkgQDtDedsNNth3ZVgWfwRZPCePLA13MtLvV4CEYSuTR/TLOS.png",format:"png",width:228,height:228},testnet:!1,slug:"telos-evm"},VE={name:"Telos EVM Testnet",chain:"TLOS",rpc:["https://telos-evm-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.telos.net/evm"],faucets:["https://app.telos.net/testnet/developers"],nativeCurrency:{name:"Telos",symbol:"TLOS",decimals:18},infoURL:"https://telos.net",shortName:"TelosEVMTestnet",chainId:41,networkId:41,testnet:!0,icon:{url:"ipfs://QmdkgQDtDedsNNth3ZVgWfwRZPCePLA13MtLvV4CEYSuTR/TLOS.png",format:"png",width:228,height:228},slug:"telos-evm-testnet"},GE={name:"Kovan",title:"Ethereum Testnet Kovan",chain:"ETH",rpc:["https://kovan.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://kovan.poa.network","http://kovan.poa.network:8545","https://kovan.infura.io/v3/${INFURA_API_KEY}","wss://kovan.infura.io/ws/v3/${INFURA_API_KEY}","ws://kovan.poa.network:8546"],faucets:["http://fauceth.komputing.org?chain=42&address=${ADDRESS}","https://faucet.kovan.network","https://gitter.im/kovan-testnet/faucet"],nativeCurrency:{name:"Kovan Ether",symbol:"ETH",decimals:18},explorers:[{name:"etherscan",url:"https://kovan.etherscan.io",standard:"EIP3091"}],infoURL:"https://kovan-testnet.github.io/website",shortName:"kov",chainId:42,networkId:42,testnet:!0,slug:"kovan"},ZE={name:"Darwinia Pangolin Testnet",chain:"pangolin",rpc:["https://darwinia-pangolin-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://pangolin-rpc.darwinia.network"],faucets:["https://docs.crab.network/dvm/wallets/dvm-metamask#apply-for-the-test-token"],nativeCurrency:{name:"Pangolin Network Native Token",symbol:"PRING",decimals:18},infoURL:"https://darwinia.network/",shortName:"pangolin",chainId:43,networkId:43,explorers:[{name:"subscan",url:"https://pangolin.subscan.io",standard:"none"}],testnet:!0,slug:"darwinia-pangolin-testnet"},XE={name:"Darwinia Crab Network",chain:"crab",rpc:["https://darwinia-crab-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://crab-rpc.darwinia.network"],faucets:[],nativeCurrency:{name:"Crab Network Native Token",symbol:"CRAB",decimals:18},infoURL:"https://crab.network/",shortName:"crab",chainId:44,networkId:44,explorers:[{name:"subscan",url:"https://crab.subscan.io",standard:"none"}],testnet:!1,slug:"darwinia-crab-network"},JE={name:"Darwinia Pangoro Testnet",chain:"pangoro",rpc:["https://darwinia-pangoro-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://pangoro-rpc.darwinia.network"],faucets:[],nativeCurrency:{name:"Pangoro Network Native Token",symbol:"ORING",decimals:18},infoURL:"https://darwinia.network/",shortName:"pangoro",chainId:45,networkId:45,explorers:[{name:"subscan",url:"https://pangoro.subscan.io",standard:"none"}],testnet:!0,slug:"darwinia-pangoro-testnet"},ex={name:"Darwinia Network",chain:"darwinia",rpc:["https://darwinia-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.darwinia.network"],faucets:[],nativeCurrency:{name:"Darwinia Network Native Token",symbol:"RING",decimals:18},infoURL:"https://darwinia.network/",shortName:"darwinia",chainId:46,networkId:46,explorers:[{name:"subscan",url:"https://darwinia.subscan.io",standard:"none"}],testnet:!1,slug:"darwinia-network"},tx={name:"Acria IntelliChain",chain:"AIC",rpc:["https://acria-intellichain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://aic.acria.ai"],faucets:[],nativeCurrency:{name:"ACRIA",symbol:"ACRIA",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://acria.ai",shortName:"aic",chainId:47,networkId:47,explorers:[{name:"Acria IntelliChain-Explorer",url:"https://explorer.acria.ai",standard:"EIP3091"}],testnet:!1,slug:"acria-intellichain"},nx={name:"Ennothem Mainnet Proterozoic",chain:"ETMP",rpc:["https://ennothem-proterozoic.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.etm.network"],faucets:[],nativeCurrency:{name:"Ennothem",symbol:"ETMP",decimals:18},infoURL:"https://etm.network",shortName:"etmp",chainId:48,networkId:48,icon:{url:"ipfs://QmT7DTqT1V2y42pRpt3sj9ifijfmbtkHN7D2vTfAUAS622",width:512,height:512,format:"png"},explorers:[{name:"etmpscan",url:"https://etmscan.network",icon:{url:"ipfs://QmT7DTqT1V2y42pRpt3sj9ifijfmbtkHN7D2vTfAUAS622",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"ennothem-proterozoic"},ax={name:"Ennothem Testnet Pioneer",chain:"ETMP",rpc:["https://ennothem-testnet-pioneer.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.pioneer.etm.network"],faucets:[],nativeCurrency:{name:"Ennothem",symbol:"ETMP",decimals:18},infoURL:"https://etm.network",shortName:"etmpTest",chainId:49,networkId:49,icon:{url:"ipfs://QmT7DTqT1V2y42pRpt3sj9ifijfmbtkHN7D2vTfAUAS622",width:512,height:512,format:"png"},explorers:[{name:"etmp",url:"https://pioneer.etmscan.network",standard:"EIP3091"}],testnet:!0,slug:"ennothem-testnet-pioneer"},rx={name:"XinFin XDC Network",chain:"XDC",rpc:["https://xinfin-xdc-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://erpc.xinfin.network","https://rpc.xinfin.network","https://rpc1.xinfin.network","https://rpc-xdc.icecreamswap.com"],faucets:[],nativeCurrency:{name:"XinFin",symbol:"XDC",decimals:18},infoURL:"https://xinfin.org",shortName:"xdc",chainId:50,networkId:50,icon:{url:"ipfs://QmeRq7pabiJE2n1xU3Y5Mb4TZSX9kQ74x7a3P2Z4PqcMRX",width:1450,height:1450,format:"png"},explorers:[{name:"xdcscan",url:"https://xdcscan.io",icon:{url:"ipfs://QmPzVFs16GwaD8LAcGFLCNXzEK8BHFKNXeM3nmBpnq9xy3",width:512,height:512,format:"png"},standard:"EIP3091"},{name:"blocksscan",url:"https://xdc.blocksscan.io",icon:{url:"ipfs://QmPzVFs16GwaD8LAcGFLCNXzEK8BHFKNXeM3nmBpnq9xy3",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"xinfin-xdc-network"},ix={name:"XDC Apothem Network",chain:"XDC",rpc:["https://xdc-apothem-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.apothem.network","https://erpc.apothem.network"],faucets:["https://faucet.apothem.network"],nativeCurrency:{name:"XinFin",symbol:"TXDC",decimals:18},infoURL:"https://xinfin.org",shortName:"txdc",chainId:51,networkId:51,icon:{url:"ipfs://QmeRq7pabiJE2n1xU3Y5Mb4TZSX9kQ74x7a3P2Z4PqcMRX",width:1450,height:1450,format:"png"},explorers:[{name:"xdcscan",url:"https://apothem.xinfinscan.com",icon:{url:"ipfs://QmPzVFs16GwaD8LAcGFLCNXzEK8BHFKNXeM3nmBpnq9xy3",width:512,height:512,format:"png"},standard:"EIP3091"},{name:"blocksscan",url:"https://apothem.blocksscan.io",icon:{url:"ipfs://QmPzVFs16GwaD8LAcGFLCNXzEK8BHFKNXeM3nmBpnq9xy3",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"xdc-apothem-network"},sx={name:"CoinEx Smart Chain Mainnet",chain:"CSC",rpc:["https://coinex-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.coinex.net"],faucets:[],nativeCurrency:{name:"CoinEx Chain Native Token",symbol:"cet",decimals:18},infoURL:"https://www.coinex.org/",shortName:"cet",chainId:52,networkId:52,explorers:[{name:"coinexscan",url:"https://www.coinex.net",standard:"none"}],testnet:!1,slug:"coinex-smart-chain"},ox={name:"CoinEx Smart Chain Testnet",chain:"CSC",rpc:["https://coinex-smart-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.coinex.net/"],faucets:[],nativeCurrency:{name:"CoinEx Chain Test Native Token",symbol:"cett",decimals:18},infoURL:"https://www.coinex.org/",shortName:"tcet",chainId:53,networkId:53,explorers:[{name:"coinexscan",url:"https://testnet.coinex.net",standard:"none"}],testnet:!0,slug:"coinex-smart-chain-testnet"},cx={name:"Openpiece Mainnet",chain:"OPENPIECE",icon:{url:"ipfs://QmVTahJkdSH3HPYsJMK2GmqfWZjLyxE7cXy1aHEnHU3vp2",width:250,height:250,format:"png"},rpc:["https://openpiece.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.openpiece.io"],faucets:[],nativeCurrency:{name:"Belly",symbol:"BELLY",decimals:18},infoURL:"https://cryptopiece.online",shortName:"OP",chainId:54,networkId:54,explorers:[{name:"Belly Scan",url:"https://bellyscan.com",standard:"none"}],testnet:!1,slug:"openpiece"},px={name:"Zyx Mainnet",chain:"ZYX",rpc:["https://zyx.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-1.zyx.network/","https://rpc-2.zyx.network/","https://rpc-3.zyx.network/","https://rpc-4.zyx.network/","https://rpc-5.zyx.network/","https://rpc-6.zyx.network/"],faucets:[],nativeCurrency:{name:"Zyx",symbol:"ZYX",decimals:18},infoURL:"https://zyx.network/",shortName:"ZYX",chainId:55,networkId:55,explorers:[{name:"zyxscan",url:"https://zyxscan.com",standard:"none"}],testnet:!1,slug:"zyx"},lx={name:"Binance Smart Chain Mainnet",chain:"BSC",rpc:["https://binance.rpc.thirdweb.com/${THIRDWEB_API_KEY}","wss://bsc-ws-node.nariox.org","https://bsc.publicnode.com","https://bsc-dataseed4.ninicoin.io","https://bsc-dataseed3.ninicoin.io","https://bsc-dataseed2.ninicoin.io","https://bsc-dataseed1.ninicoin.io","https://bsc-dataseed4.defibit.io","https://bsc-dataseed3.defibit.io","https://bsc-dataseed2.defibit.io","https://bsc-dataseed1.defibit.io","https://bsc-dataseed4.binance.org","https://bsc-dataseed3.binance.org","https://bsc-dataseed2.binance.org","https://bsc-dataseed1.binance.org"],faucets:["https://free-online-app.com/faucet-for-eth-evm-chains/"],nativeCurrency:{name:"Binance Chain Native Token",symbol:"BNB",decimals:18},infoURL:"https://www.binance.org",shortName:"bnb",chainId:56,networkId:56,slip44:714,explorers:[{name:"bscscan",url:"https://bscscan.com",standard:"EIP3091"}],icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/binance-coin/512.png",height:512,width:512,format:"png"},testnet:!1,slug:"binance"},dx={name:"Syscoin Mainnet",chain:"SYS",rpc:["https://syscoin.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.syscoin.org","wss://rpc.syscoin.org/wss"],faucets:["https://faucet.syscoin.org"],nativeCurrency:{name:"Syscoin",symbol:"SYS",decimals:18},infoURL:"https://www.syscoin.org",shortName:"sys",chainId:57,networkId:57,explorers:[{name:"Syscoin Block Explorer",url:"https://explorer.syscoin.org",standard:"EIP3091"}],testnet:!1,slug:"syscoin"},ux={name:"Ontology Mainnet",chain:"Ontology",icon:{url:"ipfs://bafkreigmvn6spvbiirtutowpq6jmetevbxoof5plzixjoerbeswy4htfb4",width:400,height:400,format:"png"},rpc:["https://ontology.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://dappnode1.ont.io:20339","http://dappnode2.ont.io:20339","http://dappnode3.ont.io:20339","http://dappnode4.ont.io:20339","https://dappnode1.ont.io:10339","https://dappnode2.ont.io:10339","https://dappnode3.ont.io:10339","https://dappnode4.ont.io:10339"],faucets:[],nativeCurrency:{name:"ONG",symbol:"ONG",decimals:18},infoURL:"https://ont.io/",shortName:"OntologyMainnet",chainId:58,networkId:58,explorers:[{name:"explorer",url:"https://explorer.ont.io",standard:"EIP3091"}],testnet:!1,slug:"ontology"},mx={name:"GoChain",chain:"GO",rpc:["https://gochain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.gochain.io"],faucets:["https://free-online-app.com/faucet-for-eth-evm-chains/"],nativeCurrency:{name:"GoChain Ether",symbol:"GO",decimals:18},infoURL:"https://gochain.io",shortName:"go",chainId:60,networkId:60,slip44:6060,explorers:[{name:"GoChain Explorer",url:"https://explorer.gochain.io",standard:"EIP3091"}],testnet:!1,slug:"gochain"},hx={name:"Ethereum Classic Mainnet",chain:"ETC",rpc:["https://ethereum-classic.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://www.ethercluster.com/etc"],faucets:["https://free-online-app.com/faucet-for-eth-evm-chains/?"],nativeCurrency:{name:"Ethereum Classic Ether",symbol:"ETC",decimals:18},infoURL:"https://ethereumclassic.org",shortName:"etc",chainId:61,networkId:1,slip44:61,explorers:[{name:"blockscout",url:"https://blockscout.com/etc/mainnet",standard:"none"}],testnet:!1,slug:"ethereum-classic"},yx={name:"Ethereum Classic Testnet Morden",chain:"ETC",rpc:[],faucets:[],nativeCurrency:{name:"Ethereum Classic Testnet Ether",symbol:"TETC",decimals:18},infoURL:"https://ethereumclassic.org",shortName:"tetc",chainId:62,networkId:2,testnet:!0,slug:"ethereum-classic-testnet-morden"},fx={name:"Ethereum Classic Testnet Mordor",chain:"ETC",rpc:["https://ethereum-classic-testnet-mordor.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://www.ethercluster.com/mordor"],faucets:[],nativeCurrency:{name:"Mordor Classic Testnet Ether",symbol:"METC",decimals:18},infoURL:"https://github.com/eth-classic/mordor/",shortName:"metc",chainId:63,networkId:7,testnet:!0,slug:"ethereum-classic-testnet-mordor"},gx={name:"Ellaism",chain:"ELLA",rpc:["https://ellaism.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://jsonrpc.ellaism.org"],faucets:[],nativeCurrency:{name:"Ellaism Ether",symbol:"ELLA",decimals:18},infoURL:"https://ellaism.org",shortName:"ellaism",chainId:64,networkId:64,slip44:163,testnet:!1,slug:"ellaism"},bx={name:"OKExChain Testnet",chain:"okexchain",rpc:["https://okexchain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://exchaintestrpc.okex.org"],faucets:["https://www.okex.com/drawdex"],nativeCurrency:{name:"OKExChain Global Utility Token in testnet",symbol:"OKT",decimals:18},infoURL:"https://www.okex.com/okexchain",shortName:"tokt",chainId:65,networkId:65,explorers:[{name:"OKLink",url:"https://www.oklink.com/okexchain-test",standard:"EIP3091"}],testnet:!0,slug:"okexchain-testnet"},Tx={name:"OKXChain Mainnet",chain:"okxchain",rpc:["https://okxchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://exchainrpc.okex.org","https://okc-mainnet.gateway.pokt.network/v1/lb/6275309bea1b320039c893ff"],faucets:["https://free-online-app.com/faucet-for-eth-evm-chains/?"],nativeCurrency:{name:"OKXChain Global Utility Token",symbol:"OKT",decimals:18},infoURL:"https://www.okex.com/okc",shortName:"okt",chainId:66,networkId:66,explorers:[{name:"OKLink",url:"https://www.oklink.com/en/okc",standard:"EIP3091"}],testnet:!1,slug:"okxchain"},wx={name:"DBChain Testnet",chain:"DBM",rpc:["https://dbchain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://test-rpc.dbmbp.com"],faucets:[],nativeCurrency:{name:"DBChain Testnet",symbol:"DBM",decimals:18},infoURL:"http://test.dbmbp.com",shortName:"dbm",chainId:67,networkId:67,testnet:!0,slug:"dbchain-testnet"},Ix={name:"SoterOne Mainnet",chain:"SOTER",rpc:["https://soterone.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.soter.one"],faucets:[],nativeCurrency:{name:"SoterOne Mainnet Ether",symbol:"SOTER",decimals:18},infoURL:"https://www.soterone.com",shortName:"SO1",chainId:68,networkId:68,testnet:!1,slug:"soterone"},vx={name:"Optimism Kovan",title:"Optimism Testnet Kovan",chain:"ETH",rpc:["https://optimism-kovan.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://kovan.optimism.io/"],faucets:["http://fauceth.komputing.org?chain=69&address=${ADDRESS}"],nativeCurrency:{name:"Kovan Ether",symbol:"ETH",decimals:18},explorers:[{name:"etherscan",url:"https://kovan-optimistic.etherscan.io",standard:"EIP3091"}],infoURL:"https://optimism.io",shortName:"okov",chainId:69,networkId:69,testnet:!0,slug:"optimism-kovan"},Cx={name:"Hoo Smart Chain",chain:"HSC",rpc:["https://hoo-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://http-mainnet.hoosmartchain.com","https://http-mainnet2.hoosmartchain.com","wss://ws-mainnet.hoosmartchain.com","wss://ws-mainnet2.hoosmartchain.com"],faucets:[],nativeCurrency:{name:"Hoo Smart Chain Native Token",symbol:"HOO",decimals:18},infoURL:"https://www.hoosmartchain.com",shortName:"hsc",chainId:70,networkId:70,slip44:1170,explorers:[{name:"hooscan",url:"https://www.hooscan.com",standard:"EIP3091"}],testnet:!1,slug:"hoo-smart-chain"},kx={name:"Conflux eSpace (Testnet)",chain:"Conflux",rpc:["https://conflux-espace-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evmtestnet.confluxrpc.com"],faucets:["https://faucet.confluxnetwork.org"],nativeCurrency:{name:"CFX",symbol:"CFX",decimals:18},infoURL:"https://confluxnetwork.org",shortName:"cfxtest",chainId:71,networkId:71,icon:{url:"ipfs://bafkreifj7n24u2dslfijfihwqvpdeigt5aj3k3sxv6s35lv75sxsfr3ojy",width:460,height:576,format:"png"},explorers:[{name:"Conflux Scan",url:"https://evmtestnet.confluxscan.net",standard:"none"}],testnet:!0,slug:"conflux-espace-testnet"},Ex={name:"DxChain Testnet",chain:"DxChain",rpc:["https://dxchain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-http.dxchain.com"],faucets:["https://faucet.dxscan.io"],nativeCurrency:{name:"DxChain Testnet",symbol:"DX",decimals:18},infoURL:"https://testnet.dxscan.io/",shortName:"dxc",chainId:72,networkId:72,testnet:!0,slug:"dxchain-testnet"},xx={name:"FNCY",chain:"FNCY",rpc:["https://fncy.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://fncy-seed1.fncy.world"],faucets:["https://faucet-testnet.fncy.world"],nativeCurrency:{name:"FNCY",symbol:"FNCY",decimals:18},infoURL:"https://fncyscan.fncy.world",shortName:"FNCY",chainId:73,networkId:73,icon:{url:"ipfs://QmfXCh6UnaEHn3Evz7RFJ3p2ggJBRm9hunDHegeoquGuhD",width:256,height:256,format:"png"},explorers:[{name:"fncy scan",url:"https://fncyscan.fncy.world",icon:{url:"ipfs://QmfXCh6UnaEHn3Evz7RFJ3p2ggJBRm9hunDHegeoquGuhD",width:256,height:256,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"fncy"},Rx={name:"IDChain Mainnet",chain:"IDChain",rpc:["https://idchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://idchain.one/rpc/","wss://idchain.one/ws/"],faucets:[],nativeCurrency:{name:"EIDI",symbol:"EIDI",decimals:18},infoURL:"https://idchain.one/begin/",shortName:"idchain",chainId:74,networkId:74,icon:{url:"ipfs://QmZVwsY6HPXScKqZCA9SWNrr4jrQAHkPhVhMWi6Fj1DsrJ",width:162,height:129,format:"png"},explorers:[{name:"explorer",url:"https://explorer.idchain.one",standard:"EIP3091"}],testnet:!1,slug:"idchain"},Ax={name:"Decimal Smart Chain Mainnet",chain:"DSC",rpc:["https://decimal-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node.decimalchain.com/web3"],faucets:[],nativeCurrency:{name:"Decimal",symbol:"DEL",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://decimalchain.com",shortName:"DSC",chainId:75,networkId:75,icon:{url:"ipfs://QmSgzwKnJJjys3Uq2aVVdwJ3NffLj3CXMVCph9uByTBegc",width:256,height:256,format:"png"},explorers:[{name:"DSC Explorer Mainnet",url:"https://explorer.decimalchain.com",icon:{url:"ipfs://QmSgzwKnJJjys3Uq2aVVdwJ3NffLj3CXMVCph9uByTBegc",width:256,height:256,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"decimal-smart-chain"},Px={name:"Mix",chain:"MIX",rpc:["https://mix.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc2.mix-blockchain.org:8647"],faucets:[],nativeCurrency:{name:"Mix Ether",symbol:"MIX",decimals:18},infoURL:"https://mix-blockchain.org",shortName:"mix",chainId:76,networkId:76,slip44:76,testnet:!1,slug:"mix"},Mx={name:"POA Network Sokol",chain:"POA",rpc:["https://poa-network-sokol.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://sokol.poa.network","wss://sokol.poa.network/wss","ws://sokol.poa.network:8546"],faucets:["https://faucet.poa.network"],nativeCurrency:{name:"POA Sokol Ether",symbol:"SPOA",decimals:18},infoURL:"https://poa.network",shortName:"spoa",chainId:77,networkId:77,explorers:[{name:"blockscout",url:"https://blockscout.com/poa/sokol",standard:"none"}],testnet:!1,slug:"poa-network-sokol"},_x={name:"PrimusChain mainnet",chain:"PC",rpc:["https://primuschain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://ethnode.primusmoney.com/mainnet"],faucets:[],nativeCurrency:{name:"Primus Ether",symbol:"PETH",decimals:18},infoURL:"https://primusmoney.com",shortName:"primuschain",chainId:78,networkId:78,testnet:!1,slug:"primuschain"},Sx={name:"Zenith Mainnet",chain:"Zenith",rpc:["https://zenith.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://dataserver-us-1.zenithchain.co/","https://dataserver-asia-3.zenithchain.co/","https://dataserver-asia-4.zenithchain.co/","https://dataserver-asia-2.zenithchain.co/","https://dataserver-asia-5.zenithchain.co/","https://dataserver-asia-6.zenithchain.co/","https://dataserver-asia-7.zenithchain.co/"],faucets:[],nativeCurrency:{name:"ZENITH",symbol:"ZENITH",decimals:18},infoURL:"https://www.zenithchain.co/",chainId:79,networkId:79,shortName:"zenith",explorers:[{name:"zenith scan",url:"https://scan.zenithchain.co",standard:"EIP3091"}],testnet:!1,slug:"zenith"},Wx={name:"GeneChain",chain:"GeneChain",rpc:["https://genechain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.genechain.io"],faucets:[],nativeCurrency:{name:"RNA",symbol:"RNA",decimals:18},infoURL:"https://scan.genechain.io/",shortName:"GeneChain",chainId:80,networkId:80,explorers:[{name:"GeneChain Scan",url:"https://scan.genechain.io",standard:"EIP3091"}],testnet:!1,slug:"genechain"},Bx={name:"Zenith Testnet (Vilnius)",chain:"Zenith",rpc:["https://zenith-testnet-vilnius.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://vilnius.zenithchain.co/http"],faucets:["https://faucet.zenithchain.co/"],nativeCurrency:{name:"Vilnius",symbol:"VIL",decimals:18},infoURL:"https://www.zenithchain.co/",chainId:81,networkId:81,shortName:"VIL",explorers:[{name:"vilnius scan",url:"https://vilnius.scan.zenithchain.co",standard:"EIP3091"}],testnet:!0,slug:"zenith-testnet-vilnius"},Nx={name:"Meter Mainnet",chain:"METER",rpc:["https://meter.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.meter.io"],faucets:["https://faucet.meter.io"],nativeCurrency:{name:"Meter",symbol:"MTR",decimals:18},infoURL:"https://www.meter.io",shortName:"Meter",chainId:82,networkId:82,explorers:[{name:"Meter Mainnet Scan",url:"https://scan.meter.io",standard:"EIP3091"}],testnet:!1,slug:"meter"},Dx={name:"Meter Testnet",chain:"METER Testnet",rpc:["https://meter-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpctest.meter.io"],faucets:["https://faucet-warringstakes.meter.io"],nativeCurrency:{name:"Meter",symbol:"MTR",decimals:18},infoURL:"https://www.meter.io",shortName:"MeterTest",chainId:83,networkId:83,explorers:[{name:"Meter Testnet Scan",url:"https://scan-warringstakes.meter.io",standard:"EIP3091"}],testnet:!0,slug:"meter-testnet"},Lx={name:"Linqto Devnet",chain:"LNQ",rpc:["https://linqto-devnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://linqto-dev.com"],faucets:[],nativeCurrency:{name:"XRP",symbol:"XRP",decimals:18},infoURL:"https://linqto.com",shortName:"linqto-devnet",chainId:84,networkId:84,explorers:[{name:"Linqto Devnet Explorer",url:"https://explorer.linqto-dev.com",standard:"EIP3091"}],testnet:!1,slug:"linqto-devnet"},Ux={name:"GateChain Testnet",chainId:85,shortName:"gttest",chain:"GTTEST",networkId:85,nativeCurrency:{name:"GateToken",symbol:"GT",decimals:18},rpc:["https://gatechain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.gatenode.cc"],faucets:["https://www.gatescan.org/testnet/faucet"],explorers:[{name:"GateScan",url:"https://www.gatescan.org/testnet",standard:"EIP3091"}],infoURL:"https://www.gatechain.io",testnet:!0,slug:"gatechain-testnet"},Fx={name:"GateChain Mainnet",chainId:86,shortName:"gt",chain:"GT",networkId:86,nativeCurrency:{name:"GateToken",symbol:"GT",decimals:18},rpc:["https://gatechain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm.gatenode.cc"],faucets:["https://www.gatescan.org/faucet"],explorers:[{name:"GateScan",url:"https://www.gatescan.org",standard:"EIP3091"}],infoURL:"https://www.gatechain.io",testnet:!1,slug:"gatechain"},Hx={name:"Nova Network",chain:"NNW",icon:{url:"ipfs://QmTTamJ55YGQwMboq4aqf3JjTEy5WDtjo4GBRQ5VdsWA6U",width:512,height:512,format:"png"},rpc:["https://nova-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://connect.novanetwork.io","https://0x57.redjackstudio.com","https://rpc.novanetwork.io:9070"],faucets:[],nativeCurrency:{name:"Supernova",symbol:"SNT",decimals:18},infoURL:"https://novanetwork.io",shortName:"nnw",chainId:87,networkId:87,explorers:[{name:"novanetwork",url:"https://explorer.novanetwork.io",standard:"EIP3091"}],testnet:!1,slug:"nova-network"},Kx={name:"TomoChain",chain:"TOMO",rpc:["https://tomochain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.tomochain.com"],faucets:[],nativeCurrency:{name:"TomoChain",symbol:"TOMO",decimals:18},infoURL:"https://tomochain.com",shortName:"tomo",chainId:88,networkId:88,slip44:889,testnet:!1,slug:"tomochain"},Ox={name:"TomoChain Testnet",chain:"TOMO",rpc:["https://tomochain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.testnet.tomochain.com"],faucets:[],nativeCurrency:{name:"TomoChain",symbol:"TOMO",decimals:18},infoURL:"https://tomochain.com",shortName:"tomot",chainId:89,networkId:89,slip44:889,testnet:!0,slug:"tomochain-testnet"},$x={name:"Garizon Stage0",chain:"GAR",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},rpc:["https://garizon-stage0.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://s0.garizon.net/rpc"],faucets:[],nativeCurrency:{name:"Garizon",symbol:"GAR",decimals:18},infoURL:"https://garizon.com",shortName:"gar-s0",chainId:90,networkId:90,explorers:[{name:"explorer",url:"https://explorer.garizon.com",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"garizon-stage0"},Yx={name:"Garizon Stage1",chain:"GAR",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},rpc:["https://garizon-stage1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://s1.garizon.net/rpc"],faucets:[],nativeCurrency:{name:"Garizon",symbol:"GAR",decimals:18},infoURL:"https://garizon.com",shortName:"gar-s1",chainId:91,networkId:91,explorers:[{name:"explorer",url:"https://explorer.garizon.com",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},standard:"EIP3091"}],parent:{chain:"eip155-90",type:"shard"},testnet:!1,slug:"garizon-stage1"},zx={name:"Garizon Stage2",chain:"GAR",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},rpc:["https://garizon-stage2.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://s2.garizon.net/rpc"],faucets:[],nativeCurrency:{name:"Garizon",symbol:"GAR",decimals:18},infoURL:"https://garizon.com",shortName:"gar-s2",chainId:92,networkId:92,explorers:[{name:"explorer",url:"https://explorer.garizon.com",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},standard:"EIP3091"}],parent:{chain:"eip155-90",type:"shard"},testnet:!1,slug:"garizon-stage2"},qx={name:"Garizon Stage3",chain:"GAR",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},rpc:["https://garizon-stage3.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://s3.garizon.net/rpc"],faucets:[],nativeCurrency:{name:"Garizon",symbol:"GAR",decimals:18},infoURL:"https://garizon.com",shortName:"gar-s3",chainId:93,networkId:93,explorers:[{name:"explorer",url:"https://explorer.garizon.com",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},standard:"EIP3091"}],parent:{chain:"eip155-90",type:"shard"},testnet:!1,slug:"garizon-stage3"},Qx={name:"SwissDLT",chain:"SDLT",rpc:["https://swissdlt.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.swissdlt.ch"],faucets:[],nativeCurrency:{name:"BCTS",symbol:"BCTS",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://bcts.ch",shortName:"sdlt",chainId:94,networkId:94,icon:{url:"ipfs://bafkreig7x5z4j6vh2r3pugmjnob3tmlksaekhqcgsorqzvs55o6v7ehqd4",width:682,height:512,format:"png"},explorers:[{name:"SwissDLT Explorer",url:"https://explorer.swissdlt.ch",icon:{url:"ipfs://bafkreig7x5z4j6vh2r3pugmjnob3tmlksaekhqcgsorqzvs55o6v7ehqd4",width:682,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"swissdlt"},jx={name:"Bitkub Chain",chain:"BKC",icon:{url:"ipfs://QmYFYwyquipwc9gURQGcEd4iAq7pq15chQrJ3zJJe9HuFT",width:1e3,height:1e3,format:"png"},rpc:["https://bitkub-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.bitkubchain.io","wss://wss.bitkubchain.io"],faucets:[],nativeCurrency:{name:"Bitkub Coin",symbol:"KUB",decimals:18},infoURL:"https://www.bitkubchain.com/",shortName:"bkc",chainId:96,networkId:96,explorers:[{name:"Bitkub Chain Explorer",url:"https://bkcscan.com",standard:"none",icon:{url:"ipfs://QmYFYwyquipwc9gURQGcEd4iAq7pq15chQrJ3zJJe9HuFT",width:1e3,height:1e3,format:"png"}}],redFlags:["reusedChainId"],testnet:!1,slug:"bitkub-chain"},Vx={name:"Binance Smart Chain Testnet",chain:"BSC",rpc:["https://binance-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://bsc-testnet.publicnode.com","https://data-seed-prebsc-2-s3.binance.org:8545","https://data-seed-prebsc-1-s3.binance.org:8545","https://data-seed-prebsc-2-s2.binance.org:8545","https://data-seed-prebsc-1-s2.binance.org:8545","https://data-seed-prebsc-2-s1.binance.org:8545","https://data-seed-prebsc-1-s1.binance.org:8545"],faucets:["https://testnet.binance.org/faucet-smart"],nativeCurrency:{name:"Binance Chain Native Token",symbol:"tBNB",decimals:18},infoURL:"https://testnet.binance.org/",shortName:"bnbt",chainId:97,networkId:97,explorers:[{name:"bscscan-testnet",url:"https://testnet.bscscan.com",standard:"EIP3091"}],icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/binance-coin/512.png",height:512,width:512,format:"png"},testnet:!0,slug:"binance-testnet"},Gx={name:"Six Protocol",chain:"SIXNET",icon:{url:"ipfs://QmP93z696v8Hetu13peY2oEHDXq8Bj5CqaDRwpVkpnM15A",width:512,height:512,format:"png"},rpc:["https://six-protocol.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://sixnet-rpc-evm.sixprotocol.net"],faucets:[],nativeCurrency:{name:"SIX evm token",symbol:"SIX",decimals:18},infoURL:"https://six.network/",shortName:"six",chainId:98,networkId:98,explorers:[{name:"SIX Scan",url:"https://sixscan.io/sixnet",standard:"none",icon:{url:"ipfs://QmP93z696v8Hetu13peY2oEHDXq8Bj5CqaDRwpVkpnM15A",width:512,height:512,format:"png"}}],testnet:!1,slug:"six-protocol"},Zx={name:"POA Network Core",chain:"POA",rpc:["https://poa-network-core.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://core.poa.network"],faucets:[],nativeCurrency:{name:"POA Network Core Ether",symbol:"POA",decimals:18},infoURL:"https://poa.network",shortName:"poa",chainId:99,networkId:99,slip44:178,explorers:[{name:"blockscout",url:"https://blockscout.com/poa/core",standard:"none"}],testnet:!1,slug:"poa-network-core"},Xx={name:"Gnosis",chain:"GNO",icon:{url:"ipfs://bafybeidk4swpgdyqmpz6shd5onvpaujvwiwthrhypufnwr6xh3dausz2dm",width:1800,height:1800,format:"png"},rpc:["https://gnosis.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.gnosischain.com","https://rpc.ankr.com/gnosis","https://gnosischain-rpc.gateway.pokt.network","https://gnosis-mainnet.public.blastapi.io","wss://rpc.gnosischain.com/wss"],faucets:["https://gnosisfaucet.com","https://faucet.gimlu.com/gnosis","https://stakely.io/faucet/gnosis-chain-xdai","https://faucet.prussia.dev/xdai"],nativeCurrency:{name:"xDAI",symbol:"xDAI",decimals:18},infoURL:"https://docs.gnosischain.com",shortName:"gno",chainId:100,networkId:100,slip44:700,explorers:[{name:"gnosisscan",url:"https://gnosisscan.io",standard:"EIP3091"},{name:"blockscout",url:"https://blockscout.com/xdai/mainnet",icon:{url:"ipfs://bafybeifu5tpui7dk5cjoo54kde7pmuthvnl7sdykobuarsxgu7t2izurnq",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"gnosis"},Jx={name:"EtherInc",chain:"ETI",rpc:["https://etherinc.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.einc.io/jsonrpc/mainnet"],faucets:[],nativeCurrency:{name:"EtherInc Ether",symbol:"ETI",decimals:18},infoURL:"https://einc.io",shortName:"eti",chainId:101,networkId:1,slip44:464,testnet:!1,slug:"etherinc"},e3={name:"Web3Games Testnet",chain:"Web3Games",icon:{url:"ipfs://QmUc57w3UTHiWapNW9oQb1dP57ymtdemTTbpvGkjVHBRCo",width:192,height:192,format:"png"},rpc:["https://web3games-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc-0.web3games.org/evm","https://testnet-rpc-1.web3games.org/evm","https://testnet-rpc-2.web3games.org/evm"],faucets:[],nativeCurrency:{name:"Web3Games",symbol:"W3G",decimals:18},infoURL:"https://web3games.org/",shortName:"tw3g",chainId:102,networkId:102,testnet:!0,slug:"web3games-testnet"},t3={name:"Kaiba Lightning Chain Testnet",chain:"tKLC",rpc:["https://kaiba-lightning-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://klc.live/"],faucets:[],nativeCurrency:{name:"Kaiba Testnet Token",symbol:"tKAIBA",decimals:18},infoURL:"https://kaibadefi.com",shortName:"tklc",chainId:104,networkId:104,icon:{url:"ipfs://bafybeihbsw3ky7yf6llpww6fabo4dicotcgwjpefscoxrppstjx25dvtea",width:932,height:932,format:"png"},explorers:[{name:"kaibascan",url:"https://kaibascan.io",icon:{url:"ipfs://bafybeihbsw3ky7yf6llpww6fabo4dicotcgwjpefscoxrppstjx25dvtea",width:932,height:932,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"kaiba-lightning-chain-testnet"},n3={name:"Web3Games Devnet",chain:"Web3Games",icon:{url:"ipfs://QmUc57w3UTHiWapNW9oQb1dP57ymtdemTTbpvGkjVHBRCo",width:192,height:192,format:"png"},rpc:["https://web3games-devnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnet.web3games.org/evm"],faucets:[],nativeCurrency:{name:"Web3Games",symbol:"W3G",decimals:18},infoURL:"https://web3games.org/",shortName:"dw3g",chainId:105,networkId:105,explorers:[{name:"Web3Games Explorer",url:"https://explorer-devnet.web3games.org",standard:"none"}],testnet:!1,slug:"web3games-devnet"},a3={name:"Velas EVM Mainnet",chain:"Velas",icon:{url:"ipfs://QmNXiCXJxEeBd7ZYGYjPSMTSdbDd2nfodLC677gUfk9ku5",width:924,height:800,format:"png"},rpc:["https://velas-evm.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evmexplorer.velas.com/rpc","https://explorer.velas.com/rpc"],faucets:[],nativeCurrency:{name:"Velas",symbol:"VLX",decimals:18},infoURL:"https://velas.com",shortName:"vlx",chainId:106,networkId:106,explorers:[{name:"Velas Explorer",url:"https://evmexplorer.velas.com",standard:"EIP3091"}],testnet:!1,slug:"velas-evm"},r3={name:"Nebula Testnet",chain:"NTN",icon:{url:"ipfs://QmeFaJtQqTKKuXQR7ysS53bLFPasFBcZw445cvYJ2HGeTo",width:512,height:512,format:"png"},rpc:["https://nebula-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.rpc.novanetwork.io"],faucets:["https://faucet.novanetwork.io"],nativeCurrency:{name:"Nebula X",symbol:"NBX",decimals:18},infoURL:"https://novanetwork.io",shortName:"ntn",chainId:107,networkId:107,explorers:[{name:"nebulatestnet",url:"https://explorer.novanetwork.io",standard:"EIP3091"}],testnet:!0,slug:"nebula-testnet"},i3={name:"ThunderCore Mainnet",chain:"TT",rpc:["https://thundercore.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.thundercore.com","https://mainnet-rpc.thundertoken.net","https://mainnet-rpc.thundercore.io"],faucets:["https://faucet.thundercore.com"],nativeCurrency:{name:"ThunderCore Token",symbol:"TT",decimals:18},infoURL:"https://thundercore.com",shortName:"TT",chainId:108,networkId:108,slip44:1001,explorers:[{name:"thundercore-viewblock",url:"https://viewblock.io/thundercore",standard:"EIP3091"}],testnet:!1,slug:"thundercore"},s3={name:"Proton Testnet",chain:"XPR",rpc:["https://proton-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://protontestnet.greymass.com/"],faucets:[],nativeCurrency:{name:"Proton",symbol:"XPR",decimals:4},infoURL:"https://protonchain.com",shortName:"xpr",chainId:110,networkId:110,testnet:!0,slug:"proton-testnet"},o3={name:"EtherLite Chain",chain:"ETL",rpc:["https://etherlite-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.etherlite.org"],faucets:["https://etherlite.org/faucets"],nativeCurrency:{name:"EtherLite",symbol:"ETL",decimals:18},infoURL:"https://etherlite.org",shortName:"ETL",chainId:111,networkId:111,icon:{url:"ipfs://QmbNAai1KnBnw4SPQKgrf6vBddifPCQTg2PePry1bmmZYy",width:88,height:88,format:"png"},testnet:!1,slug:"etherlite-chain"},c3={name:"Coinbit Mainnet",chain:"Coinbit",rpc:["https://coinbit.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://coinbit-rpc-mainnet.chain.sbcrypto.app"],faucets:[],nativeCurrency:{name:"Gas IDR",symbol:"GIDR",decimals:18},infoURL:"https://crypto.stockbit.com/",shortName:"coinbit",chainId:112,networkId:112,icon:{url:"ipfs://QmdaQRUbAXJGfHeJ8jaB8WVh8CCmHExq8VjvAfXpLWWQEo",width:760,height:760,format:"png"},explorers:[{name:"blockscout",url:"https://coinbit-explorer.chain.sbcrypto.app",icon:{url:"ipfs://bafybeifu5tpui7dk5cjoo54kde7pmuthvnl7sdykobuarsxgu7t2izurnq",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"coinbit"},p3={name:"Dehvo",chain:"Dehvo",rpc:["https://dehvo.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://connect.dehvo.com","https://rpc.dehvo.com","https://rpc1.dehvo.com","https://rpc2.dehvo.com"],faucets:["https://buy.dehvo.com"],nativeCurrency:{name:"Dehvo",symbol:"Deh",decimals:18},infoURL:"https://dehvo.com",shortName:"deh",chainId:113,networkId:113,slip44:714,explorers:[{name:"Dehvo Explorer",url:"https://explorer.dehvo.com",standard:"EIP3091"}],testnet:!1,slug:"dehvo"},l3={name:"Flare Testnet Coston2",chain:"FLR",icon:{url:"ipfs://QmZhAYyazEBZSHWNQb9uCkNPq2MNTLoW3mjwiD3955hUjw",width:382,height:382,format:"png"},rpc:["https://flare-testnet-coston2.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://coston2-api.flare.network/ext/bc/C/rpc"],faucets:["https://coston2-faucet.towolabs.com"],nativeCurrency:{name:"Coston2 Flare",symbol:"C2FLR",decimals:18},infoURL:"https://flare.xyz",shortName:"c2flr",chainId:114,networkId:114,explorers:[{name:"blockscout",url:"https://coston2-explorer.flare.network",standard:"EIP3091"}],testnet:!0,slug:"flare-testnet-coston2"},d3={name:"DeBank Testnet",chain:"DeBank",rpc:[],faucets:[],icon:{url:"ipfs://QmW9pBps8WHRRWmyXhjLZrjZJUe8F48hUu7z98bu2RVsjN",width:400,height:400,format:"png"},nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://debank.com",shortName:"debank-testnet",chainId:115,networkId:115,explorers:[],testnet:!0,slug:"debank-testnet"},u3={name:"DeBank Mainnet",chain:"DeBank",rpc:[],faucets:[],icon:{url:"ipfs://QmW9pBps8WHRRWmyXhjLZrjZJUe8F48hUu7z98bu2RVsjN",width:400,height:400,format:"png"},nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://debank.com",shortName:"debank-mainnet",chainId:116,networkId:116,explorers:[],testnet:!1,slug:"debank"},m3={name:"Uptick Mainnet",chain:"Uptick",rpc:["https://uptick.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://json-rpc.uptick.network"],faucets:[],nativeCurrency:{name:"Uptick",symbol:"UPTICK",decimals:18},infoURL:"https://www.uptick.network",shortName:"auptick",chainId:117,networkId:117,icon:{url:"ipfs://QmRGJ6PqYHDTWuUQ6xfnK8S82NzRXiMjTnSGat9qtLuaLP",width:400,height:400,format:"png"},explorers:[{name:"Uptick Explorer",url:"https://evm-explorer.uptick.network",icon:{url:"ipfs://QmRGJ6PqYHDTWuUQ6xfnK8S82NzRXiMjTnSGat9qtLuaLP",width:400,height:400,format:"png"},standard:"none"}],testnet:!1,slug:"uptick"},h3={name:"Arcology Testnet",chain:"Arcology",icon:{url:"ipfs://QmRD7itMvaZutfBjyA7V9xkMGDtsZiJSagPwd3ijqka8kE",width:288,height:288,format:"png"},rpc:["https://arcology-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.arcology.network/rpc"],faucets:[],nativeCurrency:{name:"Arcology Coin",symbol:"Acol",decimals:18},infoURL:"https://arcology.network/",shortName:"arcology",chainId:118,networkId:118,explorers:[{name:"arcology",url:"https://testnet.arcology.network/explorer",standard:"none"}],testnet:!0,slug:"arcology-testnet"},y3={name:"ENULS Mainnet",chain:"ENULS",rpc:["https://enuls.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evmapi.nuls.io","https://evmapi2.nuls.io"],faucets:[],nativeCurrency:{name:"NULS",symbol:"NULS",decimals:18},infoURL:"https://nuls.io",shortName:"enuls",chainId:119,networkId:119,icon:{url:"ipfs://QmYz8LK5WkUN8UwqKfWUjnyLuYqQZWihT7J766YXft4TSy",width:26,height:41,format:"svg"},explorers:[{name:"enulsscan",url:"https://evmscan.nuls.io",icon:{url:"ipfs://QmYz8LK5WkUN8UwqKfWUjnyLuYqQZWihT7J766YXft4TSy",width:26,height:41,format:"svg"},standard:"EIP3091"}],testnet:!1,slug:"enuls"},f3={name:"ENULS Testnet",chain:"ENULS",rpc:["https://enuls-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://beta.evmapi.nuls.io","https://beta.evmapi2.nuls.io"],faucets:["http://faucet.nuls.io"],nativeCurrency:{name:"NULS",symbol:"NULS",decimals:18},infoURL:"https://nuls.io",shortName:"enulst",chainId:120,networkId:120,icon:{url:"ipfs://QmYz8LK5WkUN8UwqKfWUjnyLuYqQZWihT7J766YXft4TSy",width:26,height:41,format:"svg"},explorers:[{name:"enulsscan",url:"https://beta.evmscan.nuls.io",icon:{url:"ipfs://QmYz8LK5WkUN8UwqKfWUjnyLuYqQZWihT7J766YXft4TSy",width:26,height:41,format:"svg"},standard:"EIP3091"}],testnet:!0,slug:"enuls-testnet"},g3={name:"Realchain Mainnet",chain:"REAL",rpc:["https://realchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rcl-dataseed1.rclsidechain.com","https://rcl-dataseed2.rclsidechain.com","https://rcl-dataseed3.rclsidechain.com","https://rcl-dataseed4.rclsidechain.com","wss://rcl-dataseed1.rclsidechain.com/v1/","wss://rcl-dataseed2.rclsidechain.com/v1/","wss://rcl-dataseed3.rclsidechain.com/v1/","wss://rcl-dataseed4.rclsidechain.com/v1/"],faucets:["https://faucet.rclsidechain.com"],nativeCurrency:{name:"Realchain",symbol:"REAL",decimals:18},infoURL:"https://www.rclsidechain.com/",shortName:"REAL",chainId:121,networkId:121,slip44:714,explorers:[{name:"realscan",url:"https://rclscan.com",standard:"EIP3091"}],testnet:!1,slug:"realchain"},b3={name:"Fuse Mainnet",chain:"FUSE",rpc:["https://fuse.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.fuse.io"],faucets:[],nativeCurrency:{name:"Fuse",symbol:"FUSE",decimals:18},infoURL:"https://fuse.io/",shortName:"fuse",chainId:122,networkId:122,icon:{url:"ipfs://QmQg8aqyeaMfHvjzFDtZkb8dUNRYhFezPp8UYVc1HnLpRW/green.png",format:"png",width:512,height:512},testnet:!1,slug:"fuse"},T3={name:"Fuse Sparknet",chain:"fuse",rpc:["https://fuse-sparknet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.fusespark.io"],faucets:["https://get.fusespark.io"],nativeCurrency:{name:"Spark",symbol:"SPARK",decimals:18},infoURL:"https://docs.fuse.io/general/fuse-network-blockchain/fuse-testnet",shortName:"spark",chainId:123,networkId:123,testnet:!0,icon:{url:"ipfs://QmQg8aqyeaMfHvjzFDtZkb8dUNRYhFezPp8UYVc1HnLpRW/green.png",format:"png",width:512,height:512},slug:"fuse-sparknet"},w3={name:"Decentralized Web Mainnet",shortName:"dwu",chain:"DWU",chainId:124,networkId:124,rpc:["https://decentralized-web.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://decentralized-web.tech/dw_rpc.php"],faucets:[],infoURL:"https://decentralized-web.tech/dw_chain.php",nativeCurrency:{name:"Decentralized Web Utility",symbol:"DWU",decimals:18},testnet:!1,slug:"decentralized-web"},I3={name:"OYchain Testnet",chain:"OYchain",rpc:["https://oychain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.testnet.oychain.io"],faucets:["https://faucet.oychain.io"],nativeCurrency:{name:"OYchain Token",symbol:"OY",decimals:18},infoURL:"https://www.oychain.io",shortName:"OYchainTestnet",chainId:125,networkId:125,slip44:125,explorers:[{name:"OYchain Testnet Explorer",url:"https://explorer.testnet.oychain.io",standard:"none"}],testnet:!0,slug:"oychain-testnet"},v3={name:"OYchain Mainnet",chain:"OYchain",icon:{url:"ipfs://QmXW5T2MaGHznXUmQEXoyJjcdmX7dhLbj5fnqvZZKqeKzA",width:677,height:237,format:"png"},rpc:["https://oychain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.mainnet.oychain.io"],faucets:[],nativeCurrency:{name:"OYchain Token",symbol:"OY",decimals:18},infoURL:"https://www.oychain.io",shortName:"OYchainMainnet",chainId:126,networkId:126,slip44:126,explorers:[{name:"OYchain Mainnet Explorer",url:"https://explorer.oychain.io",standard:"none"}],testnet:!1,slug:"oychain"},C3={name:"Factory 127 Mainnet",chain:"FETH",rpc:[],faucets:[],nativeCurrency:{name:"Factory 127 Token",symbol:"FETH",decimals:18},infoURL:"https://www.factory127.com",shortName:"feth",chainId:127,networkId:127,slip44:127,testnet:!1,slug:"factory-127"},k3={name:"Huobi ECO Chain Mainnet",chain:"Heco",rpc:["https://huobi-eco-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://http-mainnet.hecochain.com","wss://ws-mainnet.hecochain.com"],faucets:["https://free-online-app.com/faucet-for-eth-evm-chains/"],nativeCurrency:{name:"Huobi ECO Chain Native Token",symbol:"HT",decimals:18},infoURL:"https://www.hecochain.com",shortName:"heco",chainId:128,networkId:128,slip44:1010,explorers:[{name:"hecoinfo",url:"https://hecoinfo.com",standard:"EIP3091"}],testnet:!1,slug:"huobi-eco-chain"},E3={name:"iExec Sidechain",chain:"Bellecour",icon:{url:"ipfs://QmUYKpVmZL4aS3TEZLG5wbrRJ6exxLiwm1rejfGYYNicfb",width:155,height:155,format:"png"},rpc:["https://iexec-sidechain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://bellecour.iex.ec"],faucets:[],nativeCurrency:{name:"xRLC",symbol:"xRLC",decimals:18},infoURL:"https://iex.ec",shortName:"rlc",chainId:134,networkId:134,explorers:[{name:"blockscout",url:"https://blockscout.bellecour.iex.ec",icon:{url:"ipfs://bafybeifu5tpui7dk5cjoo54kde7pmuthvnl7sdykobuarsxgu7t2izurnq",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"iexec-sidechain"},x3={name:"Alyx Chain Testnet",chain:"Alyx Chain Testnet",rpc:["https://alyx-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.alyxchain.com"],faucets:["https://faucet.alyxchain.com"],nativeCurrency:{name:"Alyx Testnet Native Token",symbol:"ALYX",decimals:18},infoURL:"https://www.alyxchain.com",shortName:"AlyxTestnet",chainId:135,networkId:135,explorers:[{name:"alyx testnet scan",url:"https://testnet.alyxscan.com",standard:"EIP3091"}],icon:{url:"ipfs://bafkreifd43fcvh77mdcwjrpzpnlhthounc6b4u645kukqpqhduaveatf6i",width:2481,height:2481,format:"png"},testnet:!0,slug:"alyx-chain-testnet"},R3={name:"Deamchain Mainnet",chain:"Deamchain",icon:{url:"ipfs://QmXvHWmjfXKdZMSz7x82NR4SjEqigKdJELVHbnzUPkj17F",width:512,height:512,format:"svg"},rpc:["https://deamchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.deamchain.com"],faucets:[],nativeCurrency:{name:"Deamchain Native Token",symbol:"DEAM",decimals:18},infoURL:"https://deamchain.com",shortName:"deam",chainId:136,networkId:136,explorers:[{name:"Deamchain Block Explorer",url:"https://scan.deamchain.com",standard:"EIP3091",icon:{url:"ipfs://QmXvHWmjfXKdZMSz7x82NR4SjEqigKdJELVHbnzUPkj17F",width:512,height:512,format:"svg"}}],testnet:!1,slug:"deamchain"},A3={name:"Polygon Mainnet",chain:"Polygon",icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/polygon/512.png",height:512,width:512,format:"png"},rpc:["https://polygon.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://polygon-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}","https://polygon-mainnet.infura.io/v3/${INFURA_API_KEY}","https://polygon-rpc.com/","https://rpc-mainnet.matic.network","https://matic-mainnet.chainstacklabs.com","https://rpc-mainnet.maticvigil.com","https://rpc-mainnet.matic.quiknode.pro","https://matic-mainnet-full-rpc.bwarelabs.com","https://polygon-bor.publicnode.com"],faucets:[],nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},infoURL:"https://polygon.technology/",shortName:"matic",chainId:137,networkId:137,slip44:966,explorers:[{name:"polygonscan",url:"https://polygonscan.com",standard:"EIP3091"}],testnet:!1,slug:"polygon"},P3={name:"Defi Oracle Meta Mainnet",chain:"dfiometa",icon:{url:"ipfs://QmYrMRnjQJcNkYq9AvZ2FQ9kzYj9szzP4YDmyNA1ybd8xE",width:1e3,height:1043,format:"png"},rpc:["https://defi-oracle-meta.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.public-0138.defi-oracle.io","wss://rpc.public-0138.defi-oracle.io"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://defi-oracle.io/",shortName:"dfio-meta-main",chainId:138,networkId:1,slip44:60,ens:{registry:"0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85"},explorers:[{name:"Quorum Explorer",url:"https://public-0138.defi-oracle.io",standard:"none"}],testnet:!1,slug:"defi-oracle-meta"},M3={name:"WoopChain Mainnet",chain:"WOOP",icon:{url:"ipfs://Qma7LpnkGjAN1dwL6VTXUYqzySNxjLg4br7J8UE4yZWYec",width:310,height:310,format:"png"},rpc:["https://woopchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.woop.ai/rpc"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"WoopCoin",symbol:"WOOC",decimals:18},infoURL:"https://wikiwoop.com",shortName:"woop",chainId:139,networkId:139,explorers:[{name:"wikiwoop",url:"https://explorer.wikiwoop.com",standard:"EIP3091"}],testnet:!1,slug:"woopchain"},_3={name:"Openpiece Testnet",chain:"OPENPIECE",icon:{url:"ipfs://QmVTahJkdSH3HPYsJMK2GmqfWZjLyxE7cXy1aHEnHU3vp2",width:250,height:250,format:"png"},rpc:["https://openpiece-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.openpiece.io"],faucets:[],nativeCurrency:{name:"Belly",symbol:"BELLY",decimals:18},infoURL:"https://cryptopiece.online",shortName:"OPtest",chainId:141,networkId:141,explorers:[{name:"Belly Scan",url:"https://testnet.bellyscan.com",standard:"none"}],testnet:!0,slug:"openpiece-testnet"},S3={name:"DAX CHAIN",chain:"DAX",rpc:["https://dax-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.prodax.io"],faucets:[],nativeCurrency:{name:"Prodax",symbol:"DAX",decimals:18},infoURL:"https://prodax.io/",shortName:"dax",chainId:142,networkId:142,testnet:!1,slug:"dax-chain"},W3={name:"PHI Network v2",chain:"PHI",rpc:["https://phi-network-v2.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://connect.phi.network"],faucets:[],nativeCurrency:{name:"PHI",symbol:"\u03A6",decimals:18},infoURL:"https://phi.network",shortName:"PHI",chainId:144,networkId:144,icon:{url:"ipfs://bafkreid6pm3mic7izp3a6zlfwhhe7etd276bjfsq2xash6a4s2vmcdf65a",width:512,height:512,format:"png"},explorers:[{name:"Phiscan",url:"https://phiscan.com",icon:{url:"ipfs://bafkreid6pm3mic7izp3a6zlfwhhe7etd276bjfsq2xash6a4s2vmcdf65a",width:512,height:512,format:"png"},standard:"none"}],testnet:!1,slug:"phi-network-v2"},B3={name:"Six Protocol Testnet",chain:"FIVENET",icon:{url:"ipfs://QmP93z696v8Hetu13peY2oEHDXq8Bj5CqaDRwpVkpnM15A",width:512,height:512,format:"png"},rpc:["https://six-protocol-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-evm.fivenet.sixprotocol.net"],faucets:["https://faucet.sixprotocol.net"],nativeCurrency:{name:"SIX testnet evm token",symbol:"tSIX",decimals:18},infoURL:"https://six.network/",shortName:"sixt",chainId:150,networkId:150,explorers:[{name:"SIX Scan fivenet",url:"https://sixscan.io/fivenet",standard:"none",icon:{url:"ipfs://QmP93z696v8Hetu13peY2oEHDXq8Bj5CqaDRwpVkpnM15A",width:512,height:512,format:"png"}}],testnet:!0,slug:"six-protocol-testnet"},N3={name:"Tenet Testnet",title:"Tenet Testnet",chain:"TENET",icon:{url:"ipfs://Qmc1gqjWTzNo4pyFSGtQuCu7kRSZZBUVybtTjHn2nNEEPA",width:640,height:640,format:"svg"},rpc:["https://tenet-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.testnet.tenet.org"],faucets:["https://faucet.testnet.tenet.org"],nativeCurrency:{name:"TENET",symbol:"TENET",decimals:18},infoURL:"https://tenet.org/",shortName:"tenet-testnet",chainId:155,networkId:155,explorers:[{name:"TenetScan Testnet",url:"https://testnet.tenetscan.io",icon:{url:"ipfs://Qmc1gqjWTzNo4pyFSGtQuCu7kRSZZBUVybtTjHn2nNEEPA",width:640,height:640,format:"svg"},standard:"EIP3091"}],testnet:!0,slug:"tenet-testnet"},D3={name:"OEBlock Testnet",chain:"OEBt",features:[{name:"EIP155"},{name:"EIP1559"}],rpc:["https://oeblock-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.oeblock.com"],faucets:[],nativeCurrency:{name:"OEBlock",symbol:"OEB",decimals:18},infoURL:"https://www.oeblock.com/",shortName:"obe",chainId:156,networkId:156,icon:{url:"ipfs://QmdoQUfYqtkWMfjtoPv2KWDY4MxDDSsyWgwXtCx6jfkezz",width:155,height:177,format:"png"},explorers:[{name:"OEScan explorer",url:"https://testnet.oescan.io",standard:"EIP3091"}],testnet:!0,slug:"oeblock-testnet"},L3={name:"Armonia Eva Chain Mainnet",chain:"Eva",rpc:["https://armonia-eva-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evascan.io/api/eth-rpc/"],faucets:[],nativeCurrency:{name:"Armonia Multichain Native Token",symbol:"AMAX",decimals:18},infoURL:"https://amax.network",shortName:"eva",chainId:160,networkId:160,status:"incubating",testnet:!1,slug:"armonia-eva-chain"},U3={name:"Armonia Eva Chain Testnet",chain:"Wall-e",rpc:["https://armonia-eva-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.evascan.io/api/eth-rpc/"],faucets:[],nativeCurrency:{name:"Armonia Multichain Native Token",symbol:"AMAX",decimals:18},infoURL:"https://amax.network",shortName:"wall-e",chainId:161,networkId:161,explorers:[{name:"blockscout - evascan",url:"https://testnet.evascan.io",standard:"EIP3091"}],testnet:!0,slug:"armonia-eva-chain-testnet"},F3={name:"Lightstreams Testnet",chain:"PHT",rpc:["https://lightstreams-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node.sirius.lightstreams.io"],faucets:["https://discuss.lightstreams.network/t/request-test-tokens"],nativeCurrency:{name:"Lightstreams PHT",symbol:"PHT",decimals:18},infoURL:"https://explorer.sirius.lightstreams.io",shortName:"tpht",chainId:162,networkId:162,testnet:!0,slug:"lightstreams-testnet"},H3={name:"Lightstreams Mainnet",chain:"PHT",rpc:["https://lightstreams.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node.mainnet.lightstreams.io"],faucets:[],nativeCurrency:{name:"Lightstreams PHT",symbol:"PHT",decimals:18},infoURL:"https://explorer.lightstreams.io",shortName:"pht",chainId:163,networkId:163,testnet:!1,slug:"lightstreams"},K3={name:"Atoshi Testnet",chain:"ATOSHI",icon:{url:"ipfs://QmfFK6B4MFLrpSS46aLf7hjpt28poHFeTGEKEuH248Tbyj",width:200,height:200,format:"png"},rpc:["https://atoshi-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node.atoshi.io/"],faucets:[],nativeCurrency:{name:"ATOSHI",symbol:"ATOS",decimals:18},infoURL:"https://atoshi.org",shortName:"atoshi",chainId:167,networkId:167,explorers:[{name:"atoshiscan",url:"https://scan.atoverse.info",standard:"EIP3091"}],testnet:!0,slug:"atoshi-testnet"},O3={name:"AIOZ Network",chain:"AIOZ",icon:{url:"ipfs://QmRAGPFhvQiXgoJkui7WHajpKctGFrJNhHqzYdwcWt5V3Z",width:1024,height:1024,format:"png"},rpc:["https://aioz-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://eth-dataseed.aioz.network"],faucets:[],nativeCurrency:{name:"AIOZ",symbol:"AIOZ",decimals:18},infoURL:"https://aioz.network",shortName:"aioz",chainId:168,networkId:168,slip44:60,explorers:[{name:"AIOZ Network Explorer",url:"https://explorer.aioz.network",standard:"EIP3091"}],testnet:!1,slug:"aioz-network"},$3={name:"HOO Smart Chain Testnet",chain:"ETH",rpc:["https://hoo-smart-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://http-testnet.hoosmartchain.com"],faucets:["https://faucet-testnet.hscscan.com/"],nativeCurrency:{name:"HOO",symbol:"HOO",decimals:18},infoURL:"https://www.hoosmartchain.com",shortName:"hoosmartchain",chainId:170,networkId:170,testnet:!0,slug:"hoo-smart-chain-testnet"},Y3={name:"Latam-Blockchain Resil Testnet",chain:"Resil",rpc:["https://latam-blockchain-resil-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.latam-blockchain.com","wss://ws.latam-blockchain.com"],faucets:["https://faucet.latam-blockchain.com"],nativeCurrency:{name:"Latam-Blockchain Resil Test Native Token",symbol:"usd",decimals:18},infoURL:"https://latam-blockchain.com",shortName:"resil",chainId:172,networkId:172,testnet:!0,slug:"latam-blockchain-resil-testnet"},z3={name:"AME Chain Mainnet",chain:"AME",rpc:["https://ame-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node1.amechain.io/"],faucets:[],nativeCurrency:{name:"AME",symbol:"AME",decimals:18},infoURL:"https://amechain.io/",shortName:"ame",chainId:180,networkId:180,explorers:[{name:"AME Scan",url:"https://amescan.io",standard:"EIP3091"}],testnet:!1,slug:"ame-chain"},q3={name:"Seele Mainnet",chain:"Seele",rpc:["https://seele.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.seelen.pro/"],faucets:[],nativeCurrency:{name:"Seele",symbol:"Seele",decimals:18},infoURL:"https://seelen.pro/",shortName:"Seele",chainId:186,networkId:186,explorers:[{name:"seeleview",url:"https://seeleview.net",standard:"none"}],testnet:!1,slug:"seele"},Q3={name:"BMC Mainnet",chain:"BMC",rpc:["https://bmc.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.bmcchain.com/"],faucets:[],nativeCurrency:{name:"BTM",symbol:"BTM",decimals:18},infoURL:"https://bmc.bytom.io/",shortName:"BMC",chainId:188,networkId:188,explorers:[{name:"Blockmeta",url:"https://bmc.blockmeta.com",standard:"none"}],testnet:!1,slug:"bmc"},j3={name:"BMC Testnet",chain:"BMC",rpc:["https://bmc-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.bmcchain.com"],faucets:[],nativeCurrency:{name:"BTM",symbol:"BTM",decimals:18},infoURL:"https://bmc.bytom.io/",shortName:"BMCT",chainId:189,networkId:189,explorers:[{name:"Blockmeta",url:"https://bmctestnet.blockmeta.com",standard:"none"}],testnet:!0,slug:"bmc-testnet"},V3={name:"Crypto Emergency",chain:"CEM",rpc:["https://crypto-emergency.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://cemchain.com"],faucets:[],nativeCurrency:{name:"Crypto Emergency",symbol:"CEM",decimals:18},infoURL:"https://cemblockchain.com/",shortName:"cem",chainId:193,networkId:193,explorers:[{name:"cemscan",url:"https://cemscan.com",standard:"EIP3091"}],testnet:!1,slug:"crypto-emergency"},G3={name:"OKBChain Testnet",chain:"okbchain",rpc:["https://okbchain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://okbtestrpc.okbchain.org"],faucets:["https://www.oklink.com/okbc-test"],nativeCurrency:{name:"OKBChain Global Utility Token in testnet",symbol:"OKB",decimals:18},features:[],infoURL:"https://www.okx.com/okbc/docs/dev/quick-start/introduction/introduction-to-okbchain",shortName:"tokb",chainId:195,networkId:195,explorers:[{name:"OKLink",url:"https://www.oklink.com/okbc-test",standard:"EIP3091"}],status:"active",testnet:!0,slug:"okbchain-testnet"},Z3={name:"OKBChain Mainnet",chain:"okbchain",rpc:[],faucets:[],nativeCurrency:{name:"OKBChain Global Utility Token",symbol:"OKB",decimals:18},features:[],infoURL:"https://www.okex.com/okc",shortName:"okb",chainId:196,networkId:196,explorers:[],status:"incubating",testnet:!1,slug:"okbchain"},X3={name:"Neutrinos TestNet",chain:"NEUTR",rpc:["https://neutrinos-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.neutrinoschain.com"],faucets:["https://neutrinoschain.com/faucet"],nativeCurrency:{name:"Neutrinos",symbol:"NEUTR",decimals:18},infoURL:"https://docs.neutrinoschain.com",shortName:"NEUTR",chainId:197,networkId:197,explorers:[{name:"blockscout",url:"https://testnet.neutrinoschain.com",standard:"EIP3091"}],testnet:!0,slug:"neutrinos-testnet"},J3={name:"BitTorrent Chain Mainnet",chain:"BTTC",rpc:["https://bittorrent-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.bittorrentchain.io/"],faucets:[],nativeCurrency:{name:"BitTorrent",symbol:"BTT",decimals:18},infoURL:"https://bittorrentchain.io/",shortName:"BTT",chainId:199,networkId:199,explorers:[{name:"bttcscan",url:"https://scan.bittorrentchain.io",standard:"none"}],testnet:!1,slug:"bittorrent-chain"},e8={name:"Arbitrum on xDai",chain:"AOX",rpc:["https://arbitrum-on-xdai.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://arbitrum.xdaichain.com/"],faucets:[],nativeCurrency:{name:"xDAI",symbol:"xDAI",decimals:18},infoURL:"https://xdaichain.com",shortName:"aox",chainId:200,networkId:200,explorers:[{name:"blockscout",url:"https://blockscout.com/xdai/arbitrum",standard:"EIP3091"}],parent:{chain:"eip155-100",type:"L2"},testnet:!1,slug:"arbitrum-on-xdai"},t8={name:"MOAC testnet",chain:"MOAC",rpc:["https://moac-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://gateway.moac.io/testnet"],faucets:[],nativeCurrency:{name:"MOAC",symbol:"mc",decimals:18},infoURL:"https://moac.io",shortName:"moactest",chainId:201,networkId:201,explorers:[{name:"moac testnet explorer",url:"https://testnet.moac.io",standard:"none"}],testnet:!0,slug:"moac-testnet"},n8={name:"Structx Mainnet",chain:"utx",rpc:["https://structx.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.structx.io"],faucets:[],nativeCurrency:{name:"Notes",symbol:"utx",decimals:18},infoURL:"https://structx.io",shortName:"utx",chainId:208,networkId:208,testnet:!1,slug:"structx"},a8={name:"Freight Trust Network",chain:"EDI",rpc:["https://freight-trust-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://13.57.207.168:3435","https://app.freighttrust.net/ftn/${API_KEY}"],faucets:["http://faucet.freight.sh"],nativeCurrency:{name:"Freight Trust Native",symbol:"0xF",decimals:18},infoURL:"https://freighttrust.com",shortName:"EDI",chainId:211,networkId:0,testnet:!1,slug:"freight-trust-network"},r8={name:"MAP Makalu",title:"MAP Testnet Makalu",chain:"MAP",rpc:["https://map-makalu.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.maplabs.io"],faucets:["https://faucet.maplabs.io"],nativeCurrency:{name:"Makalu MAP",symbol:"MAP",decimals:18},infoURL:"https://maplabs.io",shortName:"makalu",chainId:212,networkId:212,explorers:[{name:"mapscan",url:"https://testnet.mapscan.io",standard:"EIP3091"}],testnet:!0,slug:"map-makalu"},i8={name:"SiriusNet V2",chain:"SIN2",faucets:[],rpc:["https://siriusnet-v2.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc2.siriusnet.io"],icon:{url:"ipfs://bafybeicxuxdzrzpwsil4owqmn7wpwka2rqsohpfqmukg57pifzyxr5om2q",width:100,height:100,format:"png"},nativeCurrency:{name:"MCD",symbol:"MCD",decimals:18},infoURL:"https://siriusnet.io",shortName:"SIN2",chainId:217,networkId:217,explorers:[{name:"siriusnet explorer",url:"https://scan.siriusnet.io",standard:"none"}],testnet:!1,slug:"siriusnet-v2"},s8={name:"LACHAIN Mainnet",chain:"LA",icon:{url:"ipfs://QmQxGA6rhuCQDXUueVcNvFRhMEWisyTmnF57TqL7h6k6cZ",width:1280,height:1280,format:"png"},rpc:["https://lachain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-mainnet.lachain.io"],faucets:[],nativeCurrency:{name:"LA",symbol:"LA",decimals:18},infoURL:"https://lachain.io",shortName:"LA",chainId:225,networkId:225,explorers:[{name:"blockscout",url:"https://scan.lachain.io",standard:"EIP3091"}],testnet:!1,slug:"lachain"},o8={name:"LACHAIN Testnet",chain:"TLA",icon:{url:"ipfs://QmQxGA6rhuCQDXUueVcNvFRhMEWisyTmnF57TqL7h6k6cZ",width:1280,height:1280,format:"png"},rpc:["https://lachain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.lachain.io"],faucets:[],nativeCurrency:{name:"TLA",symbol:"TLA",decimals:18},infoURL:"https://lachain.io",shortName:"TLA",chainId:226,networkId:226,explorers:[{name:"blockscout",url:"https://scan-test.lachain.io",standard:"EIP3091"}],testnet:!0,slug:"lachain-testnet"},c8={name:"SwapDEX",chain:"SDX",rpc:["https://swapdex.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.swapdex.network","wss://ss.swapdex.network"],faucets:[],nativeCurrency:{name:"SwapDEX",symbol:"SDX",decimals:18},infoURL:"https://swapdex.network/",shortName:"SDX",chainId:230,networkId:230,explorers:[{name:"SwapDEX",url:"https://evm.swapdex.network",standard:"none"}],testnet:!1,slug:"swapdex"},p8={name:"Deamchain Testnet",chain:"Deamchain",icon:{url:"ipfs://QmXvHWmjfXKdZMSz7x82NR4SjEqigKdJELVHbnzUPkj17F",width:512,height:512,format:"svg"},rpc:["https://deamchain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.deamchain.com"],faucets:["https://faucet.deamchain.com"],nativeCurrency:{name:"Deamchain Native Token",symbol:"DEAM",decimals:18},infoURL:"https://deamchain.com",shortName:"deamtest",chainId:236,networkId:236,explorers:[{name:"Deamchain Testnet Explorer",url:"https://testnet-scan.deamchain.com",standard:"EIP3091",icon:{url:"ipfs://QmXvHWmjfXKdZMSz7x82NR4SjEqigKdJELVHbnzUPkj17F",width:512,height:512,format:"svg"}}],testnet:!0,slug:"deamchain-testnet"},l8={name:"Energy Web Chain",chain:"Energy Web Chain",rpc:["https://energy-web-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.energyweb.org","wss://rpc.energyweb.org/ws"],faucets:["https://faucet.carbonswap.exchange","https://free-online-app.com/faucet-for-eth-evm-chains/"],nativeCurrency:{name:"Energy Web Token",symbol:"EWT",decimals:18},infoURL:"https://energyweb.org",shortName:"ewt",chainId:246,networkId:246,slip44:246,explorers:[{name:"blockscout",url:"https://explorer.energyweb.org",standard:"none"}],testnet:!1,slug:"energy-web-chain"},d8={name:"Oasys Mainnet",chain:"Oasys",icon:{url:"ipfs://QmT84suD2ZmTSraJBfeHhTNst2vXctQijNCztok9XiVcUR",width:3600,height:3600,format:"png"},rpc:["https://oasys.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.mainnet.oasys.games"],faucets:[],nativeCurrency:{name:"OAS",symbol:"OAS",decimals:18},infoURL:"https://oasys.games",shortName:"OAS",chainId:248,networkId:248,explorers:[{name:"blockscout",url:"https://explorer.oasys.games",standard:"EIP3091"}],testnet:!1,slug:"oasys"},u8={name:"Fantom Opera",chain:"FTM",rpc:["https://fantom.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://fantom.publicnode.com","https://rpc.ftm.tools"],faucets:["https://free-online-app.com/faucet-for-eth-evm-chains/"],nativeCurrency:{name:"Fantom",symbol:"FTM",decimals:18},infoURL:"https://fantom.foundation",shortName:"ftm",chainId:250,networkId:250,icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/fantom/512.png",height:512,width:512,format:"png"},explorers:[{name:"ftmscan",url:"https://ftmscan.com",icon:{url:"ipfs://QmRqbK449Fo9sJ3xMpkPbg6uV1weQj4yVV1xNMP9cdPmjf",width:73,height:73,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"fantom"},m8={name:"Huobi ECO Chain Testnet",chain:"Heco",rpc:["https://huobi-eco-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://http-testnet.hecochain.com","wss://ws-testnet.hecochain.com"],faucets:["https://scan-testnet.hecochain.com/faucet"],nativeCurrency:{name:"Huobi ECO Chain Test Native Token",symbol:"htt",decimals:18},infoURL:"https://testnet.hecoinfo.com",shortName:"hecot",chainId:256,networkId:256,testnet:!0,slug:"huobi-eco-chain-testnet"},h8={name:"Setheum",chain:"Setheum",rpc:[],faucets:[],nativeCurrency:{name:"Setheum",symbol:"SETM",decimals:18},infoURL:"https://setheum.xyz",shortName:"setm",chainId:258,networkId:258,testnet:!1,slug:"setheum"},y8={name:"Neonlink Mainnet",chain:"Neonlink",rpc:["https://neonlink.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.neonlink.io"],faucets:[],nativeCurrency:{name:"Neonlink Native Token",symbol:"NEON",decimals:18},infoURL:"https://neonlink.io",shortName:"neon",chainId:259,networkId:259,icon:{url:"ipfs://QmX3hBv8WyvVfYjh1gmgDfJCpJBvKk4TYG9wFX9sC8WAjz",width:512,height:512,format:"svg"},explorers:[{name:"Neon Blockchain Explorer",url:"https://scan.neonlink.io",standard:"EIP3091",icon:{url:"ipfs://QmX3hBv8WyvVfYjh1gmgDfJCpJBvKk4TYG9wFX9sC8WAjz",width:512,height:512,format:"svg"}}],testnet:!1,slug:"neonlink"},f8={name:"SUR Blockchain Network",chain:"SUR",rpc:["https://sur-blockchain-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://sur.nilin.org"],faucets:[],nativeCurrency:{name:"Suren",symbol:"SRN",decimals:18},infoURL:"https://surnet.org",shortName:"SUR",chainId:262,networkId:1,icon:{url:"ipfs://QmbUcDQHCvheYQrWk9WFJRMW5fTJQmtZqkoGUed4bhCM7T",width:3e3,height:3e3,format:"png"},explorers:[{name:"Surnet Explorer",url:"https://explorer.surnet.org",icon:{url:"ipfs://QmbUcDQHCvheYQrWk9WFJRMW5fTJQmtZqkoGUed4bhCM7T",width:3e3,height:3e3,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"sur-blockchain-network"},g8={name:"High Performance Blockchain",chain:"HPB",rpc:["https://high-performance-blockchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://hpbnode.com","wss://ws.hpbnode.com"],faucets:["https://myhpbwallet.com/"],nativeCurrency:{name:"High Performance Blockchain Ether",symbol:"HPB",decimals:18},infoURL:"https://hpb.io",shortName:"hpb",chainId:269,networkId:269,slip44:269,explorers:[{name:"hscan",url:"https://hscan.org",standard:"EIP3091"}],testnet:!1,slug:"high-performance-blockchain"},b8={name:"LaChain",chain:"LaChain",icon:{url:"ipfs://bafkreiecoqvit2mikpbpbtzy2zrn6e7fvqdegm72sdcathdwmgiyuzey7u",width:104,height:114,format:"png"},rpc:["https://lachain-lachain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc1.mainnet.lachain.network","https://rpc2.mainnet.lachain.network"],faucets:[],nativeCurrency:{name:"LaCoin",symbol:"LAC",decimals:18},features:[{name:"EIP155"}],infoURL:"",shortName:"lachain",chainId:274,networkId:274,explorers:[{name:"LaChain Explorer",url:"https://explorer.lachain.network",standard:"EIP3091"}],testnet:!1,slug:"lachain-lachain"},T8={name:"zkSync Era Testnet",chain:"ETH",rpc:["https://zksync-era-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.era.zksync.dev"],faucets:["https://goerli.portal.zksync.io/faucet"],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://era.zksync.io/docs/",shortName:"zksync-goerli",chainId:280,networkId:280,icon:{url:"ipfs://QmRkhUD6J3B9WhT4hEWLrcFVTrBhx3CQgNC783aJsrwxSN",width:512,height:512,format:"svg"},explorers:[{name:"zkSync Era Block Explorer",url:"https://goerli.explorer.zksync.io",icon:{url:"ipfs://QmRkhUD6J3B9WhT4hEWLrcFVTrBhx3CQgNC783aJsrwxSN",width:512,height:512,format:"svg"},standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-1",bridges:[{url:"https://goerli.portal.zksync.io/bridge"}]},testnet:!0,slug:"zksync-era-testnet"},w8={name:"Boba Network",chain:"ETH",rpc:["https://boba-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.boba.network/"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://boba.network",shortName:"Boba",chainId:288,networkId:288,explorers:[{name:"Bobascan",url:"https://bobascan.com",standard:"none"},{name:"Blockscout",url:"https://blockexplorer.boba.network",standard:"none"}],parent:{type:"L2",chain:"eip155-1",bridges:[{url:"https://gateway.boba.network"}]},testnet:!1,slug:"boba-network"},I8={name:"Hedera Mainnet",chain:"Hedera",icon:{url:"ipfs://QmQikzhvZKyMmbZJd7BVLZb2YTBDMgNDnaMCAErsVjsfuz",width:1500,height:1500,format:"png"},rpc:["https://hedera.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.hashio.io/api"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"hbar",symbol:"HBAR",decimals:18},infoURL:"https://hedera.com",shortName:"hedera-mainnet",chainId:295,networkId:295,slip44:3030,explorers:[{name:"HashScan",url:"https://hashscan.io/mainnet/dashboard",standard:"none"},{name:"Arkhia Explorer",url:"https://explorer.arkhia.io",standard:"none"},{name:"DragonGlass",url:"https://app.dragonglass.me",standard:"none"},{name:"Hedera Explorer",url:"https://hederaexplorer.io",standard:"none"},{name:"Ledger Works Explore",url:"https://explore.lworks.io",standard:"none"}],testnet:!1,slug:"hedera"},v8={name:"Hedera Testnet",chain:"Hedera",icon:{url:"ipfs://QmQikzhvZKyMmbZJd7BVLZb2YTBDMgNDnaMCAErsVjsfuz",width:1500,height:1500,format:"png"},rpc:["https://hedera-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.hashio.io/api"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:["https://portal.hedera.com"],nativeCurrency:{name:"hbar",symbol:"HBAR",decimals:18},infoURL:"https://hedera.com",shortName:"hedera-testnet",chainId:296,networkId:296,slip44:3030,explorers:[{name:"HashScan",url:"https://hashscan.io/testnet/dashboard",standard:"none"},{name:"Arkhia Explorer",url:"https://explorer.arkhia.io",standard:"none"},{name:"DragonGlass",url:"https://app.dragonglass.me",standard:"none"},{name:"Hedera Explorer",url:"https://hederaexplorer.io",standard:"none"},{name:"Ledger Works Explore",url:"https://explore.lworks.io",standard:"none"}],testnet:!0,slug:"hedera-testnet"},C8={name:"Hedera Previewnet",chain:"Hedera",icon:{url:"ipfs://QmQikzhvZKyMmbZJd7BVLZb2YTBDMgNDnaMCAErsVjsfuz",width:1500,height:1500,format:"png"},rpc:["https://hedera-previewnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://previewnet.hashio.io/api"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:["https://portal.hedera.com"],nativeCurrency:{name:"hbar",symbol:"HBAR",decimals:18},infoURL:"https://hedera.com",shortName:"hedera-previewnet",chainId:297,networkId:297,slip44:3030,explorers:[{name:"HashScan",url:"https://hashscan.io/previewnet/dashboard",standard:"none"}],testnet:!1,slug:"hedera-previewnet"},k8={name:"Hedera Localnet",chain:"Hedera",icon:{url:"ipfs://QmQikzhvZKyMmbZJd7BVLZb2YTBDMgNDnaMCAErsVjsfuz",width:1500,height:1500,format:"png"},rpc:[],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"hbar",symbol:"HBAR",decimals:18},infoURL:"https://hedera.com",shortName:"hedera-localnet",chainId:298,networkId:298,slip44:3030,explorers:[],testnet:!1,slug:"hedera-localnet"},E8={name:"Optimism on Gnosis",chain:"OGC",rpc:["https://optimism-on-gnosis.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://optimism.gnosischain.com","wss://optimism.gnosischain.com/wss"],faucets:["https://faucet.gimlu.com/gnosis"],nativeCurrency:{name:"xDAI",symbol:"xDAI",decimals:18},infoURL:"https://www.xdaichain.com/for-developers/optimism-optimistic-rollups-on-gc",shortName:"ogc",chainId:300,networkId:300,explorers:[{name:"blockscout",url:"https://blockscout.com/xdai/optimism",icon:{url:"ipfs://bafybeifu5tpui7dk5cjoo54kde7pmuthvnl7sdykobuarsxgu7t2izurnq",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"optimism-on-gnosis"},x8={name:"Bobaopera",chain:"Bobaopera",rpc:["https://bobaopera.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://bobaopera.boba.network","wss://wss.bobaopera.boba.network","https://replica.bobaopera.boba.network","wss://replica-wss.bobaopera.boba.network"],faucets:[],nativeCurrency:{name:"Boba Token",symbol:"BOBA",decimals:18},infoURL:"https://boba.network",shortName:"Bobaopera",chainId:301,networkId:301,explorers:[{name:"Bobaopera block explorer",url:"https://blockexplorer.bobaopera.boba.network",standard:"none"}],testnet:!1,slug:"bobaopera"},R8={name:"Omax Mainnet",chain:"OMAX Chain",rpc:["https://omax.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainapi.omaxray.com"],faucets:["https://faucet.omaxray.com/"],nativeCurrency:{name:"OMAX COIN",symbol:"OMAX",decimals:18},infoURL:"https://www.omaxcoin.com/",shortName:"omax",chainId:311,networkId:311,icon:{url:"ipfs://Qmd7omPxrehSuxHHPMYd5Nr7nfrtjKdRJQEhDLfTb87w8G",width:500,height:500,format:"png"},explorers:[{name:"Omax Chain Explorer",url:"https://omaxray.com",icon:{url:"ipfs://Qmd7omPxrehSuxHHPMYd5Nr7nfrtjKdRJQEhDLfTb87w8G",width:500,height:500,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"omax"},A8={name:"Filecoin - Mainnet",chain:"FIL",icon:{url:"ipfs://QmS9r9XQkMHVomWcSBNDkKkz9n87h9bH9ssabeiKZtANoU",width:1e3,height:1e3,format:"png"},rpc:["https://filecoin.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.node.glif.io/","https://rpc.ankr.com/filecoin","https://filecoin-mainnet.chainstacklabs.com/rpc/v1"],faucets:[],nativeCurrency:{name:"filecoin",symbol:"FIL",decimals:18},infoURL:"https://filecoin.io",shortName:"filecoin",chainId:314,networkId:314,slip44:461,explorers:[{name:"Filfox",url:"https://filfox.info/en",standard:"none"},{name:"Beryx",url:"https://beryx.zondax.ch",standard:"none"},{name:"Glif Explorer",url:"https://explorer.glif.io",standard:"EIP3091"},{name:"Dev.storage",url:"https://dev.storage",standard:"none"},{name:"Filscan",url:"https://filscan.io",standard:"none"},{name:"Filscout",url:"https://filscout.io/en",standard:"none"}],testnet:!1,slug:"filecoin"},P8={name:"KCC Mainnet",chain:"KCC",rpc:["https://kcc.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-mainnet.kcc.network","https://kcc.mytokenpocket.vip","https://public-rpc.blockpi.io/http/kcc"],faucets:["https://faucet.kcc.io/","https://free-online-app.com/faucet-for-eth-evm-chains/"],nativeCurrency:{name:"KuCoin Token",symbol:"KCS",decimals:18},infoURL:"https://kcc.io",shortName:"kcs",chainId:321,networkId:321,slip44:641,explorers:[{name:"KCC Explorer",url:"https://explorer.kcc.io/en",standard:"EIP3091"}],testnet:!1,slug:"kcc"},M8={name:"KCC Testnet",chain:"KCC",rpc:["https://kcc-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.kcc.network"],faucets:["https://faucet-testnet.kcc.network"],nativeCurrency:{name:"KuCoin Testnet Token",symbol:"tKCS",decimals:18},infoURL:"https://scan-testnet.kcc.network",shortName:"kcst",chainId:322,networkId:322,explorers:[{name:"kcc-scan-testnet",url:"https://scan-testnet.kcc.network",standard:"EIP3091"}],testnet:!0,slug:"kcc-testnet"},_8={name:"zkSync Era Mainnet",chain:"ETH",rpc:["https://zksync-era.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.era.zksync.io"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://zksync.io/",shortName:"zksync",chainId:324,networkId:324,icon:{url:"ipfs://QmRkhUD6J3B9WhT4hEWLrcFVTrBhx3CQgNC783aJsrwxSN",width:512,height:512,format:"svg"},explorers:[{name:"zkSync Era Block Explorer",url:"https://explorer.zksync.io",icon:{url:"ipfs://QmRkhUD6J3B9WhT4hEWLrcFVTrBhx3CQgNC783aJsrwxSN",width:512,height:512,format:"svg"},standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-1",bridges:[{url:"https://bridge.zksync.io/"}]},testnet:!1,slug:"zksync-era"},S8={name:"Web3Q Mainnet",chain:"Web3Q",rpc:["https://web3q.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.web3q.io:8545"],faucets:[],nativeCurrency:{name:"Web3Q",symbol:"W3Q",decimals:18},infoURL:"https://web3q.io/home.w3q/",shortName:"w3q",chainId:333,networkId:333,explorers:[{name:"w3q-mainnet",url:"https://explorer.mainnet.web3q.io",standard:"EIP3091"}],testnet:!1,slug:"web3q"},W8={name:"DFK Chain Test",chain:"DFK",icon:{url:"ipfs://QmQB48m15TzhUFrmu56QCRQjkrkgUaKfgCmKE8o3RzmuPJ",width:500,height:500,format:"png"},rpc:["https://dfk-chain-test.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://subnets.avax.network/defi-kingdoms/dfk-chain-testnet/rpc"],faucets:[],nativeCurrency:{name:"Jewel",symbol:"JEWEL",decimals:18},infoURL:"https://defikingdoms.com",shortName:"DFKTEST",chainId:335,networkId:335,explorers:[{name:"ethernal",url:"https://explorer-test.dfkchain.com",icon:{url:"ipfs://QmdwQDr6vmBtXmK2TmknkEuZNoaDqTasFdZdu3DRw8b2wt",width:1e3,height:1628,format:"png"},standard:"none"}],testnet:!0,slug:"dfk-chain-test"},B8={name:"Shiden",chain:"SDN",rpc:["https://shiden.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://shiden.api.onfinality.io/public","https://shiden-rpc.dwellir.com","https://shiden.public.blastapi.io","wss://shiden.api.onfinality.io/public-ws","wss://shiden.public.blastapi.io","wss://shiden-rpc.dwellir.com"],faucets:[],nativeCurrency:{name:"Shiden",symbol:"SDN",decimals:18},infoURL:"https://shiden.astar.network/",shortName:"sdn",chainId:336,networkId:336,icon:{url:"ipfs://QmQySjAoWHgk3ou1yvBi2TrTcgH6KhfGiU7GcrLzrAeRkE",width:250,height:250,format:"png"},explorers:[{name:"subscan",url:"https://shiden.subscan.io",standard:"none",icon:{url:"ipfs://Qma2GfW5nQHuA7nGqdEfwaXPL63G9oTwRTQKaGTfjNtM2W",width:400,height:400,format:"png"}}],testnet:!1,slug:"shiden"},N8={name:"Cronos Testnet",chain:"CRO",rpc:["https://cronos-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm-t3.cronos.org"],faucets:["https://cronos.org/faucet"],nativeCurrency:{name:"Cronos Test Coin",symbol:"TCRO",decimals:18},infoURL:"https://cronos.org",shortName:"tcro",chainId:338,networkId:338,explorers:[{name:"Cronos Testnet Explorer",url:"https://explorer.cronos.org/testnet",standard:"none"}],testnet:!0,slug:"cronos-testnet"},D8={name:"Theta Mainnet",chain:"Theta",rpc:["https://theta.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://eth-rpc-api.thetatoken.org/rpc"],faucets:[],nativeCurrency:{name:"Theta Fuel",symbol:"TFUEL",decimals:18},infoURL:"https://www.thetatoken.org/",shortName:"theta-mainnet",chainId:361,networkId:361,explorers:[{name:"Theta Mainnet Explorer",url:"https://explorer.thetatoken.org",standard:"EIP3091"}],testnet:!1,slug:"theta"},L8={name:"Theta Sapphire Testnet",chain:"Theta",rpc:["https://theta-sapphire-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://eth-rpc-api-sapphire.thetatoken.org/rpc"],faucets:[],nativeCurrency:{name:"Theta Fuel",symbol:"TFUEL",decimals:18},infoURL:"https://www.thetatoken.org/",shortName:"theta-sapphire",chainId:363,networkId:363,explorers:[{name:"Theta Sapphire Testnet Explorer",url:"https://guardian-testnet-sapphire-explorer.thetatoken.org",standard:"EIP3091"}],testnet:!0,slug:"theta-sapphire-testnet"},U8={name:"Theta Amber Testnet",chain:"Theta",rpc:["https://theta-amber-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://eth-rpc-api-amber.thetatoken.org/rpc"],faucets:[],nativeCurrency:{name:"Theta Fuel",symbol:"TFUEL",decimals:18},infoURL:"https://www.thetatoken.org/",shortName:"theta-amber",chainId:364,networkId:364,explorers:[{name:"Theta Amber Testnet Explorer",url:"https://guardian-testnet-amber-explorer.thetatoken.org",standard:"EIP3091"}],testnet:!0,slug:"theta-amber-testnet"},F8={name:"Theta Testnet",chain:"Theta",rpc:["https://theta-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://eth-rpc-api-testnet.thetatoken.org/rpc"],faucets:[],nativeCurrency:{name:"Theta Fuel",symbol:"TFUEL",decimals:18},infoURL:"https://www.thetatoken.org/",shortName:"theta-testnet",chainId:365,networkId:365,explorers:[{name:"Theta Testnet Explorer",url:"https://testnet-explorer.thetatoken.org",standard:"EIP3091"}],testnet:!0,slug:"theta-testnet"},H8={name:"PulseChain",shortName:"pls",chain:"PLS",chainId:369,networkId:369,infoURL:"https://pulsechain.com/",rpc:["https://pulsechain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.pulsechain.com/","wss://rpc.pulsechain.com/"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],ens:{registry:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"},status:"incubating",nativeCurrency:{name:"Pulse",symbol:"PLS",decimals:18},testnet:!1,slug:"pulsechain"},K8={name:"Consta Testnet",chain:"tCNT",rpc:["https://consta-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.theconsta.com"],faucets:[],nativeCurrency:{name:"tCNT",symbol:"tCNT",decimals:18},infoURL:"http://theconsta.com",shortName:"tCNT",chainId:371,networkId:371,icon:{url:"ipfs://QmfQ1yae6uvXgBSwnwJM4Mtp8ctH66tM6mB1Hsgu4XvsC9",width:2e3,height:2e3,format:"png"},explorers:[{name:"blockscout",url:"https://explorer-testnet.theconsta.com",standard:"EIP3091"}],testnet:!0,slug:"consta-testnet"},O8={name:"Lisinski",chain:"CRO",rpc:["https://lisinski.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-bitfalls1.lisinski.online"],faucets:["https://pipa.lisinski.online"],nativeCurrency:{name:"Lisinski Ether",symbol:"LISINS",decimals:18},infoURL:"https://lisinski.online",shortName:"lisinski",chainId:385,networkId:385,testnet:!1,slug:"lisinski"},$8={name:"HyperonChain TestNet",chain:"HPN",icon:{url:"ipfs://QmWxhyxXTEsWH98v7M3ck4ZL1qQoUaHG4HgtgxzD2KJQ5m",width:540,height:541,format:"png"},rpc:["https://hyperonchain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.hyperonchain.com"],faucets:["https://faucet.hyperonchain.com"],nativeCurrency:{name:"HyperonChain",symbol:"HPN",decimals:18},infoURL:"https://docs.hyperonchain.com",shortName:"hpn",chainId:400,networkId:400,explorers:[{name:"blockscout",url:"https://testnet.hyperonchain.com",icon:{url:"ipfs://QmWxhyxXTEsWH98v7M3ck4ZL1qQoUaHG4HgtgxzD2KJQ5m",width:540,height:541,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"hyperonchain-testnet"},Y8={name:"SX Network Mainnet",chain:"SX",icon:{url:"ipfs://QmSXLXqyr2H6Ja5XrmznXbWTEvF2gFaL8RXNXgyLmDHjAF",width:896,height:690,format:"png"},rpc:["https://sx-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.sx.technology"],faucets:[],nativeCurrency:{name:"SX Network",symbol:"SX",decimals:18},infoURL:"https://www.sx.technology",shortName:"SX",chainId:416,networkId:416,explorers:[{name:"SX Network Explorer",url:"https://explorer.sx.technology",standard:"EIP3091"}],testnet:!1,slug:"sx-network"},z8={name:"LaTestnet",chain:"LaTestnet",icon:{url:"ipfs://bafkreiecoqvit2mikpbpbtzy2zrn6e7fvqdegm72sdcathdwmgiyuzey7u",width:104,height:114,format:"png"},rpc:["https://latestnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.testnet.lachain.network"],faucets:["https://faucet.lachain.network"],nativeCurrency:{name:"Test LaCoin",symbol:"TLA",decimals:18},features:[{name:"EIP155"}],infoURL:"",shortName:"latestnet",chainId:418,networkId:418,explorers:[{name:"LaTestnet Explorer",url:"https://testexplorer.lachain.network",standard:"EIP3091"}],testnet:!0,slug:"latestnet"},q8={name:"Optimism Goerli Testnet",chain:"ETH",rpc:["https://optimism-goerli.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://opt-goerli.g.alchemy.com/v2/${ALCHEMY_API_KEY}","https://optimism-goerli.infura.io/v3/${INFURA_API_KEY}","https://goerli.optimism.io/"],faucets:["https://coinbase.com/faucets/optimism-goerli-faucet"],nativeCurrency:{name:"Goerli Ether",symbol:"ETH",decimals:18},infoURL:"https://optimism.io",shortName:"ogor",chainId:420,networkId:420,icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/optimism/512.png",height:512,width:512,format:"png"},testnet:!0,slug:"optimism-goerli"},Q8={name:"Zeeth Chain",chain:"ZeethChain",rpc:["https://zeeth-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.zeeth.io"],faucets:[],nativeCurrency:{name:"Zeeth Token",symbol:"ZTH",decimals:18},infoURL:"",shortName:"zeeth",chainId:427,networkId:427,explorers:[{name:"Zeeth Explorer",url:"https://explorer.zeeth.io",standard:"none"}],testnet:!1,slug:"zeeth-chain"},j8={name:"Frenchain Testnet",chain:"tfren",rpc:["https://frenchain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-01tn.frenchain.app"],faucets:[],nativeCurrency:{name:"tFREN",symbol:"FtREN",decimals:18},infoURL:"https://frenchain.app",shortName:"tFREN",chainId:444,networkId:444,icon:{url:"ipfs://QmQk41bYX6WpYyUAdRgomZekxP5mbvZXhfxLEEqtatyJv4",width:128,height:128,format:"png"},explorers:[{name:"blockscout",url:"https://testnet.frenscan.io",icon:{url:"ipfs://QmQk41bYX6WpYyUAdRgomZekxP5mbvZXhfxLEEqtatyJv4",width:128,height:128,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"frenchain-testnet"},V8={name:"ARZIO Chain",chain:"ARZIO",icon:{url:"ipfs://QmUwqGWGjjQweTprn5LBirAwRjYnteTiFLCVpSNHrfMmSL",width:150,height:150,format:"png"},rpc:["https://arzio-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://chain-rpc.arzio.co"],faucets:[],nativeCurrency:{name:"ARZIO",symbol:"AZO",decimals:18},infoURL:"https://chain.arzio.co",shortName:"arzio",chainId:456,networkId:456,explorers:[{name:"ARZIO Scan",url:"https://scan.arzio.co",standard:"EIP3091"}],testnet:!1,slug:"arzio-chain"},G8={name:"Rupaya",chain:"RUPX",rpc:[],faucets:[],nativeCurrency:{name:"Rupaya",symbol:"RUPX",decimals:18},infoURL:"https://www.rupx.io",shortName:"rupx",chainId:499,networkId:499,slip44:499,testnet:!1,slug:"rupaya"},Z8={name:"Camino C-Chain",chain:"CAM",rpc:["https://camino-c-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.camino.network/ext/bc/C/rpc"],faucets:[],nativeCurrency:{name:"Camino",symbol:"CAM",decimals:18},infoURL:"https://camino.network/",shortName:"Camino",chainId:500,networkId:1e3,icon:{url:"ipfs://QmSEoUonisawfCvT3osysuZzbqUEHugtgNraePKWL8PKYa",width:768,height:768,format:"png"},explorers:[{name:"blockexplorer",url:"https://suite.camino.network/explorer",standard:"none"}],testnet:!1,slug:"camino-c-chain"},X8={name:"Columbus Test Network",chain:"CAM",rpc:["https://columbus-test-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://columbus.camino.network/ext/bc/C/rpc"],faucets:[],nativeCurrency:{name:"Camino",symbol:"CAM",decimals:18},infoURL:"https://camino.network/",shortName:"Columbus",chainId:501,networkId:1001,icon:{url:"ipfs://QmSEoUonisawfCvT3osysuZzbqUEHugtgNraePKWL8PKYa",width:768,height:768,format:"png"},explorers:[{name:"blockexplorer",url:"https://suite.camino.network/explorer",standard:"none"}],testnet:!0,slug:"columbus-test-network"},J8={name:"Double-A Chain Mainnet",chain:"AAC",rpc:["https://double-a-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.acuteangle.com"],faucets:[],nativeCurrency:{name:"Acuteangle Native Token",symbol:"AAC",decimals:18},infoURL:"https://www.acuteangle.com/",shortName:"aac",chainId:512,networkId:512,slip44:1512,explorers:[{name:"aacscan",url:"https://scan.acuteangle.com",standard:"EIP3091"}],icon:{url:"ipfs://QmRUrz4dULaoaMpnqd8qXT7ehwz3aaqnYKY4ePsy7isGaF",width:512,height:512,format:"png"},testnet:!1,slug:"double-a-chain"},eR={name:"Double-A Chain Testnet",chain:"AAC",icon:{url:"ipfs://QmRUrz4dULaoaMpnqd8qXT7ehwz3aaqnYKY4ePsy7isGaF",width:512,height:512,format:"png"},rpc:["https://double-a-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.acuteangle.com"],faucets:["https://scan-testnet.acuteangle.com/faucet"],nativeCurrency:{name:"Acuteangle Native Token",symbol:"AAC",decimals:18},infoURL:"https://www.acuteangle.com/",shortName:"aact",chainId:513,networkId:513,explorers:[{name:"aacscan-testnet",url:"https://scan-testnet.acuteangle.com",standard:"EIP3091"}],testnet:!0,slug:"double-a-chain-testnet"},tR={name:"Gear Zero Network Mainnet",chain:"GearZero",rpc:["https://gear-zero-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://gzn.linksme.info"],faucets:[],nativeCurrency:{name:"Gear Zero Network Native Token",symbol:"GZN",decimals:18},infoURL:"https://token.gearzero.ca/mainnet",shortName:"gz-mainnet",chainId:516,networkId:516,slip44:516,explorers:[],testnet:!1,slug:"gear-zero-network"},nR={name:"XT Smart Chain Mainnet",chain:"XSC",icon:{url:"ipfs://QmNmAFgQKkjofaBR5mhB5ygE1Gna36YBVsGkgZQxrwW85s",width:98,height:96,format:"png"},rpc:["https://xt-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://datarpc1.xsc.pub","https://datarpc2.xsc.pub","https://datarpc3.xsc.pub"],faucets:["https://xsc.pub/faucet"],nativeCurrency:{name:"XT Smart Chain Native Token",symbol:"XT",decimals:18},infoURL:"https://xsc.pub/",shortName:"xt",chainId:520,networkId:1024,explorers:[{name:"xscscan",url:"https://xscscan.pub",standard:"EIP3091"}],testnet:!1,slug:"xt-smart-chain"},aR={name:"Firechain Mainnet",chain:"FIRE",icon:{url:"ipfs://QmYjuztyURb3Fc6ZTLgCbwQa64CcVoigF5j9cafzuSbqgf",width:512,height:512,format:"png"},rpc:["https://firechain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.rpc1.thefirechain.com"],faucets:[],nativeCurrency:{name:"Firechain",symbol:"FIRE",decimals:18},infoURL:"https://thefirechain.com",shortName:"fire",chainId:529,networkId:529,explorers:[],status:"incubating",testnet:!1,slug:"firechain"},rR={name:"F(x)Core Mainnet Network",chain:"Fxcore",rpc:["https://f-x-core-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://fx-json-web3.functionx.io:8545"],faucets:[],nativeCurrency:{name:"Function X",symbol:"FX",decimals:18},infoURL:"https://functionx.io/",shortName:"FxCore",chainId:530,networkId:530,icon:{url:"ipfs://bafkreifrf2iq3k3dqfbvp3pacwuxu33up3usmrhojt5ielyfty7xkixu3i",width:500,height:500,format:"png"},explorers:[{name:"FunctionX Explorer",url:"https://fx-evm.functionx.io",standard:"EIP3091"}],testnet:!1,slug:"f-x-core-network"},iR={name:"Candle",chain:"Candle",rpc:["https://candle.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://candle-rpc.com/","https://rpc.cndlchain.com"],faucets:[],nativeCurrency:{name:"CANDLE",symbol:"CNDL",decimals:18},infoURL:"https://candlelabs.org/",shortName:"CNDL",chainId:534,networkId:534,slip44:674,explorers:[{name:"candleexplorer",url:"https://candleexplorer.com",standard:"EIP3091"}],testnet:!1,slug:"candle"},sR={name:"Vela1 Chain Mainnet",chain:"VELA1",rpc:["https://vela1-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.velaverse.io"],faucets:[],nativeCurrency:{name:"CLASS COIN",symbol:"CLASS",decimals:18},infoURL:"https://velaverse.io",shortName:"CLASS",chainId:555,networkId:555,explorers:[{name:"Vela1 Chain Mainnet Explorer",url:"https://exp.velaverse.io",standard:"EIP3091"}],testnet:!1,slug:"vela1-chain"},oR={name:"Tao Network",chain:"TAO",rpc:["https://tao-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.testnet.tao.network","http://rpc.testnet.tao.network:8545","https://rpc.tao.network","wss://rpc.tao.network"],faucets:[],nativeCurrency:{name:"Tao",symbol:"TAO",decimals:18},infoURL:"https://tao.network",shortName:"tao",chainId:558,networkId:558,testnet:!0,slug:"tao-network"},cR={name:"Dogechain Testnet",chain:"DC",icon:{url:"ipfs://QmNS6B6L8FfgGSMTEi2SxD3bK5cdmKPNtQKcYaJeRWrkHs",width:732,height:732,format:"png"},rpc:["https://dogechain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.dogechain.dog"],faucets:["https://faucet.dogechain.dog"],nativeCurrency:{name:"Dogecoin",symbol:"DOGE",decimals:18},infoURL:"https://dogechain.dog",shortName:"dct",chainId:568,networkId:568,explorers:[{name:"dogechain testnet explorer",url:"https://explorer-testnet.dogechain.dog",standard:"EIP3091"}],testnet:!0,slug:"dogechain-testnet"},pR={name:"Astar",chain:"ASTR",rpc:["https://astar.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.astar.network:8545"],faucets:[],nativeCurrency:{name:"Astar",symbol:"ASTR",decimals:18},infoURL:"https://astar.network/",shortName:"astr",chainId:592,networkId:592,icon:{url:"ipfs://Qmdvmx3p6gXBCLUMU1qivscaTNkT6h3URdhUTZCHLwKudg",width:1e3,height:1e3,format:"png"},explorers:[{name:"subscan",url:"https://astar.subscan.io",standard:"none",icon:{url:"ipfs://Qma2GfW5nQHuA7nGqdEfwaXPL63G9oTwRTQKaGTfjNtM2W",width:400,height:400,format:"png"}}],testnet:!1,slug:"astar"},lR={name:"Acala Mandala Testnet",chain:"mACA",rpc:[],faucets:[],nativeCurrency:{name:"Acala Mandala Token",symbol:"mACA",decimals:18},infoURL:"https://acala.network",shortName:"maca",chainId:595,networkId:595,testnet:!0,slug:"acala-mandala-testnet"},dR={name:"Karura Network Testnet",chain:"KAR",rpc:[],faucets:[],nativeCurrency:{name:"Karura Token",symbol:"KAR",decimals:18},infoURL:"https://karura.network",shortName:"tkar",chainId:596,networkId:596,slip44:596,testnet:!0,slug:"karura-network-testnet"},uR={name:"Acala Network Testnet",chain:"ACA",rpc:[],faucets:[],nativeCurrency:{name:"Acala Token",symbol:"ACA",decimals:18},infoURL:"https://acala.network",shortName:"taca",chainId:597,networkId:597,slip44:597,testnet:!0,slug:"acala-network-testnet"},mR={name:"Metis Goerli Testnet",chain:"ETH",rpc:["https://metis-goerli-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://goerli.gateway.metisdevops.link"],faucets:["https://goerli.faucet.metisdevops.link"],nativeCurrency:{name:"Goerli Metis",symbol:"METIS",decimals:18},infoURL:"https://www.metis.io",shortName:"metis-goerli",chainId:599,networkId:599,explorers:[{name:"blockscout",url:"https://goerli.explorer.metisdevops.link",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-4",bridges:[{url:"https://testnet-bridge.metis.io"}]},icon:{url:"ipfs://QmbWKNucbMtrMPPkHG5ZmVmvNUo8CzqHHcrpk1C2BVQsEG/2022_H-Brand_Stacked_WhiteGreen.svg",format:"svg",height:512,width:512},testnet:!0,slug:"metis-goerli-testnet"},hR={name:"Meshnyan testnet",chain:"MeshTestChain",rpc:[],faucets:[],nativeCurrency:{name:"Meshnyan Testnet Native Token",symbol:"MESHT",decimals:18},infoURL:"",shortName:"mesh-chain-testnet",chainId:600,networkId:600,testnet:!0,slug:"meshnyan-testnet"},yR={name:"Graphlinq Blockchain Mainnet",chain:"GLQ Blockchain",rpc:["https://graphlinq-blockchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://glq-dataseed.graphlinq.io"],faucets:[],nativeCurrency:{name:"GLQ",symbol:"GLQ",decimals:18},infoURL:"https://graphlinq.io",shortName:"glq",chainId:614,networkId:614,explorers:[{name:"GLQ Explorer",url:"https://explorer.graphlinq.io",standard:"none"}],testnet:!1,slug:"graphlinq-blockchain"},fR={name:"SX Network Testnet",chain:"SX",icon:{url:"ipfs://QmSXLXqyr2H6Ja5XrmznXbWTEvF2gFaL8RXNXgyLmDHjAF",width:896,height:690,format:"png"},rpc:["https://sx-network-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.toronto.sx.technology"],faucets:["https://faucet.toronto.sx.technology"],nativeCurrency:{name:"SX Network",symbol:"SX",decimals:18},infoURL:"https://www.sx.technology",shortName:"SX-Testnet",chainId:647,networkId:647,explorers:[{name:"SX Network Toronto Explorer",url:"https://explorer.toronto.sx.technology",standard:"EIP3091"}],testnet:!0,slug:"sx-network-testnet"},gR={name:"Endurance Smart Chain Mainnet",chain:"ACE",rpc:["https://endurance-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-endurance.fusionist.io/"],faucets:[],nativeCurrency:{name:"Endurance Chain Native Token",symbol:"ACE",decimals:18},infoURL:"https://ace.fusionist.io/",shortName:"ace",chainId:648,networkId:648,explorers:[{name:"Endurance Scan",url:"https://explorer.endurance.fusionist.io",standard:"EIP3091"}],testnet:!1,slug:"endurance-smart-chain"},bR={name:"Pixie Chain Testnet",chain:"PixieChain",rpc:["https://pixie-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://http-testnet.chain.pixie.xyz","wss://ws-testnet.chain.pixie.xyz"],faucets:["https://chain.pixie.xyz/faucet"],nativeCurrency:{name:"Pixie Chain Testnet Native Token",symbol:"PCTT",decimals:18},infoURL:"https://scan-testnet.chain.pixie.xyz",shortName:"pixie-chain-testnet",chainId:666,networkId:666,testnet:!0,slug:"pixie-chain-testnet"},TR={name:"Karura Network",chain:"KAR",rpc:[],faucets:[],nativeCurrency:{name:"Karura Token",symbol:"KAR",decimals:18},infoURL:"https://karura.network",shortName:"kar",chainId:686,networkId:686,slip44:686,testnet:!1,slug:"karura-network"},wR={name:"Star Social Testnet",chain:"SNS",rpc:["https://star-social-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://avastar.cc/ext/bc/C/rpc"],faucets:[],nativeCurrency:{name:"Social",symbol:"SNS",decimals:18},infoURL:"https://info.avastar.cc",shortName:"SNS",chainId:700,networkId:700,explorers:[{name:"starscan",url:"https://avastar.info",standard:"EIP3091"}],testnet:!0,slug:"star-social-testnet"},IR={name:"BlockChain Station Mainnet",chain:"BCS",rpc:["https://blockchain-station.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-mainnet.bcsdev.io","wss://rpc-ws-mainnet.bcsdev.io"],faucets:[],nativeCurrency:{name:"BCS Token",symbol:"BCS",decimals:18},infoURL:"https://blockchainstation.io",shortName:"bcs",chainId:707,networkId:707,explorers:[{name:"BlockChain Station Explorer",url:"https://explorer.bcsdev.io",standard:"EIP3091"}],testnet:!1,slug:"blockchain-station"},vR={name:"BlockChain Station Testnet",chain:"BCS",rpc:["https://blockchain-station-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.bcsdev.io","wss://rpc-ws-testnet.bcsdev.io"],faucets:["https://faucet.bcsdev.io"],nativeCurrency:{name:"BCS Testnet Token",symbol:"tBCS",decimals:18},infoURL:"https://blockchainstation.io",shortName:"tbcs",chainId:708,networkId:708,explorers:[{name:"BlockChain Station Explorer",url:"https://testnet.bcsdev.io",standard:"EIP3091"}],testnet:!0,slug:"blockchain-station-testnet"},CR={name:"Lycan Chain",chain:"LYC",rpc:["https://lycan-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.lycanchain.com/"],faucets:[],nativeCurrency:{name:"Lycan",symbol:"LYC",decimals:18},infoURL:"https://lycanchain.com",shortName:"LYC",chainId:721,networkId:721,icon:{url:"ipfs://Qmc8hsCbUUjnJDnXrDhFh4V1xk1gJwZbUyNJ39p72javji",width:400,height:400,format:"png"},explorers:[{name:"blockscout",url:"https://explorer.lycanchain.com",standard:"EIP3091"}],testnet:!1,slug:"lycan-chain"},kR={name:"Vention Smart Chain Testnet",chain:"VSCT",icon:{url:"ipfs://QmcNepHmbmHW1BZYM3MFqJW4awwhmDqhUPRXXmRnXwg1U4",width:250,height:250,format:"png"},rpc:["https://vention-smart-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node-testnet.vention.network"],faucets:["https://faucet.vention.network"],nativeCurrency:{name:"VNT",symbol:"VNT",decimals:18},infoURL:"https://testnet.ventionscan.io",shortName:"vsct",chainId:741,networkId:741,explorers:[{name:"ventionscan",url:"https://testnet.ventionscan.io",standard:"EIP3091"}],testnet:!0,slug:"vention-smart-chain-testnet"},ER={name:"QL1",chain:"QOM",status:"incubating",rpc:["https://ql1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.qom.one"],faucets:[],nativeCurrency:{name:"Shiba Predator",symbol:"QOM",decimals:18},infoURL:"https://qom.one",shortName:"qom",chainId:766,networkId:766,icon:{url:"ipfs://QmRc1kJ7AgcDL1BSoMYudatWHTrz27K6WNTwGifQb5V17D",width:518,height:518,format:"png"},explorers:[{name:"QL1 Mainnet Explorer",url:"https://mainnet.qom.one",icon:{url:"ipfs://QmRc1kJ7AgcDL1BSoMYudatWHTrz27K6WNTwGifQb5V17D",width:518,height:518,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"ql1"},xR={name:"OpenChain Testnet",chain:"OpenChain Testnet",rpc:[],faucets:["https://faucet.openchain.info/"],nativeCurrency:{name:"Openchain Testnet",symbol:"TOPC",decimals:18},infoURL:"https://testnet.openchain.info/",shortName:"opc",chainId:776,networkId:776,explorers:[{name:"OPEN CHAIN TESTNET",url:"https://testnet.openchain.info",standard:"none"}],testnet:!0,slug:"openchain-testnet"},RR={name:"cheapETH",chain:"cheapETH",rpc:["https://cheapeth.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node.cheapeth.org/rpc"],faucets:[],nativeCurrency:{name:"cTH",symbol:"cTH",decimals:18},infoURL:"https://cheapeth.org/",shortName:"cth",chainId:777,networkId:777,testnet:!1,slug:"cheapeth"},AR={name:"Acala Network",chain:"ACA",rpc:[],faucets:[],nativeCurrency:{name:"Acala Token",symbol:"ACA",decimals:18},infoURL:"https://acala.network",shortName:"aca",chainId:787,networkId:787,slip44:787,testnet:!1,slug:"acala-network"},PR={name:"Aerochain Testnet",chain:"Aerochain",rpc:["https://aerochain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.aerochain.id/"],faucets:["https://faucet.aerochain.id/"],nativeCurrency:{name:"Aerochain Testnet",symbol:"TAero",decimals:18},infoURL:"https://aerochaincoin.org/",shortName:"taero",chainId:788,networkId:788,explorers:[{name:"aeroscan",url:"https://testnet.aeroscan.id",standard:"EIP3091"}],testnet:!0,slug:"aerochain-testnet"},MR={name:"Lucid Blockchain",chain:"Lucid",icon:{url:"ipfs://bafybeigxiyyxll4vst5cjjh732mr6zhsnligxubaldyiul2xdvvi6ibktu",width:800,height:800,format:"png"},rpc:["https://lucid-blockchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.lucidcoin.io"],faucets:["https://faucet.lucidcoin.io"],nativeCurrency:{name:"LUCID",symbol:"LUCID",decimals:18},infoURL:"https://lucidcoin.io",shortName:"LUCID",chainId:800,networkId:800,explorers:[{name:"Lucid Explorer",url:"https://explorer.lucidcoin.io",standard:"none"}],testnet:!1,slug:"lucid-blockchain"},_R={name:"Haic",chain:"Haic",rpc:["https://haic.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://orig.haichain.io/"],faucets:[],nativeCurrency:{name:"Haicoin",symbol:"HAIC",decimals:18},infoURL:"https://www.haichain.io/",shortName:"haic",chainId:803,networkId:803,testnet:!1,slug:"haic"},SR={name:"Portal Fantasy Chain Test",chain:"PF",icon:{url:"ipfs://QmeMa6aw3ebUKJdGgbzDgcVtggzp7cQdfSrmzMYmnt5ywc",width:200,height:200,format:"png"},rpc:["https://portal-fantasy-chain-test.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://subnets.avax.network/portal-fantasy/testnet/rpc"],faucets:[],nativeCurrency:{name:"Portal Fantasy Token",symbol:"PFT",decimals:18},infoURL:"https://portalfantasy.io",shortName:"PFTEST",chainId:808,networkId:808,explorers:[],testnet:!0,slug:"portal-fantasy-chain-test"},WR={name:"Qitmeer",chain:"MEER",rpc:["https://qitmeer.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm-dataseed1.meerscan.io","https://evm-dataseed2.meerscan.io","https://evm-dataseed3.meerscan.io","https://evm-dataseed.meerscan.com","https://evm-dataseed1.meerscan.com","https://evm-dataseed2.meerscan.com"],faucets:[],nativeCurrency:{name:"Qitmeer",symbol:"MEER",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"meer",chainId:813,networkId:813,slip44:813,icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},explorers:[{name:"meerscan",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},url:"https://evm.meerscan.com",standard:"none"}],testnet:!1,slug:"qitmeer"},BR={name:"BeOne Chain Mainnet",chain:"BOC",icon:{url:"ipfs://QmbVLQnaMDu86bPyKgCvTGhFBeYwjr15hQnrCcsp1EkAGL",width:500,height:500,format:"png"},rpc:["https://beone-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://dataseed1.beonechain.com","https://dataseed2.beonechain.com","https://dataseed-us1.beonechain.com","https://dataseed-us2.beonechain.com","https://dataseed-uk1.beonechain.com","https://dataseed-uk2.beonechain.com"],faucets:[],nativeCurrency:{name:"BeOne Chain Mainnet",symbol:"BOC",decimals:18},infoURL:"https://beonechain.com",shortName:"BOC",chainId:818,networkId:818,slip44:8181,explorers:[{name:"BeOne Chain Mainnet",url:"https://beonescan.com",standard:"EIP3091"}],testnet:!1,slug:"beone-chain"},NR={name:"Callisto Mainnet",chain:"CLO",rpc:["https://callisto.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.callisto.network/"],faucets:[],nativeCurrency:{name:"Callisto",symbol:"CLO",decimals:18},infoURL:"https://callisto.network",shortName:"clo",chainId:820,networkId:1,slip44:820,testnet:!1,slug:"callisto"},DR={name:"Taraxa Mainnet",chain:"Tara",icon:{url:"ipfs://QmQhdktNyBeXmCaVuQpi1B4yXheSUKrJA17L4wpECKzG5D",width:310,height:310,format:"png"},rpc:["https://taraxa.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.mainnet.taraxa.io/"],faucets:[],nativeCurrency:{name:"Tara",symbol:"TARA",decimals:18},infoURL:"https://taraxa.io",shortName:"tara",chainId:841,networkId:841,explorers:[{name:"Taraxa Explorer",url:"https://explorer.mainnet.taraxa.io",standard:"none"}],testnet:!1,slug:"taraxa"},LR={name:"Taraxa Testnet",chain:"Tara",icon:{url:"ipfs://QmQhdktNyBeXmCaVuQpi1B4yXheSUKrJA17L4wpECKzG5D",width:310,height:310,format:"png"},rpc:["https://taraxa-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.testnet.taraxa.io/"],faucets:[],nativeCurrency:{name:"Tara",symbol:"TARA",decimals:18},infoURL:"https://taraxa.io",shortName:"taratest",chainId:842,networkId:842,explorers:[{name:"Taraxa Explorer",url:"https://explorer.testnet.taraxa.io",standard:"none"}],testnet:!0,slug:"taraxa-testnet"},UR={name:"Zeeth Chain Dev",chain:"ZeethChainDev",rpc:["https://zeeth-chain-dev.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.dev.zeeth.io"],faucets:[],nativeCurrency:{name:"Zeeth Token",symbol:"ZTH",decimals:18},infoURL:"",shortName:"zeethdev",chainId:859,networkId:859,explorers:[{name:"Zeeth Explorer Dev",url:"https://explorer.dev.zeeth.io",standard:"none"}],testnet:!1,slug:"zeeth-chain-dev"},FR={name:"Fantasia Chain Mainnet",chain:"FSC",rpc:["https://fantasia-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-data1.fantasiachain.com/","https://mainnet-data2.fantasiachain.com/","https://mainnet-data3.fantasiachain.com/"],faucets:[],nativeCurrency:{name:"FST",symbol:"FST",decimals:18},infoURL:"https://fantasia.technology/",shortName:"FSCMainnet",chainId:868,networkId:868,explorers:[{name:"FSCScan",url:"https://explorer.fantasiachain.com",standard:"EIP3091"}],testnet:!1,slug:"fantasia-chain"},HR={name:"Bandai Namco Research Verse Mainnet",chain:"Bandai Namco Research Verse",icon:{url:"ipfs://bafkreifhetalm3vpvjrg5u5d2momkcgvkz6rhltur5co3rslltbxzpr6yq",width:2048,height:2048,format:"png"},rpc:["https://bandai-namco-research-verse.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.main.oasvrs.bnken.net"],faucets:[],nativeCurrency:{name:"OAS",symbol:"OAS",decimals:18},infoURL:"https://www.bandainamco-mirai.com/en/",shortName:"BNKEN",chainId:876,networkId:876,explorers:[{name:"Bandai Namco Research Verse Explorer",url:"https://explorer.main.oasvrs.bnken.net",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-248"},testnet:!1,slug:"bandai-namco-research-verse"},KR={name:"Dexit Network",chain:"DXT",rpc:["https://dexit-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://dxt.dexit.network"],faucets:["https://faucet.dexit.network"],nativeCurrency:{name:"Dexit network",symbol:"DXT",decimals:18},infoURL:"https://dexit.network",shortName:"DXT",chainId:877,networkId:877,explorers:[{name:"dxtscan",url:"https://dxtscan.com",standard:"EIP3091"}],testnet:!1,slug:"dexit-network"},OR={name:"Ambros Chain Mainnet",chain:"ambroschain",rpc:["https://ambros-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.ambros.network"],faucets:[],nativeCurrency:{name:"AMBROS",symbol:"AMBROS",decimals:18},infoURL:"https://ambros.network",shortName:"ambros",chainId:880,networkId:880,explorers:[{name:"Ambros Chain Explorer",url:"https://ambrosscan.com",standard:"none"}],testnet:!1,slug:"ambros-chain"},$R={name:"Wanchain",chain:"WAN",rpc:["https://wanchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://gwan-ssl.wandevs.org:56891/"],faucets:[],nativeCurrency:{name:"Wancoin",symbol:"WAN",decimals:18},infoURL:"https://www.wanscan.org",shortName:"wan",chainId:888,networkId:888,slip44:5718350,testnet:!1,slug:"wanchain"},YR={name:"Garizon Testnet Stage0",chain:"GAR",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},rpc:["https://garizon-testnet-stage0.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://s0-testnet.garizon.net/rpc"],faucets:["https://faucet-testnet.garizon.com"],nativeCurrency:{name:"Garizon",symbol:"GAR",decimals:18},infoURL:"https://garizon.com",shortName:"gar-test-s0",chainId:900,networkId:900,explorers:[{name:"explorer",url:"https://explorer-testnet.garizon.com",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"garizon-testnet-stage0"},zR={name:"Garizon Testnet Stage1",chain:"GAR",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},rpc:["https://garizon-testnet-stage1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://s1-testnet.garizon.net/rpc"],faucets:["https://faucet-testnet.garizon.com"],nativeCurrency:{name:"Garizon",symbol:"GAR",decimals:18},infoURL:"https://garizon.com",shortName:"gar-test-s1",chainId:901,networkId:901,explorers:[{name:"explorer",url:"https://explorer-testnet.garizon.com",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},standard:"EIP3091"}],parent:{chain:"eip155-900",type:"shard"},testnet:!0,slug:"garizon-testnet-stage1"},qR={name:"Garizon Testnet Stage2",chain:"GAR",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},rpc:["https://garizon-testnet-stage2.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://s2-testnet.garizon.net/rpc"],faucets:["https://faucet-testnet.garizon.com"],nativeCurrency:{name:"Garizon",symbol:"GAR",decimals:18},infoURL:"https://garizon.com",shortName:"gar-test-s2",chainId:902,networkId:902,explorers:[{name:"explorer",url:"https://explorer-testnet.garizon.com",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},standard:"EIP3091"}],parent:{chain:"eip155-900",type:"shard"},testnet:!0,slug:"garizon-testnet-stage2"},QR={name:"Garizon Testnet Stage3",chain:"GAR",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},rpc:["https://garizon-testnet-stage3.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://s3-testnet.garizon.net/rpc"],faucets:["https://faucet-testnet.garizon.com"],nativeCurrency:{name:"Garizon",symbol:"GAR",decimals:18},infoURL:"https://garizon.com",shortName:"gar-test-s3",chainId:903,networkId:903,explorers:[{name:"explorer",url:"https://explorer-testnet.garizon.com",icon:{url:"ipfs://QmW3WRyuLZ95K8hvV2QN6rP5yWY98sSzWyVUxD2eUjXGrc",width:1024,height:613,format:"png"},standard:"EIP3091"}],parent:{chain:"eip155-900",type:"shard"},testnet:!0,slug:"garizon-testnet-stage3"},jR={name:"Portal Fantasy Chain",chain:"PF",icon:{url:"ipfs://QmeMa6aw3ebUKJdGgbzDgcVtggzp7cQdfSrmzMYmnt5ywc",width:200,height:200,format:"png"},rpc:[],faucets:[],nativeCurrency:{name:"Portal Fantasy Token",symbol:"PFT",decimals:18},infoURL:"https://portalfantasy.io",shortName:"PF",chainId:909,networkId:909,explorers:[],status:"incubating",testnet:!1,slug:"portal-fantasy-chain"},VR={name:"DecentraBone Layer1 Testnet",chain:"DBONE",rpc:["https://decentrabone-layer1-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://layer1test.decentrabone.com"],faucets:[],nativeCurrency:{name:"DecentraBone",symbol:"DBONE",decimals:18},infoURL:"https://decentrabone.com",shortName:"DBONE",chainId:910,networkId:910,testnet:!0,slug:"decentrabone-layer1-testnet"},GR={name:"Rinia Testnet",chain:"FIRE",icon:{url:"ipfs://QmRnnw2gtbU9TWJMLJ6tks7SN6HQV5rRugeoyN6csTYHt1",width:512,height:512,format:"png"},rpc:["https://rinia-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rinia.rpc1.thefirechain.com"],faucets:["https://faucet.thefirechain.com"],nativeCurrency:{name:"Firechain",symbol:"FIRE",decimals:18},infoURL:"https://thefirechain.com",shortName:"tfire",chainId:917,networkId:917,explorers:[],status:"incubating",testnet:!0,slug:"rinia-testnet"},ZR={name:"PulseChain Testnet v3",shortName:"t3pls",chain:"t3PLS",chainId:942,networkId:942,infoURL:"https://pulsechain.com/",rpc:["https://pulsechain-testnet-v3.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.v3.testnet.pulsechain.com/","wss://rpc.v3.testnet.pulsechain.com/"],faucets:["https://faucet.v3.testnet.pulsechain.com/"],nativeCurrency:{name:"Test Pulse",symbol:"tPLS",decimals:18},testnet:!0,slug:"pulsechain-testnet-v3"},XR={name:"PulseChain Testnet v4",shortName:"t4pls",chain:"t4PLS",chainId:943,networkId:943,icon:{url:"ipfs://Qmckj9B9F3jWDk9bv9HwoPmfjrx2Ju8J2BQSNoPFdYGduj",width:433,height:402,format:"png"},infoURL:"https://pulsechain.com",rpc:["https://pulsechain-testnet-v4.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.v4.testnet.pulsechain.com/","wss://rpc.v4.testnet.pulsechain.com/"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:["https://faucet.v4.testnet.pulsechain.com/"],ens:{registry:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"},status:"incubating",explorers:[],nativeCurrency:{name:"Test Pulse",symbol:"tPLS",decimals:18},testnet:!0,slug:"pulsechain-testnet-v4"},JR={name:"muNode Testnet",chain:"munode",rpc:[],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://munode.dev/",shortName:"munode",chainId:956,networkId:956,testnet:!0,slug:"munode-testnet"},eA={name:"Oort Mainnet",chain:"Oort Mainnet",rpc:["https://oort.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.oortech.com"],faucets:[],nativeCurrency:{name:"Oort",symbol:"CCN",decimals:18},infoURL:"https://oortech.com",shortName:"ccn",chainId:970,networkId:970,icon:{url:"ipfs://QmZ1jbxFZcuotj3eZ6iKFrg9ZXnaV8AK6sGRa7ELrceWyD",width:1043,height:1079,format:"png"},testnet:!1,slug:"oort"},tA={name:"Oort Huygens",chain:"Huygens",rpc:[],faucets:[],nativeCurrency:{name:"Oort",symbol:"CCN",decimals:18},infoURL:"https://oortech.com",shortName:"Huygens",chainId:971,networkId:971,icon:{url:"ipfs://QmZ1jbxFZcuotj3eZ6iKFrg9ZXnaV8AK6sGRa7ELrceWyD",width:1043,height:1079,format:"png"},testnet:!1,slug:"oort-huygens"},nA={name:"Oort Ascraeus",title:"Oort Ascraeus",chain:"Ascraeus",rpc:["https://oort-ascraeus.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://ascraeus-rpc.oortech.com"],faucets:[],nativeCurrency:{name:"Oort",symbol:"CCNA",decimals:18},infoURL:"https://oortech.com",shortName:"Ascraeus",chainId:972,networkId:972,icon:{url:"ipfs://QmZ1jbxFZcuotj3eZ6iKFrg9ZXnaV8AK6sGRa7ELrceWyD",width:1043,height:1079,format:"png"},testnet:!1,slug:"oort-ascraeus"},aA={name:"Nepal Blockchain Network",chain:"YETI",rpc:["https://nepal-blockchain-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.nepalblockchain.dev","https://api.nepalblockchain.network"],faucets:["https://faucet.nepalblockchain.network"],nativeCurrency:{name:"Nepal Blockchain Network Ether",symbol:"YETI",decimals:18},infoURL:"https://nepalblockchain.network",shortName:"yeti",chainId:977,networkId:977,testnet:!1,slug:"nepal-blockchain-network"},rA={name:"TOP Mainnet EVM",chain:"TOP",icon:{url:"ipfs://QmYikaM849eZrL8pGNeVhEHVTKWpxdGMvCY5oFBfZ2ndhd",width:800,height:800,format:"png"},rpc:["https://top-evm.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://ethapi.topnetwork.org"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://www.topnetwork.org/",shortName:"top_evm",chainId:980,networkId:0,explorers:[{name:"topscan.dev",url:"https://www.topscan.io",standard:"none"}],testnet:!1,slug:"top-evm"},iA={name:"Memo Smart Chain Mainnet",chain:"MEMO",rpc:["https://memo-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://chain.metamemo.one:8501","wss://chain.metamemo.one:16801"],faucets:["https://faucet.metamemo.one/"],nativeCurrency:{name:"Memo",symbol:"CMEMO",decimals:18},infoURL:"www.memolabs.org",shortName:"memochain",chainId:985,networkId:985,icon:{url:"ipfs://bafkreig52paynhccs4o5ew6f7mk3xoqu2bqtitmfvlgnwarh2pm33gbdrq",width:128,height:128,format:"png"},explorers:[{name:"Memo Mainnet Explorer",url:"https://scan.metamemo.one:8080",icon:{url:"ipfs://bafkreig52paynhccs4o5ew6f7mk3xoqu2bqtitmfvlgnwarh2pm33gbdrq",width:128,height:128,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"memo-smart-chain"},sA={name:"TOP Mainnet",chain:"TOP",icon:{url:"ipfs://QmYikaM849eZrL8pGNeVhEHVTKWpxdGMvCY5oFBfZ2ndhd",width:800,height:800,format:"png"},rpc:[],faucets:[],nativeCurrency:{name:"TOP",symbol:"TOP",decimals:6},infoURL:"https://www.topnetwork.org/",shortName:"top",chainId:989,networkId:0,explorers:[{name:"topscan.dev",url:"https://www.topscan.io",standard:"none"}],testnet:!1,slug:"top"},oA={name:"5ireChain Thunder",chain:"5ireChain",rpc:["https://5irechain-thunder.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.5ire.network"],faucets:["https://explorer.5ire.network/faucet"],nativeCurrency:{name:"5ire Token",symbol:"5ire",decimals:18},infoURL:"https://5ire.org",shortName:"5ire",chainId:997,networkId:997,icon:{url:"ipfs://QmaZDNDFLWESH4i3XqwEWfWBb1HPnQSNbDAr74nr2x8QAk",width:800,height:800,format:"svg"},explorers:[{name:"5ireChain Explorer",url:"https://explorer.5ire.network",standard:"none",icon:{url:"ipfs://QmaZDNDFLWESH4i3XqwEWfWBb1HPnQSNbDAr74nr2x8QAk",width:800,height:800,format:"svg"}}],testnet:!0,slug:"5irechain-thunder"},cA={name:"Lucky Network",chain:"LN",rpc:["https://lucky-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.luckynetwork.org","wss://ws.lnscan.org","https://rpc.lnscan.org"],faucets:[],nativeCurrency:{name:"Lucky",symbol:"L99",decimals:18},infoURL:"https://luckynetwork.org",shortName:"ln",chainId:998,networkId:998,icon:{url:"ipfs://bafkreidmvcd5i7touug55hj45mf2pgabxamy5fziva7mtx5n664s3yap6m",width:205,height:28,format:"png"},explorers:[{name:"blockscout",url:"https://explorer.luckynetwork.org",standard:"none"},{name:"expedition",url:"https://lnscan.org",standard:"none"}],testnet:!1,slug:"lucky-network"},pA={name:"Wanchain Testnet",chain:"WAN",rpc:["https://wanchain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://gwan-ssl.wandevs.org:46891/"],faucets:[],nativeCurrency:{name:"Wancoin",symbol:"WAN",decimals:18},infoURL:"https://testnet.wanscan.org",shortName:"twan",chainId:999,networkId:999,testnet:!0,slug:"wanchain-testnet"},lA={name:"GTON Mainnet",chain:"GTON",rpc:["https://gton.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.gton.network/"],faucets:[],nativeCurrency:{name:"GCD",symbol:"GCD",decimals:18},infoURL:"https://gton.capital",shortName:"gton",chainId:1e3,networkId:1e3,explorers:[{name:"GTON Network Explorer",url:"https://explorer.gton.network",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-1"},testnet:!1,slug:"gton"},dA={name:"Klaytn Testnet Baobab",chain:"KLAY",rpc:["https://klaytn-testnet-baobab.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.baobab.klaytn.net:8651"],faucets:["https://baobab.wallet.klaytn.com/access?next=faucet"],nativeCurrency:{name:"KLAY",symbol:"KLAY",decimals:18},infoURL:"https://www.klaytn.com/",shortName:"Baobab",chainId:1001,networkId:1001,testnet:!0,slug:"klaytn-testnet-baobab"},uA={name:"T-EKTA",title:"EKTA Testnet T-EKTA",chain:"T-EKTA",rpc:["https://t-ekta.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://test.ekta.io:8545"],faucets:[],nativeCurrency:{name:"T-EKTA",symbol:"T-EKTA",decimals:18},infoURL:"https://www.ekta.io",shortName:"t-ekta",chainId:1004,networkId:1004,icon:{url:"ipfs://QmfMd564KUPK8eKZDwGCT71ZC2jMnUZqP6LCtLpup3rHH1",width:2100,height:2100,format:"png"},explorers:[{name:"test-ektascan",url:"https://test.ektascan.io",icon:{url:"ipfs://QmfMd564KUPK8eKZDwGCT71ZC2jMnUZqP6LCtLpup3rHH1",width:2100,height:2100,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"t-ekta"},mA={name:"Newton Testnet",chain:"NEW",rpc:["https://newton-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc1.newchain.newtonproject.org"],faucets:[],nativeCurrency:{name:"Newton",symbol:"NEW",decimals:18},infoURL:"https://www.newtonproject.org/",shortName:"tnew",chainId:1007,networkId:1007,testnet:!0,slug:"newton-testnet"},hA={name:"Eurus Mainnet",chain:"EUN",rpc:["https://eurus.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.eurus.network/"],faucets:[],nativeCurrency:{name:"Eurus",symbol:"EUN",decimals:18},infoURL:"https://eurus.network",shortName:"eun",chainId:1008,networkId:1008,icon:{url:"ipfs://QmaGd5L9jGPbfyGXBFhu9gjinWJ66YtNrXq8x6Q98Eep9e",width:471,height:471,format:"svg"},explorers:[{name:"eurusexplorer",url:"https://explorer.eurus.network",icon:{url:"ipfs://QmaGd5L9jGPbfyGXBFhu9gjinWJ66YtNrXq8x6Q98Eep9e",width:471,height:471,format:"svg"},standard:"none"}],testnet:!1,slug:"eurus"},yA={name:"Evrice Network",chain:"EVC",rpc:["https://evrice-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://meta.evrice.com"],faucets:[],nativeCurrency:{name:"Evrice",symbol:"EVC",decimals:18},infoURL:"https://evrice.com",shortName:"EVC",chainId:1010,networkId:1010,slip44:1020,testnet:!1,slug:"evrice-network"},fA={name:"Newton",chain:"NEW",rpc:["https://newton.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://global.rpc.mainnet.newtonproject.org"],faucets:[],nativeCurrency:{name:"Newton",symbol:"NEW",decimals:18},infoURL:"https://www.newtonproject.org/",shortName:"new",chainId:1012,networkId:1012,testnet:!1,slug:"newton"},gA={name:"Sakura",chain:"Sakura",rpc:[],faucets:[],nativeCurrency:{name:"Sakura",symbol:"SKU",decimals:18},infoURL:"https://clover.finance/sakura",shortName:"sku",chainId:1022,networkId:1022,testnet:!1,slug:"sakura"},bA={name:"Clover Testnet",chain:"Clover",rpc:[],faucets:[],nativeCurrency:{name:"Clover",symbol:"CLV",decimals:18},infoURL:"https://clover.finance",shortName:"tclv",chainId:1023,networkId:1023,testnet:!0,slug:"clover-testnet"},TA={name:"CLV Parachain",chain:"CLV",rpc:["https://clv-parachain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api-para.clover.finance"],faucets:[],nativeCurrency:{name:"CLV",symbol:"CLV",decimals:18},infoURL:"https://clv.org",shortName:"clv",chainId:1024,networkId:1024,testnet:!1,slug:"clv-parachain"},wA={name:"BitTorrent Chain Testnet",chain:"BTTC",rpc:["https://bittorrent-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testrpc.bittorrentchain.io/"],faucets:[],nativeCurrency:{name:"BitTorrent",symbol:"BTT",decimals:18},infoURL:"https://bittorrentchain.io/",shortName:"tbtt",chainId:1028,networkId:1028,explorers:[{name:"testbttcscan",url:"https://testscan.bittorrentchain.io",standard:"none"}],testnet:!0,slug:"bittorrent-chain-testnet"},IA={name:"Conflux eSpace",chain:"Conflux",rpc:["https://conflux-espace.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm.confluxrpc.com"],faucets:[],nativeCurrency:{name:"CFX",symbol:"CFX",decimals:18},infoURL:"https://confluxnetwork.org",shortName:"cfx",chainId:1030,networkId:1030,icon:{url:"ipfs://bafkreifj7n24u2dslfijfihwqvpdeigt5aj3k3sxv6s35lv75sxsfr3ojy",width:460,height:576,format:"png"},explorers:[{name:"Conflux Scan",url:"https://evm.confluxscan.net",standard:"none"}],testnet:!1,slug:"conflux-espace"},vA={name:"Proxy Network Testnet",chain:"Proxy Network",rpc:["https://proxy-network-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://128.199.94.183:8041"],faucets:[],nativeCurrency:{name:"PRX",symbol:"PRX",decimals:18},infoURL:"https://theproxy.network",shortName:"prx",chainId:1031,networkId:1031,explorers:[{name:"proxy network testnet",url:"http://testnet-explorer.theproxy.network",standard:"EIP3091"}],testnet:!0,slug:"proxy-network-testnet"},CA={name:"Bronos Testnet",chain:"Bronos",rpc:["https://bronos-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm-testnet.bronos.org"],faucets:["https://faucet.bronos.org"],nativeCurrency:{name:"tBRO",symbol:"tBRO",decimals:18},infoURL:"https://bronos.org",shortName:"bronos-testnet",chainId:1038,networkId:1038,icon:{url:"ipfs://bafybeifkgtmhnq4sxu6jn22i7ass7aih6ubodr77k6ygtu4tjbvpmkw2ga",width:500,height:500,format:"png"},explorers:[{name:"Bronos Testnet Explorer",url:"https://tbroscan.bronos.org",standard:"none",icon:{url:"ipfs://bafybeifkgtmhnq4sxu6jn22i7ass7aih6ubodr77k6ygtu4tjbvpmkw2ga",width:500,height:500,format:"png"}}],testnet:!0,slug:"bronos-testnet"},kA={name:"Bronos Mainnet",chain:"Bronos",rpc:[],faucets:[],nativeCurrency:{name:"BRO",symbol:"BRO",decimals:18},infoURL:"https://bronos.org",shortName:"bronos-mainnet",chainId:1039,networkId:1039,icon:{url:"ipfs://bafybeifkgtmhnq4sxu6jn22i7ass7aih6ubodr77k6ygtu4tjbvpmkw2ga",width:500,height:500,format:"png"},explorers:[{name:"Bronos Explorer",url:"https://broscan.bronos.org",standard:"none",icon:{url:"ipfs://bafybeifkgtmhnq4sxu6jn22i7ass7aih6ubodr77k6ygtu4tjbvpmkw2ga",width:500,height:500,format:"png"}}],testnet:!1,slug:"bronos"},EA={name:"ShimmerEVM Testnet",title:"ShimmerEVM Testnet",chain:"ShimmerEVM",icon:{url:"ipfs://bafkreibky2sy6qhi6arktayvologkrgu5kudpgdxfkx4uosbvmstz7v4di",width:720,height:720,format:"png"},rpc:["https://shimmerevm-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://json-rpc.evm.testnet.shimmer.network"],faucets:["https://evm-toolkit.evm.testnet.shimmer.network","https://evm-faucet.testnet.shimmer.network"],nativeCurrency:{name:"SMR",symbol:"SMR",decimals:18},infoURL:"https://shimmer.network",shortName:"shimmerevm-testnet",chainId:1071,networkId:1071,explorers:[{name:"explorer",url:"https://explorer.evm.testnet.shimmer.network",standard:"EIP3091"}],testnet:!0,slug:"shimmerevm-testnet"},xA={name:"Metis Andromeda Mainnet",chain:"ETH",rpc:["https://metis-andromeda.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://andromeda.metis.io/?owner=1088"],faucets:[],nativeCurrency:{name:"Metis",symbol:"METIS",decimals:18},infoURL:"https://www.metis.io",shortName:"metis-andromeda",chainId:1088,networkId:1088,explorers:[{name:"blockscout",url:"https://andromeda-explorer.metis.io",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-1",bridges:[{url:"https://bridge.metis.io"}]},icon:{url:"ipfs://QmbWKNucbMtrMPPkHG5ZmVmvNUo8CzqHHcrpk1C2BVQsEG/2022_H-Brand_Stacked_WhiteGreen.svg",format:"svg",height:512,width:512},testnet:!1,slug:"metis-andromeda"},RA={name:"MOAC mainnet",chain:"MOAC",rpc:[],faucets:[],nativeCurrency:{name:"MOAC",symbol:"mc",decimals:18},infoURL:"https://moac.io",shortName:"moac",chainId:1099,networkId:1099,slip44:314,explorers:[{name:"moac explorer",url:"https://explorer.moac.io",standard:"none"}],testnet:!1,slug:"moac"},AA={name:"Polygon zkEVM",title:"Polygon zkEVM",chain:"Polygon",rpc:["https://polygon-zkevm.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://zkevm-rpc.com"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://polygon.technology/polygon-zkevm",shortName:"zkevm",chainId:1101,networkId:1101,icon:{url:"ipfs://QmNmJZkQgx9RcFLS3rvxQTVYcPfyAFPr667keHTUxB9PDv",width:122,height:135,format:"png"},explorers:[{name:"blockscout",url:"https://zkevm.polygonscan.com",icon:{url:"ipfs://QmNmJZkQgx9RcFLS3rvxQTVYcPfyAFPr667keHTUxB9PDv",width:122,height:135,format:"png"},standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-1",bridges:[{url:"https://bridge.zkevm-rpc.com"}]},testnet:!1,slug:"polygon-zkevm"},PA={name:"WEMIX3.0 Mainnet",chain:"WEMIX",rpc:["https://wemix3-0.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.wemix.com","wss://ws.wemix.com"],faucets:[],nativeCurrency:{name:"WEMIX",symbol:"WEMIX",decimals:18},infoURL:"https://wemix.com",shortName:"wemix",chainId:1111,networkId:1111,explorers:[{name:"WEMIX Block Explorer",url:"https://explorer.wemix.com",standard:"EIP3091"}],testnet:!1,slug:"wemix3-0"},MA={name:"WEMIX3.0 Testnet",chain:"TWEMIX",rpc:["https://wemix3-0-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.test.wemix.com","wss://ws.test.wemix.com"],faucets:["https://wallet.test.wemix.com/faucet"],nativeCurrency:{name:"TestnetWEMIX",symbol:"tWEMIX",decimals:18},infoURL:"https://wemix.com",shortName:"twemix",chainId:1112,networkId:1112,explorers:[{name:"WEMIX Testnet Microscope",url:"https://microscope.test.wemix.com",standard:"EIP3091"}],testnet:!0,slug:"wemix3-0-testnet"},_A={name:"Core Blockchain Testnet",chain:"Core",icon:{url:"ipfs://QmeTQaBCkpbsxNNWTpoNrMsnwnAEf1wYTcn7CiiZGfUXD2",width:200,height:217,format:"png"},rpc:["https://core-blockchain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.test.btcs.network/"],faucets:["https://scan.test.btcs.network/faucet"],nativeCurrency:{name:"Core Blockchain Testnet Native Token",symbol:"tCORE",decimals:18},infoURL:"https://www.coredao.org",shortName:"tcore",chainId:1115,networkId:1115,explorers:[{name:"Core Scan Testnet",url:"https://scan.test.btcs.network",icon:{url:"ipfs://QmeTQaBCkpbsxNNWTpoNrMsnwnAEf1wYTcn7CiiZGfUXD2",width:200,height:217,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"core-blockchain-testnet"},SA={name:"Core Blockchain Mainnet",chain:"Core",icon:{url:"ipfs://QmeTQaBCkpbsxNNWTpoNrMsnwnAEf1wYTcn7CiiZGfUXD2",width:200,height:217,format:"png"},rpc:["https://core-blockchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.coredao.org/","https://rpc-core.icecreamswap.com"],faucets:[],nativeCurrency:{name:"Core Blockchain Native Token",symbol:"CORE",decimals:18},infoURL:"https://www.coredao.org",shortName:"core",chainId:1116,networkId:1116,explorers:[{name:"Core Scan",url:"https://scan.coredao.org",icon:{url:"ipfs://QmeTQaBCkpbsxNNWTpoNrMsnwnAEf1wYTcn7CiiZGfUXD2",width:200,height:217,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"core-blockchain"},WA={name:"Dogcoin Mainnet",chain:"DOGS",icon:{url:"ipfs://QmZCadkExKThak3msvszZjo6UnAbUJKE61dAcg4TixuMC3",width:160,height:171,format:"png"},rpc:["https://dogcoin.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.dogcoin.me"],faucets:["https://faucet.dogcoin.network"],nativeCurrency:{name:"Dogcoin",symbol:"DOGS",decimals:18},infoURL:"https://dogcoin.network",shortName:"DOGSm",chainId:1117,networkId:1117,explorers:[{name:"Dogcoin",url:"https://explorer.dogcoin.network",standard:"EIP3091"}],testnet:!1,slug:"dogcoin"},BA={name:"DeFiChain EVM Network Mainnet",chain:"defichain-evm",status:"incubating",rpc:[],faucets:[],nativeCurrency:{name:"DeFiChain",symbol:"DFI",decimals:18},infoURL:"https://meta.defichain.com/",shortName:"DFI",chainId:1130,networkId:1130,slip44:1130,icon:{url:"ipfs://QmdR3YL9F95ajwVwfxAGoEzYwm9w7JNsPSfUPjSaQogVjK",width:512,height:512,format:"svg"},explorers:[],testnet:!1,slug:"defichain-evm-network"},NA={name:"DeFiChain EVM Network Testnet",chain:"defichain-evm-testnet",status:"incubating",rpc:[],faucets:[],nativeCurrency:{name:"DeFiChain",symbol:"DFI",decimals:18},infoURL:"https://meta.defichain.com/",shortName:"DFI-T",chainId:1131,networkId:1131,icon:{url:"ipfs://QmdR3YL9F95ajwVwfxAGoEzYwm9w7JNsPSfUPjSaQogVjK",width:512,height:512,format:"svg"},explorers:[],testnet:!0,slug:"defichain-evm-network-testnet"},DA={name:"AmStar Testnet",chain:"AmStar",icon:{url:"ipfs://Qmd4TMQdnYxaUZqnVddh5S37NGH72g2kkK38ccCEgdZz1C",width:599,height:563,format:"png"},rpc:["https://amstar-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.amstarscan.com"],faucets:[],nativeCurrency:{name:"SINSO",symbol:"SINSO",decimals:18},infoURL:"https://sinso.io",shortName:"ASARt",chainId:1138,networkId:1138,explorers:[{name:"amstarscan-testnet",url:"https://testnet.amstarscan.com",standard:"EIP3091"}],testnet:!0,slug:"amstar-testnet"},LA={name:"MathChain",chain:"MATH",rpc:["https://mathchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mathchain-asia.maiziqianbao.net/rpc","https://mathchain-us.maiziqianbao.net/rpc"],faucets:[],nativeCurrency:{name:"MathChain",symbol:"MATH",decimals:18},infoURL:"https://mathchain.org",shortName:"MATH",chainId:1139,networkId:1139,testnet:!1,slug:"mathchain"},UA={name:"MathChain Testnet",chain:"MATH",rpc:["https://mathchain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://galois-hk.maiziqianbao.net/rpc"],faucets:["https://scan.boka.network/#/Galois/faucet"],nativeCurrency:{name:"MathChain",symbol:"MATH",decimals:18},infoURL:"https://mathchain.org",shortName:"tMATH",chainId:1140,networkId:1140,testnet:!0,slug:"mathchain-testnet"},FA={name:"Symplexia Smart Chain",chain:"Plexchain",rpc:["https://symplexia-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://plex-rpc.plexfinance.us"],faucets:[],nativeCurrency:{name:"Plex Native Token",symbol:"PLEX",decimals:18},infoURL:"https://plexfinance.us/",shortName:"Plexchain",chainId:1149,networkId:1149,icon:{url:"ipfs://QmcXzfMNSQ7SZzKemNquVoXyG5ergdqCGeLWjRYETGBTUM",width:256,height:256,format:"png"},explorers:[{name:"Plexchain Explorer",url:"https://explorer.plexfinance.us",icon:{url:"ipfs://QmcXzfMNSQ7SZzKemNquVoXyG5ergdqCGeLWjRYETGBTUM",width:256,height:256,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"symplexia-smart-chain"},HA={name:"Smart Host Teknoloji TESTNET",chain:"SHT",rpc:["https://smart-host-teknoloji-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://s2.tl.web.tr:4041"],faucets:[],nativeCurrency:{name:"Smart Host Teknoloji TESTNET",symbol:"tSHT",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://smart-host.com.tr",shortName:"sht",chainId:1177,networkId:1177,icon:{url:"ipfs://QmTrLGHyQ1Le25Q7EgNSF5Qq8D2SocKvroDkLqurdBuSQQ",width:1655,height:1029,format:"png"},explorers:[{name:"Smart Host Teknoloji TESTNET Explorer",url:"https://s2.tl.web.tr:4000",icon:{url:"ipfs://QmTrLGHyQ1Le25Q7EgNSF5Qq8D2SocKvroDkLqurdBuSQQ",width:1655,height:1029,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"smart-host-teknoloji-testnet"},KA={name:"Iora Chain",chain:"IORA",icon:{url:"ipfs://bafybeiehps5cqdhqottu2efo4jeehwpkz5rbux3cjxd75rm6rjm4sgs2wi",width:250,height:250,format:"png"},rpc:["https://iora-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://dataseed.iorachain.com"],faucets:[],nativeCurrency:{name:"Iora",symbol:"IORA",decimals:18},infoURL:"https://iorachain.com",shortName:"iora",chainId:1197,networkId:1197,explorers:[{name:"ioraexplorer",url:"https://explorer.iorachain.com",standard:"EIP3091"}],testnet:!1,slug:"iora-chain"},OA={name:"Evanesco Testnet",chain:"Evanesco Testnet",rpc:["https://evanesco-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://seed5.evanesco.org:8547"],faucets:[],nativeCurrency:{name:"AVIS",symbol:"AVIS",decimals:18},infoURL:"https://evanesco.org/",shortName:"avis",chainId:1201,networkId:1201,testnet:!0,slug:"evanesco-testnet"},$A={name:"World Trade Technical Chain Mainnet",chain:"WTT",rpc:["https://world-trade-technical-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.cadaut.com","wss://rpc.cadaut.com/ws"],faucets:[],nativeCurrency:{name:"World Trade Token",symbol:"WTT",decimals:18},infoURL:"http://www.cadaut.com",shortName:"wtt",chainId:1202,networkId:2048,explorers:[{name:"WTTScout",url:"https://explorer.cadaut.com",standard:"EIP3091"}],testnet:!1,slug:"world-trade-technical-chain"},YA={name:"Popcateum Mainnet",chain:"POPCATEUM",rpc:["https://popcateum.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://dataseed.popcateum.org"],faucets:[],nativeCurrency:{name:"Popcat",symbol:"POP",decimals:18},infoURL:"https://popcateum.org",shortName:"popcat",chainId:1213,networkId:1213,explorers:[{name:"popcateum explorer",url:"https://explorer.popcateum.org",standard:"none"}],testnet:!1,slug:"popcateum"},zA={name:"EnterChain Mainnet",chain:"ENTER",rpc:["https://enterchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://tapi.entercoin.net/"],faucets:[],nativeCurrency:{name:"EnterCoin",symbol:"ENTER",decimals:18},infoURL:"https://entercoin.net",shortName:"enter",chainId:1214,networkId:1214,icon:{url:"ipfs://Qmb2UYVc1MjLPi8vhszWRxqBJYoYkWQVxDJRSmtrgk6j2E",width:64,height:64,format:"png"},explorers:[{name:"Enter Explorer - Expenter",url:"https://explorer.entercoin.net",icon:{url:"ipfs://Qmb2UYVc1MjLPi8vhszWRxqBJYoYkWQVxDJRSmtrgk6j2E",width:64,height:64,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"enterchain"},qA={name:"Exzo Network Mainnet",chain:"EXZO",icon:{url:"ipfs://QmeYpc2JfEsHa2Bh11SKRx3sgDtMeg6T8KpXNLepBEKnbJ",width:128,height:128,format:"png"},rpc:["https://exzo-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.exzo.technology"],faucets:[],nativeCurrency:{name:"Exzo",symbol:"XZO",decimals:18},infoURL:"https://exzo.network",shortName:"xzo",chainId:1229,networkId:1229,explorers:[{name:"blockscout",url:"https://exzoscan.io",standard:"EIP3091"}],testnet:!1,slug:"exzo-network"},QA={name:"Ultron Testnet",chain:"Ultron",icon:{url:"ipfs://QmS4W4kY7XYBA4f52vuuytXh3YaTcNBXF14V9tEY6SNqhz",width:512,height:512,format:"png"},rpc:["https://ultron-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://ultron-dev.io"],faucets:[],nativeCurrency:{name:"Ultron",symbol:"ULX",decimals:18},infoURL:"https://ultron.foundation",shortName:"UltronTestnet",chainId:1230,networkId:1230,explorers:[{name:"Ultron Testnet Explorer",url:"https://explorer.ultron-dev.io",icon:{url:"ipfs://QmS4W4kY7XYBA4f52vuuytXh3YaTcNBXF14V9tEY6SNqhz",width:512,height:512,format:"png"},standard:"none"}],testnet:!0,slug:"ultron-testnet"},jA={name:"Ultron Mainnet",chain:"Ultron",icon:{url:"ipfs://QmS4W4kY7XYBA4f52vuuytXh3YaTcNBXF14V9tEY6SNqhz",width:512,height:512,format:"png"},rpc:["https://ultron.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://ultron-rpc.net"],faucets:[],nativeCurrency:{name:"Ultron",symbol:"ULX",decimals:18},infoURL:"https://ultron.foundation",shortName:"UtronMainnet",chainId:1231,networkId:1231,explorers:[{name:"Ultron Explorer",url:"https://ulxscan.com",icon:{url:"ipfs://QmS4W4kY7XYBA4f52vuuytXh3YaTcNBXF14V9tEY6SNqhz",width:512,height:512,format:"png"},standard:"none"}],testnet:!1,slug:"ultron"},VA={name:"Step Network",title:"Step Main Network",chain:"STEP",icon:{url:"ipfs://QmVp9jyb3UFW71867yVtymmiRw7dPY4BTnsp3hEjr9tn8L",width:512,height:512,format:"png"},rpc:["https://step-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.step.network"],faucets:[],nativeCurrency:{name:"FITFI",symbol:"FITFI",decimals:18},infoURL:"https://step.network",shortName:"step",chainId:1234,networkId:1234,explorers:[{name:"StepScan",url:"https://stepscan.io",icon:{url:"ipfs://QmVp9jyb3UFW71867yVtymmiRw7dPY4BTnsp3hEjr9tn8L",width:512,height:512,format:"png"},standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-43114",bridges:[{url:"https://bridge.step.network"}]},testnet:!1,slug:"step-network"},GA={name:"ARC Mainnet",chain:"ARC",icon:{url:"ipfs://bafybeiady63oqduls2pm4aaykzjhahblagokhnpsc5qeq5dmkxqelh7i2i",width:512,height:512,format:"png"},rpc:["https://arc.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-main-1.archiechain.io"],faucets:[],nativeCurrency:{name:"ARC",symbol:"ARC",decimals:18},infoURL:"https://archiechain.io/",shortName:"ARC",chainId:1243,networkId:1243,explorers:[{name:"archiescan",url:"https://app.archiescan.io",standard:"none"}],testnet:!1,slug:"arc"},ZA={name:"ARC Testnet",chain:"ARC",icon:{url:"ipfs://bafybeiady63oqduls2pm4aaykzjhahblagokhnpsc5qeq5dmkxqelh7i2i",width:512,height:512,format:"png"},rpc:["https://arc-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-test-1.archiechain.io"],faucets:["https://faucet.archiechain.io"],nativeCurrency:{name:"ARC",symbol:"ARC",decimals:18},infoURL:"https://archiechain.io/",shortName:"TARC",chainId:1244,networkId:1244,explorers:[{name:"archiescan",url:"https://testnet.archiescan.io",standard:"none"}],testnet:!0,slug:"arc-testnet"},XA={name:"OM Platform Mainnet",chain:"omplatform",rpc:["https://om-platform.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-cnx.omplatform.com/"],faucets:[],nativeCurrency:{name:"OMCOIN",symbol:"OM",decimals:18},infoURL:"https://omplatform.com/",shortName:"om",chainId:1246,networkId:1246,explorers:[{name:"OMSCAN - Expenter",url:"https://omscan.omplatform.com",standard:"none"}],testnet:!1,slug:"om-platform"},JA={name:"CIC Chain Testnet",chain:"CICT",rpc:["https://cic-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testapi.cicscan.com"],faucets:["https://cicfaucet.com"],nativeCurrency:{name:"Crazy Internet Coin",symbol:"CICT",decimals:18},infoURL:"https://www.cicchain.net",shortName:"CICT",chainId:1252,networkId:1252,icon:{url:"ipfs://QmNekc5gpyrQkeDQcmfJLBrP5fa6GMarB13iy6aHVdQJDU",width:1024,height:768,format:"png"},explorers:[{name:"CICscan",url:"https://testnet.cicscan.com",icon:{url:"ipfs://QmNekc5gpyrQkeDQcmfJLBrP5fa6GMarB13iy6aHVdQJDU",width:1024,height:768,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"cic-chain-testnet"},eP={name:"HALO Mainnet",chain:"HALO",rpc:["https://halo.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://nodes.halo.land"],faucets:[],nativeCurrency:{name:"HALO",symbol:"HO",decimals:18},infoURL:"https://halo.land/#/",shortName:"HO",chainId:1280,networkId:1280,explorers:[{name:"HALOexplorer",url:"https://browser.halo.land",standard:"none"}],testnet:!1,slug:"halo"},tP={name:"Moonbeam",chain:"MOON",rpc:["https://moonbeam.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.api.moonbeam.network","wss://wss.api.moonbeam.network"],faucets:[],nativeCurrency:{name:"Glimmer",symbol:"GLMR",decimals:18},infoURL:"https://moonbeam.network/networks/moonbeam/",shortName:"mbeam",chainId:1284,networkId:1284,explorers:[{name:"moonscan",url:"https://moonbeam.moonscan.io",standard:"none"}],testnet:!1,slug:"moonbeam"},nP={name:"Moonriver",chain:"MOON",rpc:["https://moonriver.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.api.moonriver.moonbeam.network","wss://wss.api.moonriver.moonbeam.network"],faucets:[],nativeCurrency:{name:"Moonriver",symbol:"MOVR",decimals:18},infoURL:"https://moonbeam.network/networks/moonriver/",shortName:"mriver",chainId:1285,networkId:1285,explorers:[{name:"moonscan",url:"https://moonriver.moonscan.io",standard:"none"}],testnet:!1,slug:"moonriver"},aP={name:"Moonbase Alpha",chain:"MOON",rpc:["https://moonbase-alpha.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.api.moonbase.moonbeam.network","wss://wss.api.moonbase.moonbeam.network"],faucets:[],nativeCurrency:{name:"Dev",symbol:"DEV",decimals:18},infoURL:"https://docs.moonbeam.network/networks/testnet/",shortName:"mbase",chainId:1287,networkId:1287,explorers:[{name:"moonscan",url:"https://moonbase.moonscan.io",standard:"none"}],testnet:!0,slug:"moonbase-alpha"},rP={name:"Moonrock",chain:"MOON",rpc:["https://moonrock.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.api.moonrock.moonbeam.network","wss://wss.api.moonrock.moonbeam.network"],faucets:[],nativeCurrency:{name:"Rocs",symbol:"ROC",decimals:18},infoURL:"https://docs.moonbeam.network/learn/platform/networks/overview/",shortName:"mrock",chainId:1288,networkId:1288,testnet:!1,slug:"moonrock"},iP={name:"Bobabeam",chain:"Bobabeam",rpc:["https://bobabeam.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://bobabeam.boba.network","wss://wss.bobabeam.boba.network","https://replica.bobabeam.boba.network","wss://replica-wss.bobabeam.boba.network"],faucets:[],nativeCurrency:{name:"Boba Token",symbol:"BOBA",decimals:18},infoURL:"https://boba.network",shortName:"Bobabeam",chainId:1294,networkId:1294,explorers:[{name:"Bobabeam block explorer",url:"https://blockexplorer.bobabeam.boba.network",standard:"none"}],testnet:!1,slug:"bobabeam"},sP={name:"Bobabase Testnet",chain:"Bobabase Testnet",rpc:["https://bobabase-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://bobabase.boba.network","wss://wss.bobabase.boba.network","https://replica.bobabase.boba.network","wss://replica-wss.bobabase.boba.network"],faucets:[],nativeCurrency:{name:"Boba Token",symbol:"BOBA",decimals:18},infoURL:"https://boba.network",shortName:"Bobabase",chainId:1297,networkId:1297,explorers:[{name:"Bobabase block explorer",url:"https://blockexplorer.bobabase.boba.network",standard:"none"}],testnet:!0,slug:"bobabase-testnet"},oP={name:"Dos Fuji Subnet",chain:"DOS",rpc:["https://dos-fuji-subnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://test.doschain.com/jsonrpc"],faucets:[],nativeCurrency:{name:"Dos Native Token",symbol:"DOS",decimals:18},infoURL:"http://doschain.io/",shortName:"TDOS",chainId:1311,networkId:1311,explorers:[{name:"dos-testnet",url:"https://test.doscan.io",standard:"EIP3091"}],testnet:!0,slug:"dos-fuji-subnet"},cP={name:"Alyx Mainnet",chain:"ALYX",rpc:["https://alyx.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.alyxchain.com"],faucets:[],nativeCurrency:{name:"Alyx Chain Native Token",symbol:"ALYX",decimals:18},infoURL:"https://www.alyxchain.com",shortName:"alyx",chainId:1314,networkId:1314,explorers:[{name:"alyxscan",url:"https://www.alyxscan.com",standard:"EIP3091"}],icon:{url:"ipfs://bafkreifd43fcvh77mdcwjrpzpnlhthounc6b4u645kukqpqhduaveatf6i",width:2481,height:2481,format:"png"},testnet:!1,slug:"alyx"},pP={name:"Aitd Mainnet",chain:"AITD",icon:{url:"ipfs://QmXbBMMhjTTGAGjmqMpJm3ufFrtdkfEXCFyXYgz7nnZzsy",width:160,height:160,format:"png"},rpc:["https://aitd.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://walletrpc.aitd.io","https://node.aitd.io"],faucets:[],nativeCurrency:{name:"AITD Mainnet",symbol:"AITD",decimals:18},infoURL:"https://www.aitd.io/",shortName:"aitd",chainId:1319,networkId:1319,explorers:[{name:"AITD Chain Explorer Mainnet",url:"https://aitd-explorer-new.aitd.io",standard:"EIP3091"}],testnet:!1,slug:"aitd"},lP={name:"Aitd Testnet",chain:"AITD",icon:{url:"ipfs://QmXbBMMhjTTGAGjmqMpJm3ufFrtdkfEXCFyXYgz7nnZzsy",width:160,height:160,format:"png"},rpc:["https://aitd-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://http-testnet.aitd.io"],faucets:["https://aitd-faucet-pre.aitdcoin.com/"],nativeCurrency:{name:"AITD Testnet",symbol:"AITD",decimals:18},infoURL:"https://www.aitd.io/",shortName:"aitdtestnet",chainId:1320,networkId:1320,explorers:[{name:"AITD Chain Explorer Testnet",url:"https://block-explorer-testnet.aitd.io",standard:"EIP3091"}],testnet:!0,slug:"aitd-testnet"},dP={name:"Elysium Testnet",title:"An L1, carbon-neutral, tree-planting, metaverse dedicated blockchain created by VulcanForged",chain:"Elysium",rpc:["https://elysium-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://elysium-test-rpc.vulcanforged.com"],faucets:[],nativeCurrency:{name:"LAVA",symbol:"LAVA",decimals:18},infoURL:"https://elysiumscan.vulcanforged.com",shortName:"ELST",chainId:1338,networkId:1338,explorers:[{name:"Elysium testnet explorer",url:"https://elysium-explorer.vulcanforged.com",standard:"none"}],testnet:!0,slug:"elysium-testnet"},uP={name:"Elysium Mainnet",title:"An L1, carbon-neutral, tree-planting, metaverse dedicated blockchain created by VulcanForged",chain:"Elysium",rpc:["https://elysium.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.elysiumchain.tech/"],faucets:[],nativeCurrency:{name:"LAVA",symbol:"LAVA",decimals:18},infoURL:"https://elysiumscan.vulcanforged.com",shortName:"ELSM",chainId:1339,networkId:1339,explorers:[{name:"Elysium mainnet explorer",url:"https://explorer.elysiumchain.tech",standard:"none"}],testnet:!1,slug:"elysium"},mP={name:"CIC Chain Mainnet",chain:"CIC",rpc:["https://cic-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://xapi.cicscan.com"],faucets:[],nativeCurrency:{name:"Crazy Internet Coin",symbol:"CIC",decimals:18},infoURL:"https://www.cicchain.net",shortName:"CIC",chainId:1353,networkId:1353,icon:{url:"ipfs://QmNekc5gpyrQkeDQcmfJLBrP5fa6GMarB13iy6aHVdQJDU",width:1024,height:768,format:"png"},explorers:[{name:"CICscan",url:"https://cicscan.com",icon:{url:"ipfs://QmNekc5gpyrQkeDQcmfJLBrP5fa6GMarB13iy6aHVdQJDU",width:1024,height:768,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"cic-chain"},hP={name:"Zafirium Mainnet",chain:"ZAFIC",icon:{url:"ipfs://QmZT1Wq3P4YbgKBSUmCtgbs5ijPF5d91BzaMPh7Aub8d8t",width:192,height:192,format:"png"},rpc:["https://zafirium.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.zakumi.io"],faucets:[],nativeCurrency:{name:"Zakumi Chain Native Token",symbol:"ZAFIC",decimals:18},infoURL:"https://www.zakumi.io",shortName:"zafic",chainId:1369,networkId:1369,explorers:[{name:"zafirium-explorer",url:"https://explorer.zakumi.io",standard:"none"}],testnet:!1,slug:"zafirium"},yP={name:"AmStar Mainnet",chain:"AmStar",icon:{url:"ipfs://Qmd4TMQdnYxaUZqnVddh5S37NGH72g2kkK38ccCEgdZz1C",width:599,height:563,format:"png"},rpc:["https://amstar.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.amstarscan.com"],faucets:[],nativeCurrency:{name:"SINSO",symbol:"SINSO",decimals:18},infoURL:"https://sinso.io",shortName:"ASAR",chainId:1388,networkId:1388,explorers:[{name:"amstarscan",url:"https://mainnet.amstarscan.com",standard:"EIP3091"}],testnet:!1,slug:"amstar"},fP={name:"Joseon Mainnet",chain:"Joseon",icon:{url:"ipfs://QmQjwcNRCLXU8JBtSkPLUnbWVrpoqbnZVffpJ9Bu8rG34e",width:148,height:148,format:"svg"},rpc:["https://joseon.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.modchain.net/blockchain.joseon.com/rpc"],faucets:[],nativeCurrency:{name:"Joseon Mun",symbol:"JSM",decimals:18},infoURL:"https://www.joseon.com/",shortName:"mun",chainId:1392,networkId:1392,explorers:[{name:"BlockExplorer",url:"https://www.blockexplorer.com",standard:"EIP3091"}],testnet:!1,slug:"joseon"},gP={name:"Rikeza Network Mainnet",title:"Rikeza Network Mainnet",chain:"Rikeza",icon:{url:"ipfs://QmfJ1Qxpzi6CSLeFeWY1Bwe435CpT5za5WfrLUE7vNzZfy",width:512,height:512,format:"png"},rpc:["https://rikeza-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.rikscan.com"],faucets:[],nativeCurrency:{name:"Rikeza",symbol:"RIK",decimals:18},infoURL:"https://rikeza.io",shortName:"RIK",chainId:1433,networkId:1433,explorers:[{name:"Rikeza Blockchain explorer",url:"https://rikscan.com",standard:"EIP3091"}],testnet:!1,slug:"rikeza-network"},bP={name:"Polygon zkEVM Testnet",title:"Polygon zkEVM Testnet",chain:"Polygon",rpc:["https://polygon-zkevm-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.public.zkevm-test.net"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://polygon.technology/solutions/polygon-zkevm/",shortName:"testnet-zkEVM-mango",chainId:1442,networkId:1442,explorers:[{name:"Polygon zkEVM explorer",url:"https://explorer.public.zkevm-test.net",standard:"EIP3091"}],icon:{url:"ipfs://QmNmJZkQgx9RcFLS3rvxQTVYcPfyAFPr667keHTUxB9PDv",width:122,height:135,format:"png"},testnet:!0,slug:"polygon-zkevm-testnet"},TP={name:"GIL Testnet",chain:"GIL",icon:{url:"ipfs://QmeDXUAYgQxwaSJLsqWgTqnrJVwicgEyNf9199xAMyRkqA",width:243,height:243,format:"svg"},rpc:["https://gil-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.giltestnet.com"],faucets:[],nativeCurrency:{name:"GANG",symbol:"GANG",decimals:18},infoURL:"https://gaussgang.com/",shortName:"gil",chainId:1452,networkId:1452,explorers:[{name:"GIL Explorer",url:"https://explorer.giltestnet.com",standard:"EIP3091"}],testnet:!0,slug:"gil-testnet"},wP={name:"Ctex Scan Blockchain",chain:"Ctex Scan Blockchain",icon:{url:"ipfs://bafkreid5evn4qovxo6msuekizv5zn7va62tea7w2zpdx5sskconebuhqle",width:800,height:800,format:"png"},rpc:["https://ctex-scan-blockchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.ctexscan.com/"],faucets:["https://faucet.ctexscan.com"],nativeCurrency:{name:"CTEX",symbol:"CTEX",decimals:18},infoURL:"https://ctextoken.io",shortName:"CTEX",chainId:1455,networkId:1455,explorers:[{name:"Ctex Scan Explorer",url:"https://ctexscan.com",standard:"none"}],testnet:!1,slug:"ctex-scan-blockchain"},IP={name:"Sherpax Mainnet",chain:"Sherpax Mainnet",rpc:["https://sherpax.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.sherpax.io/rpc"],faucets:[],nativeCurrency:{name:"KSX",symbol:"KSX",decimals:18},infoURL:"https://sherpax.io/",shortName:"Sherpax",chainId:1506,networkId:1506,explorers:[{name:"Sherpax Mainnet Explorer",url:"https://evm.sherpax.io",standard:"none"}],testnet:!1,slug:"sherpax"},vP={name:"Sherpax Testnet",chain:"Sherpax Testnet",rpc:["https://sherpax-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://sherpax-testnet.chainx.org/rpc"],faucets:[],nativeCurrency:{name:"KSX",symbol:"KSX",decimals:18},infoURL:"https://sherpax.io/",shortName:"SherpaxTestnet",chainId:1507,networkId:1507,explorers:[{name:"Sherpax Testnet Explorer",url:"https://evm-pre.sherpax.io",standard:"none"}],testnet:!0,slug:"sherpax-testnet"},CP={name:"Beagle Messaging Chain",chain:"BMC",rpc:["https://beagle-messaging-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://beagle.chat/eth"],faucets:["https://faucet.beagle.chat/"],nativeCurrency:{name:"Beagle",symbol:"BG",decimals:18},infoURL:"https://beagle.chat/",shortName:"beagle",chainId:1515,networkId:1515,explorers:[{name:"Beagle Messaging Chain Explorer",url:"https://eth.beagle.chat",standard:"EIP3091"}],testnet:!1,slug:"beagle-messaging-chain"},kP={name:"Tenet",title:"Tenet Mainnet",chain:"TENET",icon:{url:"ipfs://Qmc1gqjWTzNo4pyFSGtQuCu7kRSZZBUVybtTjHn2nNEEPA",width:640,height:640,format:"svg"},rpc:["https://tenet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.tenet.org"],faucets:[],nativeCurrency:{name:"TENET",symbol:"TENET",decimals:18},infoURL:"https://tenet.org/",shortName:"tenet",chainId:1559,networkId:1559,explorers:[{name:"TenetScan Mainnet",url:"https://tenetscan.io",icon:{url:"ipfs://Qmc1gqjWTzNo4pyFSGtQuCu7kRSZZBUVybtTjHn2nNEEPA",width:640,height:640,format:"svg"},standard:"EIP3091"}],testnet:!1,slug:"tenet"},EP={name:"Catecoin Chain Mainnet",chain:"Catechain",rpc:["https://catecoin-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://send.catechain.com"],faucets:[],nativeCurrency:{name:"Catecoin",symbol:"CATE",decimals:18},infoURL:"https://catechain.com",shortName:"cate",chainId:1618,networkId:1618,testnet:!1,slug:"catecoin-chain"},xP={name:"Atheios",chain:"ATH",rpc:["https://atheios.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://wallet.atheios.com:8797"],faucets:[],nativeCurrency:{name:"Atheios Ether",symbol:"ATH",decimals:18},infoURL:"https://atheios.com",shortName:"ath",chainId:1620,networkId:11235813,slip44:1620,testnet:!1,slug:"atheios"},RP={name:"Btachain",chain:"btachain",rpc:["https://btachain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://dataseed1.btachain.com/"],faucets:[],nativeCurrency:{name:"Bitcoin Asset",symbol:"BTA",decimals:18},infoURL:"https://bitcoinasset.io/",shortName:"bta",chainId:1657,networkId:1657,testnet:!1,slug:"btachain"},AP={name:"Horizen Yuma Testnet",shortName:"Yuma",chain:"Yuma",icon:{url:"ipfs://QmSFMBk3rMyu45Sy9KQHjgArFj4HdywANNYrSosLMUdcti",width:1213,height:1213,format:"png"},rpc:["https://horizen-yuma-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://yuma-testnet.horizenlabs.io/ethv1"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:["https://yuma-testnet-faucet.horizen.io"],nativeCurrency:{name:"Testnet Zen",symbol:"tZEN",decimals:18},infoURL:"https://horizen.io/",chainId:1662,networkId:1662,slip44:121,explorers:[{name:"Yuma Testnet Block Explorer",url:"https://yuma-explorer.horizen.io",icon:{url:"ipfs://QmSFMBk3rMyu45Sy9KQHjgArFj4HdywANNYrSosLMUdcti",width:1213,height:1213,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"horizen-yuma-testnet"},PP={name:"Horizen Gobi Testnet",shortName:"Gobi",chain:"Gobi",icon:{url:"ipfs://QmSFMBk3rMyu45Sy9KQHjgArFj4HdywANNYrSosLMUdcti",width:1213,height:1213,format:"png"},rpc:["https://horizen-gobi-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://gobi-testnet.horizenlabs.io/ethv1"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:["https://faucet.horizen.io"],nativeCurrency:{name:"Testnet Zen",symbol:"tZEN",decimals:18},infoURL:"https://horizen.io/",chainId:1663,networkId:1663,slip44:121,explorers:[{name:"Gobi Testnet Block Explorer",url:"https://gobi-explorer.horizen.io",icon:{url:"ipfs://QmSFMBk3rMyu45Sy9KQHjgArFj4HdywANNYrSosLMUdcti",width:1213,height:1213,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"horizen-gobi-testnet"},MP={name:"LUDAN Mainnet",chain:"LUDAN",rpc:["https://ludan.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.ludan.org/"],faucets:[],nativeCurrency:{name:"LUDAN",symbol:"LUDAN",decimals:18},infoURL:"https://www.ludan.org/",shortName:"LUDAN",icon:{url:"ipfs://bafkreigzeanzqgxrzzep45t776ovbwi242poqxbryuu2go5eedeuwwcsay",width:512,height:512,format:"png"},chainId:1688,networkId:1688,testnet:!1,slug:"ludan"},_P={name:"Anytype EVM Chain",chain:"ETH",icon:{url:"ipfs://QmaARJiAQUn4Z6wG8GLEry3kTeBB3k6RfHzSZU9SPhBgcG",width:200,height:200,format:"png"},rpc:["https://anytype-evm-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://geth.anytype.io"],faucets:["https://evm.anytype.io/faucet"],nativeCurrency:{name:"ANY",symbol:"ANY",decimals:18},infoURL:"https://evm.anytype.io",shortName:"AnytypeChain",chainId:1701,networkId:1701,explorers:[{name:"Anytype Explorer",url:"https://explorer.anytype.io",icon:{url:"ipfs://QmaARJiAQUn4Z6wG8GLEry3kTeBB3k6RfHzSZU9SPhBgcG",width:200,height:200,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"anytype-evm-chain"},SP={name:"TBSI Mainnet",title:"Thai Blockchain Service Infrastructure Mainnet",chain:"TBSI",rpc:["https://tbsi.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.blockchain.or.th"],faucets:[],nativeCurrency:{name:"Jinda",symbol:"JINDA",decimals:18},infoURL:"https://blockchain.or.th",shortName:"TBSI",chainId:1707,networkId:1707,testnet:!1,slug:"tbsi"},WP={name:"TBSI Testnet",title:"Thai Blockchain Service Infrastructure Testnet",chain:"TBSI",rpc:["https://tbsi-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.testnet.blockchain.or.th"],faucets:["https://faucet.blockchain.or.th"],nativeCurrency:{name:"Jinda",symbol:"JINDA",decimals:18},infoURL:"https://blockchain.or.th",shortName:"tTBSI",chainId:1708,networkId:1708,testnet:!0,slug:"tbsi-testnet"},BP={name:"Palette Chain Mainnet",chain:"PLT",rpc:["https://palette-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://palette-rpc.com:22000"],faucets:[],nativeCurrency:{name:"Palette Token",symbol:"PLT",decimals:18},features:[],infoURL:"https://hashpalette.com/",shortName:"PCM",chainId:1718,networkId:1718,icon:{url:"ipfs://QmPCEGZD1p1keTT2YfPp725azx1r9Ci41hejeUuGL2whFA",width:800,height:800,format:"png"},explorers:[{name:"Palettescan",url:"https://palettescan.com",icon:{url:"ipfs://QmPCEGZD1p1keTT2YfPp725azx1r9Ci41hejeUuGL2whFA",width:800,height:800,format:"png"},standard:"none"}],testnet:!1,slug:"palette-chain"},NP={name:"PartyChain",chain:"mainnet",rpc:["https://partychain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://tea.mining4people.com/rpc","http://172.104.194.36:8545"],faucets:[],nativeCurrency:{name:"Grams",symbol:"GRAMS",decimals:18},infoURL:"TeaPartyCrypto.com",shortName:"TeaParty",chainId:1773,networkId:1773,icon:{url:"ipfs://QmerDBFoXvgev2xx9U71gAaAK4CtxaaQVaAPf9Qi6UF9MS",width:400,height:400,format:"jpg"},status:"incubating",explorers:[{name:"PartyExplorer",url:"https://partyexplorer.co",icon:{url:"ipfs://QmerDBFoXvgev2xx9U71gAaAK4CtxaaQVaAPf9Qi6UF9MS",width:400,height:400,format:"jpg"},standard:"EIP3091"}],testnet:!1,slug:"partychain"},DP={name:"Gauss Mainnet",chain:"Gauss",icon:{url:"ipfs://QmeDXUAYgQxwaSJLsqWgTqnrJVwicgEyNf9199xAMyRkqA",width:243,height:243,format:"svg"},rpc:["https://gauss.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.gaussgang.com"],faucets:[],nativeCurrency:{name:"GANG",symbol:"GANG",decimals:18},infoURL:"https://gaussgang.com/",shortName:"gauss",chainId:1777,networkId:1777,explorers:[{name:"Gauss Explorer",url:"https://explorer.gaussgang.com",standard:"EIP3091"}],testnet:!1,slug:"gauss"},LP={name:"Kerleano",title:"Proof of Climate awaReness testnet",chain:"CRC",status:"active",rpc:["https://kerleano.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://cacib-saturn-test.francecentral.cloudapp.azure.com","wss://cacib-saturn-test.francecentral.cloudapp.azure.com:9443"],faucets:["https://github.com/ethereum-pocr/kerleano/blob/main/docs/faucet.md"],nativeCurrency:{name:"Climate awaReness Coin",symbol:"CRC",decimals:18},infoURL:"https://github.com/ethereum-pocr/kerleano",shortName:"kerleano",chainId:1804,networkId:1804,icon:{url:"ipfs://QmRLwpq47tyEd3rfK4tKRhbTvyb3fc7PCutExnL1XAb37A",width:334,height:360,format:"png"},explorers:[{name:"Lite Explorer",url:"https://ethereum-pocr.github.io/explorer/kerleano",icon:{url:"ipfs://QmRLwpq47tyEd3rfK4tKRhbTvyb3fc7PCutExnL1XAb37A",width:334,height:360,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"kerleano"},UP={name:"Rabbit Analog Testnet Chain",chain:"rAna",icon:{url:"ipfs://QmdfbjjF3ZzN2jTkH9REgrA8jDS6A6c21n7rbWSVbSnvQc",width:310,height:251,format:"svg"},rpc:["https://rabbit-analog-testnet-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rabbit.analog-rpc.com"],faucets:["https://analogfaucet.com"],nativeCurrency:{name:"Rabbit Analog Test Chain Native Token ",symbol:"rAna",decimals:18},infoURL:"https://rabbit.analogscan.com",shortName:"rAna",chainId:1807,networkId:1807,explorers:[{name:"blockscout",url:"https://rabbit.analogscan.com",standard:"none"}],testnet:!0,slug:"rabbit-analog-testnet-chain"},FP={name:"Cube Chain Mainnet",chain:"Cube",icon:{url:"ipfs://QmbENgHTymTUUArX5MZ2XXH69WGenirU3oamkRD448hYdz",width:282,height:250,format:"png"},rpc:["https://cube-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://http-mainnet.cube.network","wss://ws-mainnet.cube.network","https://http-mainnet-sg.cube.network","wss://ws-mainnet-sg.cube.network","https://http-mainnet-us.cube.network","wss://ws-mainnet-us.cube.network"],faucets:[],nativeCurrency:{name:"Cube Chain Native Token",symbol:"CUBE",decimals:18},infoURL:"https://www.cube.network",shortName:"cube",chainId:1818,networkId:1818,slip44:1818,explorers:[{name:"cube-scan",url:"https://cubescan.network",standard:"EIP3091"}],testnet:!1,slug:"cube-chain"},HP={name:"Cube Chain Testnet",chain:"Cube",icon:{url:"ipfs://QmbENgHTymTUUArX5MZ2XXH69WGenirU3oamkRD448hYdz",width:282,height:250,format:"png"},rpc:["https://cube-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://http-testnet.cube.network","wss://ws-testnet.cube.network","https://http-testnet-sg.cube.network","wss://ws-testnet-sg.cube.network","https://http-testnet-jp.cube.network","wss://ws-testnet-jp.cube.network","https://http-testnet-us.cube.network","wss://ws-testnet-us.cube.network"],faucets:["https://faucet.cube.network"],nativeCurrency:{name:"Cube Chain Test Native Token",symbol:"CUBET",decimals:18},infoURL:"https://www.cube.network",shortName:"cubet",chainId:1819,networkId:1819,slip44:1819,explorers:[{name:"cubetest-scan",url:"https://testnet.cubescan.network",standard:"EIP3091"}],testnet:!0,slug:"cube-chain-testnet"},KP={name:"Teslafunds",chain:"TSF",rpc:["https://teslafunds.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://tsfapi.europool.me"],faucets:[],nativeCurrency:{name:"Teslafunds Ether",symbol:"TSF",decimals:18},infoURL:"https://teslafunds.io",shortName:"tsf",chainId:1856,networkId:1,testnet:!1,slug:"teslafunds"},OP={name:"Gitshock Cartenz Testnet",chain:"Gitshock Cartenz",icon:{url:"ipfs://bafkreifqpj5jkjazvh24muc7wv4r22tihzzl75cevgecxhvojm4ls6mzpq",width:512,height:512,format:"png"},rpc:["https://gitshock-cartenz-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.cartenz.works"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"Gitshock Cartenz",symbol:"tGTFX",decimals:18},infoURL:"https://gitshock.com",shortName:"gitshockchain",chainId:1881,networkId:1881,explorers:[{name:"blockscout",url:"https://scan.cartenz.works",standard:"EIP3091"}],testnet:!0,slug:"gitshock-cartenz-testnet"},$P={name:"Lightlink Phoenix Mainnet",chain:"Lightlink Phoenix Mainnet",icon:{url:"ipfs://QmNRUoMgx16hurD3au3ou5A9rmTLYmre8WiGmQEPFmP2Vo",width:600,height:600,format:"png"},rpc:["https://lightlink-phoenix.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://replicator-01.phoenix.lightlink.io/rpc/v1","https://replicator-02.phoenix.lightlink.io/rpc/v1"],features:[{name:"EIP155"}],faucets:[],nativeCurrency:{name:"Ethereum",symbol:"ETH",decimals:18},infoURL:"https://lightlink.io",shortName:"lightlink_phoenix",chainId:1890,networkId:1890,explorers:[{name:"phoenix",url:"https://phoenix.lightlink.io",icon:{url:"ipfs://QmNRUoMgx16hurD3au3ou5A9rmTLYmre8WiGmQEPFmP2Vo",width:600,height:600,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"lightlink-phoenix"},YP={name:"Lightlink Pegasus Testnet",chain:"Lightlink Pegasus Testnet",icon:{url:"ipfs://QmNRUoMgx16hurD3au3ou5A9rmTLYmre8WiGmQEPFmP2Vo",width:600,height:600,format:"png"},rpc:["https://lightlink-pegasus-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://replicator-01.pegasus.lightlink.io/rpc/v1","https://replicator-02.pegasus.lightlink.io/rpc/v1"],features:[{name:"EIP155"}],faucets:["https://pegasus-faucet-react.vercel.app"],nativeCurrency:{name:"Ethereum",symbol:"ETH",decimals:18},infoURL:"https://lightlink.io",shortName:"lightlink_pegasus",chainId:1891,networkId:1891,explorers:[{name:"pegasus",url:"https://pegasus.lightlink.io",icon:{url:"ipfs://QmNRUoMgx16hurD3au3ou5A9rmTLYmre8WiGmQEPFmP2Vo",width:600,height:600,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"lightlink-pegasus-testnet"},zP={name:"BON Network",chain:"BON",rpc:["https://bon-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://rpc.boyanet.org:8545","ws://rpc.boyanet.org:8546"],faucets:[],nativeCurrency:{name:"BOYACoin",symbol:"BOY",decimals:18},infoURL:"https://boyanet.org",shortName:"boya",chainId:1898,networkId:1,explorers:[{name:"explorer",url:"https://explorer.boyanet.org:4001",standard:"EIP3091"}],testnet:!1,slug:"bon-network"},qP={name:"Bitcichain Mainnet",chain:"BITCI",icon:{url:"ipfs://QmbxmfWw5sVMASz5EbR1DCgLfk8PnqpSJGQKpYuEUpoxqn",width:64,height:64,format:"svg"},rpc:["https://bitcichain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.bitci.com"],faucets:[],nativeCurrency:{name:"Bitci",symbol:"BITCI",decimals:18},infoURL:"https://www.bitcichain.com",shortName:"bitci",chainId:1907,networkId:1907,explorers:[{name:"Bitci Explorer",url:"https://bitciexplorer.com",standard:"EIP3091"}],testnet:!1,slug:"bitcichain"},QP={name:"Bitcichain Testnet",chain:"TBITCI",icon:{url:"ipfs://QmbxmfWw5sVMASz5EbR1DCgLfk8PnqpSJGQKpYuEUpoxqn",width:64,height:64,format:"svg"},rpc:["https://bitcichain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.bitcichain.com"],faucets:["https://faucet.bitcichain.com"],nativeCurrency:{name:"Test Bitci",symbol:"TBITCI",decimals:18},infoURL:"https://www.bitcichain.com",shortName:"tbitci",chainId:1908,networkId:1908,explorers:[{name:"Bitci Explorer Testnet",url:"https://testnet.bitciexplorer.com",standard:"EIP3091"}],testnet:!0,slug:"bitcichain-testnet"},jP={name:"ONUS Chain Testnet",title:"ONUS Chain Testnet",chain:"onus",rpc:["https://onus-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.onuschain.io"],faucets:[],nativeCurrency:{name:"ONUS",symbol:"ONUS",decimals:18},infoURL:"https://onuschain.io",shortName:"onus-testnet",chainId:1945,networkId:1945,explorers:[{name:"Onus explorer testnet",url:"https://explorer-testnet.onuschain.io",icon:{url:"ipfs://bafkreiec34ik3glrm5jrzafdytvu4kxdsrxhqmagbe27fytdcuzkhoooay",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"onus-chain-testnet"},VP={name:"D-Chain Mainnet",chain:"D-Chain",rpc:["https://d-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.d-chain.network/ext/bc/2ZiR1Bro5E59siVuwdNuRFzqL95NkvkbzyLBdrsYR9BLSHV7H4/rpc"],nativeCurrency:{name:"DOINX",symbol:"DOINX",decimals:18},shortName:"dchain-mainnet",chainId:1951,networkId:1951,icon:{url:"ipfs://QmV2vhTqS9UyrX9Q6BSCbK4JrKBnS8ErHvstMjfb2oVWaj",width:700,height:495,format:"png"},faucets:[],infoURL:"",testnet:!1,slug:"d-chain"},GP={name:"Dexilla Testnet",chain:"Dexilla",rpc:["https://dexilla-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.dexilla.com"],faucets:[],icon:{url:"ipfs://QmUBveetVibvSEWQrjyxySgUphLuoMGSVLGmYnobt5FgEZ",width:512,height:512,format:"png"},nativeCurrency:{name:"Dexilla Native Token",symbol:"DXZ",decimals:18},infoURL:"https://dexilla.com",shortName:"Dexilla",chainId:1954,networkId:1954,explorers:[{name:"dos-mainnet",url:"https://exp.dexilla.com",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-11155111",bridges:[{url:"https://bridge.dexilla.com"}]},testnet:!0,slug:"dexilla-testnet"},ZP={name:"Eleanor",title:"Metatime Testnet Eleanor",chain:"MTC",rpc:["https://eleanor.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.metatime.com/eleanor","wss://ws.metatime.com/eleanor"],faucets:["https://faucet.metatime.com/eleanor"],nativeCurrency:{name:"Eleanor Metacoin",symbol:"MTC",decimals:18},infoURL:"https://eleanor.metatime.com",shortName:"mtc",chainId:1967,networkId:1967,explorers:[{name:"metaexplorer-eleanor",url:"https://explorer.metatime.com/eleanor",standard:"EIP3091"}],testnet:!0,slug:"eleanor"},XP={name:"Super Smart Chain Testnet",chain:"TSCS",rpc:["https://super-smart-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.superexchain.com:8544"],faucets:["https://testnet.superexchain.com"],nativeCurrency:{name:"Super Chain Native Token",symbol:"TSCS",decimals:18},infoURL:"https://testnet.superexchain.com",shortName:"tscs",chainId:1969,networkId:1969,icon:{url:"ipfs://QmW4C4QHLMhLeH5MsdVbauMc2Skb4ehzLKU3egLKKoux4D",width:130,height:130,format:"png"},explorers:[{name:"blockscout",url:"https://testnetscan.superexchain.com",standard:"EIP3091"}],testnet:!0,slug:"super-smart-chain-testnet"},JP={name:"Super Smart Chain Mainnet",chain:"SCS",rpc:["https://super-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://superexchain.com:8545"],faucets:[],nativeCurrency:{name:"Super Chain Native Token",symbol:"SCS",decimals:18},infoURL:"https://superexchain.com",shortName:"scs",chainId:1970,networkId:1970,icon:{url:"ipfs://QmW4C4QHLMhLeH5MsdVbauMc2Skb4ehzLKU3egLKKoux4D",width:130,height:130,format:"png"},explorers:[{name:"blockscout",url:"https://scan.superexchain.com",standard:"EIP3091"}],testnet:!1,slug:"super-smart-chain"},eM={name:"Atelier",title:"Atelier Test Network",chain:"ALTR",rpc:["https://atelier.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://1971.network/atlr","wss://1971.network/atlr"],faucets:[],nativeCurrency:{name:"ATLR",symbol:"ATLR",decimals:18},infoURL:"https://1971.network/",shortName:"atlr",chainId:1971,networkId:1971,icon:{url:"ipfs://bafkreigcquvoalec3ll2m26v4wsx5enlxwyn6nk2mgfqwncyqrgwivla5u",width:200,height:200,format:"png"},testnet:!0,slug:"atelier"},tM={name:"ONUS Chain Mainnet",title:"ONUS Chain Mainnet",chain:"onus",rpc:["https://onus-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.onuschain.io","wss://ws.onuschain.io"],faucets:[],nativeCurrency:{name:"ONUS",symbol:"ONUS",decimals:18},infoURL:"https://onuschain.io",shortName:"onus-mainnet",chainId:1975,networkId:1975,explorers:[{name:"Onus explorer mainnet",url:"https://explorer.onuschain.io",icon:{url:"ipfs://bafkreiec34ik3glrm5jrzafdytvu4kxdsrxhqmagbe27fytdcuzkhoooay",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"onus-chain"},nM={name:"Eurus Testnet",chain:"EUN",rpc:["https://eurus-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.eurus.network"],faucets:[],nativeCurrency:{name:"Eurus",symbol:"EUN",decimals:18},infoURL:"https://eurus.network",shortName:"euntest",chainId:1984,networkId:1984,icon:{url:"ipfs://QmaGd5L9jGPbfyGXBFhu9gjinWJ66YtNrXq8x6Q98Eep9e",width:471,height:471,format:"svg"},explorers:[{name:"testnetexplorer",url:"https://testnetexplorer.eurus.network",icon:{url:"ipfs://QmaGd5L9jGPbfyGXBFhu9gjinWJ66YtNrXq8x6Q98Eep9e",width:471,height:471,format:"svg"},standard:"none"}],testnet:!0,slug:"eurus-testnet"},aM={name:"EtherGem",chain:"EGEM",rpc:["https://ethergem.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://jsonrpc.egem.io/custom"],faucets:[],nativeCurrency:{name:"EtherGem Ether",symbol:"EGEM",decimals:18},infoURL:"https://egem.io",shortName:"egem",chainId:1987,networkId:1987,slip44:1987,testnet:!1,slug:"ethergem"},rM={name:"Ekta",chain:"EKTA",rpc:["https://ekta.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://main.ekta.io"],faucets:[],nativeCurrency:{name:"EKTA",symbol:"EKTA",decimals:18},infoURL:"https://www.ekta.io",shortName:"ekta",chainId:1994,networkId:1994,icon:{url:"ipfs://QmfMd564KUPK8eKZDwGCT71ZC2jMnUZqP6LCtLpup3rHH1",width:2100,height:2100,format:"png"},explorers:[{name:"ektascan",url:"https://ektascan.io",icon:{url:"ipfs://QmfMd564KUPK8eKZDwGCT71ZC2jMnUZqP6LCtLpup3rHH1",width:2100,height:2100,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"ekta"},iM={name:"edeXa Testnet",chain:"edeXa TestNetwork",rpc:["https://edexa-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.edexa.com/rpc","https://io-dataseed1.testnet.edexa.io-market.com/rpc"],faucets:["https://faucet.edexa.com/"],nativeCurrency:{name:"EDEXA",symbol:"EDX",decimals:18},infoURL:"https://edexa.com/",shortName:"edx",chainId:1995,networkId:1995,icon:{url:"ipfs://QmSgvmLpRsCiu2ySqyceA5xN4nwi7URJRNEZLffwEKXdoR",width:1028,height:1042,format:"png"},explorers:[{name:"edexa-testnet",url:"https://explorer.testnet.edexa.com",standard:"EIP3091"}],testnet:!0,slug:"edexa-testnet"},sM={name:"Dogechain Mainnet",chain:"DC",icon:{url:"ipfs://QmNS6B6L8FfgGSMTEi2SxD3bK5cdmKPNtQKcYaJeRWrkHs",width:732,height:732,format:"png"},rpc:["https://dogechain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.dogechain.dog","https://rpc01-sg.dogechain.dog","https://rpc.ankr.com/dogechain"],faucets:[],nativeCurrency:{name:"Dogecoin",symbol:"DOGE",decimals:18},infoURL:"https://dogechain.dog",shortName:"dc",chainId:2e3,networkId:2e3,explorers:[{name:"dogechain explorer",url:"https://explorer.dogechain.dog",standard:"EIP3091"}],testnet:!1,slug:"dogechain"},oM={name:"Milkomeda C1 Mainnet",chain:"milkAda",icon:{url:"ipfs://QmdoUtvHDybu5ppYBZT8BMRp6AqByVSoQs8nFwKbaS55jd",width:367,height:367,format:"svg"},rpc:["https://milkomeda-c1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-mainnet-cardano-evm.c1.milkomeda.com","wss://rpc-mainnet-cardano-evm.c1.milkomeda.com"],faucets:[],nativeCurrency:{name:"milkAda",symbol:"mADA",decimals:18},infoURL:"https://milkomeda.com",shortName:"milkAda",chainId:2001,networkId:2001,explorers:[{name:"Blockscout",url:"https://explorer-mainnet-cardano-evm.c1.milkomeda.com",standard:"none"}],testnet:!1,slug:"milkomeda-c1"},cM={name:"Milkomeda A1 Mainnet",chain:"milkALGO",icon:{url:"ipfs://QmdoUtvHDybu5ppYBZT8BMRp6AqByVSoQs8nFwKbaS55jd",width:367,height:367,format:"svg"},rpc:["https://milkomeda-a1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-mainnet-algorand-rollup.a1.milkomeda.com","wss://rpc-mainnet-algorand-rollup.a1.milkomeda.com/ws"],faucets:[],nativeCurrency:{name:"milkALGO",symbol:"mALGO",decimals:18},infoURL:"https://milkomeda.com",shortName:"milkALGO",chainId:2002,networkId:2002,explorers:[{name:"Blockscout",url:"https://explorer-mainnet-algorand-rollup.a1.milkomeda.com",standard:"none"}],testnet:!1,slug:"milkomeda-a1"},pM={name:"CloudWalk Testnet",chain:"CloudWalk Testnet",rpc:[],faucets:[],nativeCurrency:{name:"CloudWalk Native Token",symbol:"CWN",decimals:18},infoURL:"https://cloudwalk.io",shortName:"cloudwalk_testnet",chainId:2008,networkId:2008,explorers:[{name:"CloudWalk Testnet Explorer",url:"https://explorer.testnet.cloudwalk.io",standard:"none"}],testnet:!0,slug:"cloudwalk-testnet"},lM={name:"CloudWalk Mainnet",chain:"CloudWalk Mainnet",rpc:[],faucets:[],nativeCurrency:{name:"CloudWalk Native Token",symbol:"CWN",decimals:18},infoURL:"https://cloudwalk.io",shortName:"cloudwalk_mainnet",chainId:2009,networkId:2009,explorers:[{name:"CloudWalk Mainnet Explorer",url:"https://explorer.mainnet.cloudwalk.io",standard:"none"}],testnet:!1,slug:"cloudwalk"},dM={name:"MainnetZ Mainnet",chain:"NetZ",icon:{url:"ipfs://QmT5gJ5weBiLT3GoYuF5yRTRLdPLCVZ3tXznfqW7M8fxgG",width:400,height:400,format:"png"},rpc:["https://z-mainnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.mainnetz.io"],faucets:["https://faucet.mainnetz.io"],nativeCurrency:{name:"MainnetZ",symbol:"NetZ",decimals:18},infoURL:"https://mainnetz.io",shortName:"NetZm",chainId:2016,networkId:2016,explorers:[{name:"MainnetZ",url:"https://explorer.mainnetz.io",standard:"EIP3091"}],testnet:!1,slug:"z-mainnet"},uM={name:"PublicMint Devnet",title:"Public Mint Devnet",chain:"PublicMint",rpc:["https://publicmint-devnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.dev.publicmint.io:8545"],faucets:[],nativeCurrency:{name:"USD",symbol:"USD",decimals:18},infoURL:"https://publicmint.com",shortName:"pmint_dev",chainId:2018,networkId:2018,slip44:60,explorers:[{name:"PublicMint Explorer",url:"https://explorer.dev.publicmint.io",standard:"EIP3091"}],testnet:!1,slug:"publicmint-devnet"},mM={name:"PublicMint Testnet",title:"Public Mint Testnet",chain:"PublicMint",rpc:["https://publicmint-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.tst.publicmint.io:8545"],faucets:[],nativeCurrency:{name:"USD",symbol:"USD",decimals:18},infoURL:"https://publicmint.com",shortName:"pmint_test",chainId:2019,networkId:2019,slip44:60,explorers:[{name:"PublicMint Explorer",url:"https://explorer.tst.publicmint.io",standard:"EIP3091"}],testnet:!0,slug:"publicmint-testnet"},hM={name:"PublicMint Mainnet",title:"Public Mint Mainnet",chain:"PublicMint",rpc:["https://publicmint.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.publicmint.io:8545"],faucets:[],nativeCurrency:{name:"USD",symbol:"USD",decimals:18},infoURL:"https://publicmint.com",shortName:"pmint",chainId:2020,networkId:2020,slip44:60,explorers:[{name:"PublicMint Explorer",url:"https://explorer.publicmint.io",standard:"EIP3091"}],testnet:!1,slug:"publicmint"},yM={name:"Edgeware EdgeEVM Mainnet",chain:"EDG",icon:{url:"ipfs://QmS3ERgAKYTmV7bSWcUPSvrrCC9wHQYxtZqEQYx9Rw4RGA",width:352,height:304,format:"png"},rpc:["https://edgeware-edgeevm.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://edgeware-evm.jelliedowl.net","https://mainnet2.edgewa.re/evm","https://mainnet3.edgewa.re/evm","https://mainnet4.edgewa.re/evm","https://mainnet5.edgewa.re/evm","wss://edgeware.jelliedowl.net","wss://mainnet2.edgewa.re","wss://mainnet3.edgewa.re","wss://mainnet4.edgewa.re","wss://mainnet5.edgewa.re"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"Edgeware",symbol:"EDG",decimals:18},infoURL:"https://edgeware.io",shortName:"edg",chainId:2021,networkId:2021,slip44:523,explorers:[{name:"Edgscan by Bharathcoorg",url:"https://edgscan.live",standard:"EIP3091"},{name:"Subscan",url:"https://edgeware.subscan.io",standard:"none",icon:{url:"ipfs://Qma2GfW5nQHuA7nGqdEfwaXPL63G9oTwRTQKaGTfjNtM2W",width:400,height:400,format:"png"}}],testnet:!1,slug:"edgeware-edgeevm"},fM={name:"Beresheet BereEVM Testnet",chain:"EDG",rpc:["https://beresheet-bereevm-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://beresheet-evm.jelliedowl.net","wss://beresheet.jelliedowl.net"],faucets:[],nativeCurrency:{name:"Testnet EDG",symbol:"tEDG",decimals:18},infoURL:"https://edgeware.io/build",shortName:"edgt",chainId:2022,networkId:2022,explorers:[{name:"Edgscan by Bharathcoorg",url:"https://testnet.edgscan.live",standard:"EIP3091"}],testnet:!0,slug:"beresheet-bereevm-testnet"},gM={name:"Taycan Testnet",chain:"Taycan",rpc:["https://taycan-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://test-taycan.hupayx.io"],faucets:["https://ttaycan-faucet.hupayx.io/"],nativeCurrency:{name:"test-Shuffle",symbol:"tSFL",decimals:18},infoURL:"https://hupayx.io",shortName:"taycan-testnet",chainId:2023,networkId:2023,icon:{url:"ipfs://bafkreidvjcc73v747lqlyrhgbnkvkdepdvepo6baj6hmjsmjtvdyhmzzmq",width:1e3,height:1206,format:"png"},explorers:[{name:"Taycan Explorer(Blockscout)",url:"https://evmscan-test.hupayx.io",standard:"none",icon:{url:"ipfs://bafkreidvjcc73v747lqlyrhgbnkvkdepdvepo6baj6hmjsmjtvdyhmzzmq",width:1e3,height:1206,format:"png"}},{name:"Taycan Cosmos Explorer",url:"https://cosmoscan-test.hupayx.io",standard:"none",icon:{url:"ipfs://bafkreidvjcc73v747lqlyrhgbnkvkdepdvepo6baj6hmjsmjtvdyhmzzmq",width:1e3,height:1206,format:"png"}}],testnet:!0,slug:"taycan-testnet"},bM={name:"Rangers Protocol Mainnet",chain:"Rangers",icon:{url:"ipfs://QmXR5e5SDABWfQn6XT9uMsVYAo5Bv7vUv4jVs8DFqatZWG",width:2e3,height:2e3,format:"png"},rpc:["https://rangers-protocol.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.rangersprotocol.com/api/jsonrpc"],faucets:[],nativeCurrency:{name:"Rangers Protocol Gas",symbol:"RPG",decimals:18},infoURL:"https://rangersprotocol.com",shortName:"rpg",chainId:2025,networkId:2025,slip44:1008,explorers:[{name:"rangersscan",url:"https://scan.rangersprotocol.com",standard:"none"}],testnet:!1,slug:"rangers-protocol"},TM={name:"OriginTrail Parachain",chain:"OTP",rpc:["https://origintrail-parachain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://astrosat.origintrail.network","wss://parachain-rpc.origin-trail.network"],faucets:[],nativeCurrency:{name:"OriginTrail Parachain Token",symbol:"OTP",decimals:12},infoURL:"https://parachain.origintrail.io",shortName:"otp",chainId:2043,networkId:2043,testnet:!1,slug:"origintrail-parachain"},wM={name:"Stratos Testnet",chain:"STOS",rpc:["https://stratos-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://web3-testnet-rpc.thestratos.org"],faucets:[],nativeCurrency:{name:"STOS",symbol:"STOS",decimals:18},infoURL:"https://www.thestratos.org",shortName:"stos-testnet",chainId:2047,networkId:2047,explorers:[{name:"Stratos EVM Explorer (Blockscout)",url:"https://web3-testnet-explorer.thestratos.org",standard:"none"},{name:"Stratos Cosmos Explorer (BigDipper)",url:"https://big-dipper-dev.thestratos.org",standard:"none"}],testnet:!0,slug:"stratos-testnet"},IM={name:"Stratos Mainnet",chain:"STOS",rpc:[],faucets:[],nativeCurrency:{name:"STOS",symbol:"STOS",decimals:18},infoURL:"https://www.thestratos.org",shortName:"stos-mainnet",chainId:2048,networkId:2048,status:"incubating",testnet:!1,slug:"stratos"},vM={name:"Quokkacoin Mainnet",chain:"Qkacoin",rpc:["https://quokkacoin.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.qkacoin.org"],faucets:[],nativeCurrency:{name:"Qkacoin",symbol:"QKA",decimals:18},infoURL:"https://qkacoin.org",shortName:"QKA",chainId:2077,networkId:2077,explorers:[{name:"blockscout",url:"https://explorer.qkacoin.org",standard:"EIP3091"}],testnet:!1,slug:"quokkacoin"},CM={name:"Ecoball Mainnet",chain:"ECO",rpc:["https://ecoball.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.ecoball.org/ecoball/"],faucets:[],nativeCurrency:{name:"Ecoball Coin",symbol:"ECO",decimals:18},infoURL:"https://ecoball.org",shortName:"eco",chainId:2100,networkId:2100,explorers:[{name:"Ecoball Explorer",url:"https://scan.ecoball.org",standard:"EIP3091"}],testnet:!1,slug:"ecoball"},kM={name:"Ecoball Testnet Espuma",chain:"ECO",rpc:["https://ecoball-testnet-espuma.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.ecoball.org/espuma/"],faucets:[],nativeCurrency:{name:"Espuma Coin",symbol:"ECO",decimals:18},infoURL:"https://ecoball.org",shortName:"esp",chainId:2101,networkId:2101,explorers:[{name:"Ecoball Testnet Explorer",url:"https://espuma-scan.ecoball.org",standard:"EIP3091"}],testnet:!0,slug:"ecoball-testnet-espuma"},EM={name:"Exosama Network",chain:"EXN",rpc:["https://exosama-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.exosama.com","wss://rpc.exosama.com"],faucets:[],nativeCurrency:{name:"Sama Token",symbol:"SAMA",decimals:18},infoURL:"https://moonsama.com",shortName:"exn",chainId:2109,networkId:2109,slip44:2109,icon:{url:"ipfs://QmaQxfwpXYTomUd24PMx5tKjosupXcm99z1jL1XLq9LWBS",width:468,height:468,format:"png"},explorers:[{name:"blockscout",url:"https://explorer.exosama.com",icon:{url:"ipfs://bafybeifu5tpui7dk5cjoo54kde7pmuthvnl7sdykobuarsxgu7t2izurnq",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"exosama-network"},xM={name:"Metaplayerone Mainnet",chain:"METAD",icon:{url:"ipfs://QmZyxS9BfRGYWWDtvrV6qtthCYV4TwdjLoH2sF6MkiTYFf",width:1280,height:1280,format:"png"},rpc:["https://metaplayerone.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.metaplayer.one/"],faucets:[],nativeCurrency:{name:"METAD",symbol:"METAD",decimals:18},infoURL:"https://docs.metaplayer.one/",shortName:"Metad",chainId:2122,networkId:2122,explorers:[{name:"Metad Scan",url:"https://scan.metaplayer.one",icon:{url:"ipfs://QmZyxS9BfRGYWWDtvrV6qtthCYV4TwdjLoH2sF6MkiTYFf",width:1280,height:1280,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"metaplayerone"},RM={name:"Metaplayerone Dubai Testnet",chain:"MP1 Dubai-Testnet",icon:{url:"ipfs://QmfJKxmubJrqYWDcR2PnPvmpukxPz4fYDu3hqTaSnpJDxC",width:42,height:23,format:"svg"},rpc:["https://metaplayerone-dubai-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-dubai.mp1network.com/"],faucets:[],nativeCurrency:{name:"Metaunit",symbol:"MEU",decimals:18},infoURL:"https://docs.metaplayer.one/",shortName:"MEU",chainId:2124,networkId:2124,explorers:[{name:"MP1Scan",url:"https://dubai.mp1scan.io",icon:{url:"ipfs://QmfJKxmubJrqYWDcR2PnPvmpukxPz4fYDu3hqTaSnpJDxC",width:42,height:23,format:"svg"},standard:"EIP3091"}],testnet:!0,slug:"metaplayerone-dubai-testnet"},AM={name:"Defi Oracle Meta Testnet",chain:"dfiometatest",icon:{url:"ipfs://QmYrMRnjQJcNkYq9AvZ2FQ9kzYj9szzP4YDmyNA1ybd8xE",width:1e3,height:1043,format:"png"},rpc:["https://defi-oracle-meta-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.public-2138.defi-oracle.io","wss://rpc.public-2138.defi-oracle.io"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"testEther",symbol:"tETH",decimals:18},infoURL:"https://defi-oracle.io/",shortName:"dfio-meta-test",chainId:2138,networkId:21,slip44:60,ens:{registry:"0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85"},explorers:[{name:"Quorum Explorer",url:"https://public-2138.defi-oracle.io",standard:"none"}],testnet:!0,slug:"defi-oracle-meta-testnet"},PM={name:"BOSagora Mainnet",chain:"ETH",rpc:["https://bosagora.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.bosagora.org","https://rpc.bosagora.org"],faucets:[],nativeCurrency:{name:"BOSAGORA",symbol:"BOA",decimals:18},infoURL:"https://docs.bosagora.org",shortName:"boa",chainId:2151,networkId:2151,icon:{url:"ipfs://QmW3CT4SHmso5dRJdsjR8GL1qmt79HkdAebCn2uNaWXFYh",width:256,height:257,format:"png"},explorers:[{name:"BOASCAN",url:"https://boascan.io",icon:{url:"ipfs://QmW3CT4SHmso5dRJdsjR8GL1qmt79HkdAebCn2uNaWXFYh",width:256,height:257,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"bosagora"},MM={name:"Findora Mainnet",chain:"Findora",rpc:["https://findora.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-mainnet.findora.org"],faucets:[],nativeCurrency:{name:"FRA",symbol:"FRA",decimals:18},infoURL:"https://findora.org/",shortName:"fra",chainId:2152,networkId:2152,explorers:[{name:"findorascan",url:"https://evm.findorascan.io",standard:"EIP3091"}],testnet:!1,slug:"findora"},_M={name:"Findora Testnet",chain:"Testnet-anvil",rpc:["https://findora-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://prod-testnet.prod.findora.org:8545/"],faucets:[],nativeCurrency:{name:"FRA",symbol:"FRA",decimals:18},infoURL:"https://findora.org/",shortName:"findora-testnet",chainId:2153,networkId:2153,explorers:[{name:"findorascan",url:"https://testnet-anvil.evm.findorascan.io",standard:"EIP3091"}],testnet:!0,slug:"findora-testnet"},SM={name:"Findora Forge",chain:"Testnet-forge",rpc:["https://findora-forge.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://prod-forge.prod.findora.org:8545/"],faucets:[],nativeCurrency:{name:"FRA",symbol:"FRA",decimals:18},infoURL:"https://findora.org/",shortName:"findora-forge",chainId:2154,networkId:2154,explorers:[{name:"findorascan",url:"https://testnet-forge.evm.findorascan.io",standard:"EIP3091"}],testnet:!0,slug:"findora-forge"},WM={name:"Bitcoin EVM",chain:"Bitcoin EVM",rpc:["https://bitcoin-evm.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://connect.bitcoinevm.com"],faucets:[],nativeCurrency:{name:"Bitcoin",symbol:"BTC",decimals:18},infoURL:"https://bitcoinevm.com",shortName:"BTC",chainId:2203,networkId:2203,icon:{url:"ipfs://bafkreic4aq265oaf6yze7ba5okefqh6vnqudyrz6ovukvbnrlhet36itle",width:200,height:200,format:"png"},explorers:[{name:"Explorer",url:"https://explorer.bitcoinevm.com",icon:{url:"ipfs://bafkreic4aq265oaf6yze7ba5okefqh6vnqudyrz6ovukvbnrlhet36itle",width:200,height:200,format:"png"},standard:"none"}],testnet:!1,slug:"bitcoin-evm"},BM={name:"Evanesco Mainnet",chain:"EVA",rpc:["https://evanesco.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://seed4.evanesco.org:8546"],faucets:[],nativeCurrency:{name:"EVA",symbol:"EVA",decimals:18},infoURL:"https://evanesco.org/",shortName:"evanesco",chainId:2213,networkId:2213,icon:{url:"ipfs://QmZbmGYdfbMRrWJore3c7hyD6q7B5pXHJqTSNjbZZUK6V8",width:200,height:200,format:"png"},explorers:[{name:"Evanesco Explorer",url:"https://explorer.evanesco.org",standard:"none"}],testnet:!1,slug:"evanesco"},NM={name:"Kava EVM Testnet",chain:"KAVA",rpc:["https://kava-evm-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm.testnet.kava.io","wss://wevm.testnet.kava.io"],faucets:["https://faucet.kava.io"],nativeCurrency:{name:"TKava",symbol:"TKAVA",decimals:18},infoURL:"https://www.kava.io",shortName:"tkava",chainId:2221,networkId:2221,icon:{url:"ipfs://QmdpRTk6oL1HRW9xC6cAc4Rnf9gs6zgdAcr4Z3HcLztusm",width:1186,height:360,format:"svg"},explorers:[{name:"Kava Testnet Explorer",url:"https://explorer.testnet.kava.io",standard:"EIP3091",icon:{url:"ipfs://QmdpRTk6oL1HRW9xC6cAc4Rnf9gs6zgdAcr4Z3HcLztusm",width:1186,height:360,format:"svg"}}],testnet:!0,slug:"kava-evm-testnet"},DM={name:"Kava EVM",chain:"KAVA",rpc:["https://kava-evm.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm.kava.io","https://evm2.kava.io","wss://wevm.kava.io","wss://wevm2.kava.io"],faucets:[],nativeCurrency:{name:"Kava",symbol:"KAVA",decimals:18},infoURL:"https://www.kava.io",shortName:"kava",chainId:2222,networkId:2222,icon:{url:"ipfs://QmdpRTk6oL1HRW9xC6cAc4Rnf9gs6zgdAcr4Z3HcLztusm",width:1186,height:360,format:"svg"},explorers:[{name:"Kava EVM Explorer",url:"https://explorer.kava.io",standard:"EIP3091",icon:{url:"ipfs://QmdpRTk6oL1HRW9xC6cAc4Rnf9gs6zgdAcr4Z3HcLztusm",width:1186,height:360,format:"svg"}}],testnet:!1,slug:"kava-evm"},LM={name:"VChain Mainnet",chain:"VChain",rpc:["https://vchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://bc.vcex.xyz"],faucets:[],nativeCurrency:{name:"VNDT",symbol:"VNDT",decimals:18},infoURL:"https://bo.vcex.xyz/",shortName:"VChain",chainId:2223,networkId:2223,explorers:[{name:"VChain Scan",url:"https://scan.vcex.xyz",standard:"EIP3091"}],testnet:!1,slug:"vchain"},UM={name:"BOMB Chain",chain:"BOMB",rpc:["https://bomb-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.bombchain.com"],faucets:[],nativeCurrency:{name:"BOMB Token",symbol:"BOMB",decimals:18},infoURL:"https://www.bombchain.com",shortName:"bomb",chainId:2300,networkId:2300,icon:{url:"ipfs://Qmc44uSjfdNHdcxPTgZAL8eZ8TLe4UmSHibcvKQFyGJxTB",width:1024,height:1024,format:"png"},explorers:[{name:"bombscan",icon:{url:"ipfs://Qmc44uSjfdNHdcxPTgZAL8eZ8TLe4UmSHibcvKQFyGJxTB",width:1024,height:1024,format:"png"},url:"https://bombscan.com",standard:"EIP3091"}],testnet:!1,slug:"bomb-chain"},FM={name:"Arevia",chain:"Arevia",rpc:[],faucets:[],nativeCurrency:{name:"Arev",symbol:"AR\xC9V",decimals:18},infoURL:"",shortName:"arevia",chainId:2309,networkId:2309,explorers:[],status:"incubating",testnet:!1,slug:"arevia"},HM={name:"SOMA Network Testnet",chain:"SOMA",rpc:["https://soma-network-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://data-testnet-v1.somanetwork.io/"],faucets:["https://faucet.somanetwork.io"],nativeCurrency:{name:"SMA",symbol:"tSMA",decimals:18},infoURL:"https://somanetwork.io",shortName:"sma",chainId:2323,networkId:2323,icon:{url:"ipfs://QmadSU2tcyvuzssDYGJ4rVLag43QLnKwcBerZR2zKLVU2N",width:500,height:500,format:"png"},explorers:[{name:"SOMA Testnet Explorer",icon:{url:"ipfs://QmadSU2tcyvuzssDYGJ4rVLag43QLnKwcBerZR2zKLVU2N",width:500,height:500,format:"png"},url:"https://testnet.somascan.io",standard:"none"}],testnet:!0,slug:"soma-network-testnet"},KM={name:"Altcoinchain",chain:"mainnet",rpc:["https://altcoinchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc0.altcoinchain.org/rpc"],faucets:[],nativeCurrency:{name:"Altcoin",symbol:"ALT",decimals:18},infoURL:"https://altcoinchain.org",shortName:"alt",chainId:2330,networkId:2330,icon:{url:"ipfs://QmYwHmGC9CRVcKo1LSesqxU31SDj9vk2iQxcFjQArzhix4",width:720,height:720,format:"png"},status:"active",explorers:[{name:"expedition",url:"http://expedition.altcoinchain.org",icon:{url:"ipfs://QmYwHmGC9CRVcKo1LSesqxU31SDj9vk2iQxcFjQArzhix4",width:720,height:720,format:"png"},standard:"none"}],testnet:!1,slug:"altcoinchain"},OM={name:"SOMA Network Mainnet",chain:"SOMA",rpc:["https://soma-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://data-mainnet-v1.somanetwork.io/"],faucets:["https://airdrop.somanetwork.io"],nativeCurrency:{name:"Soma Native Token",symbol:"SMA",decimals:18},infoURL:"https://somanetwork.io",shortName:"smam",chainId:2332,networkId:2332,icon:{url:"ipfs://QmadSU2tcyvuzssDYGJ4rVLag43QLnKwcBerZR2zKLVU2N",width:500,height:500,format:"png"},status:"incubating",explorers:[{name:"SOMA Explorer Mainnet",icon:{url:"ipfs://QmadSU2tcyvuzssDYGJ4rVLag43QLnKwcBerZR2zKLVU2N",width:500,height:500,format:"png"},url:"https://somascan.io",standard:"none"}],testnet:!1,slug:"soma-network"},$M={name:"Kroma Sepolia",title:"Kroma Testnet Sepolia",chainId:2357,shortName:"kroma-sepolia",chain:"ETH",networkId:2357,nativeCurrency:{name:"Sepolia Ether",symbol:"ETH",decimals:18},rpc:["https://kroma-sepolia.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.sepolia.kroma.network"],faucets:[],infoURL:"https://kroma.network",icon:{url:"ipfs://QmcYafk2je5rMqgnFPDZJTaLi6dgFgq96vmX2Li6DX441B",width:320,height:320,format:"svg"},explorers:[{name:"blockscout",url:"https://blockscout.sepolia.kroma.network",icon:{url:"ipfs://QmcYafk2je5rMqgnFPDZJTaLi6dgFgq96vmX2Li6DX441B",width:320,height:320,format:"svg"},standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-11155111",bridges:[{url:"https://kroma.network/bridge"}]},testnet:!0,slug:"kroma-sepolia"},YM={name:"BOMB Chain Testnet",chain:"BOMB",rpc:["https://bomb-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://bombchain-testnet.ankr.com/bas_full_rpc_1"],faucets:["https://faucet.bombchain-testnet.ankr.com/"],nativeCurrency:{name:"BOMB Token",symbol:"tBOMB",decimals:18},infoURL:"https://www.bombmoney.com",shortName:"bombt",chainId:2399,networkId:2399,icon:{url:"ipfs://Qmc44uSjfdNHdcxPTgZAL8eZ8TLe4UmSHibcvKQFyGJxTB",width:1024,height:1024,format:"png"},explorers:[{name:"bombscan-testnet",icon:{url:"ipfs://Qmc44uSjfdNHdcxPTgZAL8eZ8TLe4UmSHibcvKQFyGJxTB",width:1024,height:1024,format:"png"},url:"https://explorer.bombchain-testnet.ankr.com",standard:"EIP3091"}],testnet:!0,slug:"bomb-chain-testnet"},zM={name:"TCG Verse Mainnet",chain:"TCG Verse",icon:{url:"ipfs://bafkreidg4wpewve5mdxrofneqblydkrjl3oevtgpdf3fk3z3vjqam6ocoe",width:350,height:350,format:"png"},rpc:["https://tcg-verse.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.tcgverse.xyz"],faucets:[],nativeCurrency:{name:"OAS",symbol:"OAS",decimals:18},infoURL:"https://tcgverse.xyz/",shortName:"TCGV",chainId:2400,networkId:2400,explorers:[{name:"TCG Verse Explorer",url:"https://explorer.tcgverse.xyz",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-248"},testnet:!1,slug:"tcg-verse"},qM={name:"XODEX",chain:"XODEX",rpc:["https://xodex.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.xo-dex.com/rpc","https://xo-dex.io"],faucets:[],nativeCurrency:{name:"XODEX Native Token",symbol:"XODEX",decimals:18},infoURL:"https://xo-dex.com",shortName:"xodex",chainId:2415,networkId:10,icon:{url:"ipfs://QmXt49jPfHUmDF4n8TF7ks6txiPztx6qUHanWmHnCoEAhW",width:256,height:256,format:"png"},explorers:[{name:"XODEX Explorer",url:"https://explorer.xo-dex.com",standard:"EIP3091",icon:{url:"ipfs://QmXt49jPfHUmDF4n8TF7ks6txiPztx6qUHanWmHnCoEAhW",width:256,height:256,format:"png"}}],testnet:!1,slug:"xodex"},QM={name:"Kortho Mainnet",chain:"Kortho Chain",rpc:["https://kortho.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://www.kortho-chain.com"],faucets:[],nativeCurrency:{name:"KorthoChain",symbol:"KTO",decimals:11},infoURL:"https://www.kortho.io/",shortName:"ktoc",chainId:2559,networkId:2559,testnet:!1,slug:"kortho"},jM={name:"TechPay Mainnet",chain:"TPC",rpc:["https://techpay.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.techpay.io/"],faucets:[],nativeCurrency:{name:"TechPay",symbol:"TPC",decimals:18},infoURL:"https://techpay.io/",shortName:"tpc",chainId:2569,networkId:2569,icon:{url:"ipfs://QmQyTyJUnhD1dca35Vyj96pm3v3Xyw8xbG9m8HXHw3k2zR",width:578,height:701,format:"svg"},explorers:[{name:"tpcscan",url:"https://tpcscan.com",icon:{url:"ipfs://QmQyTyJUnhD1dca35Vyj96pm3v3Xyw8xbG9m8HXHw3k2zR",width:578,height:701,format:"svg"},standard:"EIP3091"}],testnet:!1,slug:"techpay"},VM={name:"PoCRNet",title:"Proof of Climate awaReness mainnet",chain:"CRC",status:"active",rpc:["https://pocrnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://pocrnet.westeurope.cloudapp.azure.com/http","wss://pocrnet.westeurope.cloudapp.azure.com/ws"],faucets:[],nativeCurrency:{name:"Climate awaReness Coin",symbol:"CRC",decimals:18},infoURL:"https://github.com/ethereum-pocr/pocrnet",shortName:"pocrnet",chainId:2606,networkId:2606,icon:{url:"ipfs://QmRLwpq47tyEd3rfK4tKRhbTvyb3fc7PCutExnL1XAb37A",width:334,height:360,format:"png"},explorers:[{name:"Lite Explorer",url:"https://ethereum-pocr.github.io/explorer/pocrnet",icon:{url:"ipfs://QmRLwpq47tyEd3rfK4tKRhbTvyb3fc7PCutExnL1XAb37A",width:334,height:360,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"pocrnet"},GM={name:"Redlight Chain Mainnet",chain:"REDLC",rpc:["https://redlight-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://dataseed2.redlightscan.finance"],faucets:[],nativeCurrency:{name:"Redlight Coin",symbol:"REDLC",decimals:18},infoURL:"https://redlight.finance/",shortName:"REDLC",chainId:2611,networkId:2611,explorers:[{name:"REDLC Explorer",url:"https://redlightscan.finance",standard:"EIP3091"}],testnet:!1,slug:"redlight-chain"},ZM={name:"EZChain C-Chain Mainnet",chain:"EZC",rpc:["https://ezchain-c-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.ezchain.com/ext/bc/C/rpc"],faucets:[],nativeCurrency:{name:"EZChain",symbol:"EZC",decimals:18},infoURL:"https://ezchain.com",shortName:"EZChain",chainId:2612,networkId:2612,icon:{url:"ipfs://QmPKJbYCFjGmY9X2cA4b9YQjWYHQncmKnFtKyQh9rHkFTb",width:146,height:48,format:"png"},explorers:[{name:"ezchain",url:"https://cchain-explorer.ezchain.com",standard:"EIP3091"}],testnet:!1,slug:"ezchain-c-chain"},XM={name:"EZChain C-Chain Testnet",chain:"EZC",rpc:["https://ezchain-c-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-api.ezchain.com/ext/bc/C/rpc"],faucets:["https://testnet-faucet.ezchain.com"],nativeCurrency:{name:"EZChain",symbol:"EZC",decimals:18},infoURL:"https://ezchain.com",shortName:"Fuji-EZChain",chainId:2613,networkId:2613,icon:{url:"ipfs://QmPKJbYCFjGmY9X2cA4b9YQjWYHQncmKnFtKyQh9rHkFTb",width:146,height:48,format:"png"},explorers:[{name:"ezchain",url:"https://testnet-cchain-explorer.ezchain.com",standard:"EIP3091"}],testnet:!0,slug:"ezchain-c-chain-testnet"},JM={name:"Boba Network Goerli Testnet",chain:"ETH",rpc:["https://boba-network-goerli-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://goerli.boba.network/"],faucets:[],nativeCurrency:{name:"Goerli Ether",symbol:"ETH",decimals:18},infoURL:"https://boba.network",shortName:"Bobagoerli",chainId:2888,networkId:2888,explorers:[{name:"Blockscout",url:"https://testnet.bobascan.com",standard:"none"}],parent:{type:"L2",chain:"eip155-5",bridges:[{url:"https://gateway.goerli.boba.network"}]},testnet:!0,slug:"boba-network-goerli-testnet"},e_={name:"BitYuan Mainnet",chain:"BTY",rpc:["https://bityuan.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.bityuan.com/eth"],faucets:[],nativeCurrency:{name:"BTY",symbol:"BTY",decimals:18},infoURL:"https://www.bityuan.com",shortName:"bty",chainId:2999,networkId:2999,icon:{url:"ipfs://QmUmJVof2m5e4HUXb3GmijWUFsLUNhrQiwwQG3CqcXEtHt",width:91,height:24,format:"png"},explorers:[{name:"BitYuan Block Chain Explorer",url:"https://mainnet.bityuan.com",standard:"none"}],testnet:!1,slug:"bityuan"},t_={name:"CENNZnet Rata",chain:"CENNZnet",rpc:[],faucets:["https://app-faucet.centrality.me"],nativeCurrency:{name:"CPAY",symbol:"CPAY",decimals:18},infoURL:"https://cennz.net",shortName:"cennz-r",chainId:3e3,networkId:3e3,icon:{url:"ipfs://QmWhNm7tTi6SYbiumULDRk956hxgqaZSX77vcxBNn8fvnw",width:112,height:112,format:"svg"},testnet:!1,slug:"cennznet-rata"},n_={name:"CENNZnet Nikau",chain:"CENNZnet",rpc:["https://cennznet-nikau.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://nikau.centrality.me/public"],faucets:["https://app-faucet.centrality.me"],nativeCurrency:{name:"CPAY",symbol:"CPAY",decimals:18},infoURL:"https://cennz.net",shortName:"cennz-n",chainId:3001,networkId:3001,icon:{url:"ipfs://QmWhNm7tTi6SYbiumULDRk956hxgqaZSX77vcxBNn8fvnw",width:112,height:112,format:"svg"},explorers:[{name:"UNcover",url:"https://www.uncoverexplorer.com/?network=Nikau",standard:"none"}],testnet:!1,slug:"cennznet-nikau"},a_={name:"Orlando Chain",chain:"ORL",rpc:["https://orlando-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.orlchain.com"],faucets:[],nativeCurrency:{name:"Orlando",symbol:"ORL",decimals:18},infoURL:"https://orlchain.com",shortName:"ORL",chainId:3031,networkId:3031,icon:{url:"ipfs://QmNsuuBBTHErnuFDcdyzaY8CKoVJtobsLJx2WQjaPjcp7g",width:512,height:528,format:"png"},explorers:[{name:"Orlando (ORL) Explorer",url:"https://orlscan.com",icon:{url:"ipfs://QmNsuuBBTHErnuFDcdyzaY8CKoVJtobsLJx2WQjaPjcp7g",width:512,height:528,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"orlando-chain"},r_={name:"Bifrost Mainnet",title:"The Bifrost Mainnet network",chain:"BFC",rpc:["https://bifrost.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://public-01.mainnet.thebifrost.io/rpc","https://public-02.mainnet.thebifrost.io/rpc"],faucets:[],nativeCurrency:{name:"Bifrost",symbol:"BFC",decimals:18},infoURL:"https://thebifrost.io",shortName:"bfc",chainId:3068,networkId:3068,icon:{url:"ipfs://QmcHvn2Wq91ULyEH5s3uHjosX285hUgyJHwggFJUd3L5uh",width:128,height:128,format:"png"},explorers:[{name:"explorer-thebifrost",url:"https://explorer.mainnet.thebifrost.io",standard:"EIP3091"}],testnet:!1,slug:"bifrost"},i_={name:"Filecoin - Hyperspace testnet",chain:"FIL",icon:{url:"ipfs://QmS9r9XQkMHVomWcSBNDkKkz9n87h9bH9ssabeiKZtANoU",width:1e3,height:1e3,format:"png"},rpc:["https://filecoin-hyperspace-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.hyperspace.node.glif.io/rpc/v1","https://rpc.ankr.com/filecoin_testnet","https://filecoin-hyperspace.chainstacklabs.com/rpc/v1"],faucets:["https://hyperspace.yoga/#faucet"],nativeCurrency:{name:"testnet filecoin",symbol:"tFIL",decimals:18},infoURL:"https://filecoin.io",shortName:"filecoin-hyperspace",chainId:3141,networkId:3141,slip44:1,explorers:[{name:"Filfox - Hyperspace",url:"https://hyperspace.filfox.info/en",standard:"none"},{name:"Glif Explorer - Hyperspace",url:"https://explorer.glif.io/?network=hyperspace",standard:"none"},{name:"Beryx",url:"https://beryx.zondax.ch",standard:"none"},{name:"Dev.storage",url:"https://dev.storage",standard:"none"},{name:"Filscan - Hyperspace",url:"https://hyperspace.filscan.io",standard:"none"}],testnet:!0,slug:"filecoin-hyperspace-testnet"},s_={name:"Debounce Subnet Testnet",chain:"Debounce Network",icon:{url:"ipfs://bafybeib5q4hez37s7b2fx4hqt2q4ji2tuudxjhfdgnp6q3d5mqm6wsxdfq",width:256,height:256,format:"png"},rpc:["https://debounce-subnet-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://dev-rpc.debounce.network"],faucets:[],nativeCurrency:{name:"Debounce Network",symbol:"DB",decimals:18},infoURL:"https://debounce.network",shortName:"debounce-devnet",chainId:3306,networkId:3306,explorers:[{name:"Debounce Devnet Explorer",url:"https://explorer.debounce.network",standard:"EIP3091"}],testnet:!0,slug:"debounce-subnet-testnet"},o_={name:"ZCore Testnet",chain:"Beach",icon:{url:"ipfs://QmQnXu13ym8W1VA3QxocaNVXGAuEPmamSCkS7bBscVk1f4",width:1050,height:1050,format:"png"},rpc:["https://zcore-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.zcore.cash"],faucets:["https://faucet.zcore.cash"],nativeCurrency:{name:"ZCore",symbol:"ZCR",decimals:18},infoURL:"https://zcore.cash",shortName:"zcrbeach",chainId:3331,networkId:3331,testnet:!0,slug:"zcore-testnet"},c_={name:"Web3Q Testnet",chain:"Web3Q",rpc:["https://web3q-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.web3q.io:8545"],faucets:[],nativeCurrency:{name:"Web3Q",symbol:"W3Q",decimals:18},infoURL:"https://testnet.web3q.io/home.w3q/",shortName:"w3q-t",chainId:3333,networkId:3333,explorers:[{name:"w3q-testnet",url:"https://explorer.testnet.web3q.io",standard:"EIP3091"}],testnet:!0,slug:"web3q-testnet"},p_={name:"Web3Q Galileo",chain:"Web3Q",rpc:["https://web3q-galileo.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://galileo.web3q.io:8545"],faucets:[],nativeCurrency:{name:"Web3Q",symbol:"W3Q",decimals:18},infoURL:"https://galileo.web3q.io/home.w3q/",shortName:"w3q-g",chainId:3334,networkId:3334,explorers:[{name:"w3q-galileo",url:"https://explorer.galileo.web3q.io",standard:"EIP3091"}],testnet:!1,slug:"web3q-galileo"},l_={name:"Paribu Net Mainnet",chain:"PRB",rpc:["https://paribu-net.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.paribu.network"],faucets:[],nativeCurrency:{name:"PRB",symbol:"PRB",decimals:18},infoURL:"https://net.paribu.com",shortName:"prb",chainId:3400,networkId:3400,icon:{url:"ipfs://QmVgc77jYo2zrxQjhYwT4KzvSrSZ1DBJraJVX57xAvP8MD",width:2362,height:2362,format:"png"},explorers:[{name:"Paribu Net Explorer",url:"https://explorer.paribu.network",standard:"EIP3091"}],testnet:!1,slug:"paribu-net"},d_={name:"Paribu Net Testnet",chain:"PRB",rpc:["https://paribu-net-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.testnet.paribuscan.com"],faucets:["https://faucet.paribuscan.com"],nativeCurrency:{name:"PRB",symbol:"PRB",decimals:18},infoURL:"https://net.paribu.com",shortName:"prbtestnet",chainId:3500,networkId:3500,icon:{url:"ipfs://QmVgc77jYo2zrxQjhYwT4KzvSrSZ1DBJraJVX57xAvP8MD",width:2362,height:2362,format:"png"},explorers:[{name:"Paribu Net Testnet Explorer",url:"https://testnet.paribuscan.com",standard:"EIP3091"}],testnet:!0,slug:"paribu-net-testnet"},u_={name:"JFIN Chain",chain:"JFIN",rpc:["https://jfin-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.jfinchain.com"],faucets:[],nativeCurrency:{name:"JFIN Coin",symbol:"jfin",decimals:18},infoURL:"https://jfinchain.com",shortName:"jfin",chainId:3501,networkId:3501,explorers:[{name:"JFIN Chain Explorer",url:"https://exp.jfinchain.com",standard:"EIP3091"}],testnet:!1,slug:"jfin-chain"},m_={name:"PandoProject Mainnet",chain:"PandoProject",icon:{url:"ipfs://QmNduBtT5BNGDw7DjRwDvaZBb6gjxf46WD7BYhn4gauGc9",width:1e3,height:1628,format:"png"},rpc:["https://pandoproject.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://eth-rpc-api.pandoproject.org/rpc"],faucets:[],nativeCurrency:{name:"pando-token",symbol:"PTX",decimals:18},infoURL:"https://www.pandoproject.org/",shortName:"pando-mainnet",chainId:3601,networkId:3601,explorers:[{name:"Pando Mainnet Explorer",url:"https://explorer.pandoproject.org",standard:"none"}],testnet:!1,slug:"pandoproject"},h_={name:"PandoProject Testnet",chain:"PandoProject",icon:{url:"ipfs://QmNduBtT5BNGDw7DjRwDvaZBb6gjxf46WD7BYhn4gauGc9",width:1e3,height:1628,format:"png"},rpc:["https://pandoproject-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.ethrpc.pandoproject.org/rpc"],faucets:[],nativeCurrency:{name:"pando-token",symbol:"PTX",decimals:18},infoURL:"https://www.pandoproject.org/",shortName:"pando-testnet",chainId:3602,networkId:3602,explorers:[{name:"Pando Testnet Explorer",url:"https://testnet.explorer.pandoproject.org",standard:"none"}],testnet:!0,slug:"pandoproject-testnet"},y_={name:"Metacodechain",chain:"metacode",rpc:["https://metacodechain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://j.blockcoach.com:8503"],faucets:[],nativeCurrency:{name:"J",symbol:"J",decimals:18},infoURL:"https://j.blockcoach.com:8089",shortName:"metacode",chainId:3666,networkId:3666,explorers:[{name:"meta",url:"https://j.blockcoach.com:8089",standard:"EIP3091"}],testnet:!1,slug:"metacodechain"},f_={name:"Bittex Mainnet",chain:"BTX",rpc:["https://bittex.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc1.bittexscan.info","https://rpc2.bittexscan.info"],faucets:[],nativeCurrency:{name:"Bittex",symbol:"BTX",decimals:18},infoURL:"https://bittexscan.com",shortName:"btx",chainId:3690,networkId:3690,explorers:[{name:"bittexscan",url:"https://bittexscan.com",standard:"EIP3091"}],testnet:!1,slug:"bittex"},g_={name:"Empire Network",chain:"EMPIRE",rpc:["https://empire-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.empirenetwork.io"],faucets:[],nativeCurrency:{name:"Empire",symbol:"EMPIRE",decimals:18},infoURL:"https://www.empirenetwork.io/",shortName:"empire",chainId:3693,networkId:3693,explorers:[{name:"Empire Explorer",url:"https://explorer.empirenetwork.io",standard:"none"}],testnet:!1,slug:"empire-network"},b_={name:"Crossbell",chain:"Crossbell",rpc:["https://crossbell.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.crossbell.io"],faucets:["https://faucet.crossbell.io"],nativeCurrency:{name:"Crossbell Token",symbol:"CSB",decimals:18},infoURL:"https://crossbell.io",shortName:"csb",chainId:3737,networkId:3737,icon:{url:"ipfs://QmS8zEetTb6pwdNpVjv5bz55BXiSMGP9BjTJmNcjcUT91t",format:"svg",width:408,height:408},explorers:[{name:"Crossbell Explorer",url:"https://scan.crossbell.io",standard:"EIP3091"}],testnet:!1,slug:"crossbell"},T_={name:"AlveyChain Mainnet",chain:"ALV",icon:{url:"ipfs://QmSwczpPLBG6ob1a8WLoujthiCPzwEyJNp7WdKRi52qbWX",width:310,height:310,format:"png"},rpc:["https://alveychain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.alveychain.com/rpc","https://rpc2.alvey.io/rpc"],faucets:[],nativeCurrency:{name:"AlveyCoin",symbol:"ALV",decimals:18},infoURL:"https://alveyscan.com/rpc",shortName:"alv",chainId:3797,networkId:3797,explorers:[{name:"AlveyScan",url:"https://alveyscan.com",standard:"EIP3091"}],testnet:!1,slug:"alveychain"},w_={name:"DRAC Network",chain:"DRAC",rpc:["https://drac-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://www.dracscan.com/rpc"],faucets:["https://www.dracscan.io/faucet"],nativeCurrency:{name:"DRAC",symbol:"DRAC",decimals:18},infoURL:"https://drac.io/",shortName:"drac",features:[{name:"EIP155"},{name:"EIP1559"}],chainId:3912,networkId:3912,icon:{url:"ipfs://QmXbsQe7QsVFZJZdBmbZVvS6LgX9ZFoaTMBs9MiQXUzJTw",width:256,height:256,format:"png"},explorers:[{name:"DRAC_Network Scan",url:"https://www.dracscan.io",standard:"EIP3091"}],testnet:!1,slug:"drac-network"},I_={name:"DOS Tesnet",chain:"DOS",rpc:["https://dos-tesnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://test.doschain.com"],faucets:[],nativeCurrency:{name:"DOS",symbol:"DOS",decimals:18},infoURL:"http://doschain.io/",shortName:"dost",chainId:3939,networkId:3939,icon:{url:"ipfs://QmV2Nowzo81F6pi2qFcHePA4MwmmdMKBMUzBJUrxcymxx4",width:512,height:512,format:"png"},explorers:[{name:"DOScan-Test",url:"https://test.doscan.io",icon:{url:"ipfs://QmV2Nowzo81F6pi2qFcHePA4MwmmdMKBMUzBJUrxcymxx4",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"dos-tesnet"},v_={name:"DYNO Mainnet",chain:"DYNO",rpc:["https://dyno.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.dynoprotocol.com"],faucets:["https://faucet.dynoscan.io"],nativeCurrency:{name:"DYNO Token",symbol:"DYNO",decimals:18},infoURL:"https://dynoprotocol.com",shortName:"dyno",chainId:3966,networkId:3966,explorers:[{name:"DYNO Explorer",url:"https://dynoscan.io",standard:"EIP3091"}],testnet:!1,slug:"dyno"},C_={name:"DYNO Testnet",chain:"DYNO",rpc:["https://dyno-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://tapi.dynoprotocol.com"],faucets:["https://faucet.dynoscan.io"],nativeCurrency:{name:"DYNO Token",symbol:"tDYNO",decimals:18},infoURL:"https://dynoprotocol.com",shortName:"tdyno",chainId:3967,networkId:3967,explorers:[{name:"DYNO Explorer",url:"https://testnet.dynoscan.io",standard:"EIP3091"}],testnet:!0,slug:"dyno-testnet"},k_={name:"YuanChain Mainnet",chain:"YCC",rpc:["https://yuanchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.yuan.org/eth"],faucets:[],nativeCurrency:{name:"YCC",symbol:"YCC",decimals:18},infoURL:"https://www.yuan.org",shortName:"ycc",chainId:3999,networkId:3999,icon:{url:"ipfs://QmdbPhiB5W2gbHZGkYsN7i2VTKKP9casmAN2hRnpDaL9W4",width:96,height:96,format:"png"},explorers:[{name:"YuanChain Explorer",url:"https://mainnet.yuan.org",standard:"none"}],testnet:!1,slug:"yuanchain"},E_={name:"Fantom Testnet",chain:"FTM",rpc:["https://fantom-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://fantom-testnet.publicnode.com","https://rpc.testnet.fantom.network"],faucets:["https://faucet.fantom.network"],nativeCurrency:{name:"Fantom",symbol:"FTM",decimals:18},infoURL:"https://docs.fantom.foundation/quick-start/short-guide#fantom-testnet",shortName:"tftm",chainId:4002,networkId:4002,icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/fantom/512.png",height:512,width:512,format:"png"},explorers:[{name:"ftmscan",url:"https://testnet.ftmscan.com",icon:{url:"ipfs://QmRqbK449Fo9sJ3xMpkPbg6uV1weQj4yVV1xNMP9cdPmjf",width:73,height:73,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"fantom-testnet"},x_={name:"Bobaopera Testnet",chain:"Bobaopera Testnet",rpc:["https://bobaopera-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.bobaopera.boba.network","wss://wss.testnet.bobaopera.boba.network","https://replica.testnet.bobaopera.boba.network","wss://replica-wss.testnet.bobaopera.boba.network"],faucets:[],nativeCurrency:{name:"Boba Token",symbol:"BOBA",decimals:18},infoURL:"https://boba.network",shortName:"BobaoperaTestnet",chainId:4051,networkId:4051,explorers:[{name:"Bobaopera Testnet block explorer",url:"https://blockexplorer.testnet.bobaopera.boba.network",standard:"none"}],testnet:!0,slug:"bobaopera-testnet"},R_={name:"Nahmii 3 Mainnet",chain:"Nahmii",rpc:[],status:"incubating",faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://nahmii.io",shortName:"Nahmii3Mainnet",chainId:4061,networkId:4061,icon:{url:"ipfs://QmZhKXgoGpzvthr2eh8ZNgT75YvMtEBegdELAaMPPzf5QT",width:384,height:384,format:"png"},parent:{type:"L2",chain:"eip155-1",bridges:[{url:"https://bridge.nahmii.io"}]},testnet:!1,slug:"nahmii-3"},A_={name:"Nahmii 3 Testnet",chain:"Nahmii",rpc:["https://nahmii-3-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://ngeth.testnet.n3.nahmii.io"],faucets:[],nativeCurrency:{name:"Goerli Ether",symbol:"ETH",decimals:18},infoURL:"https://nahmii.io",shortName:"Nahmii3Testnet",chainId:4062,networkId:4062,icon:{url:"ipfs://QmZhKXgoGpzvthr2eh8ZNgT75YvMtEBegdELAaMPPzf5QT",width:384,height:384,format:"png"},explorers:[{name:"Nahmii 3 Testnet Explorer",url:"https://explorer.testnet.n3.nahmii.io",icon:{url:"ipfs://QmZhKXgoGpzvthr2eh8ZNgT75YvMtEBegdELAaMPPzf5QT",width:384,height:384,format:"png"},standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-3",bridges:[{url:"https://bridge.testnet.n3.nahmii.io"}]},testnet:!0,slug:"nahmii-3-testnet"},P_={name:"Fastex Chain (Bahamut) Oasis Testnet",title:"Bahamut testnet Oasis",icon:{url:"ipfs://QmSemioP83RXnDWwTZbet8VpwJxcFRboX4B3pcdhLZGodP",width:200,height:200,format:"png"},chain:"Fastex Chain (Bahamut)",rpc:["https://fastex-chain-bahamut-oasis-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc1.oasis.bahamutchain.com"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:["https://faucet.oasis.fastexchain.com"],nativeCurrency:{name:"FTN",symbol:"FTN",decimals:18},infoURL:"https://fastexchain.com",shortName:"Oasis",chainId:4090,networkId:4090,explorers:[{name:"blockscout",url:"https://oasis.ftnscan.com",standard:"none"}],testnet:!0,slug:"fastex-chain-bahamut-oasis-testnet"},M_={name:"Bitindi Testnet",chain:"BNI",icon:{url:"ipfs://QmRAFFPiLiSgjGTs9QaZdnR9fsDgyUdTejwSxcnPXo292s",width:60,height:72,format:"png"},rpc:["https://bitindi-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.bitindi.org","https://testnet-rpc.bitindi.org"],faucets:["https://faucet.bitindi.org"],nativeCurrency:{name:"BNI",symbol:"$BNI",decimals:18},infoURL:"https://bitindi.org",shortName:"BNIt",chainId:4096,networkId:4096,explorers:[{name:"Bitindi",url:"https://testnet.bitindiscan.com",standard:"EIP3091"}],testnet:!0,slug:"bitindi-testnet"},__={name:"Bitindi Mainnet",chain:"BNI",icon:{url:"ipfs://QmRAFFPiLiSgjGTs9QaZdnR9fsDgyUdTejwSxcnPXo292s",width:60,height:72,format:"png"},rpc:["https://bitindi.rpc.thirdweb.com/${THIRDWEB_API_KEY}"," https://rpc-mainnet.bitindi.org","https://mainnet-rpc.bitindi.org"],faucets:["https://faucet.bitindi.org"],nativeCurrency:{name:"BNI",symbol:"$BNI",decimals:18},infoURL:"https://bitindi.org",shortName:"BNIm",chainId:4099,networkId:4099,explorers:[{name:"Bitindi",url:"https://bitindiscan.com",standard:"EIP3091"}],testnet:!1,slug:"bitindi"},S_={name:"AIOZ Network Testnet",chain:"AIOZ",icon:{url:"ipfs://QmRAGPFhvQiXgoJkui7WHajpKctGFrJNhHqzYdwcWt5V3Z",width:1024,height:1024,format:"png"},rpc:["https://aioz-network-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://eth-ds.testnet.aioz.network"],faucets:[],nativeCurrency:{name:"testAIOZ",symbol:"AIOZ",decimals:18},infoURL:"https://aioz.network",shortName:"aioz-testnet",chainId:4102,networkId:4102,slip44:60,explorers:[{name:"AIOZ Network Testnet Explorer",url:"https://testnet.explorer.aioz.network",standard:"EIP3091"}],testnet:!0,slug:"aioz-network-testnet"},W_={name:"Tipboxcoin Testnet",chain:"TPBX",icon:{url:"ipfs://QmbiaHnR3fVVofZ7Xq2GYZxwHkLEy3Fh5qDtqnqXD6ACAh",width:192,height:192,format:"png"},rpc:["https://tipboxcoin-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.tipboxcoin.net"],faucets:["https://faucet.tipboxcoin.net"],nativeCurrency:{name:"Tipboxcoin",symbol:"TPBX",decimals:18},infoURL:"https://tipboxcoin.net",shortName:"TPBXt",chainId:4141,networkId:4141,explorers:[{name:"Tipboxcoin",url:"https://testnet.tipboxcoin.net",standard:"EIP3091"}],testnet:!0,slug:"tipboxcoin-testnet"},B_={name:"PHI Network V1",chain:"PHI V1",rpc:["https://phi-network-v1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc1.phi.network","https://rpc2.phi.network"],faucets:[],nativeCurrency:{name:"PHI",symbol:"\u03A6",decimals:18},infoURL:"https://phi.network",shortName:"PHIv1",chainId:4181,networkId:4181,icon:{url:"ipfs://bafkreid6pm3mic7izp3a6zlfwhhe7etd276bjfsq2xash6a4s2vmcdf65a",width:512,height:512,format:"png"},explorers:[{name:"PHI Explorer",url:"https://explorer.phi.network",icon:{url:"ipfs://bafkreid6pm3mic7izp3a6zlfwhhe7etd276bjfsq2xash6a4s2vmcdf65a",width:512,height:512,format:"png"},standard:"none"}],testnet:!1,slug:"phi-network-v1"},N_={name:"Nexi Mainnet",chain:"Nexi",icon:{url:"ipfs://bafybeifxqd7zel2m237kq5enavnh2s6cshaavswigogyvae2wevxy5k2ti",width:512,height:578,format:"png"},rpc:["https://nexi.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.chain.nexi.technology/","https://chain.nexilix.com","https://chain.nexi.evmnode.online"],faucets:[],nativeCurrency:{name:"Nexi",symbol:"NEXI",decimals:18},infoURL:"https://www.nexi.technology/",shortName:"nexi",chainId:4242,networkId:4242,slip44:2500,explorers:[{name:"nexiscan",url:"https://www.nexiscan.com",standard:"EIP3091"}],testnet:!1,slug:"nexi"},D_={name:"Bobafuji Testnet",chain:"Bobafuji Testnet",rpc:["https://bobafuji-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.avax.boba.network","wss://wss.testnet.avax.boba.network","https://replica.testnet.avax.boba.network","wss://replica-wss.testnet.avax.boba.network"],faucets:[],nativeCurrency:{name:"Boba Token",symbol:"BOBA",decimals:18},infoURL:"https://boba.network",shortName:"BobaFujiTestnet",chainId:4328,networkId:4328,explorers:[{name:"Bobafuji Testnet block explorer",url:"https://blockexplorer.testnet.avax.boba.network",standard:"none"}],testnet:!0,slug:"bobafuji-testnet"},L_={name:"Htmlcoin Mainnet",chain:"mainnet",rpc:["https://htmlcoin.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://janus.htmlcoin.com/api/"],faucets:["https://gruvin.me/htmlcoin"],nativeCurrency:{name:"Htmlcoin",symbol:"HTML",decimals:8},infoURL:"https://htmlcoin.com",shortName:"html",chainId:4444,networkId:4444,icon:{url:"ipfs://QmR1oDRSadPerfyWMhKHNP268vPKvpczt5zPawgFSZisz2",width:1e3,height:1e3,format:"png"},status:"active",explorers:[{name:"htmlcoin",url:"https://explorer.htmlcoin.com",icon:{url:"ipfs://QmR1oDRSadPerfyWMhKHNP268vPKvpczt5zPawgFSZisz2",width:1e3,height:1e3,format:"png"},standard:"none"}],testnet:!1,slug:"htmlcoin"},U_={name:"IoTeX Network Mainnet",chain:"iotex.io",rpc:["https://iotex-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://babel-api.mainnet.iotex.io"],faucets:[],nativeCurrency:{name:"IoTeX",symbol:"IOTX",decimals:18},infoURL:"https://iotex.io",shortName:"iotex-mainnet",chainId:4689,networkId:4689,explorers:[{name:"iotexscan",url:"https://iotexscan.io",standard:"EIP3091"}],testnet:!1,slug:"iotex-network"},F_={name:"IoTeX Network Testnet",chain:"iotex.io",rpc:["https://iotex-network-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://babel-api.testnet.iotex.io"],faucets:["https://faucet.iotex.io/"],nativeCurrency:{name:"IoTeX",symbol:"IOTX",decimals:18},infoURL:"https://iotex.io",shortName:"iotex-testnet",chainId:4690,networkId:4690,explorers:[{name:"testnet iotexscan",url:"https://testnet.iotexscan.io",standard:"EIP3091"}],testnet:!0,slug:"iotex-network-testnet"},H_={name:"BlackFort Exchange Network Testnet",chain:"TBXN",rpc:["https://blackfort-exchange-network-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.blackfort.network/rpc"],faucets:[],nativeCurrency:{name:"BlackFort Testnet Token",symbol:"TBXN",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://blackfort.exchange",shortName:"TBXN",chainId:4777,networkId:4777,icon:{url:"ipfs://QmPasA8xykRtJDivB2bcKDiRCUNWDPtfUTTKVAcaF2wVxC",width:1968,height:1968,format:"png"},explorers:[{name:"blockscout",url:"https://testnet-explorer.blackfort.network",icon:{url:"ipfs://bafybeifu5tpui7dk5cjoo54kde7pmuthvnl7sdykobuarsxgu7t2izurnq",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"blackfort-exchange-network-testnet"},K_={name:"Venidium Testnet",chain:"XVM",rpc:["https://venidium-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-evm-testnet.venidium.io"],faucets:[],nativeCurrency:{name:"Venidium",symbol:"XVM",decimals:18},infoURL:"https://venidium.io",shortName:"txvm",chainId:4918,networkId:4918,explorers:[{name:"Venidium EVM Testnet Explorer",url:"https://evm-testnet.venidiumexplorer.com",standard:"EIP3091"}],testnet:!0,slug:"venidium-testnet"},O_={name:"Venidium Mainnet",chain:"XVM",icon:{url:"ipfs://bafkreiaplwlym5g27jm4mjhotfqq6al2cxp3fnkmzdusqjg7wnipq5wn2e",width:1e3,height:1e3,format:"png"},rpc:["https://venidium.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.venidium.io"],faucets:[],nativeCurrency:{name:"Venidium",symbol:"XVM",decimals:18},infoURL:"https://venidium.io",shortName:"xvm",chainId:4919,networkId:4919,explorers:[{name:"Venidium Explorer",url:"https://evm.venidiumexplorer.com",standard:"EIP3091"}],testnet:!1,slug:"venidium"},$_={name:"BlackFort Exchange Network",chain:"BXN",rpc:["https://blackfort-exchange-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.blackfort.network/rpc","https://mainnet-1.blackfort.network/rpc","https://mainnet-2.blackfort.network/rpc","https://mainnet-3.blackfort.network/rpc"],faucets:[],nativeCurrency:{name:"BlackFort Token",symbol:"BXN",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://blackfort.exchange",shortName:"BXN",chainId:4999,networkId:4999,icon:{url:"ipfs://QmPasA8xykRtJDivB2bcKDiRCUNWDPtfUTTKVAcaF2wVxC",width:1968,height:1968,format:"png"},explorers:[{name:"blockscout",url:"https://explorer.blackfort.network",icon:{url:"ipfs://bafybeifu5tpui7dk5cjoo54kde7pmuthvnl7sdykobuarsxgu7t2izurnq",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"blackfort-exchange-network"},Y_={name:"Mantle",chain:"ETH",rpc:["https://mantle.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.mantle.xyz"],faucets:[],nativeCurrency:{name:"BitDAO",symbol:"BIT",decimals:18},infoURL:"https://mantle.xyz",shortName:"mantle",chainId:5e3,networkId:5e3,explorers:[{name:"Mantle Explorer",url:"https://explorer.mantle.xyz",standard:"EIP3091"}],testnet:!1,slug:"mantle"},z_={name:"Mantle Testnet",chain:"ETH",rpc:["https://mantle-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.testnet.mantle.xyz"],faucets:["https://faucet.testnet.mantle.xyz"],nativeCurrency:{name:"Testnet BitDAO",symbol:"BIT",decimals:18},infoURL:"https://mantle.xyz",shortName:"mantle-testnet",chainId:5001,networkId:5001,explorers:[{name:"Mantle Testnet Explorer",url:"https://explorer.testnet.mantle.xyz",standard:"EIP3091"}],testnet:!0,slug:"mantle-testnet"},q_={name:"Fastex Chain (Bahamut)",title:"Bahamut mainnet Sahara",chain:"Fastex Chain (Bahamut)",icon:{url:"ipfs://QmSemioP83RXnDWwTZbet8VpwJxcFRboX4B3pcdhLZGodP",width:200,height:200,format:"png"},rpc:["https://fastex-chain-bahamut.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc1.sahara.bahamutchain.com","https://rpc2.sahara.bahamutchain.com"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"FTN",symbol:"FTN",decimals:18},shortName:"ftn",infoURL:"https://fastexchain.com",chainId:5165,networkId:5165,explorers:[{name:"blockscout",url:"https://ftnscan.com",standard:"none"}],testnet:!1,slug:"fastex-chain-bahamut"},Q_={name:"TLChain Network Mainnet",chain:"TLC",icon:{url:"ipfs://QmaR5TsgnWSjLys6wGaciKUbc5qYL3Es4jtgQcosVqDWR3",width:2048,height:2048,format:"png"},rpc:["https://tlchain-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.tlxscan.com/"],faucets:[],nativeCurrency:{name:"TLChain Network",symbol:"TLC",decimals:18},infoURL:"https://tlchain.network/",shortName:"tlc",chainId:5177,networkId:5177,explorers:[{name:"TLChain Explorer",url:"https://explorer.tlchain.network",standard:"none"}],testnet:!1,slug:"tlchain-network"},j_={name:"EraSwap Mainnet",chain:"ESN",icon:{url:"ipfs://QmV1wZ1RVXeD7216aiVBpLkbBBHWNuoTvcSzpVQsqi2uaH",width:200,height:200,format:"png"},rpc:["https://eraswap.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.eraswap.network","https://rpc-mumbai.mainnet.eraswap.network"],faucets:[],nativeCurrency:{name:"EraSwap",symbol:"ES",decimals:18},infoURL:"https://eraswap.info/",shortName:"es",chainId:5197,networkId:5197,testnet:!1,slug:"eraswap"},V_={name:"Humanode Mainnet",chain:"HMND",rpc:["https://humanode.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://explorer-rpc-http.mainnet.stages.humanode.io"],faucets:[],nativeCurrency:{name:"HMND",symbol:"HMND",decimals:18},infoURL:"https://humanode.io",shortName:"hmnd",chainId:5234,networkId:5234,explorers:[],testnet:!1,slug:"humanode"},G_={name:"Uzmi Network Mainnet",chain:"UZMI",rpc:["https://uzmi-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://network.uzmigames.com.br/"],faucets:[],nativeCurrency:{name:"UZMI",symbol:"UZMI",decimals:18},infoURL:"https://uzmigames.com.br/",shortName:"UZMI",chainId:5315,networkId:5315,testnet:!1,slug:"uzmi-network"},Z_={name:"Nahmii Mainnet",chain:"Nahmii",rpc:["https://nahmii.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://l2.nahmii.io"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://nahmii.io",shortName:"Nahmii",chainId:5551,networkId:5551,icon:{url:"ipfs://QmZhKXgoGpzvthr2eh8ZNgT75YvMtEBegdELAaMPPzf5QT",width:384,height:384,format:"png"},explorers:[{name:"Nahmii mainnet explorer",url:"https://explorer.nahmii.io",icon:{url:"ipfs://QmZhKXgoGpzvthr2eh8ZNgT75YvMtEBegdELAaMPPzf5QT",width:384,height:384,format:"png"},standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-1",bridges:[{url:"https://bridge.nahmii.io"}]},testnet:!1,slug:"nahmii"},X_={name:"Nahmii Testnet",chain:"Nahmii",rpc:["https://nahmii-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://l2.testnet.nahmii.io"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://nahmii.io",shortName:"NahmiiTestnet",chainId:5553,networkId:5553,icon:{url:"ipfs://QmZhKXgoGpzvthr2eh8ZNgT75YvMtEBegdELAaMPPzf5QT",width:384,height:384,format:"png"},explorers:[{name:"blockscout",url:"https://explorer.testnet.nahmii.io",icon:{url:"ipfs://QmZhKXgoGpzvthr2eh8ZNgT75YvMtEBegdELAaMPPzf5QT",width:384,height:384,format:"png"},standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-3",bridges:[{url:"https://bridge.nahmii.io"}]},testnet:!0,slug:"nahmii-testnet"},J_={name:"Chain Verse Mainnet",chain:"CVERSE",icon:{url:"ipfs://QmQyJt28h4wN3QHPXUQJQYQqGiFUD77han3zibZPzHbitk",width:1e3,height:1436,format:"png"},rpc:["https://chain-verse.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.chainverse.info"],faucets:[],nativeCurrency:{name:"Oasys",symbol:"OAS",decimals:18},infoURL:"https://chainverse.info",shortName:"cverse",chainId:5555,networkId:5555,explorers:[{name:"Chain Verse Explorer",url:"https://explorer.chainverse.info",standard:"EIP3091"}],testnet:!1,slug:"chain-verse"},e4={name:"Syscoin Tanenbaum Testnet",chain:"SYS",rpc:["https://syscoin-tanenbaum-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.tanenbaum.io","wss://rpc.tanenbaum.io/wss"],faucets:["https://faucet.tanenbaum.io"],nativeCurrency:{name:"Testnet Syscoin",symbol:"tSYS",decimals:18},infoURL:"https://syscoin.org",shortName:"tsys",chainId:5700,networkId:5700,explorers:[{name:"Syscoin Testnet Block Explorer",url:"https://tanenbaum.io",standard:"EIP3091"}],testnet:!0,slug:"syscoin-tanenbaum-testnet"},t4={name:"Hika Network Testnet",title:"Hika Network Testnet",chain:"HIK",icon:{url:"ipfs://QmW44FPm3CMM2JDs8BQxLNvUtykkUtrGkQkQsUDJSi3Gmp",width:350,height:84,format:"png"},rpc:["https://hika-network-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.hika.network/"],faucets:[],nativeCurrency:{name:"Hik Token",symbol:"HIK",decimals:18},infoURL:"https://hika.network/",shortName:"hik",chainId:5729,networkId:5729,explorers:[{name:"Hika Network Testnet Explorer",url:"https://scan-testnet.hika.network",standard:"none"}],testnet:!0,slug:"hika-network-testnet"},n4={name:"SatoshiChain Testnet",chain:"SATS",icon:{url:"ipfs://QmRegpZQBW4o1imYNsW3d27MQjygBSU23Gf6JKje26nvs7",width:1251,height:1251,format:"png"},rpc:["https://satoshichain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.satoshichain.io"],faucets:["https://faucet.satoshichain.io"],nativeCurrency:{name:"SatoshiChain Coin",symbol:"SATS",decimals:18},infoURL:"https://satoshichain.net",shortName:"sats",chainId:5758,networkId:5758,explorers:[{name:"SatoshiChain Explorer",url:"https://satoshiscan.io",standard:"EIP3091"}],testnet:!0,slug:"satoshichain-testnet"},a4={name:"Ganache",title:"Ganache GUI Ethereum Testnet",chain:"ETH",icon:{url:"ipfs://Qmc9N7V8CiLB4r7FEcG7GojqfiGGsRCZqcFWCahwMohbDW",width:267,height:300,format:"png"},rpc:["https://ganache.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://127.0.0.1:7545"],faucets:[],nativeCurrency:{name:"Ganache Test Ether",symbol:"ETH",decimals:18},infoURL:"https://trufflesuite.com/ganache/",shortName:"ggui",chainId:5777,networkId:5777,explorers:[],testnet:!0,slug:"ganache"},r4={name:"Ontology Testnet",chain:"Ontology",icon:{url:"ipfs://bafkreigmvn6spvbiirtutowpq6jmetevbxoof5plzixjoerbeswy4htfb4",width:400,height:400,format:"png"},rpc:["https://ontology-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://polaris1.ont.io:20339","http://polaris2.ont.io:20339","http://polaris3.ont.io:20339","http://polaris4.ont.io:20339","https://polaris1.ont.io:10339","https://polaris2.ont.io:10339","https://polaris3.ont.io:10339","https://polaris4.ont.io:10339"],faucets:["https://developer.ont.io/"],nativeCurrency:{name:"ONG",symbol:"ONG",decimals:18},infoURL:"https://ont.io/",shortName:"OntologyTestnet",chainId:5851,networkId:5851,explorers:[{name:"explorer",url:"https://explorer.ont.io/testnet",standard:"EIP3091"}],testnet:!0,slug:"ontology-testnet"},i4={name:"Wegochain Rubidium Mainnet",chain:"RBD",rpc:["https://wegochain-rubidium.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://proxy.wegochain.io","http://wallet.wegochain.io:7764"],faucets:[],nativeCurrency:{name:"Rubid",symbol:"RBD",decimals:18},infoURL:"https://www.wegochain.io",shortName:"rbd",chainId:5869,networkId:5869,explorers:[{name:"wegoscan2",url:"https://scan2.wegochain.io",standard:"EIP3091"}],testnet:!1,slug:"wegochain-rubidium"},s4={name:"Tres Testnet",chain:"TresLeches",rpc:["https://tres-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-test.tresleches.finance/"],faucets:["http://faucet.tresleches.finance:8080"],nativeCurrency:{name:"TRES",symbol:"TRES",decimals:18},infoURL:"https://treschain.com",shortName:"TRESTEST",chainId:6065,networkId:6065,icon:{url:"ipfs://QmS33ypsZ1Hx5LMMACaJaxePy9QNYMwu4D12niobExLK74",width:512,height:512,format:"png"},explorers:[{name:"treslechesexplorer",url:"https://explorer-test.tresleches.finance",icon:{url:"ipfs://QmS33ypsZ1Hx5LMMACaJaxePy9QNYMwu4D12niobExLK74",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"tres-testnet"},o4={name:"Tres Mainnet",chain:"TresLeches",rpc:["https://tres.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.tresleches.finance/","https://rpc.treschain.io/"],faucets:[],nativeCurrency:{name:"TRES",symbol:"TRES",decimals:18},infoURL:"https://treschain.com",shortName:"TRESMAIN",chainId:6066,networkId:6066,icon:{url:"ipfs://QmS33ypsZ1Hx5LMMACaJaxePy9QNYMwu4D12niobExLK74",width:512,height:512,format:"png"},explorers:[{name:"treslechesexplorer",url:"https://explorer.tresleches.finance",icon:{url:"ipfs://QmS33ypsZ1Hx5LMMACaJaxePy9QNYMwu4D12niobExLK74",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"tres"},c4={name:"Peerpay",chain:"P2P",rpc:["https://peerpay.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://peerpay.su.gy/p2p"],faucets:[],nativeCurrency:{name:"Peerpay",symbol:"P2P",decimals:18},infoURL:"https://peerpay.su.gy",shortName:"Peerpay",chainId:6502,networkId:6502,explorers:[],testnet:!1,slug:"peerpay"},p4={name:"Scolcoin WeiChain Testnet",chain:"SCOLWEI-testnet",rpc:["https://scolcoin-weichain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.scolcoin.com"],faucets:["https://faucet.scolcoin.com"],nativeCurrency:{name:"Scolcoin",symbol:"SCOL",decimals:18},infoURL:"https://scolcoin.com",shortName:"SRC-test",chainId:6552,networkId:6552,icon:{url:"ipfs://QmVES1eqDXhP8SdeCpM85wvjmhrQDXGRquQebDrSdvJqpt",width:792,height:822,format:"png"},explorers:[{name:"Scolscan Testnet Explorer",url:"https://testnet-explorer.scolcoin.com",standard:"EIP3091"}],testnet:!0,slug:"scolcoin-weichain-testnet"},l4={name:"Pixie Chain Mainnet",chain:"PixieChain",rpc:["https://pixie-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://http-mainnet.chain.pixie.xyz","wss://ws-mainnet.chain.pixie.xyz"],faucets:[],nativeCurrency:{name:"Pixie Chain Native Token",symbol:"PIX",decimals:18},infoURL:"https://chain.pixie.xyz",shortName:"pixie-chain",chainId:6626,networkId:6626,explorers:[{name:"blockscout",url:"https://scan.chain.pixie.xyz",standard:"none"}],testnet:!1,slug:"pixie-chain"},d4={name:"IRIShub",chain:"IRIShub",rpc:["https://irishub.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evmrpc.irishub-1.irisnet.org"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"Eris",symbol:"ERIS",decimals:18},infoURL:"https://www.irisnet.org",shortName:"iris",chainId:6688,networkId:6688,icon:{url:"ipfs://QmTKgKs7kJiWDhdjbELE4Y2HVZ36KS4bYkNCbXdsXk66sW",width:1062,height:1062,format:"png"},explorers:[{name:"IRISHub Cosmos Explorer (IOBScan)",url:"https://irishub.iobscan.io",standard:"none",icon:{url:"ipfs://QmTKgKs7kJiWDhdjbELE4Y2HVZ36KS4bYkNCbXdsXk66sW",width:1062,height:1062,format:"png"}}],testnet:!1,slug:"irishub"},u4={name:"Gold Smart Chain Mainnet",chain:"STAND",icon:{url:"ipfs://QmPNuymyaKLJhCaXnyrsL8358FeTxabZFsaxMmWNU4Tzt3",width:396,height:418,format:"png"},rpc:["https://gold-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-mainnet.goldsmartchain.com"],faucets:["https://faucet.goldsmartchain.com"],nativeCurrency:{name:"Standard in Gold",symbol:"STAND",decimals:18},infoURL:"https://goldsmartchain.com",shortName:"STANDm",chainId:6789,networkId:6789,explorers:[{name:"Gold Smart Chain",url:"https://mainnet.goldsmartchain.com",standard:"EIP3091"}],testnet:!1,slug:"gold-smart-chain"},m4={name:"Tomb Chain Mainnet",chain:"Tomb Chain",rpc:["https://tomb-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.tombchain.com/"],faucets:[],nativeCurrency:{name:"Tomb",symbol:"TOMB",decimals:18},infoURL:"https://tombchain.com/",shortName:"tombchain",chainId:6969,networkId:6969,explorers:[{name:"tombscout",url:"https://tombscout.com",standard:"none"}],parent:{type:"L2",chain:"eip155-250",bridges:[{url:"https://lif3.com/bridge"}]},testnet:!1,slug:"tomb-chain"},h4={name:"PolySmartChain",chain:"PSC",rpc:["https://polysmartchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://seed0.polysmartchain.com/","https://seed1.polysmartchain.com/","https://seed2.polysmartchain.com/"],faucets:[],nativeCurrency:{name:"PSC",symbol:"PSC",decimals:18},infoURL:"https://www.polysmartchain.com/",shortName:"psc",chainId:6999,networkId:6999,testnet:!1,slug:"polysmartchain"},y4={name:"ZetaChain Mainnet",chain:"ZetaChain",icon:{url:"ipfs://QmeABfwZ2nAxDzYyqZ1LEypPgQFMjEyrx8FfnoPLkF8R3f",width:1280,height:1280,format:"png"},rpc:["https://zetachain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.mainnet.zetachain.com/evm"],faucets:[],nativeCurrency:{name:"Zeta",symbol:"ZETA",decimals:18},infoURL:"https://docs.zetachain.com/",shortName:"zetachain-mainnet",chainId:7e3,networkId:7e3,status:"incubating",explorers:[{name:"ZetaChain Mainnet Explorer",url:"https://explorer.mainnet.zetachain.com",standard:"none"}],testnet:!1,slug:"zetachain"},f4={name:"ZetaChain Athens Testnet",chain:"ZetaChain",icon:{url:"ipfs://QmeABfwZ2nAxDzYyqZ1LEypPgQFMjEyrx8FfnoPLkF8R3f",width:1280,height:1280,format:"png"},rpc:["https://zetachain-athens-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.athens2.zetachain.com/evm"],faucets:["https://labs.zetachain.com/get-zeta"],nativeCurrency:{name:"Zeta",symbol:"aZETA",decimals:18},infoURL:"https://docs.zetachain.com/",shortName:"zetachain-athens",chainId:7001,networkId:7001,status:"active",explorers:[{name:"ZetaChain Athens Testnet Explorer",url:"https://explorer.athens.zetachain.com",standard:"none"}],testnet:!0,slug:"zetachain-athens-testnet"},g4={name:"Ella the heart",chain:"ella",icon:{url:"ipfs://QmVkAhSaHhH3wKoLT56Aq8dNyEH4RySPEpqPcLwsptGBDm",width:512,height:512,format:"png"},rpc:["https://ella-the-heart.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.ella.network"],faucets:[],nativeCurrency:{name:"Ella",symbol:"ELLA",decimals:18},infoURL:"https://ella.network",shortName:"ELLA",chainId:7027,networkId:7027,explorers:[{name:"Ella",url:"https://ella.network",standard:"EIP3091"}],testnet:!1,slug:"ella-the-heart"},b4={name:"Planq Mainnet",chain:"Planq",icon:{url:"ipfs://QmWEy9xK5BoqxPuVs7T48WM4exJrxzkEFt45iHcxWqUy8D",width:256,height:256,format:"png"},rpc:["https://planq.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm-rpc.planq.network"],faucets:[],nativeCurrency:{name:"Planq",symbol:"PLQ",decimals:18},infoURL:"https://planq.network",shortName:"planq",chainId:7070,networkId:7070,explorers:[{name:"Planq EVM Explorer (Blockscout)",url:"https://evm.planq.network",standard:"none"},{name:"Planq Cosmos Explorer (BigDipper)",url:"https://explorer.planq.network",standard:"none"}],testnet:!1,slug:"planq"},T4={name:"KLYNTAR",chain:"KLY",rpc:["https://klyntar.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm.klyntar.org/kly_evm_rpc","https://evm.klyntarscan.org/kly_evm_rpc"],faucets:[],nativeCurrency:{name:"KLYNTAR",symbol:"KLY",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://klyntar.org",shortName:"kly",chainId:7331,networkId:7331,icon:{url:"ipfs://QmaDr9R6dKnZLsogRxojjq4dwXuXcudR8UeTZ8Nq553K4u",width:400,height:400,format:"png"},explorers:[],status:"incubating",testnet:!1,slug:"klyntar"},w4={name:"Shyft Mainnet",chain:"SHYFT",icon:{url:"ipfs://QmUkFZC2ZmoYPTKf7AHdjwRPZoV2h1MCuHaGM4iu8SNFpi",width:400,height:400,format:"svg"},rpc:["https://shyft.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.shyft.network/"],faucets:[],nativeCurrency:{name:"Shyft",symbol:"SHYFT",decimals:18},infoURL:"https://shyft.network",shortName:"shyft",chainId:7341,networkId:7341,slip44:2147490989,explorers:[{name:"Shyft BX",url:"https://bx.shyft.network",standard:"EIP3091"}],testnet:!1,slug:"shyft"},I4={name:"Raba Network Mainnet",chain:"Raba",icon:{url:"ipfs://QmatP9qMHEYoXqRDyHMTyjYRQa6j6Gk7pmv1QLxQkvpGRP",width:787,height:750,format:"png"},rpc:["https://raba-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.x.raba.app/","wss://rpc.x.raba.app/ws/"],faucets:[],nativeCurrency:{name:"Raba",symbol:"RABA",decimals:18},infoURL:"https://x.raba.app/",shortName:"raba",chainId:7484,networkId:7484,explorers:[{name:"raba",url:"https://x.raba.app/explorer",standard:"none"}],testnet:!1,slug:"raba-network"},v4={name:"ADIL Testnet",chain:"ADIL",icon:{url:"ipfs://QmeHNYUx6n8CjUFSLWNT17oAtDYrUq6r8buyvGCUBXCJw6",width:500,height:500,format:"png"},rpc:["https://adil-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.adilchain-rpc.io"],faucets:["https://testnet-faucet.adil-scan.io"],nativeCurrency:{name:"Testnet ADIL",symbol:"ADIL",decimals:18},infoURL:"https://adilchain.io",shortName:"tadil",chainId:7575,networkId:7575,explorers:[{name:"ADIL Testnet Explorer",url:"https://testnet.adilchain-scan.io",standard:"EIP3091"}],testnet:!0,slug:"adil-testnet"},C4={name:"Adil Chain V2 Mainnet",chain:"ADIL",icon:{url:"ipfs://QmeHNYUx6n8CjUFSLWNT17oAtDYrUq6r8buyvGCUBXCJw6",width:500,height:500,format:"png"},rpc:["https://adil-chain-v2.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://adilchain-rpc.io"],faucets:[],nativeCurrency:{name:"ADIL",symbol:"ADIL",decimals:18},infoURL:"https://adilchain.io",shortName:"adil",chainId:7576,networkId:7576,explorers:[{name:"ADIL Mainnet Explorer",url:"https://adilchain-scan.io",standard:"EIP3091"}],testnet:!1,slug:"adil-chain-v2"},k4={name:"The Root Network - Mainnet",chain:"TRN",rpc:["https://the-root-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://root.rootnet.live/archive","wss://root.rootnet.live/archive/ws"],faucets:[],nativeCurrency:{name:"XRP",symbol:"XRP",decimals:6},infoURL:"https://www.futureverse.com/technology/root",shortName:"trn-mainnet",chainId:7668,networkId:7668,explorers:[{name:"rootnet",url:"https://explorer.rootnet.live",standard:"EIP3091"}],testnet:!1,slug:"the-root-network"},E4={name:"The Root Network - Porcini Testnet",chain:"TRN",rpc:["https://the-root-network-porcini-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://porcini.rootnet.app/archive","wss://porcini.rootnet.app/archive/ws"],faucets:[],nativeCurrency:{name:"XRP",symbol:"XRP",decimals:6},infoURL:"https://www.futureverse.com/technology/root",shortName:"trn-porcini",chainId:7672,networkId:7672,explorers:[{name:"rootnet",url:"https://explorer.rootnet.cloud",standard:"EIP3091"}],testnet:!0,slug:"the-root-network-porcini-testnet"},x4={name:"Canto",chain:"Canto",rpc:["https://canto.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://canto.slingshot.finance","https://canto.neobase.one","https://mainnode.plexnode.org:8545"],faucets:[],nativeCurrency:{name:"Canto",symbol:"CANTO",decimals:18},infoURL:"https://canto.io",shortName:"canto",chainId:7700,networkId:7700,explorers:[{name:"Canto EVM Explorer (Blockscout)",url:"https://evm.explorer.canto.io",standard:"none"},{name:"Canto Cosmos Explorer",url:"https://cosmos-explorers.neobase.one",standard:"none"},{name:"Canto EVM Explorer (Blockscout)",url:"https://tuber.build",standard:"none"}],testnet:!1,slug:"canto"},R4={name:"Canto Tesnet",chain:"Canto",rpc:["https://canto-tesnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-archive.plexnode.wtf"],faucets:[],nativeCurrency:{name:"Testnet Canto",symbol:"CANTO",decimals:18},infoURL:"https://canto.io",shortName:"TestnetCanto",chainId:7701,networkId:7701,explorers:[{name:"Canto Testnet EVM Explorer (Blockscout)",url:"https://testnet.tuber.build",standard:"none"}],testnet:!0,slug:"canto-tesnet"},A4={name:"Rise of the Warbots Testnet",chain:"nmactest",rpc:["https://rise-of-the-warbots-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet1.riseofthewarbots.com","https://testnet2.riseofthewarbots.com","https://testnet3.riseofthewarbots.com","https://testnet4.riseofthewarbots.com","https://testnet5.riseofthewarbots.com"],faucets:[],nativeCurrency:{name:"Nano Machines",symbol:"NMAC",decimals:18},infoURL:"https://riseofthewarbots.com/",shortName:"RiseOfTheWarbotsTestnet",chainId:7777,networkId:7777,explorers:[{name:"avascan",url:"https://testnet.avascan.info/blockchain/2mZ9doojfwHzXN3VXDQELKnKyZYxv7833U8Yq5eTfFx3hxJtiy",standard:"none"}],testnet:!0,slug:"rise-of-the-warbots-testnet"},P4={name:"Hazlor Testnet",chain:"SCAS",rpc:["https://hazlor-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://hatlas.rpc.hazlor.com:8545","wss://hatlas.rpc.hazlor.com:8546"],faucets:["https://faucet.hazlor.com"],nativeCurrency:{name:"Hazlor Test Coin",symbol:"TSCAS",decimals:18},infoURL:"https://hazlor.com",shortName:"tscas",chainId:7878,networkId:7878,explorers:[{name:"Hazlor Testnet Explorer",url:"https://explorer.hazlor.com",standard:"none"}],testnet:!0,slug:"hazlor-testnet"},M4={name:"DOS Chain",chain:"DOS",rpc:["https://dos-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://main.doschain.com"],faucets:[],nativeCurrency:{name:"DOS",symbol:"DOS",decimals:18},infoURL:"https://doschain.io",shortName:"dos",chainId:7979,networkId:7979,icon:{url:"ipfs://QmV2Nowzo81F6pi2qFcHePA4MwmmdMKBMUzBJUrxcymxx4",width:512,height:512,format:"png"},explorers:[{name:"DOScan",url:"https://doscan.io",icon:{url:"ipfs://QmV2Nowzo81F6pi2qFcHePA4MwmmdMKBMUzBJUrxcymxx4",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"dos-chain"},_4={name:"Teleport",chain:"Teleport",rpc:["https://teleport.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm-rpc.teleport.network"],faucets:[],nativeCurrency:{name:"Tele",symbol:"TELE",decimals:18},infoURL:"https://teleport.network",shortName:"teleport",chainId:8e3,networkId:8e3,icon:{url:"ipfs://QmdP1sLnsmW9dwnfb1GxAXU1nHDzCvWBQNumvMXpdbCSuz",width:390,height:390,format:"svg"},explorers:[{name:"Teleport EVM Explorer (Blockscout)",url:"https://evm-explorer.teleport.network",standard:"none",icon:{url:"ipfs://QmdP1sLnsmW9dwnfb1GxAXU1nHDzCvWBQNumvMXpdbCSuz",width:390,height:390,format:"svg"}},{name:"Teleport Cosmos Explorer (Big Dipper)",url:"https://explorer.teleport.network",standard:"none",icon:{url:"ipfs://QmdP1sLnsmW9dwnfb1GxAXU1nHDzCvWBQNumvMXpdbCSuz",width:390,height:390,format:"svg"}}],testnet:!1,slug:"teleport"},S4={name:"Teleport Testnet",chain:"Teleport",rpc:["https://teleport-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm-rpc.testnet.teleport.network"],faucets:["https://chain-docs.teleport.network/testnet/faucet.html"],nativeCurrency:{name:"Tele",symbol:"TELE",decimals:18},infoURL:"https://teleport.network",shortName:"teleport-testnet",chainId:8001,networkId:8001,icon:{url:"ipfs://QmdP1sLnsmW9dwnfb1GxAXU1nHDzCvWBQNumvMXpdbCSuz",width:390,height:390,format:"svg"},explorers:[{name:"Teleport EVM Explorer (Blockscout)",url:"https://evm-explorer.testnet.teleport.network",standard:"none",icon:{url:"ipfs://QmdP1sLnsmW9dwnfb1GxAXU1nHDzCvWBQNumvMXpdbCSuz",width:390,height:390,format:"svg"}},{name:"Teleport Cosmos Explorer (Big Dipper)",url:"https://explorer.testnet.teleport.network",standard:"none",icon:{url:"ipfs://QmdP1sLnsmW9dwnfb1GxAXU1nHDzCvWBQNumvMXpdbCSuz",width:390,height:390,format:"svg"}}],testnet:!0,slug:"teleport-testnet"},W4={name:"MDGL Testnet",chain:"MDGL",rpc:["https://mdgl-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.mdgl.io"],faucets:[],nativeCurrency:{name:"MDGL Token",symbol:"MDGLT",decimals:18},infoURL:"https://mdgl.io",shortName:"mdgl",chainId:8029,networkId:8029,testnet:!0,slug:"mdgl-testnet"},B4={name:"Shardeum Liberty 1.X",chain:"Shardeum",icon:{url:"ipfs://Qma1bfuubpepKn7DLDy4NPSKDeT3S4VPCNhu6UmdGrb6YD",width:609,height:533,format:"png"},rpc:["https://shardeum-liberty-1-x.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://liberty10.shardeum.org/"],faucets:["https://faucet.liberty10.shardeum.org"],nativeCurrency:{name:"Shardeum SHM",symbol:"SHM",decimals:18},infoURL:"https://docs.shardeum.org/",shortName:"Liberty10",chainId:8080,networkId:8080,explorers:[{name:"Shardeum Scan",url:"https://explorer-liberty10.shardeum.org",standard:"EIP3091"}],redFlags:["reusedChainId"],testnet:!1,slug:"shardeum-liberty-1-x"},N4={name:"Shardeum Liberty 2.X",chain:"Shardeum",icon:{url:"ipfs://Qma1bfuubpepKn7DLDy4NPSKDeT3S4VPCNhu6UmdGrb6YD",width:609,height:533,format:"png"},rpc:["https://shardeum-liberty-2-x.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://liberty20.shardeum.org/"],faucets:["https://faucet.liberty20.shardeum.org"],nativeCurrency:{name:"Shardeum SHM",symbol:"SHM",decimals:18},infoURL:"https://docs.shardeum.org/",shortName:"Liberty20",chainId:8081,networkId:8081,explorers:[{name:"Shardeum Scan",url:"https://explorer-liberty20.shardeum.org",standard:"EIP3091"}],redFlags:["reusedChainId"],testnet:!1,slug:"shardeum-liberty-2-x"},D4={name:"Shardeum Sphinx 1.X",chain:"Shardeum",icon:{url:"ipfs://Qma1bfuubpepKn7DLDy4NPSKDeT3S4VPCNhu6UmdGrb6YD",width:609,height:533,format:"png"},rpc:["https://shardeum-sphinx-1-x.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://sphinx.shardeum.org/"],faucets:["https://faucet-sphinx.shardeum.org/"],nativeCurrency:{name:"Shardeum SHM",symbol:"SHM",decimals:18},infoURL:"https://docs.shardeum.org/",shortName:"Sphinx10",chainId:8082,networkId:8082,explorers:[{name:"Shardeum Scan",url:"https://explorer-sphinx.shardeum.org",standard:"EIP3091"}],redFlags:["reusedChainId"],testnet:!1,slug:"shardeum-sphinx-1-x"},L4={name:"BitEth",chain:"BTE",rpc:["https://biteth.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.biteth.org"],faucets:[],nativeCurrency:{name:"BitEth",symbol:"BTE",decimals:18},infoURL:"https://biteth.org",shortName:"BitEth",chainId:8086,networkId:8086,explorers:[],testnet:!1,slug:"biteth"},U4={name:"StreamuX Blockchain",chain:"StreamuX",rpc:["https://streamux-blockchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://u0ma6t6heb:KDNwOsRDGcyM2Oeui1p431Bteb4rvcWkuPgQNHwB4FM@u0xy4x6x82-u0e2mg517m-rpc.us0-aws.kaleido.io/"],faucets:[],nativeCurrency:{name:"StreamuX",symbol:"SmuX",decimals:18},infoURL:"https://www.streamux.cloud",shortName:"StreamuX",chainId:8098,networkId:8098,testnet:!1,slug:"streamux-blockchain"},F4={name:"Qitmeer Network Testnet",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Qitmeer Testnet",symbol:"MEER-T",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"meertest",chainId:8131,networkId:8131,icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},explorers:[{name:"meerscan testnet",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},url:"https://testnet.qng.meerscan.io",standard:"none"}],testnet:!0,slug:"qitmeer-network-testnet"},H4={name:"Qitmeer Network Mixnet",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Qitmeer Mixnet",symbol:"MEER-M",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"meermix",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:8132,networkId:8132,status:"incubating",testnet:!1,slug:"qitmeer-network-mixnet"},K4={name:"Qitmeer Network Privnet",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Qitmeer Privnet",symbol:"MEER-P",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"meerpriv",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:8133,networkId:8133,status:"incubating",testnet:!1,slug:"qitmeer-network-privnet"},O4={name:"Amana",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Amana Mainnet",symbol:"MEER",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"amana",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:8134,networkId:8134,status:"incubating",testnet:!1,slug:"amana"},$4={name:"Flana",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Flana Mainnet",symbol:"MEER",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"flana",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:8135,networkId:8135,status:"incubating",testnet:!1,slug:"flana"},Y4={name:"Mizana",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Mizana Mainnet",symbol:"MEER",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"mizana",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:8136,networkId:8136,status:"incubating",testnet:!1,slug:"mizana"},z4={name:"BeOne Chain Testnet",chain:"BOC",rpc:["https://beone-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://pre-boc1.beonechain.com","https://pre-boc2.beonechain.com","https://pre-boc3.beonechain.com"],faucets:["https://testnet.beonescan.com/faucet"],nativeCurrency:{name:"BeOne Chain Testnet",symbol:"BOC",decimals:18},infoURL:"https://testnet.beonescan.com",shortName:"tBOC",chainId:8181,networkId:8181,icon:{url:"ipfs://QmbVLQnaMDu86bPyKgCvTGhFBeYwjr15hQnrCcsp1EkAGL",width:500,height:500,format:"png"},explorers:[{name:"BeOne Chain Testnet",url:"https://testnet.beonescan.com",icon:{url:"ipfs://QmbVLQnaMDu86bPyKgCvTGhFBeYwjr15hQnrCcsp1EkAGL",width:500,height:500,format:"png"},standard:"none"}],testnet:!0,slug:"beone-chain-testnet"},q4={name:"Klaytn Mainnet Cypress",chain:"KLAY",rpc:["https://klaytn-cypress.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://klaytn.blockpi.network/v1/rpc/public","https://klaytn-mainnet-rpc.allthatnode.com:8551","https://public-en-cypress.klaytn.net","https://public-node-api.klaytnapi.com/v1/cypress"],faucets:[],nativeCurrency:{name:"KLAY",symbol:"KLAY",decimals:18},infoURL:"https://www.klaytn.com/",shortName:"Cypress",chainId:8217,networkId:8217,slip44:8217,explorers:[{name:"klaytnfinder",url:"https://www.klaytnfinder.io/",standard:"none"},{name:"Klaytnscope",url:"https://scope.klaytn.com",standard:"none"}],icon:{format:"png",url:"ipfs://bafkreigtgdivlmfvf7trqjqy4vkz2d26xk3iif6av265v4klu5qavsugm4",height:1e3,width:1e3},testnet:!1,slug:"klaytn-cypress"},Q4={name:"Blockton Blockchain",chain:"Blockton Blockchain",icon:{url:"ipfs://bafkreig3hoedafisrgc6iffdo2jcblm6kov35h72gcblc3zkmt7t4ucwhy",width:800,height:800,format:"png"},rpc:["https://blockton-blockchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.blocktonscan.com/"],faucets:["https://faucet.blocktonscan.com/"],nativeCurrency:{name:"BLOCKTON",symbol:"BTON",decimals:18},infoURL:"https://blocktoncoin.com",shortName:"BTON",chainId:8272,networkId:8272,explorers:[{name:"Blockton Explorer",url:"https://blocktonscan.com",standard:"none"}],testnet:!1,slug:"blockton-blockchain"},j4={name:"KorthoTest",chain:"Kortho",rpc:["https://korthotest.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://www.krotho-test.net"],faucets:[],nativeCurrency:{name:"Kortho Test",symbol:"KTO",decimals:11},infoURL:"https://www.kortho.io/",shortName:"Kortho",chainId:8285,networkId:8285,testnet:!0,slug:"korthotest"},V4={name:"Dracones Financial Services",title:"The Dracones Mainnet",chain:"FUCK",rpc:["https://dracones-financial-services.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.dracones.net/"],faucets:[],nativeCurrency:{name:"Functionally Universal Coin Kind",symbol:"FUCK",decimals:18},infoURL:"https://wolfery.com",shortName:"fuck",chainId:8387,networkId:8387,icon:{url:"ipfs://bafybeibpyckp65pqjvrvqhdt26wqoqk55m6anshbfgyqnaemn6l34nlwya",width:1024,height:1024,format:"png"},explorers:[],testnet:!1,slug:"dracones-financial-services"},G4={name:"Base",chain:"ETH",rpc:[],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://base.org",shortName:"base",chainId:8453,networkId:8453,status:"incubating",icon:{url:"ipfs://QmW5Vn15HeRkScMfPcW12ZdZcC2yUASpu6eCsECRdEmjjj/base-512.png",height:512,width:512,format:"png"},testnet:!1,slug:"base"},Z4={name:"Toki Network",chain:"TOKI",rpc:["https://toki-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.buildwithtoki.com/v0/rpc"],faucets:[],nativeCurrency:{name:"Toki",symbol:"TOKI",decimals:18},infoURL:"https://www.buildwithtoki.com",shortName:"toki",chainId:8654,networkId:8654,icon:{url:"ipfs://QmbCBBH4dFHGr8u1yQspCieQG9hLcPFNYdRx1wnVsX8hUw",width:512,height:512,format:"svg"},explorers:[],testnet:!1,slug:"toki-network"},X4={name:"Toki Testnet",chain:"TOKI",rpc:["https://toki-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.buildwithtoki.com/v0/rpc"],faucets:[],nativeCurrency:{name:"Toki",symbol:"TOKI",decimals:18},infoURL:"https://www.buildwithtoki.com",shortName:"toki-testnet",chainId:8655,networkId:8655,icon:{url:"ipfs://QmbCBBH4dFHGr8u1yQspCieQG9hLcPFNYdRx1wnVsX8hUw",width:512,height:512,format:"svg"},explorers:[],testnet:!0,slug:"toki-testnet"},J4={name:"TOOL Global Mainnet",chain:"OLO",rpc:["https://tool-global.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-web3.wolot.io"],faucets:[],nativeCurrency:{name:"TOOL Global",symbol:"OLO",decimals:18},infoURL:"https://ibdt.io",shortName:"olo",chainId:8723,networkId:8723,slip44:479,explorers:[{name:"OLO Block Explorer",url:"https://www.olo.network",standard:"EIP3091"}],testnet:!1,slug:"tool-global"},eS={name:"TOOL Global Testnet",chain:"OLO",rpc:["https://tool-global-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-web3.wolot.io"],faucets:["https://testnet-explorer.wolot.io"],nativeCurrency:{name:"TOOL Global",symbol:"OLO",decimals:18},infoURL:"https://testnet-explorer.wolot.io",shortName:"tolo",chainId:8724,networkId:8724,slip44:479,testnet:!0,slug:"tool-global-testnet"},tS={name:"Alph Network",chain:"ALPH",rpc:["https://alph-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.alph.network","wss://rpc.alph.network"],faucets:[],nativeCurrency:{name:"Alph Network",symbol:"ALPH",decimals:18},infoURL:"https://alph.network",shortName:"alph",chainId:8738,networkId:8738,explorers:[{name:"alphscan",url:"https://explorer.alph.network",standard:"EIP3091"}],testnet:!1,slug:"alph-network"},nS={name:"TMY Chain",chain:"TMY",icon:{url:"ipfs://Qmcd19ksUvNMD1XQFSC55jJhDPoF2zUzzV7woteFiugwBH",width:1024,height:1023,format:"svg"},rpc:["https://tmy-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node1.tmyblockchain.org/rpc"],faucets:["https://faucet.tmychain.org/"],nativeCurrency:{name:"TMY",symbol:"TMY",decimals:18},infoURL:"https://tmychain.org/",shortName:"tmy",chainId:8768,networkId:8768,testnet:!1,slug:"tmy-chain"},aS={name:"MARO Blockchain Mainnet",chain:"MARO Blockchain",icon:{url:"ipfs://bafkreig47k53aipns6nu3u5fxpysp7mogzk6zyvatgpbam7yut3yvtuefa",width:160,height:160,format:"png"},rpc:["https://maro-blockchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-mainnet.ma.ro"],faucets:[],nativeCurrency:{name:"MARO",symbol:"MARO",decimals:18},infoURL:"https://ma.ro/",shortName:"maro",chainId:8848,networkId:8848,explorers:[{name:"MARO Scan",url:"https://scan.ma.ro/#",standard:"none"}],testnet:!1,slug:"maro-blockchain"},rS={name:"Unique",icon:{url:"ipfs://QmbJ7CGZ2GxWMp7s6jy71UGzRsMe4w3KANKXDAExYWdaFR",width:48,height:48,format:"svg"},chain:"UNQ",rpc:["https://unique.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.unique.network","https://eu-rpc.unique.network","https://asia-rpc.unique.network","https://us-rpc.unique.network"],faucets:[],nativeCurrency:{name:"Unique",symbol:"UNQ",decimals:18},infoURL:"https://unique.network",shortName:"unq",chainId:8880,networkId:8880,explorers:[{name:"Unique Scan",url:"https://uniquescan.io/unique",standard:"none"}],testnet:!1,slug:"unique"},iS={name:"Quartz by Unique",icon:{url:"ipfs://QmaGPdccULQEFcCGxzstnmE8THfac2kSiGwvWRAiaRq4dp",width:48,height:48,format:"svg"},chain:"UNQ",rpc:["https://quartz-by-unique.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-quartz.unique.network","https://quartz.api.onfinality.io/public-ws","https://eu-rpc-quartz.unique.network","https://asia-rpc-quartz.unique.network","https://us-rpc-quartz.unique.network"],faucets:[],nativeCurrency:{name:"Quartz",symbol:"QTZ",decimals:18},infoURL:"https://unique.network",shortName:"qtz",chainId:8881,networkId:8881,explorers:[{name:"Unique Scan / Quartz",url:"https://uniquescan.io/quartz",standard:"none"}],testnet:!1,slug:"quartz-by-unique"},sS={name:"Opal testnet by Unique",icon:{url:"ipfs://QmYJDpmWyjDa3H6BxweFmQXk4fU8b1GU7M9EqYcaUNvXzc",width:48,height:48,format:"svg"},chain:"UNQ",rpc:["https://opal-testnet-by-unique.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-opal.unique.network","https://us-rpc-opal.unique.network","https://eu-rpc-opal.unique.network","https://asia-rpc-opal.unique.network"],faucets:["https://t.me/unique2faucet_opal_bot"],nativeCurrency:{name:"Opal",symbol:"UNQ",decimals:18},infoURL:"https://unique.network",shortName:"opl",chainId:8882,networkId:8882,explorers:[{name:"Unique Scan / Opal",url:"https://uniquescan.io/opal",standard:"none"}],testnet:!0,slug:"opal-testnet-by-unique"},oS={name:"Sapphire by Unique",icon:{url:"ipfs://Qmd1PGt4cDRjFbh4ihP5QKEd4XQVwN1MkebYKdF56V74pf",width:48,height:48,format:"svg"},chain:"UNQ",rpc:["https://sapphire-by-unique.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-sapphire.unique.network","https://us-rpc-sapphire.unique.network","https://eu-rpc-sapphire.unique.network","https://asia-rpc-sapphire.unique.network"],faucets:[],nativeCurrency:{name:"Quartz",symbol:"QTZ",decimals:18},infoURL:"https://unique.network",shortName:"sph",chainId:8883,networkId:8883,explorers:[{name:"Unique Scan / Sapphire",url:"https://uniquescan.io/sapphire",standard:"none"}],testnet:!1,slug:"sapphire-by-unique"},cS={name:"XANAChain",chain:"XANAChain",rpc:["https://xanachain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.xana.net/rpc"],faucets:[],nativeCurrency:{name:"XETA",symbol:"XETA",decimals:18},infoURL:"https://xanachain.xana.net/",shortName:"XANAChain",chainId:8888,networkId:8888,icon:{url:"ipfs://QmWGNfwJ9o2vmKD3E6fjrxpbFP8W5q45zmYzHHoXwqqAoj",width:512,height:512,format:"png"},explorers:[{name:"XANAChain",url:"https://xanachain.xana.net",standard:"EIP3091"}],redFlags:["reusedChainId"],testnet:!1,slug:"xanachain"},pS={name:"Vyvo Smart Chain",chain:"VSC",rpc:["https://vyvo-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://vsc-dataseed.vyvo.org:8889"],faucets:[],nativeCurrency:{name:"VSC",symbol:"VSC",decimals:18},infoURL:"https://vsc-dataseed.vyvo.org",shortName:"vsc",chainId:8889,networkId:8889,testnet:!1,slug:"vyvo-smart-chain"},lS={name:"Mammoth Mainnet",title:"Mammoth Chain",chain:"MMT",rpc:["https://mammoth.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://dataseed.mmtscan.io","https://dataseed1.mmtscan.io","https://dataseed2.mmtscan.io"],faucets:["https://faucet.mmtscan.io/"],nativeCurrency:{name:"Mammoth Token",symbol:"MMT",decimals:18},infoURL:"https://mmtchain.io/",shortName:"mmt",chainId:8898,networkId:8898,icon:{url:"ipfs://QmaF5gi2CbDKsJ2UchNkjBqmWjv8JEDP3vePBmxeUHiaK4",width:250,height:250,format:"png"},explorers:[{name:"mmtscan",url:"https://mmtscan.io",standard:"EIP3091",icon:{url:"ipfs://QmaF5gi2CbDKsJ2UchNkjBqmWjv8JEDP3vePBmxeUHiaK4",width:250,height:250,format:"png"}}],testnet:!1,slug:"mammoth"},dS={name:"JIBCHAIN L1",chain:"JBC",rpc:["https://jibchain-l1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-l1.jibchain.net"],faucets:[],features:[{name:"EIP155"},{name:"EIP1559"}],nativeCurrency:{name:"JIBCOIN",symbol:"JBC",decimals:18},infoURL:"https://jibchain.net",shortName:"jbc",chainId:8899,networkId:8899,explorers:[{name:"JIBCHAIN Explorer",url:"https://exp-l1.jibchain.net",standard:"EIP3091"}],testnet:!1,slug:"jibchain-l1"},uS={name:"Giant Mammoth Mainnet",title:"Giant Mammoth Chain",chain:"GMMT",rpc:["https://giant-mammoth.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-asia.gmmtchain.io"],faucets:[],nativeCurrency:{name:"Giant Mammoth Coin",symbol:"GMMT",decimals:18},infoURL:"https://gmmtchain.io/",shortName:"gmmt",chainId:8989,networkId:8989,icon:{url:"ipfs://QmVth4aPeskDTFqRifUugJx6gyEHCmx2PFbMWUtsCSQFkF",width:468,height:518,format:"png"},explorers:[{name:"gmmtscan",url:"https://scan.gmmtchain.io",standard:"EIP3091",icon:{url:"ipfs://QmVth4aPeskDTFqRifUugJx6gyEHCmx2PFbMWUtsCSQFkF",width:468,height:518,format:"png"}}],testnet:!1,slug:"giant-mammoth"},mS={name:"bloxberg",chain:"bloxberg",rpc:["https://bloxberg.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://core.bloxberg.org"],faucets:["https://faucet.bloxberg.org/"],nativeCurrency:{name:"BERG",symbol:"U+25B3",decimals:18},infoURL:"https://bloxberg.org",shortName:"berg",chainId:8995,networkId:8995,testnet:!1,slug:"bloxberg"},hS={name:"Evmos Testnet",chain:"Evmos",rpc:["https://evmos-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://eth.bd.evmos.dev:8545"],faucets:["https://faucet.evmos.dev"],nativeCurrency:{name:"test-Evmos",symbol:"tEVMOS",decimals:18},infoURL:"https://evmos.org",shortName:"evmos-testnet",chainId:9e3,networkId:9e3,icon:{url:"ipfs://QmeZW6VKUFTbz7PPW8PmDR3ZHa6osYPLBFPnW8T5LSU49c",width:400,height:400,format:"png"},explorers:[{name:"Evmos EVM Explorer",url:"https://evm.evmos.dev",standard:"EIP3091",icon:{url:"ipfs://QmeZW6VKUFTbz7PPW8PmDR3ZHa6osYPLBFPnW8T5LSU49c",width:400,height:400,format:"png"}},{name:"Evmos Cosmos Explorer",url:"https://explorer.evmos.dev",standard:"none",icon:{url:"ipfs://QmeZW6VKUFTbz7PPW8PmDR3ZHa6osYPLBFPnW8T5LSU49c",width:400,height:400,format:"png"}}],testnet:!0,slug:"evmos-testnet"},yS={name:"Evmos",chain:"Evmos",rpc:["https://evmos.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://eth.bd.evmos.org:8545","https://evmos-evm.publicnode.com"],faucets:[],nativeCurrency:{name:"Evmos",symbol:"EVMOS",decimals:18},infoURL:"https://evmos.org",shortName:"evmos",chainId:9001,networkId:9001,icon:{url:"ipfs://QmeZW6VKUFTbz7PPW8PmDR3ZHa6osYPLBFPnW8T5LSU49c",width:400,height:400,format:"png"},explorers:[{name:"Evmos EVM Explorer (Escan)",url:"https://escan.live",standard:"none",icon:{url:"ipfs://QmeZW6VKUFTbz7PPW8PmDR3ZHa6osYPLBFPnW8T5LSU49c",width:400,height:400,format:"png"}},{name:"Evmos Cosmos Explorer (Mintscan)",url:"https://www.mintscan.io/evmos",standard:"none",icon:{url:"ipfs://QmeZW6VKUFTbz7PPW8PmDR3ZHa6osYPLBFPnW8T5LSU49c",width:400,height:400,format:"png"}}],testnet:!1,slug:"evmos"},fS={name:"BerylBit Mainnet",chain:"BRB",rpc:["https://berylbit.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.berylbit.io"],faucets:["https://t.me/BerylBit"],nativeCurrency:{name:"BerylBit Chain Native Token",symbol:"BRB",decimals:18},infoURL:"https://www.beryl-bit.com",shortName:"brb",chainId:9012,networkId:9012,icon:{url:"ipfs://QmeDXHkpranzqGN1BmQqZSrFp4vGXf4JfaB5iq8WHHiwDi",width:162,height:162,format:"png"},explorers:[{name:"berylbit-explorer",url:"https://explorer.berylbit.io",standard:"EIP3091"}],testnet:!1,slug:"berylbit"},gS={name:"Genesis Coin",chain:"Genesis",rpc:["https://genesis-coin.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://genesis-gn.com","wss://genesis-gn.com"],faucets:[],nativeCurrency:{name:"GN Coin",symbol:"GNC",decimals:18},infoURL:"https://genesis-gn.com",shortName:"GENEC",chainId:9100,networkId:9100,testnet:!1,slug:"genesis-coin"},bS={name:"Dogcoin Testnet",chain:"DOGS",icon:{url:"ipfs://QmZCadkExKThak3msvszZjo6UnAbUJKE61dAcg4TixuMC3",width:160,height:171,format:"png"},rpc:["https://dogcoin-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.dogcoin.me"],faucets:["https://faucet.dogcoin.network"],nativeCurrency:{name:"Dogcoin",symbol:"DOGS",decimals:18},infoURL:"https://dogcoin.network",shortName:"DOGSt",chainId:9339,networkId:9339,explorers:[{name:"Dogcoin",url:"https://testnet.dogcoin.network",standard:"EIP3091"}],testnet:!0,slug:"dogcoin-testnet"},TS={name:"Rangers Protocol Testnet Robin",chain:"Rangers",icon:{url:"ipfs://QmXR5e5SDABWfQn6XT9uMsVYAo5Bv7vUv4jVs8DFqatZWG",width:2e3,height:2e3,format:"png"},rpc:["https://rangers-protocol-testnet-robin.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://robin.rangersprotocol.com/api/jsonrpc"],faucets:["https://robin-faucet.rangersprotocol.com"],nativeCurrency:{name:"Rangers Protocol Gas",symbol:"tRPG",decimals:18},infoURL:"https://rangersprotocol.com",shortName:"trpg",chainId:9527,networkId:9527,explorers:[{name:"rangersscan-robin",url:"https://robin-rangersscan.rangersprotocol.com",standard:"none"}],testnet:!0,slug:"rangers-protocol-testnet-robin"},wS={name:"QEasyWeb3 Testnet",chain:"QET",rpc:["https://qeasyweb3-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://qeasyweb3.com"],faucets:["http://faucet.qeasyweb3.com"],nativeCurrency:{name:"QET",symbol:"QET",decimals:18},infoURL:"https://www.qeasyweb3.com",shortName:"QETTest",chainId:9528,networkId:9528,explorers:[{name:"QEasyWeb3 Explorer",url:"https://www.qeasyweb3.com",standard:"EIP3091"}],testnet:!0,slug:"qeasyweb3-testnet"},IS={name:"Neonlink Testnet",chain:"Neonlink",rpc:["https://neonlink-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.neonlink.io"],faucets:["https://faucet.neonlink.io/"],nativeCurrency:{name:"Neonlink Native Token",symbol:"tNEON",decimals:18},infoURL:"https://neonlink.io",shortName:"testneon",chainId:9559,networkId:9559,icon:{url:"ipfs://QmX3hBv8WyvVfYjh1gmgDfJCpJBvKk4TYG9wFX9sC8WAjz",width:512,height:512,format:"svg"},explorers:[{name:"Neon Blockchain Explorer",url:"https://testnet-scan.neonlink.io",standard:"EIP3091",icon:{url:"ipfs://QmX3hBv8WyvVfYjh1gmgDfJCpJBvKk4TYG9wFX9sC8WAjz",width:512,height:512,format:"svg"}}],testnet:!0,slug:"neonlink-testnet"},vS={name:"Oort MainnetDev",title:"Oort MainnetDev",chain:"MainnetDev",rpc:[],faucets:[],nativeCurrency:{name:"Oort",symbol:"CCN",decimals:18},infoURL:"https://oortech.com",shortName:"MainnetDev",chainId:9700,networkId:9700,icon:{url:"ipfs://QmZ1jbxFZcuotj3eZ6iKFrg9ZXnaV8AK6sGRa7ELrceWyD",width:1043,height:1079,format:"png"},testnet:!1,slug:"oort-dev"},CS={name:"Boba BNB Testnet",chain:"Boba BNB Testnet",rpc:["https://boba-bnb-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.bnb.boba.network","wss://wss.testnet.bnb.boba.network","https://replica.testnet.bnb.boba.network","wss://replica-wss.testnet.bnb.boba.network"],faucets:[],nativeCurrency:{name:"Boba Token",symbol:"BOBA",decimals:18},infoURL:"https://boba.network",shortName:"BobaBnbTestnet",chainId:9728,networkId:9728,explorers:[{name:"Boba BNB Testnet block explorer",url:"https://blockexplorer.testnet.bnb.boba.network",standard:"none"}],testnet:!0,slug:"boba-bnb-testnet"},kS={name:"MainnetZ Testnet",chain:"NetZ",icon:{url:"ipfs://QmT5gJ5weBiLT3GoYuF5yRTRLdPLCVZ3tXznfqW7M8fxgG",width:400,height:400,format:"png"},rpc:["https://z-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.mainnetz.io"],faucets:["https://faucet.mainnetz.io"],nativeCurrency:{name:"MainnetZ",symbol:"NetZ",decimals:18},infoURL:"https://testnet.mainnetz.io",shortName:"NetZt",chainId:9768,networkId:9768,explorers:[{name:"MainnetZ",url:"https://testnet.mainnetz.io",standard:"EIP3091"}],testnet:!0,slug:"z-testnet"},ES={name:"Carbon EVM",chain:"Carbon",icon:{url:"ipfs://QmQUHqi1gyuTuKmJQHqt9EyhN1FPmmmLNUK8u93nMGrxAy",width:1600,height:1600,format:"png"},rpc:["https://carbon-evm.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm-api.carbon.network/"],faucets:[],nativeCurrency:{name:"swth",symbol:"SWTH",decimals:18},infoURL:"https://carbon.network/",shortName:"carbon",chainId:9790,networkId:9790,explorers:[],testnet:!1,slug:"carbon-evm"},xS={name:"Carbon EVM Testnet",chain:"Carbon",icon:{url:"ipfs://QmQUHqi1gyuTuKmJQHqt9EyhN1FPmmmLNUK8u93nMGrxAy",width:1600,height:1600,format:"png"},rpc:["https://carbon-evm-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://test-evm-api.carbon.network/"],faucets:[],nativeCurrency:{name:"swth",symbol:"SWTH",decimals:18},infoURL:"https://carbon.network/",shortName:"carbon-testnet",chainId:9792,networkId:9792,explorers:[],testnet:!0,slug:"carbon-evm-testnet"},RS={name:"AltLayer Testnet",chain:"ETH",rpc:["https://altlayer-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rollup-api.altlayer.io"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://altlayer.io",shortName:"alt-testnet",chainId:9997,networkId:9997,icon:{url:"ipfs://QmcEfZJU7NMn9ycTAcEooQgGNfa2nYBToSUZHdFCFadcjb",width:1080,height:1025,format:"png"},explorers:[{name:"blockscout",url:"https://testnet-rollup-explorer.altlayer.io",icon:{url:"ipfs://bafybeifu5tpui7dk5cjoo54kde7pmuthvnl7sdykobuarsxgu7t2izurnq",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"altlayer-testnet"},AS={name:"myOwn Testnet",chain:"myOwn",rpc:["https://myown-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://geth.dev.bccloud.net"],faucets:[],nativeCurrency:{name:"MYN",symbol:"MYN",decimals:18},infoURL:"https://docs.bccloud.net/",shortName:"myn",chainId:9999,networkId:9999,testnet:!0,slug:"myown-testnet"},PS={name:"Smart Bitcoin Cash",chain:"smartBCH",rpc:["https://smart-bitcoin-cash.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://smartbch.greyh.at","https://rpc-mainnet.smartbch.org","https://smartbch.fountainhead.cash/mainnet","https://smartbch.devops.cash/mainnet"],faucets:[],nativeCurrency:{name:"Bitcoin Cash",symbol:"BCH",decimals:18},infoURL:"https://smartbch.org/",shortName:"smartbch",chainId:1e4,networkId:1e4,testnet:!1,slug:"smart-bitcoin-cash"},MS={name:"Smart Bitcoin Cash Testnet",chain:"smartBCHTest",rpc:["https://smart-bitcoin-cash-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.smartbch.org","https://smartbch.devops.cash/testnet"],faucets:[],nativeCurrency:{name:"Bitcoin Cash Test Token",symbol:"BCHT",decimals:18},infoURL:"http://smartbch.org/",shortName:"smartbchtest",chainId:10001,networkId:10001,testnet:!0,slug:"smart-bitcoin-cash-testnet"},_S={name:"Gon Chain",chain:"GonChain",icon:{url:"ipfs://QmPtiJGaApbW3ATZhPW3pKJpw3iGVrRGsZLWhrDKF9ZK18",width:1024,height:1024,format:"png"},rpc:["https://gon-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node1.testnet.gaiaopen.network","http://database1.gaiaopen.network"],faucets:[],nativeCurrency:{name:"Gon Token",symbol:"GT",decimals:18},infoURL:"",shortName:"gon",chainId:10024,networkId:10024,explorers:[{name:"Gon Explorer",url:"https://gonscan.com",standard:"none"}],testnet:!0,slug:"gon-chain"},SS={name:"SJATSH",chain:"ETH",rpc:["https://sjatsh.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://geth.free.idcfengye.com"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://sjis.me",shortName:"SJ",chainId:10086,networkId:10086,testnet:!1,slug:"sjatsh"},WS={name:"Blockchain Genesis Mainnet",chain:"GEN",rpc:["https://blockchain-genesis.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://eu.mainnet.xixoio.com","https://us.mainnet.xixoio.com","https://asia.mainnet.xixoio.com"],faucets:[],nativeCurrency:{name:"GEN",symbol:"GEN",decimals:18},infoURL:"https://www.xixoio.com/",shortName:"GEN",chainId:10101,networkId:10101,testnet:!1,slug:"blockchain-genesis"},BS={name:"Chiado Testnet",chain:"CHI",icon:{url:"ipfs://bafybeidk4swpgdyqmpz6shd5onvpaujvwiwthrhypufnwr6xh3dausz2dm",width:1800,height:1800,format:"png"},rpc:["https://chiado-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.chiadochain.net","https://rpc.eu-central-2.gateway.fm/v3/gnosis/archival/chiado"],faucets:["https://gnosisfaucet.com"],nativeCurrency:{name:"Chiado xDAI",symbol:"xDAI",decimals:18},infoURL:"https://docs.gnosischain.com",shortName:"chi",chainId:10200,networkId:10200,explorers:[{name:"blockscout",url:"https://blockscout.chiadochain.net",icon:{url:"ipfs://bafybeifu5tpui7dk5cjoo54kde7pmuthvnl7sdykobuarsxgu7t2izurnq",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"chiado-testnet"},NS={name:"0XTade",chain:"0XTade Chain",rpc:["https://0xtade.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node.0xtchain.com"],faucets:[],nativeCurrency:{name:"0XT",symbol:"0XT",decimals:18},infoURL:"https://www.0xtrade.finance/",shortName:"0xt",chainId:10248,networkId:10248,explorers:[{name:"0xtrade Scan",url:"https://www.0xtscan.com",standard:"none"}],testnet:!1,slug:"0xtade"},DS={name:"Numbers Mainnet",chain:"NUM",icon:{url:"ipfs://bafkreie3ba6ofosjqqiya6empkyw6u5xdrtcfzi2evvyt4u6utzeiezyhi",width:1500,height:1500,format:"png"},rpc:["https://numbers.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnetrpc.num.network"],faucets:[],nativeCurrency:{name:"NUM Token",symbol:"NUM",decimals:18},infoURL:"https://numbersprotocol.io",shortName:"Jade",chainId:10507,networkId:10507,explorers:[{name:"ethernal",url:"https://mainnet.num.network",standard:"EIP3091"}],testnet:!1,slug:"numbers"},LS={name:"Numbers Testnet",chain:"NUM",icon:{url:"ipfs://bafkreie3ba6ofosjqqiya6empkyw6u5xdrtcfzi2evvyt4u6utzeiezyhi",width:1500,height:1500,format:"png"},rpc:["https://numbers-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnetrpc.num.network"],faucets:["https://faucet.avax.network/?subnet=num","https://faucet.num.network"],nativeCurrency:{name:"NUM Token",symbol:"NUM",decimals:18},infoURL:"https://numbersprotocol.io",shortName:"Snow",chainId:10508,networkId:10508,explorers:[{name:"ethernal",url:"https://testnet.num.network",standard:"EIP3091"}],testnet:!0,slug:"numbers-testnet"},US={name:"CryptoCoinPay",chain:"CCP",rpc:["https://cryptocoinpay.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://node106.cryptocoinpay.info:8545","ws://node106.cryptocoinpay.info:8546"],faucets:[],icon:{url:"ipfs://QmPw1ixYYeXvTiRWoCt2jWe4YMd3B5o7TzL18SBEHXvhXX",width:200,height:200,format:"png"},nativeCurrency:{name:"CryptoCoinPay",symbol:"CCP",decimals:18},infoURL:"https://www.cryptocoinpay.co",shortName:"CCP",chainId:10823,networkId:10823,explorers:[{name:"CCP Explorer",url:"https://cryptocoinpay.info",standard:"EIP3091"}],testnet:!1,slug:"cryptocoinpay"},FS={name:"Quadrans Blockchain",chain:"QDC",icon:{url:"ipfs://QmZFiYHnE4TrezPz8wSap9nMxG6m98w4fv7ataj2TfLNck",width:1024,height:1024,format:"png"},rpc:["https://quadrans-blockchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.quadrans.io","https://rpcna.quadrans.io","https://rpceu.quadrans.io"],faucets:[],nativeCurrency:{name:"Quadrans Coin",symbol:"QDC",decimals:18},infoURL:"https://quadrans.io",shortName:"quadrans",chainId:10946,networkId:10946,explorers:[{name:"explorer",url:"https://explorer.quadrans.io",icon:{url:"ipfs://QmZFiYHnE4TrezPz8wSap9nMxG6m98w4fv7ataj2TfLNck",width:1024,height:1024,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"quadrans-blockchain"},HS={name:"Quadrans Blockchain Testnet",chain:"tQDC",icon:{url:"ipfs://QmZFiYHnE4TrezPz8wSap9nMxG6m98w4fv7ataj2TfLNck",width:1024,height:1024,format:"png"},rpc:["https://quadrans-blockchain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpctest.quadrans.io","https://rpctest2.quadrans.io"],faucets:["https://faucetpage.quadrans.io"],nativeCurrency:{name:"Quadrans Testnet Coin",symbol:"tQDC",decimals:18},infoURL:"https://quadrans.io",shortName:"quadranstestnet",chainId:10947,networkId:10947,explorers:[{name:"explorer",url:"https://explorer.testnet.quadrans.io",icon:{url:"ipfs://QmZFiYHnE4TrezPz8wSap9nMxG6m98w4fv7ataj2TfLNck",width:1024,height:1024,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"quadrans-blockchain-testnet"},KS={name:"Astra",chain:"Astra",rpc:["https://astra.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.astranaut.io","https://rpc1.astranaut.io"],faucets:[],nativeCurrency:{name:"Astra",symbol:"ASA",decimals:18},infoURL:"https://astranaut.io",shortName:"astra",chainId:11110,networkId:11110,icon:{url:"ipfs://QmaBtaukPNNUNjdJSUAwuFFQMLbZX1Pc3fvXKTKQcds7Kf",width:104,height:80,format:"png"},explorers:[{name:"Astra EVM Explorer (Blockscout)",url:"https://explorer.astranaut.io",standard:"none",icon:{url:"ipfs://QmaBtaukPNNUNjdJSUAwuFFQMLbZX1Pc3fvXKTKQcds7Kf",width:104,height:80,format:"png"}},{name:"Astra PingPub Explorer",url:"https://ping.astranaut.io/astra",standard:"none",icon:{url:"ipfs://QmaBtaukPNNUNjdJSUAwuFFQMLbZX1Pc3fvXKTKQcds7Kf",width:104,height:80,format:"png"}}],testnet:!1,slug:"astra"},OS={name:"WAGMI",chain:"WAGMI",icon:{url:"ipfs://QmNoyUXxnak8B3xgFxErkVfyVEPJUMHBzq7qJcYzkUrPR4",width:1920,height:1920,format:"png"},rpc:["https://wagmi.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://subnets.avax.network/wagmi/wagmi-chain-testnet/rpc"],faucets:["https://faucet.avax.network/?subnet=wagmi"],nativeCurrency:{name:"WAGMI",symbol:"WGM",decimals:18},infoURL:"https://subnets-test.avax.network/wagmi/details",shortName:"WAGMI",chainId:11111,networkId:11111,explorers:[{name:"Avalanche Subnet Explorer",url:"https://subnets-test.avax.network/wagmi",standard:"EIP3091"}],testnet:!0,slug:"wagmi"},$S={name:"Astra Testnet",chain:"Astra",rpc:["https://astra-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.astranaut.dev"],faucets:["https://faucet.astranaut.dev"],nativeCurrency:{name:"test-Astra",symbol:"tASA",decimals:18},infoURL:"https://astranaut.io",shortName:"astra-testnet",chainId:11115,networkId:11115,icon:{url:"ipfs://QmaBtaukPNNUNjdJSUAwuFFQMLbZX1Pc3fvXKTKQcds7Kf",width:104,height:80,format:"png"},explorers:[{name:"Astra EVM Explorer",url:"https://explorer.astranaut.dev",standard:"EIP3091",icon:{url:"ipfs://QmaBtaukPNNUNjdJSUAwuFFQMLbZX1Pc3fvXKTKQcds7Kf",width:104,height:80,format:"png"}},{name:"Astra PingPub Explorer",url:"https://ping.astranaut.dev/astra",standard:"none",icon:{url:"ipfs://QmaBtaukPNNUNjdJSUAwuFFQMLbZX1Pc3fvXKTKQcds7Kf",width:104,height:80,format:"png"}}],testnet:!0,slug:"astra-testnet"},YS={name:"HashBit Mainnet",chain:"HBIT",rpc:["https://hashbit.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.hashbit.org","https://rpc.hashbit.org"],faucets:["https://free-online-app.com/faucet-for-eth-evm-chains/"],nativeCurrency:{name:"HashBit Native Token",symbol:"HBIT",decimals:18},infoURL:"https://hashbit.org",shortName:"hbit",chainId:11119,networkId:11119,explorers:[{name:"hashbitscan",url:"https://explorer.hashbit.org",standard:"EIP3091"}],testnet:!1,slug:"hashbit"},zS={name:"Haqq Network",chain:"Haqq",rpc:["https://haqq-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.eth.haqq.network"],faucets:[],nativeCurrency:{name:"Islamic Coin",symbol:"ISLM",decimals:18},infoURL:"https://islamiccoin.net",shortName:"ISLM",chainId:11235,networkId:11235,explorers:[{name:"Mainnet HAQQ Explorer",url:"https://explorer.haqq.network",standard:"EIP3091"}],testnet:!1,slug:"haqq-network"},qS={name:"Shyft Testnet",chain:"SHYFTT",icon:{url:"ipfs://QmUkFZC2ZmoYPTKf7AHdjwRPZoV2h1MCuHaGM4iu8SNFpi",width:400,height:400,format:"svg"},rpc:[],faucets:[],nativeCurrency:{name:"Shyft Test Token",symbol:"SHYFTT",decimals:18},infoURL:"https://shyft.network",shortName:"shyftt",chainId:11437,networkId:11437,explorers:[{name:"Shyft Testnet BX",url:"https://bx.testnet.shyft.network",standard:"EIP3091"}],testnet:!0,slug:"shyft-testnet"},QS={name:"Sardis Testnet",chain:"SRDX",icon:{url:"ipfs://QmdR9QJjQEh1mBnf2WbJfehverxiP5RDPWMtEECbDP2rc3",width:512,height:512,format:"png"},rpc:["https://sardis-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.sardisnetwork.com"],faucets:["https://faucet.sardisnetwork.com"],nativeCurrency:{name:"Sardis",symbol:"SRDX",decimals:18},infoURL:"https://mysardis.com",shortName:"SRDXt",chainId:11612,networkId:11612,explorers:[{name:"Sardis",url:"https://testnet.sardisnetwork.com",standard:"EIP3091"}],testnet:!0,slug:"sardis-testnet"},jS={name:"SanR Chain",chain:"SanRChain",rpc:["https://sanr-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://sanrchain-node.santiment.net"],faucets:[],nativeCurrency:{name:"nSAN",symbol:"nSAN",decimals:18},infoURL:"https://sanr.app",shortName:"SAN",chainId:11888,networkId:11888,icon:{url:"ipfs://QmPLMg5mYD8XRknvYbDkD2x7FXxYan7MPTeUWZC2CihwDM",width:2048,height:2048,format:"png"},parent:{chain:"eip155-1",type:"L2",bridges:[{url:"https://sanr.app"}]},explorers:[{name:"SanR Chain Explorer",url:"https://sanrchain-explorer.santiment.net",standard:"none"}],testnet:!1,slug:"sanr-chain"},VS={name:"Singularity ZERO Testnet",chain:"ZERO",rpc:["https://singularity-zero-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://betaenv.singularity.gold:18545"],faucets:["https://nft.singularity.gold"],nativeCurrency:{name:"ZERO",symbol:"tZERO",decimals:18},infoURL:"https://www.singularity.gold",shortName:"tZERO",chainId:12051,networkId:12051,explorers:[{name:"zeroscan",url:"https://betaenv.singularity.gold:18002",standard:"EIP3091"}],testnet:!0,slug:"singularity-zero-testnet"},GS={name:"Singularity ZERO Mainnet",chain:"ZERO",rpc:["https://singularity-zero.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://zerorpc.singularity.gold"],faucets:["https://zeroscan.singularity.gold"],nativeCurrency:{name:"ZERO",symbol:"ZERO",decimals:18},infoURL:"https://www.singularity.gold",shortName:"ZERO",chainId:12052,networkId:12052,slip44:621,explorers:[{name:"zeroscan",url:"https://zeroscan.singularity.gold",standard:"EIP3091"}],testnet:!1,slug:"singularity-zero"},ZS={name:"Fibonacci Mainnet",chain:"FIBO",icon:{url:"ipfs://bafkreidiedaz3jugxmh2ylzlc4nympbd5iwab33adhwkcnblyop6vvj25y",width:1494,height:1494,format:"png"},rpc:["https://fibonacci.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node1.fibo-api.asia","https://node2.fibo-api.asia","https://node3.fibo-api.asia","https://node4.fibo-api.asia","https://node5.fibo-api.asia","https://node6.fibo-api.asia","https://node7.fibo-api.asia","https://node1.fibo-rpc.asia","https://node2.fibo-rpc.asia","https://node3.fibo-rpc.asia","https://node4.fibo-rpc.asia","https://node5.fibo-rpc.asia","https://node6.fibo-rpc.asia","https://node7.fibo-rpc.asia"],faucets:["https://test.fibochain.org/faucets"],nativeCurrency:{name:"FIBONACCI UTILITY TOKEN",symbol:"FIBO",decimals:18},infoURL:"https://fibochain.org",shortName:"fibo",chainId:12306,networkId:1230,explorers:[{name:"fiboscan",url:"https://scan.fibochain.org",standard:"EIP3091"}],testnet:!0,slug:"fibonacci"},XS={name:"BLG Testnet",chain:"BLG",icon:{url:"ipfs://QmUN5j2cre8GHKv52JE8ag88aAnRmuHMGFxePPvKMogisC",width:512,height:512,format:"svg"},rpc:["https://blg-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.blgchain.com"],faucets:["https://faucet.blgchain.com"],nativeCurrency:{name:"Blg",symbol:"BLG",decimals:18},infoURL:"https://blgchain.com",shortName:"blgchain",chainId:12321,networkId:12321,testnet:!0,slug:"blg-testnet"},JS={name:"Step Testnet",title:"Step Test Network",chain:"STEP",icon:{url:"ipfs://QmVp9jyb3UFW71867yVtymmiRw7dPY4BTnsp3hEjr9tn8L",width:512,height:512,format:"png"},rpc:["https://step-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.testnet.step.network"],faucets:["https://faucet.step.network"],nativeCurrency:{name:"FITFI",symbol:"FITFI",decimals:18},infoURL:"https://step.network",shortName:"steptest",chainId:12345,networkId:12345,explorers:[{name:"StepScan",url:"https://testnet.stepscan.io",icon:{url:"ipfs://QmVp9jyb3UFW71867yVtymmiRw7dPY4BTnsp3hEjr9tn8L",width:512,height:512,format:"png"},standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-43113"},testnet:!0,slug:"step-testnet"},eW={name:"Rikeza Network Testnet",title:"Rikeza Network Testnet",chain:"Rikeza",icon:{url:"ipfs://QmfJ1Qxpzi6CSLeFeWY1Bwe435CpT5za5WfrLUE7vNzZfy",width:512,height:512,format:"png"},rpc:["https://rikeza-network-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.rikscan.com"],faucets:[],nativeCurrency:{name:"Rikeza",symbol:"RIK",decimals:18},infoURL:"https://rikeza.io",shortName:"tRIK",chainId:12715,networkId:12715,explorers:[{name:"Rikeza Blockchain explorer",url:"https://testnet.rikscan.com",standard:"EIP3091"}],testnet:!0,slug:"rikeza-network-testnet"},tW={name:"SPS",chain:"SPS",rpc:["https://sps.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.ssquad.games"],faucets:[],nativeCurrency:{name:"ECG",symbol:"ECG",decimals:18},infoURL:"https://ssquad.games/",shortName:"SPS",chainId:13e3,networkId:13e3,explorers:[{name:"SPS Explorer",url:"http://spsscan.ssquad.games",standard:"EIP3091"}],testnet:!1,slug:"sps"},nW={name:"Credit Smartchain Mainnet",chain:"CREDIT",rpc:["https://credit-smartchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.cscscan.io"],faucets:[],nativeCurrency:{name:"Credit",symbol:"CREDIT",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://creditsmartchain.com",shortName:"Credit",chainId:13308,networkId:1,icon:{url:"ipfs://bafkreifbso3gd4wu5wxl27xyurxctmuae2jyuy37guqtzx23nga6ba4ag4",width:1e3,height:1628,format:"png"},explorers:[{name:"CSC Scan",url:"https://explorer.cscscan.io",icon:{url:"ipfs://bafkreifbso3gd4wu5wxl27xyurxctmuae2jyuy37guqtzx23nga6ba4ag4",width:1e3,height:1628,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"credit-smartchain"},aW={name:"Phoenix Mainnet",chain:"Phoenix",rpc:["https://phoenix.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.phoenixplorer.com/"],faucets:[],nativeCurrency:{name:"Phoenix",symbol:"PHX",decimals:18},infoURL:"https://cryptophoenix.org/phoenix",shortName:"Phoenix",chainId:13381,networkId:13381,icon:{url:"ipfs://QmYiLMeKDXMSNuQmtxNdxm53xR588pcRXMf7zuiZLjQnc6",width:1501,height:1501,format:"png"},explorers:[{name:"phoenixplorer",url:"https://phoenixplorer.com",standard:"EIP3091"}],testnet:!1,slug:"phoenix"},rW={name:"Susono",chain:"SUS",rpc:["https://susono.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://gateway.opn.network/node/ext/bc/2VsZe5DstWw2bfgdx3YbjKcMsJnNDjni95sZorBEdk9L9Qr9Fr/rpc"],faucets:[],nativeCurrency:{name:"Susono",symbol:"OPN",decimals:18},infoURL:"",shortName:"sus",chainId:13812,networkId:13812,explorers:[{name:"Susono",url:"http://explorer.opn.network",standard:"none"}],testnet:!1,slug:"susono"},iW={name:"SPS Testnet",chain:"SPS-Testnet",rpc:["https://sps-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://www.3sps.net"],faucets:[],nativeCurrency:{name:"ECG",symbol:"ECG",decimals:18},infoURL:"https://ssquad.games/",shortName:"SPS-Test",chainId:14e3,networkId:14e3,explorers:[{name:"SPS Test Explorer",url:"https://explorer.3sps.net",standard:"EIP3091"}],testnet:!0,slug:"sps-testnet"},sW={name:"LoopNetwork Mainnet",chain:"LoopNetwork",rpc:["https://loopnetwork.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.mainnetloop.com"],faucets:[],nativeCurrency:{name:"LOOP",symbol:"LOOP",decimals:18},infoURL:"http://theloopnetwork.org/",shortName:"loop",chainId:15551,networkId:15551,explorers:[{name:"loopscan",url:"http://explorer.mainnetloop.com",standard:"none"}],testnet:!1,slug:"loopnetwork"},oW={name:"Trust EVM Testnet",chain:"Trust EVM Testnet",rpc:["https://trust-evm-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.testnet-dev.trust.one"],faucets:["https://faucet.testnet-dev.trust.one/"],nativeCurrency:{name:"Trust EVM",symbol:"EVM",decimals:18},infoURL:"https://www.trust.one/",shortName:"TrustTestnet",chainId:15555,networkId:15555,explorers:[{name:"Trust EVM Explorer",url:"https://trustscan.one",standard:"EIP3091"}],testnet:!0,slug:"trust-evm-testnet"},cW={name:"EOS EVM Network Testnet",chain:"EOS",icon:{url:"ipfs://QmXkK5D5GWizvY1FmL6pV8cYLAbhehKETubktCgh6qDJZb",width:500,height:750,format:"png"},rpc:["https://eos-evm-network-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.testnet.evm.eosnetwork.com"],faucets:[],nativeCurrency:{name:"EOS",symbol:"EOS",decimals:18},infoURL:"https://eosnetwork.com/eos-evm",shortName:"eos-testnet",chainId:15557,networkId:15557,explorers:[{name:"EOS EVM Explorer",url:"https://explorer.testnet.evm.eosnetwork.com",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-1",bridges:[{url:"https://bridge.testnet.evm.eosnetwork.com"}]},testnet:!0,slug:"eos-evm-network-testnet"},pW={name:"MetaDot Mainnet",chain:"MTT",rpc:["https://metadot.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.metadot.network"],faucets:[],nativeCurrency:{name:"MetaDot Token",symbol:"MTT",decimals:18},infoURL:"https://metadot.network",shortName:"mtt",chainId:16e3,networkId:16e3,testnet:!1,slug:"metadot"},lW={name:"MetaDot Testnet",chain:"MTTTest",rpc:["https://metadot-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.metadot.network"],faucets:["https://faucet.metadot.network/"],nativeCurrency:{name:"MetaDot Token TestNet",symbol:"MTTest",decimals:18},infoURL:"https://metadot.network",shortName:"mtttest",chainId:16001,networkId:16001,testnet:!0,slug:"metadot-testnet"},dW={name:"Genesys Mainnet",chain:"Genesys",icon:{url:"ipfs://bafkreie6nai3yhykcdlsyshn5lbcbyba5y7zwsqg6owcfek2urhoucr6rm",width:800,height:800,format:"png"},rpc:["https://genesys.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.genesys.network"],faucets:[],nativeCurrency:{name:"Genesys",symbol:"GSYS",decimals:18},infoURL:"https://www.genesys.network/",shortName:"Genesys",chainId:16507,networkId:16507,explorers:[{name:"GchainExplorer",url:"https://gchainexplorer.genesys.network",standard:"EIP3091"}],testnet:!1,slug:"genesys"},uW={name:"IRIShub Testnet",chain:"IRIShub",rpc:["https://irishub-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evmrpc.nyancat.irisnet.org"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"Eris",symbol:"ERIS",decimals:18},infoURL:"https://www.irisnet.org",shortName:"nyancat",chainId:16688,networkId:16688,icon:{url:"ipfs://QmRaSx7AX1VDgcqjwLgSDP4WZmKBHPdHhbjkcEEXPA2Fnc",width:1062,height:822,format:"png"},explorers:[{name:"IRISHub Testnet Cosmos Explorer (IOBScan)",url:"https://nyancat.iobscan.io",standard:"none",icon:{url:"ipfs://QmRaSx7AX1VDgcqjwLgSDP4WZmKBHPdHhbjkcEEXPA2Fnc",width:1062,height:822,format:"png"}}],testnet:!0,slug:"irishub-testnet"},mW={name:"AirDAO Mainnet",chain:"ambnet",icon:{url:"ipfs://QmSxXjvWng3Diz4YwXDV2VqSPgMyzLYBNfkjJcr7rzkxom",width:400,height:400,format:"png"},rpc:["https://airdao.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://network.ambrosus.io"],faucets:[],nativeCurrency:{name:"Amber",symbol:"AMB",decimals:18},infoURL:"https://airdao.io",shortName:"airdao",chainId:16718,networkId:16718,explorers:[{name:"AirDAO Network Explorer",url:"https://airdao.io/explorer",standard:"none"}],testnet:!1,slug:"airdao"},hW={name:"IVAR Chain Testnet",chain:"IVAR",icon:{url:"ipfs://QmV8UmSwqGF2fxrqVEBTHbkyZueahqyYtkfH2RBF5pNysM",width:519,height:519,format:"svg"},rpc:["https://ivar-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.ivarex.com"],faucets:["https://tfaucet.ivarex.com/"],nativeCurrency:{name:"tIvar",symbol:"tIVAR",decimals:18},infoURL:"https://ivarex.com",shortName:"tivar",chainId:16888,networkId:16888,explorers:[{name:"ivarscan",url:"https://testnet.ivarscan.com",standard:"EIP3091"}],testnet:!0,slug:"ivar-chain-testnet"},yW={name:"Palette Chain Testnet",chain:"PLT",rpc:["https://palette-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://palette-opennet.com:22000"],faucets:[],nativeCurrency:{name:"Palette Token",symbol:"PLT",decimals:18},features:[],infoURL:"https://hashpalette.com/",shortName:"PCT",chainId:17180,networkId:17180,icon:{url:"ipfs://QmPCEGZD1p1keTT2YfPp725azx1r9Ci41hejeUuGL2whFA",width:800,height:800,format:"png"},explorers:[{name:"Palettescan",url:"https://testnet.palettescan.com",icon:{url:"ipfs://QmPCEGZD1p1keTT2YfPp725azx1r9Ci41hejeUuGL2whFA",width:800,height:800,format:"png"},standard:"none"}],testnet:!0,slug:"palette-chain-testnet"},fW={name:"EOS EVM Network",chain:"EOS",icon:{url:"ipfs://QmXkK5D5GWizvY1FmL6pV8cYLAbhehKETubktCgh6qDJZb",width:500,height:750,format:"png"},rpc:["https://eos-evm-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.evm.eosnetwork.com"],faucets:[],nativeCurrency:{name:"EOS",symbol:"EOS",decimals:18},infoURL:"https://eosnetwork.com/eos-evm",shortName:"eos",chainId:17777,networkId:17777,explorers:[{name:"EOS EVM Explorer",url:"https://explorer.evm.eosnetwork.com",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-1",bridges:[{url:"https://bridge.evm.eosnetwork.com"},{url:"https://app.multichain.org"}]},testnet:!1,slug:"eos-evm-network"},gW={name:"Frontier of Dreams Testnet",chain:"Game Network",rpc:["https://frontier-of-dreams-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.fod.games/"],nativeCurrency:{name:"ZKST",symbol:"ZKST",decimals:18},faucets:[],shortName:"ZKST",chainId:18e3,networkId:18e3,infoURL:"https://goexosphere.com",explorers:[{name:"Game Network",url:"https://explorer.fod.games",standard:"EIP3091"}],testnet:!0,slug:"frontier-of-dreams-testnet"},bW={name:"Proof Of Memes",title:"Proof Of Memes Mainnet",chain:"POM",icon:{url:"ipfs://QmePhfibWz9jnGUqF9Rven4x734br1h3LxrChYTEjbbQvo",width:256,height:256,format:"png"},rpc:["https://proof-of-memes.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.memescan.io","https://mainnet-rpc2.memescan.io","https://mainnet-rpc3.memescan.io","https://mainnet-rpc4.memescan.io"],faucets:[],nativeCurrency:{name:"Proof Of Memes",symbol:"POM",decimals:18},infoURL:"https://proofofmemes.org",shortName:"pom",chainId:18159,networkId:18159,explorers:[{name:"explorer-proofofmemes",url:"https://memescan.io",standard:"EIP3091"}],testnet:!1,slug:"proof-of-memes"},TW={name:"HOME Verse Mainnet",chain:"HOME Verse",icon:{url:"ipfs://QmeGb65zSworzoHmwK3jdkPtEsQZMUSJRxf8K8Feg56soU",width:597,height:597,format:"png"},rpc:["https://home-verse.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.mainnet.oasys.homeverse.games/"],faucets:[],nativeCurrency:{name:"OAS",symbol:"OAS",decimals:18},infoURL:"https://www.homeverse.games/",shortName:"HMV",chainId:19011,networkId:19011,explorers:[{name:"HOME Verse Explorer",url:"https://explorer.oasys.homeverse.games",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-248"},testnet:!1,slug:"home-verse"},wW={name:"BTCIX Network",chain:"BTCIX",rpc:["https://btcix-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://seed.btcix.org/rpc"],faucets:[],nativeCurrency:{name:"BTCIX Network",symbol:"BTCIX",decimals:18},infoURL:"https://bitcolojix.org",shortName:"btcix",chainId:19845,networkId:19845,explorers:[{name:"BTCIXScan",url:"https://btcixscan.com",standard:"none"}],testnet:!1,slug:"btcix-network"},IW={name:"Camelark Mainnet",chainId:20001,shortName:"Camelark",chain:"ETHW",icon:{url:"ipfs://QmeJerrsURFNt2LL7DE7TxeunjrQXiuezdfHyqmsbwX3MZ",width:128,height:128,format:"png"},networkId:20001,nativeCurrency:{name:"EthereumPoW",symbol:"ETHW",decimals:18},rpc:["https://camelark.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-http-rpc.camelark.com"],faucets:[],explorers:[{name:"CamelarkScan",url:"https://scan.camelark.com",standard:"EIP3091"}],infoURL:"https://www.camelark.com",testnet:!1,slug:"camelark"},vW={name:"Callisto Testnet",chain:"CLO",rpc:["https://callisto-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.callisto.network/"],faucets:["https://faucet.callisto.network/"],nativeCurrency:{name:"Callisto",symbol:"CLO",decimals:18},infoURL:"https://callisto.network",shortName:"CLOTestnet",chainId:20729,networkId:79,testnet:!0,slug:"callisto-testnet"},CW={name:"P12 Chain",chain:"P12",icon:{url:"ipfs://bafkreieiro4imoujeewc4r4thf5hxj47l56j2iwuz6d6pdj6ieb6ub3h7e",width:512,height:512,format:"png"},rpc:["https://p12-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-chain.p12.games"],faucets:[],nativeCurrency:{name:"Hooked P2",symbol:"hP2",decimals:18},infoURL:"https://p12.network",features:[{name:"EIP155"},{name:"EIP1559"}],shortName:"p12",chainId:20736,networkId:20736,explorers:[{name:"P12 Chain Explorer",url:"https://explorer.p12.games",standard:"EIP3091"}],testnet:!1,slug:"p12-chain"},kW={name:"CENNZnet Azalea",chain:"CENNZnet",rpc:["https://cennznet-azalea.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://cennznet.unfrastructure.io/public"],faucets:[],nativeCurrency:{name:"CPAY",symbol:"CPAY",decimals:18},infoURL:"https://cennz.net",shortName:"cennz-a",chainId:21337,networkId:21337,icon:{url:"ipfs://QmWhNm7tTi6SYbiumULDRk956hxgqaZSX77vcxBNn8fvnw",width:112,height:112,format:"svg"},explorers:[{name:"UNcover",url:"https://uncoverexplorer.com",standard:"none"}],testnet:!1,slug:"cennznet-azalea"},EW={name:"omChain Mainnet",chain:"OML",icon:{url:"ipfs://QmQtEHaejiDbmiCvbBYw9jNQv3DLK5XHCQwLRfnLNpdN5j",width:256,height:256,format:"png"},rpc:["https://omchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://seed.omchain.io"],faucets:[],nativeCurrency:{name:"omChain",symbol:"OMC",decimals:18},infoURL:"https://omchain.io",shortName:"omc",chainId:21816,networkId:21816,explorers:[{name:"omChain Explorer",url:"https://explorer.omchain.io",standard:"EIP3091"}],testnet:!1,slug:"omchain"},xW={name:"Taycan",chain:"Taycan",rpc:["https://taycan.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://taycan-rpc.hupayx.io:8545"],faucets:[],nativeCurrency:{name:"shuffle",symbol:"SFL",decimals:18},infoURL:"https://hupayx.io",shortName:"SFL",chainId:22023,networkId:22023,icon:{url:"ipfs://bafkreidvjcc73v747lqlyrhgbnkvkdepdvepo6baj6hmjsmjtvdyhmzzmq",width:1e3,height:1206,format:"png"},explorers:[{name:"Taycan Explorer(Blockscout)",url:"https://taycan-evmscan.hupayx.io",standard:"none",icon:{url:"ipfs://bafkreidvjcc73v747lqlyrhgbnkvkdepdvepo6baj6hmjsmjtvdyhmzzmq",width:1e3,height:1206,format:"png"}},{name:"Taycan Cosmos Explorer(BigDipper)",url:"https://taycan-cosmoscan.hupayx.io",standard:"none",icon:{url:"ipfs://bafkreidvjcc73v747lqlyrhgbnkvkdepdvepo6baj6hmjsmjtvdyhmzzmq",width:1e3,height:1206,format:"png"}}],testnet:!1,slug:"taycan"},RW={name:"AirDAO Testnet",chain:"ambnet-test",icon:{url:"ipfs://QmSxXjvWng3Diz4YwXDV2VqSPgMyzLYBNfkjJcr7rzkxom",width:400,height:400,format:"png"},rpc:["https://airdao-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://network.ambrosus-test.io"],faucets:[],nativeCurrency:{name:"Amber",symbol:"AMB",decimals:18},infoURL:"https://testnet.airdao.io",shortName:"airdao-test",chainId:22040,networkId:22040,explorers:[{name:"AirDAO Network Explorer",url:"https://testnet.airdao.io/explorer",standard:"none"}],testnet:!0,slug:"airdao-testnet"},AW={name:"MAP Mainnet",chain:"MAP",icon:{url:"ipfs://QmcLdQ8gM4iHv3CCKA9HuxmzTxY4WhjWtepUVCc3dpzKxD",width:512,height:512,format:"png"},rpc:["https://map.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.maplabs.io"],faucets:[],nativeCurrency:{name:"MAP",symbol:"MAP",decimals:18},infoURL:"https://maplabs.io",shortName:"map",chainId:22776,networkId:22776,slip44:60,explorers:[{name:"mapscan",url:"https://mapscan.io",standard:"EIP3091"}],testnet:!1,slug:"map"},PW={name:"Opside Testnet",chain:"Opside",rpc:["https://opside-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testrpc.opside.network"],faucets:["https://faucet.opside.network"],nativeCurrency:{name:"IDE",symbol:"IDE",decimals:18},infoURL:"https://opside.network",shortName:"opside",chainId:23118,networkId:23118,icon:{url:"ipfs://QmeCyZeibUoHNoYGzy1GkzH2uhxyRHKvH51PdaUMer4VTo",width:591,height:591,format:"png"},explorers:[{name:"opsideInfo",url:"https://opside.info",standard:"EIP3091"}],testnet:!0,slug:"opside-testnet"},MW={name:"Oasis Sapphire",chain:"Sapphire",icon:{url:"ipfs://bafkreiespupb52akiwrexxg7g72mh7m7h7lum5hmqijmpdh3kmuunzclha",width:2e3,height:2e3,format:"png"},rpc:["https://oasis-sapphire.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://sapphire.oasis.io","wss://sapphire.oasis.io/ws"],faucets:[],nativeCurrency:{name:"Sapphire Rose",symbol:"ROSE",decimals:18},infoURL:"https://docs.oasis.io/dapp/sapphire",shortName:"sapphire",chainId:23294,networkId:23294,explorers:[{name:"Oasis Sapphire Explorer",url:"https://explorer.sapphire.oasis.io",standard:"EIP3091"}],testnet:!1,slug:"oasis-sapphire"},_W={name:"Oasis Sapphire Testnet",chain:"Sapphire",icon:{url:"ipfs://bafkreiespupb52akiwrexxg7g72mh7m7h7lum5hmqijmpdh3kmuunzclha",width:2e3,height:2e3,format:"png"},rpc:["https://oasis-sapphire-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.sapphire.oasis.dev","wss://testnet.sapphire.oasis.dev/ws"],faucets:[],nativeCurrency:{name:"Sapphire Test Rose",symbol:"TEST",decimals:18},infoURL:"https://docs.oasis.io/dapp/sapphire",shortName:"sapphire-testnet",chainId:23295,networkId:23295,explorers:[{name:"Oasis Sapphire Testnet Explorer",url:"https://testnet.explorer.sapphire.oasis.dev",standard:"EIP3091"}],testnet:!0,slug:"oasis-sapphire-testnet"},SW={name:"Webchain",chain:"WEB",rpc:[],faucets:[],nativeCurrency:{name:"Webchain Ether",symbol:"WEB",decimals:18},infoURL:"https://webchain.network",shortName:"web",chainId:24484,networkId:37129,slip44:227,testnet:!1,slug:"webchain"},WW={name:"MintMe.com Coin",chain:"MINTME",rpc:["https://mintme-com-coin.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node1.mintme.com"],faucets:[],nativeCurrency:{name:"MintMe.com Coin",symbol:"MINTME",decimals:18},infoURL:"https://www.mintme.com",shortName:"mintme",chainId:24734,networkId:37480,testnet:!1,slug:"mintme-com-coin"},BW={name:"Hammer Chain Mainnet",chain:"HammerChain",rpc:["https://hammer-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://www.hammerchain.io/rpc"],faucets:[],nativeCurrency:{name:"GOLDT",symbol:"GOLDT",decimals:18},infoURL:"https://www.hammerchain.io",shortName:"GOLDT",chainId:25888,networkId:25888,explorers:[{name:"Hammer Chain Explorer",url:"https://www.hammerchain.io",standard:"none"}],testnet:!1,slug:"hammer-chain"},NW={name:"Bitkub Chain Testnet",chain:"BKC",icon:{url:"ipfs://QmYFYwyquipwc9gURQGcEd4iAq7pq15chQrJ3zJJe9HuFT",width:1e3,height:1e3,format:"png"},rpc:["https://bitkub-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.bitkubchain.io","wss://wss-testnet.bitkubchain.io"],faucets:["https://faucet.bitkubchain.com"],nativeCurrency:{name:"Bitkub Coin",symbol:"tKUB",decimals:18},infoURL:"https://www.bitkubchain.com/",shortName:"bkct",chainId:25925,networkId:25925,explorers:[{name:"bkcscan-testnet",url:"https://testnet.bkcscan.com",standard:"none",icon:{url:"ipfs://QmYFYwyquipwc9gURQGcEd4iAq7pq15chQrJ3zJJe9HuFT",width:1e3,height:1e3,format:"png"}}],testnet:!0,slug:"bitkub-chain-testnet"},DW={name:"Ferrum Testnet",chain:"tFRM",rpc:["https://ferrum-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://testnet.dev.svcs.ferrumnetwork.io:9933"],faucets:["https://testnet.faucet.ferrumnetwork.io"],nativeCurrency:{name:"Ferrum",symbol:"tFRM",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://ferrum.network",shortName:"frm",chainId:26026,networkId:26026,explorers:[{name:"polkadotjs",url:"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Ftestnet.dev.svcs.ferrumnetwork.io#/explorer",standard:"none"}],testnet:!0,slug:"ferrum-testnet"},LW={name:"Hertz Network Mainnet",chain:"HTZ",rpc:["https://hertz-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.hertzscan.com"],faucets:[],nativeCurrency:{name:"Hertz",symbol:"HTZ",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://www.hertz-network.com",shortName:"HTZ",chainId:26600,networkId:26600,icon:{url:"ipfs://Qmf3GYbPXmTDpSP6t7Ug2j5HjEwrY5oGhBDP7d4TQHvGnG",width:162,height:129,format:"png"},explorers:[{name:"Hertz Scan",url:"https://hertzscan.com",icon:{url:"ipfs://Qmf3GYbPXmTDpSP6t7Ug2j5HjEwrY5oGhBDP7d4TQHvGnG",width:162,height:129,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"hertz-network"},UW={name:"OasisChain Mainnet",chain:"OasisChain",rpc:["https://oasischain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc1.oasischain.io","https://rpc2.oasischain.io","https://rpc3.oasischain.io"],faucets:["http://faucet.oasischain.io"],nativeCurrency:{name:"OAC",symbol:"OAC",decimals:18},infoURL:"https://scan.oasischain.io",shortName:"OAC",chainId:26863,networkId:26863,explorers:[{name:"OasisChain Explorer",url:"https://scan.oasischain.io",standard:"EIP3091"}],testnet:!1,slug:"oasischain"},FW={name:"Optimism Bedrock (Goerli Alpha Testnet)",chain:"ETH",rpc:["https://optimism-bedrock-goerli-alpha-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://alpha-1-replica-0.bedrock-goerli.optimism.io","https://alpha-1-replica-1.bedrock-goerli.optimism.io","https://alpha-1-replica-2.bedrock-goerli.optimism.io"],faucets:[],nativeCurrency:{name:"Goerli Ether",symbol:"ETH",decimals:18},infoURL:"https://community.optimism.io/docs/developers/bedrock",shortName:"obgor",chainId:28528,networkId:28528,explorers:[{name:"blockscout",url:"https://blockscout.com/optimism/bedrock-alpha",standard:"EIP3091"}],testnet:!0,slug:"optimism-bedrock-goerli-alpha-testnet"},HW={name:"Piece testnet",chain:"PieceNetwork",icon:{url:"ipfs://QmWAU39z1kcYshAqkENRH8qUjfR5CJehCxA4GiC33p3HpH",width:800,height:800,format:"png"},rpc:["https://piece-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc0.piecenetwork.com"],faucets:["https://piecenetwork.com/faucet"],nativeCurrency:{name:"ECE",symbol:"ECE",decimals:18},infoURL:"https://piecenetwork.com",shortName:"Piece",chainId:30067,networkId:30067,explorers:[{name:"Piece Scan",url:"https://testnet-scan.piecenetwork.com",standard:"EIP3091"}],testnet:!0,slug:"piece-testnet"},KW={name:"Ethersocial Network",chain:"ESN",rpc:["https://ethersocial-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.esn.gonspool.com"],faucets:[],nativeCurrency:{name:"Ethersocial Network Ether",symbol:"ESN",decimals:18},infoURL:"https://ethersocial.org",shortName:"esn",chainId:31102,networkId:1,slip44:31102,testnet:!1,slug:"ethersocial-network"},OW={name:"CloudTx Mainnet",chain:"CLD",icon:{url:"ipfs://QmSEsi71AdA5HYH6VNC5QUQezFg1C7BiVQJdx1VVfGz3g3",width:713,height:830,format:"png"},rpc:["https://cloudtx.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.cloudtx.finance"],faucets:[],nativeCurrency:{name:"CloudTx",symbol:"CLD",decimals:18},infoURL:"https://cloudtx.finance",shortName:"CLDTX",chainId:31223,networkId:31223,explorers:[{name:"cloudtxscan",url:"https://scan.cloudtx.finance",standard:"EIP3091"}],testnet:!1,slug:"cloudtx"},$W={name:"CloudTx Testnet",chain:"CloudTx",icon:{url:"ipfs://QmSEsi71AdA5HYH6VNC5QUQezFg1C7BiVQJdx1VVfGz3g3",width:713,height:830,format:"png"},rpc:["https://cloudtx-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.cloudtx.finance"],faucets:["https://faucet.cloudtx.finance"],nativeCurrency:{name:"CloudTx",symbol:"CLD",decimals:18},infoURL:"https://cloudtx.finance/",shortName:"CLD",chainId:31224,networkId:31224,explorers:[{name:"cloudtxexplorer",url:"https://explorer.cloudtx.finance",standard:"EIP3091"}],testnet:!0,slug:"cloudtx-testnet"},YW={name:"GoChain Testnet",chain:"GO",rpc:["https://gochain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.gochain.io"],faucets:[],nativeCurrency:{name:"GoChain Coin",symbol:"GO",decimals:18},infoURL:"https://gochain.io",shortName:"got",chainId:31337,networkId:31337,slip44:6060,explorers:[{name:"GoChain Testnet Explorer",url:"https://testnet-explorer.gochain.io",standard:"EIP3091"}],testnet:!0,slug:"gochain-testnet"},zW={name:"Filecoin - Wallaby testnet",chain:"FIL",icon:{url:"ipfs://QmS9r9XQkMHVomWcSBNDkKkz9n87h9bH9ssabeiKZtANoU",width:1e3,height:1e3,format:"png"},rpc:["https://filecoin-wallaby-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://wallaby.node.glif.io/rpc/v1"],faucets:["https://wallaby.yoga/#faucet"],nativeCurrency:{name:"testnet filecoin",symbol:"tFIL",decimals:18},infoURL:"https://filecoin.io",shortName:"filecoin-wallaby",chainId:31415,networkId:31415,slip44:1,explorers:[],testnet:!0,slug:"filecoin-wallaby-testnet"},qW={name:"Bitgert Mainnet",chain:"Brise",rpc:["https://bitgert.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.icecreamswap.com","https://mainnet-rpc.brisescan.com","https://chainrpc.com","https://serverrpc.com"],faucets:[],nativeCurrency:{name:"Bitrise Token",symbol:"Brise",decimals:18},infoURL:"https://bitgert.com/",shortName:"Brise",chainId:32520,networkId:32520,icon:{url:"ipfs://QmY3vKe1rG9AyHSGH1ouP3ER3EVUZRtRrFbFZEfEpMSd4V",width:512,height:512,format:"png"},explorers:[{name:"Brise Scan",url:"https://brisescan.com",icon:{url:"ipfs://QmY3vKe1rG9AyHSGH1ouP3ER3EVUZRtRrFbFZEfEpMSd4V",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"bitgert"},QW={name:"Fusion Mainnet",chain:"FSN",icon:{url:"ipfs://QmX3tsEoj7SdaBLLV8VyyCUAmymdEGiSGeuTbxMrEMVvth",width:31,height:31,format:"svg"},rpc:["https://fusion.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.fusionnetwork.io","wss://mainnet.fusionnetwork.io"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"Fusion",symbol:"FSN",decimals:18},infoURL:"https://fusion.org",shortName:"fsn",chainId:32659,networkId:32659,slip44:288,explorers:[{name:"fsnscan",url:"https://fsnscan.com",icon:{url:"ipfs://QmSAFx34SKNi7a139agX12f68oBMo2Ktt9c8yD8aFa14gd",width:48,height:51,format:"svg"},standard:"EIP3091"}],testnet:!1,slug:"fusion"},jW={name:"Zilliqa EVM",chain:"ZIL",rpc:["https://zilliqa-evm.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.zilliqa.com"],faucets:[],nativeCurrency:{name:"Zilliqa",symbol:"ZIL",decimals:18},infoURL:"https://www.zilliqa.com/",shortName:"zil",chainId:32769,networkId:32769,icon:{url:"ipfs://QmTREXNgGtUhSoxFsrkhTe5LUnDBTKL5byaX8kpET6UuKp",width:2048,height:2048,format:"png"},explorers:[{name:"Zilliqa EVM Explorer",url:"https://evmx.zilliqa.com",standard:"none"}],testnet:!1,slug:"zilliqa-evm"},VW={name:"Zilliqa EVM Testnet",chain:"ZIL",rpc:["https://zilliqa-evm-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://dev-api.zilliqa.com"],faucets:["https://dev-wallet.zilliqa.com/faucet?network=testnet"],nativeCurrency:{name:"Zilliqa",symbol:"ZIL",decimals:18},infoURL:"https://www.zilliqa.com/",shortName:"zil-testnet",chainId:33101,networkId:33101,explorers:[{name:"Zilliqa EVM Explorer",url:"https://evmx.zilliqa.com",standard:"none"}],testnet:!0,slug:"zilliqa-evm-testnet"},GW={name:"Aves Mainnet",chain:"AVS",rpc:["https://aves.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.avescoin.io"],faucets:[],nativeCurrency:{name:"Aves",symbol:"AVS",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://avescoin.io",shortName:"avs",chainId:33333,networkId:33333,icon:{url:"ipfs://QmeKQVv2QneHaaggw2NfpZ7DGMdjVhPywTdse5RzCs4oGn",width:232,height:232,format:"png"},explorers:[{name:"avescan",url:"https://avescan.io",icon:{url:"ipfs://QmeKQVv2QneHaaggw2NfpZ7DGMdjVhPywTdse5RzCs4oGn",width:232,height:232,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"aves"},ZW={name:"J2O Taro",chain:"TARO",rpc:["https://j2o-taro.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.j2o.io"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"TARO Coin",symbol:"taro",decimals:18},infoURL:"https://j2o.io",shortName:"j2o",chainId:35011,networkId:35011,explorers:[{name:"J2O Taro Explorer",url:"https://exp.j2o.io",icon:{url:"ipfs://QmdUYi8fjnvdM9iFQ7dwE2YvmhDtavSB3bKhCD2GhPxPks",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"j2o-taro"},XW={name:"Q Mainnet",chain:"Q",rpc:["https://q.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.q.org"],faucets:[],nativeCurrency:{name:"Q token",symbol:"Q",decimals:18},infoURL:"https://q.org",shortName:"q",chainId:35441,networkId:35441,icon:{url:"ipfs://QmQUQKe8VEtSthhgXnJ3EmEz94YhpVCpUDZAiU9KYyNLya",width:585,height:603,format:"png"},explorers:[{name:"Q explorer",url:"https://explorer.q.org",icon:{url:"ipfs://QmQUQKe8VEtSthhgXnJ3EmEz94YhpVCpUDZAiU9KYyNLya",width:585,height:603,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"q"},JW={name:"Q Testnet",chain:"Q",rpc:["https://q-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.qtestnet.org"],faucets:[],nativeCurrency:{name:"Q token",symbol:"Q",decimals:18},infoURL:"https://q.org/",shortName:"q-testnet",chainId:35443,networkId:35443,icon:{url:"ipfs://QmQUQKe8VEtSthhgXnJ3EmEz94YhpVCpUDZAiU9KYyNLya",width:585,height:603,format:"png"},explorers:[{name:"Q explorer",url:"https://explorer.qtestnet.org",icon:{url:"ipfs://QmQUQKe8VEtSthhgXnJ3EmEz94YhpVCpUDZAiU9KYyNLya",width:585,height:603,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"q-testnet"},e9={name:"Energi Mainnet",chain:"NRG",rpc:["https://energi.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://nodeapi.energi.network"],faucets:[],nativeCurrency:{name:"Energi",symbol:"NRG",decimals:18},infoURL:"https://www.energi.world/",shortName:"nrg",chainId:39797,networkId:39797,slip44:39797,testnet:!1,slug:"energi"},t9={name:"OHO Mainnet",chain:"OHO",rpc:["https://oho.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.oho.ai"],faucets:[],nativeCurrency:{name:"OHO",symbol:"OHO",decimals:18},infoURL:"https://oho.ai",shortName:"oho",chainId:39815,networkId:39815,icon:{url:"ipfs://QmZt75xixnEtFzqHTrJa8kJkV4cTXmUZqeMeHM8BcvomQc",width:512,height:512,format:"png"},explorers:[{name:"ohoscan",url:"https://ohoscan.com",icon:{url:"ipfs://QmZt75xixnEtFzqHTrJa8kJkV4cTXmUZqeMeHM8BcvomQc",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"oho"},n9={name:"Opulent-X BETA",chainId:41500,shortName:"ox-beta",chain:"Opulent-X",networkId:41500,nativeCurrency:{name:"Oxyn Gas",symbol:"OXYN",decimals:18},rpc:["https://opulent-x-beta.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://connect.opulent-x.com"],faucets:[],infoURL:"https://beta.opulent-x.com",explorers:[{name:"Opulent-X BETA Explorer",url:"https://explorer.opulent-x.com",standard:"none"}],testnet:!1,slug:"opulent-x-beta"},a9={name:"pegglecoin",chain:"42069",rpc:[],faucets:[],nativeCurrency:{name:"pegglecoin",symbol:"peggle",decimals:18},infoURL:"https://teampeggle.com",shortName:"PC",chainId:42069,networkId:42069,testnet:!1,slug:"pegglecoin"},r9={name:"Arbitrum One",chainId:42161,shortName:"arb1",chain:"ETH",networkId:42161,nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpc:["https://arbitrum.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://arbitrum-mainnet.infura.io/v3/${INFURA_API_KEY}","https://arb-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}","https://arb1.arbitrum.io/rpc"],faucets:[],explorers:[{name:"Arbitrum Explorer",url:"https://explorer.arbitrum.io",standard:"EIP3091"},{name:"Arbiscan",url:"https://arbiscan.io",standard:"EIP3091"}],infoURL:"https://arbitrum.io",parent:{type:"L2",chain:"eip155-1",bridges:[{url:"https://bridge.arbitrum.io"}]},icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/arbitrum/512.png",height:512,width:512,format:"png"},testnet:!1,slug:"arbitrum"},i9={name:"Arbitrum Nova",chainId:42170,shortName:"arb-nova",chain:"ETH",networkId:42170,nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpc:["https://arbitrum-nova.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://nova.arbitrum.io/rpc"],faucets:[],explorers:[{name:"Arbitrum Nova Chain Explorer",url:"https://nova-explorer.arbitrum.io",icon:{url:"ipfs://bafybeifu5tpui7dk5cjoo54kde7pmuthvnl7sdykobuarsxgu7t2izurnq",width:512,height:512,format:"png"},standard:"EIP3091"}],infoURL:"https://arbitrum.io",parent:{type:"L2",chain:"eip155-1",bridges:[{url:"https://bridge.arbitrum.io"}]},testnet:!1,slug:"arbitrum-nova"},s9={name:"Celo Mainnet",chainId:42220,shortName:"celo",chain:"CELO",networkId:42220,nativeCurrency:{name:"CELO",symbol:"CELO",decimals:18},rpc:["https://celo.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://forno.celo.org","wss://forno.celo.org/ws"],faucets:["https://free-online-app.com/faucet-for-eth-evm-chains/"],infoURL:"https://docs.celo.org/",explorers:[{name:"Celoscan",url:"https://celoscan.io",standard:"EIP3091"},{name:"blockscout",url:"https://explorer.celo.org",standard:"none"}],testnet:!1,slug:"celo"},o9={name:"Oasis Emerald Testnet",chain:"Emerald",icon:{url:"ipfs://bafkreiespupb52akiwrexxg7g72mh7m7h7lum5hmqijmpdh3kmuunzclha",width:2e3,height:2e3,format:"png"},rpc:["https://oasis-emerald-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.emerald.oasis.dev/","wss://testnet.emerald.oasis.dev/ws"],faucets:["https://faucet.testnet.oasis.dev/"],nativeCurrency:{name:"Emerald Rose",symbol:"ROSE",decimals:18},infoURL:"https://docs.oasis.io/dapp/emerald",shortName:"emerald-testnet",chainId:42261,networkId:42261,explorers:[{name:"Oasis Emerald Testnet Explorer",url:"https://testnet.explorer.emerald.oasis.dev",standard:"EIP3091"}],testnet:!0,slug:"oasis-emerald-testnet"},c9={name:"Oasis Emerald",chain:"Emerald",icon:{url:"ipfs://bafkreiespupb52akiwrexxg7g72mh7m7h7lum5hmqijmpdh3kmuunzclha",width:2e3,height:2e3,format:"png"},rpc:["https://oasis-emerald.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://emerald.oasis.dev","wss://emerald.oasis.dev/ws"],faucets:[],nativeCurrency:{name:"Emerald Rose",symbol:"ROSE",decimals:18},infoURL:"https://docs.oasis.io/dapp/emerald",shortName:"emerald",chainId:42262,networkId:42262,explorers:[{name:"Oasis Emerald Explorer",url:"https://explorer.emerald.oasis.dev",standard:"EIP3091"}],testnet:!1,slug:"oasis-emerald"},p9={name:"Athereum",chain:"ATH",rpc:["https://athereum.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://ava.network:21015/ext/evm/rpc"],faucets:["http://athfaucet.ava.network//?address=${ADDRESS}"],nativeCurrency:{name:"Athereum Ether",symbol:"ATH",decimals:18},infoURL:"https://athereum.ava.network",shortName:"avaeth",chainId:43110,networkId:43110,testnet:!1,slug:"athereum"},l9={name:"Avalanche Fuji Testnet",chain:"AVAX",icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/avalanche/512.png",height:512,width:512,format:"png"},rpc:["https://avalanche-fuji.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://avalanche-fuji.infura.io/v3/${INFURA_API_KEY}","https://api.avax-test.network/ext/bc/C/rpc","https://avalanche-fuji-c-chain.publicnode.com"],faucets:["https://faucet.avax.network/","https://faucet.avax-test.network/"],nativeCurrency:{name:"Avalanche",symbol:"AVAX",decimals:18},infoURL:"https://cchain.explorer.avax-test.network",shortName:"Fuji",chainId:43113,networkId:1,explorers:[{name:"snowtrace",url:"https://testnet.snowtrace.io",standard:"EIP3091"}],testnet:!0,slug:"avalanche-fuji"},d9={name:"Avalanche C-Chain",chain:"AVAX",icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/avalanche/512.png",height:512,width:512,format:"png"},rpc:["https://avalanche.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://avalanche-mainnet.infura.io/v3/${INFURA_API_KEY}","https://api.avax.network/ext/bc/C/rpc","https://avalanche-c-chain.publicnode.com"],features:[{name:"EIP1559"}],faucets:["https://free-online-app.com/faucet-for-eth-evm-chains/"],nativeCurrency:{name:"Avalanche",symbol:"AVAX",decimals:18},infoURL:"https://www.avax.network/",shortName:"avax",chainId:43114,networkId:43114,slip44:9005,explorers:[{name:"snowtrace",url:"https://snowtrace.io",standard:"EIP3091"}],testnet:!1,slug:"avalanche"},u9={name:"Boba Avax",chain:"Boba Avax",rpc:["https://boba-avax.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://avax.boba.network","wss://wss.avax.boba.network","https://replica.avax.boba.network","wss://replica-wss.avax.boba.network"],faucets:[],nativeCurrency:{name:"Boba Token",symbol:"BOBA",decimals:18},infoURL:"https://docs.boba.network/for-developers/network-avalanche",shortName:"bobaavax",chainId:43288,networkId:43288,explorers:[{name:"Boba Avax Explorer",url:"https://blockexplorer.avax.boba.network",standard:"none"}],testnet:!1,slug:"boba-avax"},m9={name:"Frenchain",chain:"fren",rpc:["https://frenchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-02.frenscan.io"],faucets:[],nativeCurrency:{name:"FREN",symbol:"FREN",decimals:18},infoURL:"https://frenchain.app",shortName:"FREN",chainId:44444,networkId:44444,icon:{url:"ipfs://QmQk41bYX6WpYyUAdRgomZekxP5mbvZXhfxLEEqtatyJv4",width:128,height:128,format:"png"},explorers:[{name:"blockscout",url:"https://frenscan.io",icon:{url:"ipfs://QmQk41bYX6WpYyUAdRgomZekxP5mbvZXhfxLEEqtatyJv4",width:128,height:128,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"frenchain"},h9={name:"Celo Alfajores Testnet",chainId:44787,shortName:"ALFA",chain:"CELO",networkId:44787,nativeCurrency:{name:"CELO",symbol:"CELO",decimals:18},rpc:["https://celo-alfajores-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://alfajores-forno.celo-testnet.org","wss://alfajores-forno.celo-testnet.org/ws"],faucets:["https://celo.org/developers/faucet","https://cauldron.pretoriaresearchlab.io/alfajores-faucet"],infoURL:"https://docs.celo.org/",explorers:[{name:"Celoscan",url:"https://celoscan.io",standard:"EIP3091"}],testnet:!0,slug:"celo-alfajores-testnet"},y9={name:"Autobahn Network",chain:"TXL",rpc:["https://autobahn-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.autobahn.network"],faucets:[],nativeCurrency:{name:"TXL",symbol:"TXL",decimals:18},infoURL:"https://autobahn.network",shortName:"AutobahnNetwork",chainId:45e3,networkId:45e3,icon:{url:"ipfs://QmZP19pbqTco4vaP9siduLWP8pdYArFK3onfR55tvjr12s",width:489,height:489,format:"png"},explorers:[{name:"autobahn explorer",url:"https://explorer.autobahn.network",icon:{url:"ipfs://QmZP19pbqTco4vaP9siduLWP8pdYArFK3onfR55tvjr12s",width:489,height:489,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"autobahn-network"},f9={name:"Fusion Testnet",chain:"FSN",icon:{url:"ipfs://QmX3tsEoj7SdaBLLV8VyyCUAmymdEGiSGeuTbxMrEMVvth",width:31,height:31,format:"svg"},rpc:["https://fusion-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.fusionnetwork.io","wss://testnet.fusionnetwork.io"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"Testnet Fusion",symbol:"T-FSN",decimals:18},infoURL:"https://fusion.org",shortName:"tfsn",chainId:46688,networkId:46688,slip44:288,explorers:[{name:"fsnscan",url:"https://testnet.fsnscan.com",icon:{url:"ipfs://QmSAFx34SKNi7a139agX12f68oBMo2Ktt9c8yD8aFa14gd",width:48,height:51,format:"svg"},standard:"EIP3091"}],testnet:!0,slug:"fusion-testnet"},g9={name:"REI Network",chain:"REI",rpc:["https://rei-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.rei.network","wss://rpc.rei.network"],faucets:[],nativeCurrency:{name:"REI",symbol:"REI",decimals:18},infoURL:"https://rei.network/",shortName:"REI",chainId:47805,networkId:47805,explorers:[{name:"rei-scan",url:"https://scan.rei.network",standard:"none"}],testnet:!1,slug:"rei-network"},b9={name:"Floripa",title:"Wireshape Testnet Floripa",chain:"Wireshape",rpc:["https://floripa.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-floripa.wireshape.org"],faucets:[],nativeCurrency:{name:"WIRE",symbol:"WIRE",decimals:18},infoURL:"https://wireshape.org",shortName:"floripa",chainId:49049,networkId:49049,explorers:[{name:"Wire Explorer",url:"https://floripa-explorer.wireshape.org",standard:"EIP3091"}],testnet:!0,slug:"floripa"},T9={name:"Bifrost Testnet",title:"The Bifrost Testnet network",chain:"BFC",rpc:["https://bifrost-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://public-01.testnet.thebifrost.io/rpc","https://public-02.testnet.thebifrost.io/rpc"],faucets:[],nativeCurrency:{name:"Bifrost",symbol:"BFC",decimals:18},infoURL:"https://thebifrost.io",shortName:"tbfc",chainId:49088,networkId:49088,icon:{url:"ipfs://QmcHvn2Wq91ULyEH5s3uHjosX285hUgyJHwggFJUd3L5uh",width:128,height:128,format:"png"},explorers:[{name:"explorer-thebifrost",url:"https://explorer.testnet.thebifrost.io",standard:"EIP3091"}],testnet:!0,slug:"bifrost-testnet"},w9={name:"Energi Testnet",chain:"NRG",rpc:["https://energi-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://nodeapi.test.energi.network"],faucets:[],nativeCurrency:{name:"Energi",symbol:"NRG",decimals:18},infoURL:"https://www.energi.world/",shortName:"tnrg",chainId:49797,networkId:49797,slip44:49797,testnet:!0,slug:"energi-testnet"},I9={name:"Liveplex OracleEVM",chain:"Liveplex OracleEVM Network",rpc:["https://liveplex-oracleevm.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.oracle.liveplex.io"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"",shortName:"LOE",chainId:50001,networkId:50001,explorers:[],testnet:!1,slug:"liveplex-oracleevm"},v9={name:"GTON Testnet",chain:"GTON Testnet",rpc:["https://gton-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.gton.network/"],faucets:[],nativeCurrency:{name:"GCD",symbol:"GCD",decimals:18},infoURL:"https://gton.capital",shortName:"tgton",chainId:50021,networkId:50021,explorers:[{name:"GTON Testnet Network Explorer",url:"https://explorer.testnet.gton.network",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-3"},testnet:!0,slug:"gton-testnet"},C9={name:"Opside Testnet Pre-Alpha",chain:"ETH",rpc:["https://opside-testnet-pre-alpha.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://pre-alpha-us-http-geth.opside.network","https://pre-alpha-hk-http-geth.opside.network"],faucets:[],nativeCurrency:{name:"IDE Test Token",symbol:"IDE",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://opsi.de/",shortName:"Opside-Testnet",chainId:51178,networkId:51178,icon:{url:"ipfs://QmZnE2ygPL2ZGuzHGvFCHmrqxwdurrhz3K1yPnwLzKbgay",width:401,height:400,format:"png"},explorers:[{name:"OpsideTestnetInfo",url:"https://pre-alpha.opside.info",icon:{url:"ipfs://QmZnE2ygPL2ZGuzHGvFCHmrqxwdurrhz3K1yPnwLzKbgay",width:401,height:400,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"opside-testnet-pre-alpha"},k9={name:"Sardis Mainnet",chain:"SRDX",icon:{url:"ipfs://QmdR9QJjQEh1mBnf2WbJfehverxiP5RDPWMtEECbDP2rc3",width:512,height:512,format:"png"},rpc:["https://sardis.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.sardisnetwork.com"],faucets:["https://faucet.sardisnetwork.com"],nativeCurrency:{name:"Sardis",symbol:"SRDX",decimals:18},infoURL:"https://mysardis.com",shortName:"SRDXm",chainId:51712,networkId:51712,explorers:[{name:"Sardis",url:"https://contract-mainnet.sardisnetwork.com",standard:"EIP3091"}],testnet:!1,slug:"sardis"},E9={name:"DFK Chain",chain:"DFK",icon:{url:"ipfs://QmQB48m15TzhUFrmu56QCRQjkrkgUaKfgCmKE8o3RzmuPJ",width:500,height:500,format:"png"},rpc:["https://dfk-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://subnets.avax.network/defi-kingdoms/dfk-chain/rpc"],faucets:[],nativeCurrency:{name:"Jewel",symbol:"JEWEL",decimals:18},infoURL:"https://defikingdoms.com",shortName:"DFK",chainId:53935,networkId:53935,explorers:[{name:"ethernal",url:"https://explorer.dfkchain.com",icon:{url:"ipfs://QmdwQDr6vmBtXmK2TmknkEuZNoaDqTasFdZdu3DRw8b2wt",width:1e3,height:1628,format:"png"},standard:"none"}],testnet:!1,slug:"dfk-chain"},x9={name:"Haqq Chain Testnet",chain:"TestEdge2",rpc:["https://haqq-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.eth.testedge2.haqq.network"],faucets:["https://testedge2.haqq.network"],nativeCurrency:{name:"Islamic Coin",symbol:"ISLMT",decimals:18},infoURL:"https://islamiccoin.net",shortName:"ISLMT",chainId:54211,networkId:54211,explorers:[{name:"TestEdge HAQQ Explorer",url:"https://explorer.testedge2.haqq.network",standard:"EIP3091"}],testnet:!0,slug:"haqq-chain-testnet"},R9={name:"REI Chain Mainnet",chain:"REI",icon:{url:"ipfs://QmNy5d5knHVjJJS9g4kLsh9i73RTjckpKL6KZvRk6ptbhf",width:591,height:591,format:"svg"},rpc:["https://rei-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rei-rpc.moonrhythm.io"],faucets:["http://kururu.finance/faucet?chainId=55555"],nativeCurrency:{name:"Rei",symbol:"REI",decimals:18},infoURL:"https://reichain.io",shortName:"reichain",chainId:55555,networkId:55555,explorers:[{name:"reiscan",url:"https://reiscan.com",standard:"EIP3091"}],testnet:!1,slug:"rei-chain"},A9={name:"REI Chain Testnet",chain:"REI",icon:{url:"ipfs://QmNy5d5knHVjJJS9g4kLsh9i73RTjckpKL6KZvRk6ptbhf",width:591,height:591,format:"svg"},rpc:["https://rei-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rei-testnet-rpc.moonrhythm.io"],faucets:["http://kururu.finance/faucet?chainId=55556"],nativeCurrency:{name:"tRei",symbol:"tREI",decimals:18},infoURL:"https://reichain.io",shortName:"trei",chainId:55556,networkId:55556,explorers:[{name:"reiscan",url:"https://testnet.reiscan.com",standard:"EIP3091"}],testnet:!0,slug:"rei-chain-testnet"},P9={name:"Boba BNB Mainnet",chain:"Boba BNB Mainnet",rpc:["https://boba-bnb.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://bnb.boba.network","wss://wss.bnb.boba.network","https://replica.bnb.boba.network","wss://replica-wss.bnb.boba.network"],faucets:[],nativeCurrency:{name:"Boba Token",symbol:"BOBA",decimals:18},infoURL:"https://boba.network",shortName:"BobaBnb",chainId:56288,networkId:56288,explorers:[{name:"Boba BNB block explorer",url:"https://blockexplorer.bnb.boba.network",standard:"none"}],testnet:!1,slug:"boba-bnb"},M9={name:"Syscoin Rollux Testnet",chain:"SYS",rpc:["https://syscoin-rollux-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-tanenbaum.rollux.com","wss://rpc-tanenbaum.rollux.com/wss"],faucets:[],nativeCurrency:{name:"Rollux Testnet Syscoin",symbol:"tSYS",decimals:18},infoURL:"https://syscoin.org",shortName:"tsys-rollux",chainId:57e3,networkId:57e3,explorers:[{name:"Syscoin Rollux Testnet Explorer",url:"https://rollux.tanenbaum.io",standard:"EIP3091"}],testnet:!0,slug:"syscoin-rollux-testnet"},_9={name:"Linea Testnet",title:"Linea Goerli Testnet",chain:"ETH",rpc:["https://linea-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.goerli.linea.build","wss://rpc.goerli.linea.build","https://consensys-zkevm-goerli-prealpha.infura.io/v3/${INFURA_API_KEY}","wss://consensys-zkevm-goerli-prealpha.infura.io/v3/${INFURA_API_KEY}"],faucets:["https://faucetlink.to/goerli"],nativeCurrency:{name:"Linea Ether",symbol:"ETH",decimals:18},infoURL:"https://linea.build",shortName:"linea-testnet",chainId:59140,networkId:59140,icon:{url:"ipfs://QmURjritnHL7a8TwZgsFwp3f272DJmG5paaPtWDZ98QZwH",width:97,height:102,format:"svg"},parent:{type:"L2",chain:"eip155-5",bridges:[{url:"https://goerli.hop.exchange/#/send?token=ETH&sourceNetwork=ethereum&destNetwork=linea"}]},explorers:[{name:"blockscout",url:"https://explorer.goerli.linea.build",standard:"EIP3091",icon:{url:"ipfs://QmURjritnHL7a8TwZgsFwp3f272DJmG5paaPtWDZ98QZwH",width:97,height:102,format:"svg"}}],status:"active",testnet:!0,slug:"linea-testnet"},S9={name:"Thinkium Testnet Chain 0",chain:"Thinkium",rpc:["https://thinkium-testnet-chain-0.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://test.thinkiumrpc.net/"],faucets:["https://www.thinkiumdev.net/faucet"],nativeCurrency:{name:"TKM",symbol:"TKM",decimals:18},infoURL:"https://thinkium.net/",shortName:"TKM-test0",chainId:6e4,networkId:6e4,explorers:[{name:"thinkiumscan",url:"https://test0.thinkiumscan.net",standard:"EIP3091"}],testnet:!0,slug:"thinkium-testnet-chain-0"},W9={name:"Thinkium Testnet Chain 1",chain:"Thinkium",rpc:["https://thinkium-testnet-chain-1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://test1.thinkiumrpc.net/"],faucets:["https://www.thinkiumdev.net/faucet"],nativeCurrency:{name:"TKM",symbol:"TKM",decimals:18},infoURL:"https://thinkium.net/",shortName:"TKM-test1",chainId:60001,networkId:60001,explorers:[{name:"thinkiumscan",url:"https://test1.thinkiumscan.net",standard:"EIP3091"}],testnet:!0,slug:"thinkium-testnet-chain-1"},B9={name:"Thinkium Testnet Chain 2",chain:"Thinkium",rpc:["https://thinkium-testnet-chain-2.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://test2.thinkiumrpc.net/"],faucets:["https://www.thinkiumdev.net/faucet"],nativeCurrency:{name:"TKM",symbol:"TKM",decimals:18},infoURL:"https://thinkium.net/",shortName:"TKM-test2",chainId:60002,networkId:60002,explorers:[{name:"thinkiumscan",url:"https://test2.thinkiumscan.net",standard:"EIP3091"}],testnet:!0,slug:"thinkium-testnet-chain-2"},N9={name:"Thinkium Testnet Chain 103",chain:"Thinkium",rpc:["https://thinkium-testnet-chain-103.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://test103.thinkiumrpc.net/"],faucets:["https://www.thinkiumdev.net/faucet"],nativeCurrency:{name:"TKM",symbol:"TKM",decimals:18},infoURL:"https://thinkium.net/",shortName:"TKM-test103",chainId:60103,networkId:60103,explorers:[{name:"thinkiumscan",url:"https://test103.thinkiumscan.net",standard:"EIP3091"}],testnet:!0,slug:"thinkium-testnet-chain-103"},D9={name:"Etica Mainnet",chain:"Etica Protocol (ETI/EGAZ)",icon:{url:"ipfs://QmYSyhUqm6ArWyALBe3G64823ZpEUmFdkzKZ93hUUhNKgU",width:360,height:361,format:"png"},rpc:["https://etica.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://eticamainnet.eticascan.org","https://eticamainnet.eticaprotocol.org"],faucets:["http://faucet.etica-stats.org/"],nativeCurrency:{name:"EGAZ",symbol:"EGAZ",decimals:18},infoURL:"https://eticaprotocol.org",shortName:"Etica",chainId:61803,networkId:61803,explorers:[{name:"eticascan",url:"https://eticascan.org",standard:"EIP3091"},{name:"eticastats",url:"http://explorer.etica-stats.org",standard:"EIP3091"}],testnet:!1,slug:"etica"},L9={name:"DoKEN Super Chain Mainnet",chain:"DoKEN Super Chain",rpc:["https://doken-super-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://sgrpc.doken.dev","https://nyrpc.doken.dev","https://ukrpc.doken.dev"],faucets:[],nativeCurrency:{name:"DoKEN",symbol:"DKN",decimals:18},infoURL:"https://doken.dev/",shortName:"DoKEN",chainId:61916,networkId:61916,icon:{url:"ipfs://bafkreifms4eio6v56oyeemnnu5luq3sc44hptan225lr45itgzu3u372iu",width:200,height:200,format:"png"},explorers:[{name:"DSC Scan",url:"https://explore.doken.dev",icon:{url:"ipfs://bafkreifms4eio6v56oyeemnnu5luq3sc44hptan225lr45itgzu3u372iu",width:200,height:200,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"doken-super-chain"},U9={name:"Celo Baklava Testnet",chainId:62320,shortName:"BKLV",chain:"CELO",networkId:62320,nativeCurrency:{name:"CELO",symbol:"CELO",decimals:18},rpc:["https://celo-baklava-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://baklava-forno.celo-testnet.org"],faucets:["https://docs.google.com/forms/d/e/1FAIpQLSdfr1BwUTYepVmmvfVUDRCwALejZ-TUva2YujNpvrEmPAX2pg/viewform","https://cauldron.pretoriaresearchlab.io/baklava-faucet"],infoURL:"https://docs.celo.org/",testnet:!0,slug:"celo-baklava-testnet"},F9={name:"MultiVAC Mainnet",chain:"MultiVAC",icon:{url:"ipfs://QmWb1gthhbzkiLdgcP8ccZprGbJVjFcW8Rn4uJjrw4jd3B",width:200,height:200,format:"png"},rpc:["https://multivac.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.mtv.ac","https://rpc-eu.mtv.ac"],faucets:[],nativeCurrency:{name:"MultiVAC",symbol:"MTV",decimals:18},infoURL:"https://mtv.ac",shortName:"mtv",chainId:62621,networkId:62621,explorers:[{name:"MultiVAC Explorer",url:"https://e.mtv.ac",standard:"none"}],testnet:!1,slug:"multivac"},H9={name:"eCredits Mainnet",chain:"ECS",rpc:["https://ecredits.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.ecredits.com"],faucets:[],nativeCurrency:{name:"eCredits",symbol:"ECS",decimals:18},infoURL:"https://ecredits.com",shortName:"ecs",chainId:63e3,networkId:63e3,icon:{url:"ipfs://QmU9H9JE1KtLh2Fxrd8EWTMjKGJBpgRWKUeEx7u6ic4kBY",width:32,height:32,format:"png"},explorers:[{name:"eCredits MainNet Explorer",url:"https://explorer.ecredits.com",icon:{url:"ipfs://QmU9H9JE1KtLh2Fxrd8EWTMjKGJBpgRWKUeEx7u6ic4kBY",width:32,height:32,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"ecredits"},K9={name:"eCredits Testnet",chain:"ECS",rpc:["https://ecredits-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.tst.ecredits.com"],faucets:["https://faucet.tst.ecredits.com"],nativeCurrency:{name:"eCredits",symbol:"ECS",decimals:18},infoURL:"https://ecredits.com",shortName:"ecs-testnet",chainId:63001,networkId:63001,icon:{url:"ipfs://QmU9H9JE1KtLh2Fxrd8EWTMjKGJBpgRWKUeEx7u6ic4kBY",width:32,height:32,format:"png"},explorers:[{name:"eCredits TestNet Explorer",url:"https://explorer.tst.ecredits.com",icon:{url:"ipfs://QmU9H9JE1KtLh2Fxrd8EWTMjKGJBpgRWKUeEx7u6ic4kBY",width:32,height:32,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"ecredits-testnet"},O9={name:"Scolcoin Mainnet",chain:"SCOLWEI",rpc:["https://scolcoin.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.scolcoin.com"],faucets:[],nativeCurrency:{name:"Scolcoin",symbol:"SCOL",decimals:18},infoURL:"https://scolcoin.com",shortName:"SRC",chainId:65450,networkId:65450,icon:{url:"ipfs://QmVES1eqDXhP8SdeCpM85wvjmhrQDXGRquQebDrSdvJqpt",width:792,height:822,format:"png"},explorers:[{name:"Scolscan Explorer",url:"https://explorer.scolcoin.com",standard:"EIP3091"}],testnet:!1,slug:"scolcoin"},$9={name:"Cosmic Chain",chain:"COSMIC",rpc:["https://cosmic-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://testnet.cosmicchain.site:3344"],faucets:[],nativeCurrency:{name:"Cosmic Chain",symbol:"COSMIC",decimals:18},infoURL:"https://cosmicchain.site",shortName:"Cosmic",chainId:67588,networkId:3344,testnet:!0,slug:"cosmic-chain"},Y9={name:"Condrieu",title:"Ethereum Verkle Testnet Condrieu",chain:"ETH",rpc:["https://condrieu.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.condrieu.ethdevops.io:8545"],faucets:["https://faucet.condrieu.ethdevops.io"],nativeCurrency:{name:"Condrieu Testnet Ether",symbol:"CTE",decimals:18},infoURL:"https://condrieu.ethdevops.io",shortName:"cndr",chainId:69420,networkId:69420,explorers:[{name:"Condrieu explorer",url:"https://explorer.condrieu.ethdevops.io",standard:"none"}],testnet:!0,slug:"condrieu"},z9={name:"Thinkium Mainnet Chain 0",chain:"Thinkium",rpc:["https://thinkium-chain-0.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://proxy.thinkiumrpc.net/"],faucets:[],nativeCurrency:{name:"TKM",symbol:"TKM",decimals:18},infoURL:"https://thinkium.net/",shortName:"TKM0",chainId:7e4,networkId:7e4,explorers:[{name:"thinkiumscan",url:"https://chain0.thinkiumscan.net",standard:"EIP3091"}],testnet:!1,slug:"thinkium-chain-0"},q9={name:"Thinkium Mainnet Chain 1",chain:"Thinkium",rpc:["https://thinkium-chain-1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://proxy1.thinkiumrpc.net/"],faucets:[],nativeCurrency:{name:"TKM",symbol:"TKM",decimals:18},infoURL:"https://thinkium.net/",shortName:"TKM1",chainId:70001,networkId:70001,explorers:[{name:"thinkiumscan",url:"https://chain1.thinkiumscan.net",standard:"EIP3091"}],testnet:!1,slug:"thinkium-chain-1"},Q9={name:"Thinkium Mainnet Chain 2",chain:"Thinkium",rpc:["https://thinkium-chain-2.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://proxy2.thinkiumrpc.net/"],faucets:[],nativeCurrency:{name:"TKM",symbol:"TKM",decimals:18},infoURL:"https://thinkium.net/",shortName:"TKM2",chainId:70002,networkId:70002,explorers:[{name:"thinkiumscan",url:"https://chain2.thinkiumscan.net",standard:"EIP3091"}],testnet:!1,slug:"thinkium-chain-2"},j9={name:"Thinkium Mainnet Chain 103",chain:"Thinkium",rpc:["https://thinkium-chain-103.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://proxy103.thinkiumrpc.net/"],faucets:[],nativeCurrency:{name:"TKM",symbol:"TKM",decimals:18},infoURL:"https://thinkium.net/",shortName:"TKM103",chainId:70103,networkId:70103,explorers:[{name:"thinkiumscan",url:"https://chain103.thinkiumscan.net",standard:"EIP3091"}],testnet:!1,slug:"thinkium-chain-103"},V9={name:"GuapcoinX",chain:"GuapcoinX",rpc:["https://guapcoinx.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-mainnet.guapcoinx.com/","https://rpc-mainnet-1.guapcoinx.com/","https://rpc-mainnet-2.guapcoinx.com/"],faucets:[],nativeCurrency:{name:"GuapcoinX",symbol:"GuapX",decimals:18},infoURL:"https://guapcoin.org/",shortName:"GuapX",chainId:71111,networkId:71111,icon:{url:"ipfs://QmcDTR7982VQKDDz2Mh4fZbnE9hn67MuFPWQv1MimCqPvB",width:800,height:800,format:"png"},explorers:[{name:"GuapcoinX Explorer",url:"http://explorer.guapcoinx.com",standard:"none",icon:{url:"ipfs://QmcDTR7982VQKDDz2Mh4fZbnE9hn67MuFPWQv1MimCqPvB",width:800,height:800,format:"png"}}],testnet:!1,slug:"guapcoinx"},G9={name:"Polyjuice Testnet",chain:"CKB",icon:{url:"ipfs://QmZ5gFWUxLFqqT3DkefYfRsVksMwMTc5VvBjkbHpeFMsNe",width:1001,height:1629,format:"png"},rpc:["https://polyjuice-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://godwoken-testnet-web3-rpc.ckbapp.dev","ws://godwoken-testnet-web3-rpc.ckbapp.dev/ws"],faucets:["https://faucet.nervos.org/"],nativeCurrency:{name:"CKB",symbol:"CKB",decimals:8},infoURL:"https://github.com/nervosnetwork/godwoken",shortName:"ckb",chainId:71393,networkId:1,testnet:!0,slug:"polyjuice-testnet"},Z9={name:"Godwoken Testnet v1",chain:"GWT",rpc:["https://godwoken-testnet-v1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://godwoken-testnet-v1.ckbapp.dev","https://v1.testnet.godwoken.io/rpc"],faucets:["https://testnet.bridge.godwoken.io"],nativeCurrency:{name:"pCKB",symbol:"pCKB",decimals:18},infoURL:"https://www.nervos.org",shortName:"gw-testnet-v1",chainId:71401,networkId:71401,explorers:[{name:"GWScan Block Explorer",url:"https://v1.testnet.gwscan.com",standard:"none"}],testnet:!0,slug:"godwoken-testnet-v1"},X9={name:"Godwoken Mainnet",chain:"GWT",rpc:["https://godwoken.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://v1.mainnet.godwoken.io/rpc"],faucets:[],nativeCurrency:{name:"pCKB",symbol:"pCKB",decimals:18},infoURL:"https://www.nervos.org",shortName:"gw-mainnet-v1",chainId:71402,networkId:71402,explorers:[{name:"GWScan Block Explorer",url:"https://v1.gwscan.com",standard:"none"}],testnet:!1,slug:"godwoken"},J9={name:"Energy Web Volta Testnet",chain:"Volta",rpc:["https://energy-web-volta-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://volta-rpc.energyweb.org","wss://volta-rpc.energyweb.org/ws"],faucets:["https://voltafaucet.energyweb.org"],nativeCurrency:{name:"Volta Token",symbol:"VT",decimals:18},infoURL:"https://energyweb.org",shortName:"vt",chainId:73799,networkId:73799,testnet:!0,slug:"energy-web-volta-testnet"},eB={name:"Mixin Virtual Machine",chain:"MVM",rpc:["https://mixin-virtual-machine.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://geth.mvm.dev"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://mvm.dev",shortName:"mvm",chainId:73927,networkId:73927,icon:{url:"ipfs://QmeuDgSprukzfV7fi9XYHYcfmT4aZZZU7idgShtRS8Vf6V",width:471,height:512,format:"png"},explorers:[{name:"mvmscan",url:"https://scan.mvm.dev",icon:{url:"ipfs://QmeuDgSprukzfV7fi9XYHYcfmT4aZZZU7idgShtRS8Vf6V",width:471,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"mixin-virtual-machine"},tB={name:"ResinCoin Mainnet",chain:"RESIN",icon:{url:"ipfs://QmTBszPzBeWPhjozf4TxpL2ws1NkG9yJvisx9h6MFii1zb",width:460,height:460,format:"png"},rpc:[],faucets:[],nativeCurrency:{name:"Ether",symbol:"RESIN",decimals:18},infoURL:"https://resincoin.dev",shortName:"resin",chainId:75e3,networkId:75e3,explorers:[{name:"ResinScan",url:"https://explorer.resincoin.dev",standard:"none"}],testnet:!1,slug:"resincoin"},nB={name:"Vention Smart Chain Mainnet",chain:"VSC",icon:{url:"ipfs://QmcNepHmbmHW1BZYM3MFqJW4awwhmDqhUPRXXmRnXwg1U4",width:250,height:250,format:"png"},rpc:["https://vention-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.vention.network"],faucets:["https://faucet.vention.network"],nativeCurrency:{name:"VNT",symbol:"VNT",decimals:18},infoURL:"https://ventionscan.io",shortName:"vscm",chainId:77612,networkId:77612,explorers:[{name:"ventionscan",url:"https://ventionscan.io",standard:"EIP3091"}],testnet:!1,slug:"vention-smart-chain"},aB={name:"Firenze test network",chain:"ETH",rpc:["https://firenze-test-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://ethnode.primusmoney.com/firenze"],faucets:[],nativeCurrency:{name:"Firenze Ether",symbol:"FIN",decimals:18},infoURL:"https://primusmoney.com",shortName:"firenze",chainId:78110,networkId:78110,testnet:!0,slug:"firenze-test-network"},rB={name:"Gold Smart Chain Testnet",chain:"STAND",icon:{url:"ipfs://QmPNuymyaKLJhCaXnyrsL8358FeTxabZFsaxMmWNU4Tzt3",width:396,height:418,format:"png"},rpc:["https://gold-smart-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.goldsmartchain.com"],faucets:["https://faucet.goldsmartchain.com"],nativeCurrency:{name:"Standard in Gold",symbol:"STAND",decimals:18},infoURL:"https://goldsmartchain.com",shortName:"STANDt",chainId:79879,networkId:79879,explorers:[{name:"Gold Smart Chain",url:"https://testnet.goldsmartchain.com",standard:"EIP3091"}],testnet:!0,slug:"gold-smart-chain-testnet"},iB={name:"Mumbai",title:"Polygon Testnet Mumbai",chain:"Polygon",icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/polygon/512.png",height:512,width:512,format:"png"},rpc:["https://mumbai.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://polygon-mumbai.g.alchemy.com/v2/${ALCHEMY_API_KEY}","https://polygon-mumbai.infura.io/v3/${INFURA_API_KEY}","https://matic-mumbai.chainstacklabs.com","https://rpc-mumbai.maticvigil.com","https://matic-testnet-archive-rpc.bwarelabs.com","https://polygon-mumbai-bor.publicnode.com"],faucets:["https://faucet.polygon.technology/"],nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},infoURL:"https://polygon.technology/",shortName:"maticmum",chainId:80001,networkId:80001,explorers:[{name:"polygonscan",url:"https://mumbai.polygonscan.com",standard:"EIP3091"}],testnet:!0,slug:"mumbai"},sB={name:"Amana Testnet",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Amana Testnet",symbol:"MEER-T",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"amanatest",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:81341,networkId:81341,status:"incubating",testnet:!0,slug:"amana-testnet"},oB={name:"Amana Mixnet",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Amana Mixnet",symbol:"MEER-M",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"amanamix",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:81342,networkId:81342,status:"incubating",testnet:!1,slug:"amana-mixnet"},cB={name:"Amana Privnet",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Amana Privnet",symbol:"MEER-P",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"amanapriv",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:81343,networkId:81343,status:"incubating",testnet:!1,slug:"amana-privnet"},pB={name:"Flana Testnet",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Flana Testnet",symbol:"MEER-T",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"flanatest",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:81351,networkId:81351,status:"incubating",testnet:!0,slug:"flana-testnet"},lB={name:"Flana Mixnet",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Flana Mixnet",symbol:"MEER-M",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"flanamix",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:81352,networkId:81352,status:"incubating",testnet:!1,slug:"flana-mixnet"},dB={name:"Flana Privnet",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Flana Privnet",symbol:"MEER-P",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"flanapriv",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:81353,networkId:81353,status:"incubating",testnet:!1,slug:"flana-privnet"},uB={name:"Mizana Testnet",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Mizana Testnet",symbol:"MEER-T",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"mizanatest",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:81361,networkId:81361,status:"incubating",testnet:!0,slug:"mizana-testnet"},mB={name:"Mizana Mixnet",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Mizana Mixnet",symbol:"MEER-M",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"mizanamix",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:81362,networkId:81362,status:"incubating",testnet:!1,slug:"mizana-mixnet"},hB={name:"Mizana Privnet",chain:"MEER",rpc:[],faucets:[],nativeCurrency:{name:"Mizana Privnet",symbol:"MEER-P",decimals:18},infoURL:"https://github.com/Qitmeer",shortName:"mizanapriv",icon:{url:"ipfs://QmWSbMuCwQzhBB6GRLYqZ87n5cnpzpYCehCAMMQmUXj4mm",width:512,height:512,format:"png"},chainId:81363,networkId:81363,status:"incubating",testnet:!1,slug:"mizana-privnet"},yB={name:"Base Goerli Testnet",chain:"ETH",rpc:["https://base-goerli.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://goerli.base.org"],faucets:["https://www.coinbase.com/faucets/base-ethereum-goerli-faucet"],nativeCurrency:{name:"Goerli Ether",symbol:"ETH",decimals:18},infoURL:"https://base.org",shortName:"basegor",chainId:84531,networkId:84531,explorers:[{name:"basescout",url:"https://base-goerli.blockscout.com",standard:"none"},{name:"basescan",url:"https://goerli.basescan.org",standard:"none"}],testnet:!0,icon:{url:"ipfs://QmW5Vn15HeRkScMfPcW12ZdZcC2yUASpu6eCsECRdEmjjj/base-512.png",height:512,width:512,format:"png"},slug:"base-goerli"},fB={name:"CYBERTRUST",chain:"CYBER",rpc:["https://cybertrust.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://testnet.cybertrust.space:48501"],faucets:[],nativeCurrency:{name:"Cyber Trust",symbol:"CYBER",decimals:18},infoURL:"https://cybertrust.space",shortName:"Cyber",chainId:85449,networkId:48501,testnet:!0,slug:"cybertrust"},gB={name:"Chiliz Scoville Testnet",chain:"CHZ",rpc:["https://chiliz-scoville-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://scoville-rpc.chiliz.com"],faucets:["https://scoville-faucet.chiliz.com"],nativeCurrency:{name:"Chiliz",symbol:"CHZ",decimals:18},icon:{url:"ipfs://QmYV5xUVZhHRzLy7ie9D8qZeygJHvNZZAxwnB9GXYy6EED",width:400,height:400,format:"png"},infoURL:"https://www.chiliz.com/en/chain",shortName:"chz",chainId:88880,networkId:88880,explorers:[{name:"scoville-explorer",url:"https://scoville-explorer.chiliz.com",standard:"none"}],testnet:!0,slug:"chiliz-scoville-testnet"},bB={name:"IVAR Chain Mainnet",chain:"IVAR",icon:{url:"ipfs://QmV8UmSwqGF2fxrqVEBTHbkyZueahqyYtkfH2RBF5pNysM",width:519,height:519,format:"svg"},rpc:["https://ivar-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.ivarex.com"],faucets:["https://faucet.ivarex.com/"],nativeCurrency:{name:"Ivar",symbol:"IVAR",decimals:18},infoURL:"https://ivarex.com",shortName:"ivar",chainId:88888,networkId:88888,explorers:[{name:"ivarscan",url:"https://ivarscan.com",standard:"EIP3091"}],testnet:!1,slug:"ivar-chain"},TB={name:"Beverly Hills",title:"Ethereum multi-client Verkle Testnet Beverly Hills",chain:"ETH",rpc:["https://beverly-hills.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.beverlyhills.ethdevops.io:8545"],faucets:["https://faucet.beverlyhills.ethdevops.io"],nativeCurrency:{name:"Beverly Hills Testnet Ether",symbol:"BVE",decimals:18},infoURL:"https://beverlyhills.ethdevops.io",shortName:"bvhl",chainId:90210,networkId:90210,status:"incubating",explorers:[{name:"Beverly Hills explorer",url:"https://explorer.beverlyhills.ethdevops.io",standard:"none"}],testnet:!0,slug:"beverly-hills"},wB={name:"Lambda Testnet",chain:"Lambda",rpc:["https://lambda-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm.lambda.top/"],faucets:["https://faucet.lambda.top"],nativeCurrency:{name:"test-Lamb",symbol:"LAMB",decimals:18},infoURL:"https://lambda.im",shortName:"lambda-testnet",chainId:92001,networkId:92001,icon:{url:"ipfs://QmWsoME6LCghQTpGYf7EnUojaDdYo7kfkWVjE6VvNtkjwy",width:500,height:500,format:"png"},explorers:[{name:"Lambda EVM Explorer",url:"https://explorer.lambda.top",standard:"EIP3091",icon:{url:"ipfs://QmWsoME6LCghQTpGYf7EnUojaDdYo7kfkWVjE6VvNtkjwy",width:500,height:500,format:"png"}}],testnet:!0,slug:"lambda-testnet"},IB={name:"UB Smart Chain(testnet)",chain:"USC",rpc:["https://ub-smart-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.rpc.uschain.network"],faucets:[],nativeCurrency:{name:"UBC",symbol:"UBC",decimals:18},infoURL:"https://www.ubchain.site",shortName:"usctest",chainId:99998,networkId:99998,testnet:!0,slug:"ub-smart-chain-testnet"},vB={name:"UB Smart Chain",chain:"USC",rpc:["https://ub-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.uschain.network"],faucets:[],nativeCurrency:{name:"UBC",symbol:"UBC",decimals:18},infoURL:"https://www.ubchain.site/",shortName:"usc",chainId:99999,networkId:99999,testnet:!1,slug:"ub-smart-chain"},CB={name:"QuarkChain Mainnet Root",chain:"QuarkChain",rpc:["https://quarkchain-root.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://jrpc.mainnet.quarkchain.io:38391"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-r",chainId:1e5,networkId:1e5,testnet:!1,slug:"quarkchain-root"},kB={name:"QuarkChain Mainnet Shard 0",chain:"QuarkChain",rpc:["https://quarkchain-shard-0.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-s0-ethapi.quarkchain.io","http://eth-jrpc.mainnet.quarkchain.io:39000"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-s0",chainId:100001,networkId:100001,parent:{chain:"eip155-100000",type:"shard"},explorers:[{name:"quarkchain-mainnet",url:"https://mainnet.quarkchain.io/0",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-shard-0"},EB={name:"QuarkChain Mainnet Shard 1",chain:"QuarkChain",rpc:["https://quarkchain-shard-1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-s1-ethapi.quarkchain.io","http://eth-jrpc.mainnet.quarkchain.io:39001"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-s1",chainId:100002,networkId:100002,parent:{chain:"eip155-100000",type:"shard"},explorers:[{name:"quarkchain-mainnet",url:"https://mainnet.quarkchain.io/1",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-shard-1"},xB={name:"QuarkChain Mainnet Shard 2",chain:"QuarkChain",rpc:["https://quarkchain-shard-2.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-s2-ethapi.quarkchain.io","http://eth-jrpc.mainnet.quarkchain.io:39002"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-s2",chainId:100003,networkId:100003,parent:{chain:"eip155-100000",type:"shard"},explorers:[{name:"quarkchain-mainnet",url:"https://mainnet.quarkchain.io/2",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-shard-2"},RB={name:"QuarkChain Mainnet Shard 3",chain:"QuarkChain",rpc:["https://quarkchain-shard-3.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-s3-ethapi.quarkchain.io","http://eth-jrpc.mainnet.quarkchain.io:39003"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-s3",chainId:100004,networkId:100004,parent:{chain:"eip155-100000",type:"shard"},explorers:[{name:"quarkchain-mainnet",url:"https://mainnet.quarkchain.io/3",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-shard-3"},AB={name:"QuarkChain Mainnet Shard 4",chain:"QuarkChain",rpc:["https://quarkchain-shard-4.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-s4-ethapi.quarkchain.io","http://eth-jrpc.mainnet.quarkchain.io:39004"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-s4",chainId:100005,networkId:100005,parent:{chain:"eip155-100000",type:"shard"},explorers:[{name:"quarkchain-mainnet",url:"https://mainnet.quarkchain.io/4",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-shard-4"},PB={name:"QuarkChain Mainnet Shard 5",chain:"QuarkChain",rpc:["https://quarkchain-shard-5.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-s5-ethapi.quarkchain.io","http://eth-jrpc.mainnet.quarkchain.io:39005"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-s5",chainId:100006,networkId:100006,parent:{chain:"eip155-100000",type:"shard"},explorers:[{name:"quarkchain-mainnet",url:"https://mainnet.quarkchain.io/5",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-shard-5"},MB={name:"QuarkChain Mainnet Shard 6",chain:"QuarkChain",rpc:["https://quarkchain-shard-6.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-s6-ethapi.quarkchain.io","http://eth-jrpc.mainnet.quarkchain.io:39006"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-s6",chainId:100007,networkId:100007,parent:{chain:"eip155-100000",type:"shard"},explorers:[{name:"quarkchain-mainnet",url:"https://mainnet.quarkchain.io/6",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-shard-6"},_B={name:"QuarkChain Mainnet Shard 7",chain:"QuarkChain",rpc:["https://quarkchain-shard-7.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-s7-ethapi.quarkchain.io","http://eth-jrpc.mainnet.quarkchain.io:39007"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-s7",chainId:100008,networkId:100008,parent:{chain:"eip155-100000",type:"shard"},explorers:[{name:"quarkchain-mainnet",url:"https://mainnet.quarkchain.io/7",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-shard-7"},SB={name:"VeChain",chain:"VeChain",rpc:[],faucets:[],nativeCurrency:{name:"VeChain",symbol:"VET",decimals:18},infoURL:"https://vechain.org",shortName:"vechain",chainId:100009,networkId:100009,explorers:[{name:"VeChain Stats",url:"https://vechainstats.com",standard:"none"},{name:"VeChain Explorer",url:"https://explore.vechain.org",standard:"none"}],testnet:!1,slug:"vechain"},WB={name:"VeChain Testnet",chain:"VeChain",rpc:[],faucets:["https://faucet.vecha.in"],nativeCurrency:{name:"VeChain",symbol:"VET",decimals:18},infoURL:"https://vechain.org",shortName:"vechain-testnet",chainId:100010,networkId:100010,explorers:[{name:"VeChain Explorer",url:"https://explore-testnet.vechain.org",standard:"none"}],testnet:!0,slug:"vechain-testnet"},BB={name:"Soverun Testnet",chain:"SVRN",icon:{url:"ipfs://QmTYazUzgY9Nn2mCjWwFUSLy3dG6i2PvALpwCNQvx1zXyi",width:1154,height:1154,format:"png"},rpc:["https://soverun-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.soverun.com"],faucets:["https://faucet.soverun.com"],nativeCurrency:{name:"Soverun",symbol:"SVRN",decimals:18},infoURL:"https://soverun.com",shortName:"SVRNt",chainId:101010,networkId:101010,explorers:[{name:"Soverun",url:"https://testnet.soverun.com",standard:"EIP3091"}],testnet:!0,slug:"soverun-testnet"},NB={name:"Crystaleum",chain:"crystal",rpc:["https://crystaleum.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://evm.cryptocurrencydevs.org","https://rpc.crystaleum.org"],faucets:[],nativeCurrency:{name:"CRFI",symbol:"\u25C8",decimals:18},infoURL:"https://crystaleum.org",shortName:"CRFI",chainId:103090,networkId:1,icon:{url:"ipfs://Qmbry1Uc6HnXmqFNXW5dFJ7To8EezCCjNr4TqqvAyzXS4h",width:150,height:150,format:"png"},explorers:[{name:"blockscout",url:"https://scan.crystaleum.org",icon:{url:"ipfs://Qmbry1Uc6HnXmqFNXW5dFJ7To8EezCCjNr4TqqvAyzXS4h",width:150,height:150,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"crystaleum"},DB={name:"BROChain Mainnet",chain:"BRO",rpc:["https://brochain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.brochain.org","http://rpc.brochain.org","https://rpc.brochain.org/mainnet","http://rpc.brochain.org/mainnet"],faucets:[],nativeCurrency:{name:"Brother",symbol:"BRO",decimals:18},infoURL:"https://brochain.org",shortName:"bro",chainId:108801,networkId:108801,explorers:[{name:"BROChain Explorer",url:"https://explorer.brochain.org",standard:"EIP3091"}],testnet:!1,slug:"brochain"},LB={name:"QuarkChain Devnet Root",chain:"QuarkChain",rpc:["https://quarkchain-devnet-root.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://jrpc.devnet.quarkchain.io:38391"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-d-r",chainId:11e4,networkId:11e4,testnet:!1,slug:"quarkchain-devnet-root"},UB={name:"QuarkChain Devnet Shard 0",chain:"QuarkChain",rpc:["https://quarkchain-devnet-shard-0.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnet-s0-ethapi.quarkchain.io","http://eth-jrpc.devnet.quarkchain.io:39900"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-d-s0",chainId:110001,networkId:110001,parent:{chain:"eip155-110000",type:"shard"},explorers:[{name:"quarkchain-devnet",url:"https://devnet.quarkchain.io/0",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-devnet-shard-0"},FB={name:"QuarkChain Devnet Shard 1",chain:"QuarkChain",rpc:["https://quarkchain-devnet-shard-1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnet-s1-ethapi.quarkchain.io","http://eth-jrpc.devnet.quarkchain.io:39901"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-d-s1",chainId:110002,networkId:110002,parent:{chain:"eip155-110000",type:"shard"},explorers:[{name:"quarkchain-devnet",url:"https://devnet.quarkchain.io/1",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-devnet-shard-1"},HB={name:"QuarkChain Devnet Shard 2",chain:"QuarkChain",rpc:["https://quarkchain-devnet-shard-2.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnet-s2-ethapi.quarkchain.io","http://eth-jrpc.devnet.quarkchain.io:39902"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-d-s2",chainId:110003,networkId:110003,parent:{chain:"eip155-110000",type:"shard"},explorers:[{name:"quarkchain-devnet",url:"https://devnet.quarkchain.io/2",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-devnet-shard-2"},KB={name:"QuarkChain Devnet Shard 3",chain:"QuarkChain",rpc:["https://quarkchain-devnet-shard-3.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnet-s3-ethapi.quarkchain.io","http://eth-jrpc.devnet.quarkchain.io:39903"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-d-s3",chainId:110004,networkId:110004,parent:{chain:"eip155-110000",type:"shard"},explorers:[{name:"quarkchain-devnet",url:"https://devnet.quarkchain.io/3",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-devnet-shard-3"},OB={name:"QuarkChain Devnet Shard 4",chain:"QuarkChain",rpc:["https://quarkchain-devnet-shard-4.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnet-s4-ethapi.quarkchain.io","http://eth-jrpc.devnet.quarkchain.io:39904"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-d-s4",chainId:110005,networkId:110005,parent:{chain:"eip155-110000",type:"shard"},explorers:[{name:"quarkchain-devnet",url:"https://devnet.quarkchain.io/4",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-devnet-shard-4"},$B={name:"QuarkChain Devnet Shard 5",chain:"QuarkChain",rpc:["https://quarkchain-devnet-shard-5.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnet-s5-ethapi.quarkchain.io","http://eth-jrpc.devnet.quarkchain.io:39905"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-d-s5",chainId:110006,networkId:110006,parent:{chain:"eip155-110000",type:"shard"},explorers:[{name:"quarkchain-devnet",url:"https://devnet.quarkchain.io/5",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-devnet-shard-5"},YB={name:"QuarkChain Devnet Shard 6",chain:"QuarkChain",rpc:["https://quarkchain-devnet-shard-6.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnet-s6-ethapi.quarkchain.io","http://eth-jrpc.devnet.quarkchain.io:39906"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-d-s6",chainId:110007,networkId:110007,parent:{chain:"eip155-110000",type:"shard"},explorers:[{name:"quarkchain-devnet",url:"https://devnet.quarkchain.io/6",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-devnet-shard-6"},zB={name:"QuarkChain Devnet Shard 7",chain:"QuarkChain",rpc:["https://quarkchain-devnet-shard-7.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnet-s7-ethapi.quarkchain.io","http://eth-jrpc.devnet.quarkchain.io:39907"],faucets:[],nativeCurrency:{name:"QKC",symbol:"QKC",decimals:18},infoURL:"https://www.quarkchain.io",shortName:"qkc-d-s7",chainId:110008,networkId:110008,parent:{chain:"eip155-110000",type:"shard"},explorers:[{name:"quarkchain-devnet",url:"https://devnet.quarkchain.io/7",standard:"EIP3091"}],testnet:!1,slug:"quarkchain-devnet-shard-7"},qB={name:"Siberium Network",chain:"SBR",rpc:["https://siberium-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.main.siberium.net","https://rpc.main.siberium.net.ru"],faucets:[],nativeCurrency:{name:"Siberium",symbol:"SBR",decimals:18},infoURL:"https://siberium.net",shortName:"sbr",chainId:111111,networkId:111111,icon:{url:"ipfs://QmVDeoGo2TZPDWiaNDdPCnH2tz2BCQ7viw8ugdDWnU5LFq",width:1920,height:1920,format:"svg"},explorers:[{name:"Siberium Mainnet Explorer - blockscout - 1",url:"https://explorer.main.siberium.net",icon:{url:"ipfs://QmVDeoGo2TZPDWiaNDdPCnH2tz2BCQ7viw8ugdDWnU5LFq",width:1920,height:1920,format:"svg"},standard:"EIP3091"},{name:"Siberium Mainnet Explorer - blockscout - 2",url:"https://explorer.main.siberium.net.ru",icon:{url:"ipfs://QmVDeoGo2TZPDWiaNDdPCnH2tz2BCQ7viw8ugdDWnU5LFq",width:1920,height:1920,format:"svg"},standard:"EIP3091"}],testnet:!1,slug:"siberium-network"},QB={name:"ADIL Devnet",chain:"ADIL",icon:{url:"ipfs://QmeHNYUx6n8CjUFSLWNT17oAtDYrUq6r8buyvGCUBXCJw6",width:500,height:500,format:"png"},rpc:["https://adil-devnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnet.adilchain-rpc.io"],faucets:[],nativeCurrency:{name:"Devnet ADIL",symbol:"ADIL",decimals:18},infoURL:"https://adilchain.io",shortName:"dadil",chainId:123456,networkId:123456,explorers:[{name:"ADIL Devnet Explorer",url:"https://devnet.adilchain-scan.io",standard:"EIP3091"}],testnet:!1,slug:"adil-devnet"},jB={name:"ETND Chain Mainnets",chain:"ETND",rpc:["https://etnd-chain-s.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.node1.etnd.pro/"],faucets:[],nativeCurrency:{name:"ETND",symbol:"ETND",decimals:18},infoURL:"https://www.etnd.pro",shortName:"ETND",chainId:131419,networkId:131419,icon:{url:"ipfs://Qmd26eRJxPb1jJg5Q4mC2M4kD9Jrs5vmcnr5LczHFMGwSD",width:128,height:128,format:"png"},explorers:[{name:"etndscan",url:"https://scan.etnd.pro",icon:{url:"ipfs://Qmd26eRJxPb1jJg5Q4mC2M4kD9Jrs5vmcnr5LczHFMGwSD",width:128,height:128,format:"png"},standard:"none"}],testnet:!1,slug:"etnd-chain-s"},VB={name:"ICPlaza Mainnet",chain:"ICPlaza",icon:{url:"ipfs://QmQpKKwpqrx77VA4SJLEWhuv9eLFMcVV9uvxRCLb6gdgCX",width:847,height:906,format:"png"},rpc:["https://icplaza.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpcmainnet.ic-plaza.org/"],faucets:[],nativeCurrency:{name:"ict",symbol:"ict",decimals:18},infoURL:"https://docs.ic-plaza.org/",shortName:"ICPlaza",chainId:142857,networkId:142857,explorers:[{name:"ICPlaza",url:"https://browsemainnet.ic-plaza.org/index",standard:"none"}],testnet:!1,slug:"icplaza"},GB={name:"Taiko (Alpha-2 Testnet)",chain:"ETH",icon:{url:"ipfs://QmWMUDmNHzCtism9dYK1JooerZJ4da6kGt67HAQmLiEykc",width:1001,height:1001,format:"png"},rpc:["https://taiko-alpha-2-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.a2.taiko.xyz"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://taiko.xyz",shortName:"taiko-a2",chainId:167004,networkId:167004,explorers:[{name:"blockscout",url:"https://explorer.a2.taiko.xyz",standard:"EIP3091"}],testnet:!0,slug:"taiko-alpha-2-testnet"},ZB={name:"Condor Test Network",chain:"CONDOR",icon:{url:"ipfs://QmPRDuEJSTqp2cDUvWCp71Wns6XV8nvdeAVKWH6srpk4xM",width:752,height:752,format:"png"},rpc:["https://condor-test-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.condor.systems/rpc"],faucets:["https://faucet.condor.systems"],nativeCurrency:{name:"Condor Native Token",symbol:"CONDOR",decimals:18},infoURL:"https://condor.systems",shortName:"condor",chainId:188881,networkId:188881,explorers:[{name:"CondorScan",url:"https://explorer.condor.systems",standard:"none"}],testnet:!0,slug:"condor-test-network"},XB={name:"Milkomeda C1 Testnet",chain:"milkTAda",icon:{url:"ipfs://QmdoUtvHDybu5ppYBZT8BMRp6AqByVSoQs8nFwKbaS55jd",width:367,height:367,format:"svg"},rpc:["https://milkomeda-c1-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-devnet-cardano-evm.c1.milkomeda.com","wss://rpc-devnet-cardano-evm.c1.milkomeda.com"],faucets:[],nativeCurrency:{name:"milkTAda",symbol:"mTAda",decimals:18},infoURL:"https://milkomeda.com",shortName:"milkTAda",chainId:200101,networkId:200101,explorers:[{name:"Blockscout",url:"https://explorer-devnet-cardano-evm.c1.milkomeda.com",standard:"none"}],testnet:!0,slug:"milkomeda-c1-testnet"},JB={name:"Milkomeda A1 Testnet",chain:"milkTAlgo",icon:{url:"ipfs://QmdoUtvHDybu5ppYBZT8BMRp6AqByVSoQs8nFwKbaS55jd",width:367,height:367,format:"svg"},rpc:["https://milkomeda-a1-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-devnet-algorand-rollup.a1.milkomeda.com"],faucets:[],nativeCurrency:{name:"milkTAlgo",symbol:"mTAlgo",decimals:18},infoURL:"https://milkomeda.com",shortName:"milkTAlgo",chainId:200202,networkId:200202,explorers:[{name:"Blockscout",url:"https://explorer-devnet-algorand-rollup.a1.milkomeda.com",standard:"none"}],testnet:!0,slug:"milkomeda-a1-testnet"},eN={name:"Akroma",chain:"AKA",rpc:["https://akroma.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://remote.akroma.io"],faucets:[],nativeCurrency:{name:"Akroma Ether",symbol:"AKA",decimals:18},infoURL:"https://akroma.io",shortName:"aka",chainId:200625,networkId:200625,slip44:200625,testnet:!1,slug:"akroma"},tN={name:"Alaya Mainnet",chain:"Alaya",rpc:["https://alaya.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://openapi.alaya.network/rpc","wss://openapi.alaya.network/ws"],faucets:[],nativeCurrency:{name:"ATP",symbol:"atp",decimals:18},infoURL:"https://www.alaya.network/",shortName:"alaya",chainId:201018,networkId:1,icon:{url:"ipfs://Qmci6vPcWAwmq19j98yuQxjV6UPzHtThMdCAUDbKeb8oYu",width:1140,height:1140,format:"png"},explorers:[{name:"alaya explorer",url:"https://scan.alaya.network",standard:"none"}],testnet:!1,slug:"alaya"},nN={name:"Alaya Dev Testnet",chain:"Alaya",rpc:["https://alaya-dev-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnetopenapi.alaya.network/rpc","wss://devnetopenapi.alaya.network/ws"],faucets:["https://faucet.alaya.network/faucet/?id=f93426c0887f11eb83b900163e06151c"],nativeCurrency:{name:"ATP",symbol:"atp",decimals:18},infoURL:"https://www.alaya.network/",shortName:"alayadev",chainId:201030,networkId:1,icon:{url:"ipfs://Qmci6vPcWAwmq19j98yuQxjV6UPzHtThMdCAUDbKeb8oYu",width:1140,height:1140,format:"png"},explorers:[{name:"alaya explorer",url:"https://devnetscan.alaya.network",standard:"none"}],testnet:!0,slug:"alaya-dev-testnet"},aN={name:"Mythical Chain",chain:"MYTH",rpc:["https://mythical-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://chain-rpc.mythicalgames.com"],faucets:[],nativeCurrency:{name:"Mythos",symbol:"MYTH",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://mythicalgames.com/",shortName:"myth",chainId:201804,networkId:201804,icon:{url:"ipfs://bafkreihru6cccfblrjz5bv36znq2l3h67u6xj5ivtc4bj5l6gzofbgtnb4",width:350,height:350,format:"png"},explorers:[{name:"Mythical Chain Explorer",url:"https://explorer.mythicalgames.com",icon:{url:"ipfs://bafkreihru6cccfblrjz5bv36znq2l3h67u6xj5ivtc4bj5l6gzofbgtnb4",width:350,height:350,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"mythical-chain"},rN={name:"Decimal Smart Chain Testnet",chain:"tDSC",rpc:["https://decimal-smart-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-val.decimalchain.com/web3"],faucets:[],nativeCurrency:{name:"Decimal",symbol:"tDEL",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://decimalchain.com",shortName:"tDSC",chainId:202020,networkId:202020,icon:{url:"ipfs://QmSgzwKnJJjys3Uq2aVVdwJ3NffLj3CXMVCph9uByTBegc",width:256,height:256,format:"png"},explorers:[{name:"DSC Explorer Testnet",url:"https://testnet.explorer.decimalchain.com",icon:{url:"ipfs://QmSgzwKnJJjys3Uq2aVVdwJ3NffLj3CXMVCph9uByTBegc",width:256,height:256,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"decimal-smart-chain-testnet"},iN={name:"Jellie",title:"Twala Testnet Jellie",shortName:"twl-jellie",chain:"ETH",chainId:202624,networkId:202624,icon:{url:"ipfs://QmTXJVhVKvVC7DQEnGKXvydvwpvVaUEBJrMHvsCr4nr1sK",width:1326,height:1265,format:"png"},nativeCurrency:{name:"Twala Coin",symbol:"TWL",decimals:18},rpc:["https://jellie.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://jellie-rpc.twala.io/","wss://jellie-rpc-wss.twala.io/"],faucets:[],infoURL:"https://twala.io/",explorers:[{name:"Jellie Blockchain Explorer",url:"https://jellie.twala.io",standard:"EIP3091",icon:{url:"ipfs://QmTXJVhVKvVC7DQEnGKXvydvwpvVaUEBJrMHvsCr4nr1sK",width:1326,height:1265,format:"png"}}],testnet:!0,slug:"jellie"},sN={name:"PlatON Mainnet",chain:"PlatON",rpc:["https://platon.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://openapi2.platon.network/rpc","wss://openapi2.platon.network/ws"],faucets:[],nativeCurrency:{name:"LAT",symbol:"lat",decimals:18},infoURL:"https://www.platon.network",shortName:"platon",chainId:210425,networkId:1,icon:{url:"ipfs://QmT7PSXBiVBma6E15hNkivmstqLu3JSnG1jXN5pTmcCGRC",width:200,height:200,format:"png"},explorers:[{name:"PlatON explorer",url:"https://scan.platon.network",standard:"none"}],testnet:!1,slug:"platon"},oN={name:"Mas Mainnet",chain:"MAS",rpc:["https://mas.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://node.masnet.ai:8545"],faucets:[],nativeCurrency:{name:"Master Bank",symbol:"MAS",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://masterbank.org",shortName:"mas",chainId:220315,networkId:220315,icon:{url:"ipfs://QmZ9njQhhKkpJKGnoYy6XTuDtk5CYiDFUd8atqWthqUT3Q",width:1024,height:1024,format:"png"},explorers:[{name:"explorer masnet",url:"https://explorer.masnet.ai",standard:"EIP3091"}],testnet:!1,slug:"mas"},cN={name:"Taf ECO Chain Mainnet",chain:"Taf ECO Chain",icon:{url:"ipfs://bafkreigpxhu7glccsislhjqpl5fnsfmj2io4cy33blhky642uiuyojossy",width:400,height:400,format:"png"},rpc:["https://taf-eco-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.tafchain.com/v1"],faucets:[],nativeCurrency:{name:"Taf ECO Chain Mainnet",symbol:"TAFECO",decimals:18},infoURL:"https://www.tafchain.com",shortName:"TAFECO",chainId:224168,networkId:224168,explorers:[{name:"Taf ECO Chain Mainnet",url:"https://ecoscan.tafchain.com",standard:"EIP3091"}],testnet:!1,slug:"taf-eco-chain"},pN={name:"HashKey Chain Testnet",chain:"HashKey",rpc:["https://hashkey-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.hashkeychain/rpc"],faucets:["https://testnet.hashkeychain/faucet"],nativeCurrency:{name:"HashKey Token",symbol:"tHSK",decimals:18},infoURL:"https://www.hashkey.com",shortName:"hsktest",chainId:230315,networkId:230315,icon:{url:"ipfs://QmNU11AqYB2htrrSyBSP9ct7bPtuZTP7Hrz21PrEcB9nYE",width:1440,height:448,format:"png"},explorers:[{name:"HashKey Chain Testnet Explorer",url:"https://testnet.hashkeyscan.io",standard:"none"}],testnet:!0,slug:"hashkey-chain-testnet"},lN={name:"Haymo Testnet",chain:"tHYM",rpc:["https://haymo-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet1.haymo.network"],faucets:[],nativeCurrency:{name:"HAYMO",symbol:"HYM",decimals:18},infoURL:"https://haymoswap.web.app/",shortName:"hym",chainId:234666,networkId:234666,testnet:!0,slug:"haymo-testnet"},dN={name:"ARTIS sigma1",chain:"ARTIS",rpc:["https://artis-sigma1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.sigma1.artis.network"],faucets:[],nativeCurrency:{name:"ARTIS sigma1 Ether",symbol:"ATS",decimals:18},infoURL:"https://artis.eco",shortName:"ats",chainId:246529,networkId:246529,slip44:246529,testnet:!1,slug:"artis-sigma1"},uN={name:"ARTIS Testnet tau1",chain:"ARTIS",rpc:["https://artis-testnet-tau1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.tau1.artis.network"],faucets:[],nativeCurrency:{name:"ARTIS tau1 Ether",symbol:"tATS",decimals:18},infoURL:"https://artis.network",shortName:"atstau",chainId:246785,networkId:246785,testnet:!0,slug:"artis-testnet-tau1"},mN={name:"Saakuru Testnet",chain:"Saakuru",icon:{url:"ipfs://QmduEdtFobPpZWSc45MU6RKxZfTEzLux2z8ikHFhT8usqv",width:1024,height:1024,format:"png"},rpc:["https://saakuru-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-testnet.saakuru.network"],faucets:[],nativeCurrency:{name:"OAS",symbol:"OAS",decimals:18},infoURL:"https://saakuru.network",shortName:"saakuru-testnet",chainId:247253,networkId:247253,explorers:[{name:"saakuru-explorer-testnet",url:"https://explorer-testnet.saakuru.network",standard:"EIP3091"}],testnet:!0,slug:"saakuru-testnet"},hN={name:"CMP-Mainnet",chain:"CMP",rpc:["https://cmp.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.block.caduceus.foundation","wss://mainnet.block.caduceus.foundation"],faucets:[],nativeCurrency:{name:"Caduceus Token",symbol:"CMP",decimals:18},infoURL:"https://caduceus.foundation/",shortName:"cmp-mainnet",chainId:256256,networkId:256256,explorers:[{name:"Mainnet Scan",url:"https://mainnet.scan.caduceus.foundation",standard:"none"}],testnet:!1,slug:"cmp"},yN={name:"Gear Zero Network Testnet",chain:"GearZero",rpc:["https://gear-zero-network-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://gzn-test.linksme.info"],faucets:[],nativeCurrency:{name:"Gear Zero Network Native Token",symbol:"GZN",decimals:18},infoURL:"https://token.gearzero.ca/testnet",shortName:"gz-testnet",chainId:266256,networkId:266256,slip44:266256,explorers:[],testnet:!0,slug:"gear-zero-network-testnet"},fN={name:"Social Smart Chain Mainnet",chain:"SoChain",rpc:["https://social-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://socialsmartchain.digitalnext.business"],faucets:[],nativeCurrency:{name:"SoChain",symbol:"$OC",decimals:18},infoURL:"https://digitalnext.business/SocialSmartChain",shortName:"SoChain",chainId:281121,networkId:281121,explorers:[],testnet:!1,slug:"social-smart-chain"},gN={name:"Filecoin - Calibration testnet",chain:"FIL",icon:{url:"ipfs://QmS9r9XQkMHVomWcSBNDkKkz9n87h9bH9ssabeiKZtANoU",width:1e3,height:1e3,format:"png"},rpc:["https://filecoin-calibration-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.calibration.node.glif.io/rpc/v1"],faucets:["https://faucet.calibration.fildev.network/"],nativeCurrency:{name:"testnet filecoin",symbol:"tFIL",decimals:18},infoURL:"https://filecoin.io",shortName:"filecoin-calibration",chainId:314159,networkId:314159,slip44:1,explorers:[{name:"Filscan - Calibration",url:"https://calibration.filscan.io",standard:"none"},{name:"Filscout - Calibration",url:"https://calibration.filscout.com/en",standard:"none"},{name:"Filfox - Calibration",url:"https://calibration.filfox.info",standard:"none"}],testnet:!0,slug:"filecoin-calibration-testnet"},bN={name:"TTcoin Smart Chain Mainnet",chain:"TSC",icon:{url:"ipfs://QmS7ipvvyZ16weG1DM7AZbi1v9ixYwU2FjP25Jj5jkLiuf",width:512,height:512,format:"png"},rpc:["https://ttcoin-smart-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.tscscan.com"],faucets:["https://faucet.tscscan.com"],nativeCurrency:{name:"TTcoin",symbol:"TC",decimals:18},infoURL:"https://ttcoin.info/",shortName:"tc",chainId:330844,networkId:330844,explorers:[{name:"TTcoin Smart Chain Explorer",url:"https://tscscan.com",standard:"EIP3091",icon:{url:"ipfs://QmS7ipvvyZ16weG1DM7AZbi1v9ixYwU2FjP25Jj5jkLiuf",width:512,height:512,format:"png"}}],testnet:!1,slug:"ttcoin-smart-chain"},TN={name:"Oone Chain Testnet",chain:"OONE",rpc:["https://oone-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://blockchain-test.adigium.world"],faucets:["https://apps-test.adigium.com/faucet"],nativeCurrency:{name:"Oone",symbol:"tOONE",decimals:18},infoURL:"https://oone.world",shortName:"oonetest",chainId:333777,networkId:333777,explorers:[{name:"expedition",url:"https://explorer-test.adigium.world",standard:"none"}],testnet:!0,slug:"oone-chain-testnet"},wN={name:"Polis Testnet",chain:"Sparta",icon:{url:"ipfs://QmagWrtyApex28H2QeXcs3jJ2F7p2K7eESz3cDbHdQ3pjG",width:1050,height:1050,format:"png"},rpc:["https://polis-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://sparta-rpc.polis.tech"],faucets:["https://faucet.polis.tech"],nativeCurrency:{name:"tPolis",symbol:"tPOLIS",decimals:18},infoURL:"https://polis.tech",shortName:"sparta",chainId:333888,networkId:333888,testnet:!0,slug:"polis-testnet"},IN={name:"Polis Mainnet",chain:"Olympus",icon:{url:"ipfs://QmagWrtyApex28H2QeXcs3jJ2F7p2K7eESz3cDbHdQ3pjG",width:1050,height:1050,format:"png"},rpc:["https://polis.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.polis.tech"],faucets:["https://faucet.polis.tech"],nativeCurrency:{name:"Polis",symbol:"POLIS",decimals:18},infoURL:"https://polis.tech",shortName:"olympus",chainId:333999,networkId:333999,testnet:!1,slug:"polis"},vN={name:"HAPchain Testnet",chain:"HAPchain",rpc:["https://hapchain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://jsonrpc-test.hap.land"],faucets:[],nativeCurrency:{name:"HAP",symbol:"HAP",decimals:18},infoURL:"https://hap.land",shortName:"hap-testnet",chainId:373737,networkId:373737,icon:{url:"ipfs://QmQ4V9JC25yUrYk2kFJwmKguSsZBQvtGcg6q9zkDV8mkJW",width:400,height:400,format:"png"},explorers:[{name:"HAP EVM Explorer (Blockscout)",url:"https://blockscout-test.hap.land",standard:"none",icon:{url:"ipfs://QmQ4V9JC25yUrYk2kFJwmKguSsZBQvtGcg6q9zkDV8mkJW",width:400,height:400,format:"png"}}],testnet:!0,slug:"hapchain-testnet"},CN={name:"Metal C-Chain",chain:"Metal",rpc:["https://metal-c-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.metalblockchain.org/ext/bc/C/rpc"],faucets:[],nativeCurrency:{name:"Metal",symbol:"METAL",decimals:18},infoURL:"https://www.metalblockchain.org/",shortName:"metal",chainId:381931,networkId:381931,slip44:9005,explorers:[{name:"metalscan",url:"https://metalscan.io",standard:"EIP3091"}],testnet:!1,slug:"metal-c-chain"},kN={name:"Metal Tahoe C-Chain",chain:"Metal",rpc:["https://metal-tahoe-c-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://tahoe.metalblockchain.org/ext/bc/C/rpc"],faucets:[],nativeCurrency:{name:"Metal",symbol:"METAL",decimals:18},infoURL:"https://www.metalblockchain.org/",shortName:"Tahoe",chainId:381932,networkId:381932,slip44:9005,explorers:[{name:"metalscan",url:"https://tahoe.metalscan.io",standard:"EIP3091"}],testnet:!1,slug:"metal-tahoe-c-chain"},EN={name:"Tipboxcoin Mainnet",chain:"TPBX",icon:{url:"ipfs://QmbiaHnR3fVVofZ7Xq2GYZxwHkLEy3Fh5qDtqnqXD6ACAh",width:192,height:192,format:"png"},rpc:["https://tipboxcoin.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.tipboxcoin.net"],faucets:["https://faucet.tipboxcoin.net"],nativeCurrency:{name:"Tipboxcoin",symbol:"TPBX",decimals:18},infoURL:"https://tipboxcoin.net",shortName:"TPBXm",chainId:404040,networkId:404040,explorers:[{name:"Tipboxcoin",url:"https://tipboxcoin.net",standard:"EIP3091"}],testnet:!1,slug:"tipboxcoin"},xN={name:"Kekchain",chain:"kek",rpc:["https://kekchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.kekchain.com"],faucets:[],nativeCurrency:{name:"KEK",symbol:"KEK",decimals:18},infoURL:"https://kekchain.com",shortName:"KEK",chainId:420420,networkId:103090,icon:{url:"ipfs://QmNzwHAmaaQyuvKudrzGkrTT2GMshcmCmJ9FH8gG2mNJtM",width:401,height:401,format:"svg"},explorers:[{name:"blockscout",url:"https://mainnet-explorer.kekchain.com",icon:{url:"ipfs://QmNzwHAmaaQyuvKudrzGkrTT2GMshcmCmJ9FH8gG2mNJtM",width:401,height:401,format:"svg"},standard:"EIP3091"}],testnet:!1,slug:"kekchain"},RN={name:"Kekchain (kektest)",chain:"kek",rpc:["https://kekchain-kektest.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.kekchain.com"],faucets:[],nativeCurrency:{name:"tKEK",symbol:"tKEK",decimals:18},infoURL:"https://kekchain.com",shortName:"tKEK",chainId:420666,networkId:1,icon:{url:"ipfs://QmNzwHAmaaQyuvKudrzGkrTT2GMshcmCmJ9FH8gG2mNJtM",width:401,height:401,format:"svg"},explorers:[{name:"blockscout",url:"https://testnet-explorer.kekchain.com",icon:{url:"ipfs://QmNzwHAmaaQyuvKudrzGkrTT2GMshcmCmJ9FH8gG2mNJtM",width:401,height:401,format:"svg"},standard:"EIP3091"}],testnet:!0,slug:"kekchain-kektest"},AN={name:"Arbitrum Rinkeby",title:"Arbitrum Testnet Rinkeby",chainId:421611,shortName:"arb-rinkeby",chain:"ETH",networkId:421611,nativeCurrency:{name:"Arbitrum Rinkeby Ether",symbol:"ETH",decimals:18},rpc:["https://arbitrum-rinkeby.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rinkeby.arbitrum.io/rpc"],faucets:["http://fauceth.komputing.org?chain=421611&address=${ADDRESS}"],infoURL:"https://arbitrum.io",explorers:[{name:"arbiscan-testnet",url:"https://testnet.arbiscan.io",standard:"EIP3091"},{name:"arbitrum-rinkeby",url:"https://rinkeby-explorer.arbitrum.io",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-4",bridges:[{url:"https://bridge.arbitrum.io"}]},testnet:!0,slug:"arbitrum-rinkeby"},PN={name:"Arbitrum Goerli",title:"Arbitrum Goerli Rollup Testnet",chainId:421613,shortName:"arb-goerli",chain:"ETH",networkId:421613,nativeCurrency:{name:"Arbitrum Goerli Ether",symbol:"AGOR",decimals:18},rpc:["https://arbitrum-goerli.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://arb-goerli.g.alchemy.com/v2/${ALCHEMY_API_KEY}","https://abritrum-goerli.infura.io/v3/${INFURA_API_KEY}","https://goerli-rollup.arbitrum.io/rpc/"],faucets:[],infoURL:"https://arbitrum.io/",explorers:[{name:"Arbitrum Goerli Rollup Explorer",url:"https://goerli-rollup-explorer.arbitrum.io",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-5",bridges:[{url:"https://bridge.arbitrum.io/"}]},icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/arbitrum/512.png",height:512,width:512,format:"png"},testnet:!0,slug:"arbitrum-goerli"},MN={name:"Fastex Chain testnet",chain:"FTN",title:"Fastex Chain testnet",rpc:["https://fastex-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.testnet.fastexchain.com"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"FTN",symbol:"FTN",decimals:18},infoURL:"https://fastex.com",shortName:"fastexTestnet",chainId:424242,networkId:424242,explorers:[{name:"blockscout",url:"https://testnet.ftnscan.com",standard:"none"}],testnet:!0,slug:"fastex-chain-testnet"},_N={name:"Markr Go",chain:"Unified",icon:{url:"ipfs://QmVMBTZVPawyLBD2B5VbG68dfWLfZ1CnB8V59xduBe2kwh",width:84,height:84,format:"png"},rpc:["https://markr-go.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.markr.io/ext/"],faucets:[],nativeCurrency:{name:"Avalanche",symbol:"AVAX",decimals:18},infoURL:"https://www.markr.io/",shortName:"markr-go",chainId:431140,networkId:431140,explorers:[],status:"incubating",testnet:!1,slug:"markr-go"},SN={name:"Dexalot Subnet Testnet",chain:"DEXALOT",icon:{url:"ipfs://QmfVxdrWjtUKiGzqFDzAxHH2FqwP2aRuZTGcYWdWg519Xy",width:256,height:256,format:"png"},rpc:["https://dexalot-subnet-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://subnets.avax.network/dexalot/testnet/rpc"],faucets:["https://faucet.avax.network/?subnet=dexalot"],nativeCurrency:{name:"Dexalot",symbol:"ALOT",decimals:18},infoURL:"https://dexalot.com",shortName:"dexalot-testnet",chainId:432201,networkId:432201,explorers:[{name:"Avalanche Subnet Testnet Explorer",url:"https://subnets-test.avax.network/dexalot",standard:"EIP3091"}],testnet:!0,slug:"dexalot-subnet-testnet"},WN={name:"Dexalot Subnet",chain:"DEXALOT",icon:{url:"ipfs://QmfVxdrWjtUKiGzqFDzAxHH2FqwP2aRuZTGcYWdWg519Xy",width:256,height:256,format:"png"},rpc:["https://dexalot-subnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://subnets.avax.network/dexalot/mainnet/rpc"],faucets:[],nativeCurrency:{name:"Dexalot",symbol:"ALOT",decimals:18},infoURL:"https://dexalot.com",shortName:"dexalot",chainId:432204,networkId:432204,explorers:[{name:"Avalanche Subnet Explorer",url:"https://subnets.avax.network/dexalot",standard:"EIP3091"}],testnet:!1,slug:"dexalot-subnet"},BN={name:"Weelink Testnet",chain:"WLK",rpc:["https://weelink-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://weelinknode1c.gw002.oneitfarm.com"],faucets:["https://faucet.weelink.gw002.oneitfarm.com"],nativeCurrency:{name:"Weelink Chain Token",symbol:"tWLK",decimals:18},infoURL:"https://weelink.cloud",shortName:"wlkt",chainId:444900,networkId:444900,explorers:[{name:"weelink-testnet",url:"https://weelink.cloud/#/blockView/overview",standard:"none"}],testnet:!0,slug:"weelink-testnet"},NN={name:"OpenChain Mainnet",chain:"OpenChain",rpc:["https://openchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://baas-rpc.luniverse.io:18545?lChainId=1641349324562974539"],faucets:[],nativeCurrency:{name:"OpenCoin",symbol:"OPC",decimals:10},infoURL:"https://www.openchain.live",shortName:"oc",chainId:474142,networkId:474142,explorers:[{name:"SIDE SCAN",url:"https://sidescan.luniverse.io/1641349324562974539",standard:"none"}],testnet:!1,slug:"openchain"},DN={name:"CMP-Testnet",chain:"CMP",rpc:["https://cmp-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://galaxy.block.caduceus.foundation","wss://galaxy.block.caduceus.foundation"],faucets:["https://dev.caduceus.foundation/testNetwork"],nativeCurrency:{name:"Caduceus Testnet Token",symbol:"CMP",decimals:18},infoURL:"https://caduceus.foundation/",shortName:"cmp",chainId:512512,networkId:512512,explorers:[{name:"Galaxy Scan",url:"https://galaxy.scan.caduceus.foundation",standard:"none"}],testnet:!0,slug:"cmp-testnet"},LN={name:"ethereum Fair",chainId:513100,networkId:513100,shortName:"ethf",chain:"ETHF",nativeCurrency:{name:"EthereumFair",symbol:"ETHF",decimals:18},rpc:["https://ethereum-fair.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.etherfair.org"],faucets:[],explorers:[{name:"etherfair",url:"https://www.oklink.com/ethf",standard:"EIP3091"}],infoURL:"https://etherfair.org",testnet:!1,slug:"ethereum-fair"},UN={name:"Scroll",chain:"ETH",rpc:[],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://scroll.io",shortName:"scr",chainId:534352,networkId:534352,explorers:[],parent:{type:"L2",chain:"eip155-1",bridges:[]},testnet:!1,slug:"scroll"},FN={name:"Scroll Alpha Testnet",chain:"ETH",status:"incubating",rpc:["https://scroll-alpha-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://alpha-rpc.scroll.io/l2"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://scroll.io",shortName:"scr-alpha",chainId:534353,networkId:534353,explorers:[{name:"Scroll Alpha Testnet Block Explorer",url:"https://blockscout.scroll.io",standard:"EIP3091"},{name:"Scroll Alpha Testnet Block Explorer",url:"https://scrollexplorer.unifra.io",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-5",bridges:[]},testnet:!0,slug:"scroll-alpha-testnet"},HN={name:"Scroll Pre-Alpha Testnet",chain:"ETH",rpc:["https://scroll-pre-alpha-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://prealpha-rpc.scroll.io/l2"],faucets:["https://prealpha.scroll.io/faucet"],nativeCurrency:{name:"Ether",symbol:"TSETH",decimals:18},infoURL:"https://scroll.io",shortName:"scr-prealpha",chainId:534354,networkId:534354,explorers:[{name:"Scroll L2 Block Explorer",url:"https://l2scan.scroll.io",standard:"EIP3091"}],testnet:!0,slug:"scroll-pre-alpha-testnet"},KN={name:"BeanEco SmartChain",title:"BESC Mainnet",chain:"BESC",rpc:["https://beaneco-smartchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.bescscan.io"],faucets:["faucet.bescscan.ion"],nativeCurrency:{name:"BeanEco SmartChain",symbol:"BESC",decimals:18},infoURL:"besceco.finance",shortName:"BESC",chainId:535037,networkId:535037,explorers:[{name:"bescscan",url:"https://Bescscan.io",standard:"EIP3091"}],testnet:!1,slug:"beaneco-smartchain"},ON={name:"Bear Network Chain Mainnet",chain:"BRNKC",icon:{url:"ipfs://QmQqhH28QpUrreoRw5Gj8YShzdHxxVGMjfVrx3TqJNLSLv",width:1067,height:1067,format:"png"},rpc:["https://bear-network-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://brnkc-mainnet.bearnetwork.net","https://brnkc-mainnet1.bearnetwork.net"],faucets:[],nativeCurrency:{name:"Bear Network Chain Native Token",symbol:"BRNKC",decimals:18},infoURL:"https://bearnetwork.net",shortName:"BRNKC",chainId:641230,networkId:641230,explorers:[{name:"brnkscan",url:"https://brnkscan.bearnetwork.net",standard:"EIP3091"}],testnet:!1,slug:"bear-network-chain"},$N={name:"Vision - Vpioneer Test Chain",chain:"Vision-Vpioneer",rpc:["https://vision-vpioneer-test-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://vpioneer.infragrid.v.network/ethereum/compatible"],faucets:["https://vpioneerfaucet.visionscan.org"],nativeCurrency:{name:"VS",symbol:"VS",decimals:18},infoURL:"https://visionscan.org",shortName:"vpioneer",chainId:666666,networkId:666666,slip44:60,testnet:!0,slug:"vision-vpioneer-test-chain"},YN={name:"Bear Network Chain Testnet",chain:"BRNKCTEST",icon:{url:"ipfs://QmQqhH28QpUrreoRw5Gj8YShzdHxxVGMjfVrx3TqJNLSLv",width:1067,height:1067,format:"png"},rpc:["https://bear-network-chain-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://brnkc-test.bearnetwork.net"],faucets:["https://faucet.bearnetwork.net"],nativeCurrency:{name:"Bear Network Chain Testnet Token",symbol:"tBRNKC",decimals:18},infoURL:"https://bearnetwork.net",shortName:"BRNKCTEST",chainId:751230,networkId:751230,explorers:[{name:"brnktestscan",url:"https://brnktest-scan.bearnetwork.net",standard:"EIP3091"}],testnet:!0,slug:"bear-network-chain-testnet"},zN={name:"OctaSpace",chain:"OCTA",rpc:["https://octaspace.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.octa.space","wss://rpc.octa.space"],faucets:[],nativeCurrency:{name:"OctaSpace",symbol:"OCTA",decimals:18},infoURL:"https://octa.space",shortName:"octa",chainId:800001,networkId:800001,icon:{url:"ipfs://QmVhezQHkqSZ5Tvtsw18giA1yBjV1URSsBQ7HenUh6p6oC",width:512,height:512,format:"png"},explorers:[{name:"blockscout",url:"https://explorer.octa.space",icon:{url:"ipfs://bafybeifu5tpui7dk5cjoo54kde7pmuthvnl7sdykobuarsxgu7t2izurnq",width:512,height:512,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"octaspace"},qN={name:"CURVE Mainnet",chain:"CURVE",icon:{url:"ipfs://QmTjV3TTR5aLb7fi7tjx8gcDvYtqBpusqhCSaznVxJ7NJg",width:150,height:150,format:"png"},rpc:["https://curve.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.curvescan.io"],faucets:[],nativeCurrency:{name:"Curve",symbol:"CURVE",decimals:18},infoURL:"https://curvescan.io",shortName:"CURVEm",chainId:827431,networkId:827431,explorers:[{name:"CURVE Mainnet",url:"https://curvescan.io",standard:"EIP3091"}],testnet:!1,slug:"curve"},QN={name:"4GoodNetwork",chain:"4GN",rpc:["https://4goodnetwork.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://chain.deptofgood.com"],faucets:[],nativeCurrency:{name:"APTA",symbol:"APTA",decimals:18},infoURL:"https://bloqs4good.com",shortName:"bloqs4good",chainId:846e3,networkId:846e3,testnet:!1,slug:"4goodnetwork"},jN={name:"Vision - Mainnet",chain:"Vision",rpc:["https://vision.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://infragrid.v.network/ethereum/compatible"],faucets:[],nativeCurrency:{name:"VS",symbol:"VS",decimals:18},infoURL:"https://www.v.network",explorers:[{name:"Visionscan",url:"https://www.visionscan.org",standard:"EIP3091"}],shortName:"vision",chainId:888888,networkId:888888,slip44:60,testnet:!1,slug:"vision"},VN={name:"Posichain Mainnet Shard 0",chain:"PSC",rpc:["https://posichain-shard-0.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.posichain.org","https://api.s0.posichain.org"],faucets:["https://faucet.posichain.org/"],nativeCurrency:{name:"Posichain Native Token",symbol:"POSI",decimals:18},infoURL:"https://posichain.org",shortName:"psc-s0",chainId:9e5,networkId:9e5,explorers:[{name:"Posichain Explorer",url:"https://explorer.posichain.org",standard:"EIP3091"}],testnet:!1,slug:"posichain-shard-0"},GN={name:"Posichain Testnet Shard 0",chain:"PSC",rpc:["https://posichain-testnet-shard-0.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.s0.t.posichain.org"],faucets:["https://faucet.posichain.org/"],nativeCurrency:{name:"Posichain Native Token",symbol:"POSI",decimals:18},infoURL:"https://posichain.org",shortName:"psc-t-s0",chainId:91e4,networkId:91e4,explorers:[{name:"Posichain Explorer Testnet",url:"https://explorer-testnet.posichain.org",standard:"EIP3091"}],testnet:!0,slug:"posichain-testnet-shard-0"},ZN={name:"Posichain Devnet Shard 0",chain:"PSC",rpc:["https://posichain-devnet-shard-0.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.s0.d.posichain.org"],faucets:["https://faucet.posichain.org/"],nativeCurrency:{name:"Posichain Native Token",symbol:"POSI",decimals:18},infoURL:"https://posichain.org",shortName:"psc-d-s0",chainId:92e4,networkId:92e4,explorers:[{name:"Posichain Explorer Devnet",url:"https://explorer-devnet.posichain.org",standard:"EIP3091"}],testnet:!1,slug:"posichain-devnet-shard-0"},XN={name:"Posichain Devnet Shard 1",chain:"PSC",rpc:["https://posichain-devnet-shard-1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.s1.d.posichain.org"],faucets:["https://faucet.posichain.org/"],nativeCurrency:{name:"Posichain Native Token",symbol:"POSI",decimals:18},infoURL:"https://posichain.org",shortName:"psc-d-s1",chainId:920001,networkId:920001,explorers:[{name:"Posichain Explorer Devnet",url:"https://explorer-devnet.posichain.org",standard:"EIP3091"}],testnet:!1,slug:"posichain-devnet-shard-1"},JN={name:"FNCY Testnet",chain:"FNCY",rpc:["https://fncy-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://fncy-testnet-seed.fncy.world"],faucets:["https://faucet-testnet.fncy.world"],nativeCurrency:{name:"FNCY",symbol:"FNCY",decimals:18},infoURL:"https://fncyscan-testnet.fncy.world",shortName:"tFNCY",chainId:923018,networkId:923018,icon:{url:"ipfs://QmfXCh6UnaEHn3Evz7RFJ3p2ggJBRm9hunDHegeoquGuhD",width:256,height:256,format:"png"},explorers:[{name:"fncy scan testnet",url:"https://fncyscan-testnet.fncy.world",icon:{url:"ipfs://QmfXCh6UnaEHn3Evz7RFJ3p2ggJBRm9hunDHegeoquGuhD",width:256,height:256,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"fncy-testnet"},e7={name:"Eluvio Content Fabric",chain:"Eluvio",rpc:["https://eluvio-content-fabric.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://host-76-74-28-226.contentfabric.io/eth/","https://host-76-74-28-232.contentfabric.io/eth/","https://host-76-74-29-2.contentfabric.io/eth/","https://host-76-74-29-8.contentfabric.io/eth/","https://host-76-74-29-34.contentfabric.io/eth/","https://host-76-74-29-35.contentfabric.io/eth/","https://host-154-14-211-98.contentfabric.io/eth/","https://host-154-14-192-66.contentfabric.io/eth/","https://host-60-240-133-202.contentfabric.io/eth/","https://host-64-235-250-98.contentfabric.io/eth/"],faucets:[],nativeCurrency:{name:"ELV",symbol:"ELV",decimals:18},infoURL:"https://eluv.io",shortName:"elv",chainId:955305,networkId:955305,slip44:1011,explorers:[{name:"blockscout",url:"https://explorer.eluv.io",standard:"EIP3091"}],testnet:!1,slug:"eluvio-content-fabric"},t7={name:"Etho Protocol",chain:"ETHO",rpc:["https://etho-protocol.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.ethoprotocol.com"],faucets:[],nativeCurrency:{name:"Etho Protocol",symbol:"ETHO",decimals:18},infoURL:"https://ethoprotocol.com",shortName:"etho",chainId:1313114,networkId:1313114,slip44:1313114,explorers:[{name:"blockscout",url:"https://explorer.ethoprotocol.com",standard:"none"}],testnet:!1,slug:"etho-protocol"},n7={name:"Xerom",chain:"XERO",rpc:["https://xerom.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.xerom.org"],faucets:[],nativeCurrency:{name:"Xerom Ether",symbol:"XERO",decimals:18},infoURL:"https://xerom.org",shortName:"xero",chainId:1313500,networkId:1313500,testnet:!1,slug:"xerom"},a7={name:"Kintsugi",title:"Kintsugi merge testnet",chain:"ETH",rpc:["https://kintsugi.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.kintsugi.themerge.dev"],faucets:["http://fauceth.komputing.org?chain=1337702&address=${ADDRESS}","https://faucet.kintsugi.themerge.dev"],nativeCurrency:{name:"kintsugi Ethere",symbol:"kiETH",decimals:18},infoURL:"https://kintsugi.themerge.dev/",shortName:"kintsugi",chainId:1337702,networkId:1337702,explorers:[{name:"kintsugi explorer",url:"https://explorer.kintsugi.themerge.dev",standard:"EIP3091"}],testnet:!0,slug:"kintsugi"},r7={name:"Kiln",chain:"ETH",rpc:["https://kiln.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.kiln.themerge.dev"],faucets:["https://faucet.kiln.themerge.dev","https://kiln-faucet.pk910.de","https://kilnfaucet.com"],nativeCurrency:{name:"Testnet ETH",symbol:"ETH",decimals:18},infoURL:"https://kiln.themerge.dev/",shortName:"kiln",chainId:1337802,networkId:1337802,icon:{url:"ipfs://QmdwQDr6vmBtXmK2TmknkEuZNoaDqTasFdZdu3DRw8b2wt",width:1e3,height:1628,format:"png"},explorers:[{name:"Kiln Explorer",url:"https://explorer.kiln.themerge.dev",icon:{url:"ipfs://QmdwQDr6vmBtXmK2TmknkEuZNoaDqTasFdZdu3DRw8b2wt",width:1e3,height:1628,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"kiln"},i7={name:"Zhejiang",chain:"ETH",rpc:["https://zhejiang.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.zhejiang.ethpandaops.io"],faucets:["https://faucet.zhejiang.ethpandaops.io","https://zhejiang-faucet.pk910.de"],nativeCurrency:{name:"Testnet ETH",symbol:"ETH",decimals:18},infoURL:"https://zhejiang.ethpandaops.io",shortName:"zhejiang",chainId:1337803,networkId:1337803,icon:{url:"ipfs://QmdwQDr6vmBtXmK2TmknkEuZNoaDqTasFdZdu3DRw8b2wt",width:1e3,height:1628,format:"png"},explorers:[{name:"Zhejiang Explorer",url:"https://zhejiang.beaconcha.in",icon:{url:"ipfs://QmdwQDr6vmBtXmK2TmknkEuZNoaDqTasFdZdu3DRw8b2wt",width:1e3,height:1628,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"zhejiang"},s7={name:"Plian Mainnet Main",chain:"Plian",rpc:["https://plian-main.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.plian.io/pchain"],faucets:[],nativeCurrency:{name:"Plian Token",symbol:"PI",decimals:18},infoURL:"https://plian.org/",shortName:"plian-mainnet",chainId:2099156,networkId:2099156,explorers:[{name:"piscan",url:"https://piscan.plian.org/pchain",standard:"EIP3091"}],testnet:!1,slug:"plian-main"},o7={name:"PlatON Dev Testnet2",chain:"PlatON",rpc:["https://platon-dev-testnet2.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnet2openapi.platon.network/rpc","wss://devnet2openapi.platon.network/ws"],faucets:["https://devnet2faucet.platon.network/faucet"],nativeCurrency:{name:"LAT",symbol:"lat",decimals:18},infoURL:"https://www.platon.network",shortName:"platondev2",chainId:2206132,networkId:1,icon:{url:"ipfs://QmT7PSXBiVBma6E15hNkivmstqLu3JSnG1jXN5pTmcCGRC",width:200,height:200,format:"png"},explorers:[{name:"PlatON explorer",url:"https://devnet2scan.platon.network",standard:"none"}],testnet:!0,slug:"platon-dev-testnet2"},c7={name:"Filecoin - Butterfly testnet",chain:"FIL",status:"incubating",rpc:[],faucets:["https://faucet.butterfly.fildev.network"],nativeCurrency:{name:"testnet filecoin",symbol:"tFIL",decimals:18},infoURL:"https://filecoin.io",shortName:"filecoin-butterfly",icon:{url:"ipfs://QmS9r9XQkMHVomWcSBNDkKkz9n87h9bH9ssabeiKZtANoU",width:1e3,height:1e3,format:"png"},chainId:3141592,networkId:3141592,slip44:1,explorers:[],testnet:!0,slug:"filecoin-butterfly-testnet"},p7={name:"Worlds Caldera",chain:"WCal",rpc:["https://worlds-caldera.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://worlds-test.calderachain.xyz/http"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://caldera.xyz/",shortName:"worldscal",chainId:4281033,networkId:4281033,icon:{url:"ipfs://QmdwQDr6vmBtXmK2TmknkEuZNoaDqTasFdZdu3DRw8b2wt",width:1e3,height:1628,format:"png"},explorers:[],testnet:!0,slug:"worlds-caldera"},l7={name:"MXC Wannsee zkEVM Testnet",chain:"MXC zkEVM",icon:{url:"ipfs://QmdGCthKA11K9kCZJdbTP5WPAyq1wiRZ3REn6KG58MrWaE",width:159,height:159,format:"png"},rpc:["https://mxc-wannsee-zkevm-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://wannsee-rpc.mxc.com"],faucets:[],nativeCurrency:{name:"MXC Wannsee zkEVM Testnet",symbol:"MXC",decimals:18},infoURL:"https://wannsee.mxc.com/docs/intro",shortName:"MXC",chainId:5167003,networkId:5167003,explorers:[{name:"MXC Wannsee zkEVM Testnet",url:"https://wannsee-explorer.mxc.com",standard:"EIP3091"}],testnet:!0,slug:"mxc-wannsee-zkevm-testnet"},d7={name:"Imversed Mainnet",chain:"Imversed",rpc:["https://imversed.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://jsonrpc.imversed.network","https://ws-jsonrpc.imversed.network"],faucets:[],nativeCurrency:{name:"Imversed Token",symbol:"IMV",decimals:18},infoURL:"https://imversed.com",shortName:"imversed",chainId:5555555,networkId:5555555,icon:{url:"ipfs://QmYwvmJZ1bgTdiZUKXk4SifTpTj286CkZjMCshUyJuBFH1",width:400,height:400,format:"png"},explorers:[{name:"Imversed EVM explorer (Blockscout)",url:"https://txe.imversed.network",icon:{url:"ipfs://QmYwvmJZ1bgTdiZUKXk4SifTpTj286CkZjMCshUyJuBFH1",width:400,height:400,format:"png"},standard:"EIP3091"},{name:"Imversed Cosmos Explorer (Big Dipper)",url:"https://tex-c.imversed.com",icon:{url:"ipfs://QmYwvmJZ1bgTdiZUKXk4SifTpTj286CkZjMCshUyJuBFH1",width:400,height:400,format:"png"},standard:"none"}],testnet:!1,slug:"imversed"},u7={name:"Imversed Testnet",chain:"Imversed",rpc:["https://imversed-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://jsonrpc-test.imversed.network","https://ws-jsonrpc-test.imversed.network"],faucets:[],nativeCurrency:{name:"Imversed Token",symbol:"IMV",decimals:18},infoURL:"https://imversed.com",shortName:"imversed-testnet",chainId:5555558,networkId:5555558,icon:{url:"ipfs://QmYwvmJZ1bgTdiZUKXk4SifTpTj286CkZjMCshUyJuBFH1",width:400,height:400,format:"png"},explorers:[{name:"Imversed EVM Explorer (Blockscout)",url:"https://txe-test.imversed.network",icon:{url:"ipfs://QmYwvmJZ1bgTdiZUKXk4SifTpTj286CkZjMCshUyJuBFH1",width:400,height:400,format:"png"},standard:"EIP3091"},{name:"Imversed Cosmos Explorer (Big Dipper)",url:"https://tex-t.imversed.com",icon:{url:"ipfs://QmYwvmJZ1bgTdiZUKXk4SifTpTj286CkZjMCshUyJuBFH1",width:400,height:400,format:"png"},standard:"none"}],testnet:!0,slug:"imversed-testnet"},m7={name:"Saakuru Mainnet",chain:"Saakuru",icon:{url:"ipfs://QmduEdtFobPpZWSc45MU6RKxZfTEzLux2z8ikHFhT8usqv",width:1024,height:1024,format:"png"},rpc:["https://saakuru.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.saakuru.network"],faucets:[],nativeCurrency:{name:"OAS",symbol:"OAS",decimals:18},infoURL:"https://saakuru.network",shortName:"saakuru",chainId:7225878,networkId:7225878,explorers:[{name:"saakuru-explorer",url:"https://explorer.saakuru.network",standard:"EIP3091"}],testnet:!1,slug:"saakuru"},h7={name:"OpenVessel",chain:"VSL",icon:{url:"ipfs://QmeknNzGCZXQK7egwfwyxQan7Lw8bLnqYsyoEgEbDNCzJX",width:600,height:529,format:"png"},rpc:["https://openvessel.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-external.openvessel.io"],faucets:[],nativeCurrency:{name:"Vessel ETH",symbol:"VETH",decimals:18},infoURL:"https://www.openvessel.io",shortName:"vsl",chainId:7355310,networkId:7355310,explorers:[{name:"openvessel-mainnet",url:"https://mainnet-explorer.openvessel.io",standard:"none"}],testnet:!1,slug:"openvessel"},y7={name:"QL1 Testnet",chain:"QOM",status:"incubating",rpc:["https://ql1-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.testnet.qom.one"],faucets:["https://faucet.qom.one"],nativeCurrency:{name:"Shiba Predator",symbol:"QOM",decimals:18},infoURL:"https://qom.one",shortName:"tqom",chainId:7668378,networkId:7668378,icon:{url:"ipfs://QmRc1kJ7AgcDL1BSoMYudatWHTrz27K6WNTwGifQb5V17D",width:518,height:518,format:"png"},explorers:[{name:"QL1 Testnet Explorer",url:"https://testnet.qom.one",icon:{url:"ipfs://QmRc1kJ7AgcDL1BSoMYudatWHTrz27K6WNTwGifQb5V17D",width:518,height:518,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"ql1-testnet"},f7={name:"Musicoin",chain:"MUSIC",rpc:["https://musicoin.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mewapi.musicoin.tw"],faucets:[],nativeCurrency:{name:"Musicoin",symbol:"MUSIC",decimals:18},infoURL:"https://musicoin.tw",shortName:"music",chainId:7762959,networkId:7762959,slip44:184,testnet:!1,slug:"musicoin"},g7={name:"Plian Mainnet Subchain 1",chain:"Plian",rpc:["https://plian-subchain-1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.plian.io/child_0"],faucets:[],nativeCurrency:{name:"Plian Token",symbol:"PI",decimals:18},infoURL:"https://plian.org",shortName:"plian-mainnet-l2",chainId:8007736,networkId:8007736,explorers:[{name:"piscan",url:"https://piscan.plian.org/child_0",standard:"EIP3091"}],parent:{chain:"eip155-2099156",type:"L2"},testnet:!1,slug:"plian-subchain-1"},b7={name:"HAPchain",chain:"HAPchain",rpc:["https://hapchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://jsonrpc.hap.land"],faucets:[],nativeCurrency:{name:"HAP",symbol:"HAP",decimals:18},infoURL:"https://hap.land",shortName:"hap",chainId:8794598,networkId:8794598,icon:{url:"ipfs://QmQ4V9JC25yUrYk2kFJwmKguSsZBQvtGcg6q9zkDV8mkJW",width:400,height:400,format:"png"},explorers:[{name:"HAP EVM Explorer (Blockscout)",url:"https://blockscout.hap.land",standard:"none",icon:{url:"ipfs://QmQ4V9JC25yUrYk2kFJwmKguSsZBQvtGcg6q9zkDV8mkJW",width:400,height:400,format:"png"}}],testnet:!1,slug:"hapchain"},T7={name:"Quarix Testnet",chain:"Quarix",status:"incubating",rpc:[],faucets:[],nativeCurrency:{name:"Q",symbol:"Q",decimals:18},infoURL:"",shortName:"quarix-testnet",chainId:8888881,networkId:8888881,icon:{url:"ipfs://QmZmY6xVNzRAGwyT64PuyHaQ33BR84HEWvTVf6YHPW7kvQ",width:1024,height:1024,format:"png"},explorers:[],testnet:!0,slug:"quarix-testnet"},w7={name:"Quarix",chain:"Quarix",status:"incubating",rpc:[],faucets:[],nativeCurrency:{name:"Q",symbol:"Q",decimals:18},infoURL:"",shortName:"quarix",chainId:8888888,networkId:8888888,icon:{url:"ipfs://QmZmY6xVNzRAGwyT64PuyHaQ33BR84HEWvTVf6YHPW7kvQ",width:1024,height:1024,format:"png"},explorers:[],testnet:!1,slug:"quarix"},I7={name:"Plian Testnet Subchain 1",chain:"Plian",rpc:["https://plian-testnet-subchain-1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.plian.io/child_test"],faucets:[],nativeCurrency:{name:"Plian Token",symbol:"TPI",decimals:18},infoURL:"https://plian.org/",shortName:"plian-testnet-l2",chainId:10067275,networkId:10067275,explorers:[{name:"piscan",url:"https://testnet.plian.org/child_test",standard:"EIP3091"}],parent:{chain:"eip155-16658437",type:"L2"},testnet:!0,slug:"plian-testnet-subchain-1"},v7={name:"Soverun Mainnet",chain:"SVRN",icon:{url:"ipfs://QmTYazUzgY9Nn2mCjWwFUSLy3dG6i2PvALpwCNQvx1zXyi",width:1154,height:1154,format:"png"},rpc:["https://soverun.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.soverun.com"],faucets:["https://faucet.soverun.com"],nativeCurrency:{name:"Soverun",symbol:"SVRN",decimals:18},infoURL:"https://soverun.com",shortName:"SVRNm",chainId:10101010,networkId:10101010,explorers:[{name:"Soverun",url:"https://explorer.soverun.com",standard:"EIP3091"}],testnet:!1,slug:"soverun"},C7={name:"Sepolia",title:"Ethereum Testnet Sepolia",chain:"ETH",rpc:["https://sepolia.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.sepolia.org","https://rpc2.sepolia.org","https://rpc-sepolia.rockx.com"],faucets:["http://fauceth.komputing.org?chain=11155111&address=${ADDRESS}"],nativeCurrency:{name:"Sepolia Ether",symbol:"ETH",decimals:18},infoURL:"https://sepolia.otterscan.io",shortName:"sep",chainId:11155111,networkId:11155111,explorers:[{name:"etherscan-sepolia",url:"https://sepolia.etherscan.io",standard:"EIP3091"},{name:"otterscan-sepolia",url:"https://sepolia.otterscan.io",standard:"EIP3091"}],testnet:!0,slug:"sepolia"},k7={name:"PepChain Churchill",chain:"PEP",rpc:["https://pepchain-churchill.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://churchill-rpc.pepchain.io"],faucets:[],nativeCurrency:{name:"PepChain Churchill Ether",symbol:"TPEP",decimals:18},infoURL:"https://pepchain.io",shortName:"tpep",chainId:13371337,networkId:13371337,testnet:!1,slug:"pepchain-churchill"},E7={name:"Anduschain Mainnet",chain:"anduschain",rpc:["https://anduschain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.anduschain.io/rpc","wss://rpc.anduschain.io/ws"],faucets:[],nativeCurrency:{name:"DAON",symbol:"DEB",decimals:18},infoURL:"https://anduschain.io/",shortName:"anduschain-mainnet",chainId:14288640,networkId:14288640,explorers:[{name:"anduschain explorer",url:"https://explorer.anduschain.io",icon:{url:"ipfs://bafkreiapaxokh2p4j7hg43ug2inomixiwrdhni4kpqazvqifssnez7efze",width:512,height:512,format:"png"},standard:"none"}],testnet:!1,slug:"anduschain"},x7={name:"Plian Testnet Main",chain:"Plian",rpc:["https://plian-testnet-main.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.plian.io/testnet"],faucets:[],nativeCurrency:{name:"Plian Testnet Token",symbol:"TPI",decimals:18},infoURL:"https://plian.org",shortName:"plian-testnet",chainId:16658437,networkId:16658437,explorers:[{name:"piscan",url:"https://testnet.plian.org/testnet",standard:"EIP3091"}],testnet:!0,slug:"plian-testnet-main"},R7={name:"IOLite",chain:"ILT",rpc:["https://iolite.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://net.iolite.io"],faucets:[],nativeCurrency:{name:"IOLite Ether",symbol:"ILT",decimals:18},infoURL:"https://iolite.io",shortName:"ilt",chainId:18289463,networkId:18289463,testnet:!1,slug:"iolite"},A7={name:"SmartMesh Mainnet",chain:"Spectrum",rpc:["https://smartmesh.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://jsonapi1.smartmesh.cn"],faucets:[],nativeCurrency:{name:"SmartMesh Native Token",symbol:"SMT",decimals:18},infoURL:"https://smartmesh.io",shortName:"spectrum",chainId:20180430,networkId:1,explorers:[{name:"spectrum",url:"https://spectrum.pub",standard:"none"}],testnet:!1,slug:"smartmesh"},P7={name:"quarkblockchain",chain:"QKI",rpc:["https://quarkblockchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://hz.rpc.qkiscan.cn","https://jp.rpc.qkiscan.io"],faucets:[],nativeCurrency:{name:"quarkblockchain Native Token",symbol:"QKI",decimals:18},infoURL:"https://quarkblockchain.org/",shortName:"qki",chainId:20181205,networkId:20181205,testnet:!1,slug:"quarkblockchain"},M7={name:"Excelon Mainnet",chain:"XLON",icon:{url:"ipfs://QmTV45o4jTe6ayscF1XWh1WXk5DPck4QohR5kQocSWjvQP",width:300,height:300,format:"png"},rpc:["https://excelon.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://edgewallet1.xlon.org/"],faucets:[],nativeCurrency:{name:"Excelon",symbol:"xlon",decimals:18},infoURL:"https://xlon.org",shortName:"xlon",chainId:22052002,networkId:22052002,explorers:[{name:"Excelon explorer",url:"https://explorer.excelon.io",standard:"EIP3091"}],testnet:!1,slug:"excelon"},_7={name:"Excoincial Chain Volta-Testnet",chain:"TEXL",icon:{url:"ipfs://QmeooM7QicT1YbgY93XPd5p7JsCjYhN3qjWt68X57g6bVC",width:400,height:400,format:"png"},rpc:["https://excoincial-chain-volta-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet-rpc.exlscan.com"],faucets:["https://faucet.exlscan.com"],nativeCurrency:{name:"TExlcoin",symbol:"TEXL",decimals:18},infoURL:"",shortName:"exlvolta",chainId:27082017,networkId:27082017,explorers:[{name:"exlscan",url:"https://testnet-explorer.exlscan.com",icon:{url:"ipfs://QmeooM7QicT1YbgY93XPd5p7JsCjYhN3qjWt68X57g6bVC",width:400,height:400,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"excoincial-chain-volta-testnet"},S7={name:"Excoincial Chain Mainnet",chain:"EXL",icon:{url:"ipfs://QmeooM7QicT1YbgY93XPd5p7JsCjYhN3qjWt68X57g6bVC",width:400,height:400,format:"png"},rpc:["https://excoincial-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.exlscan.com"],faucets:[],nativeCurrency:{name:"Exlcoin",symbol:"EXL",decimals:18},infoURL:"",shortName:"exl",chainId:27082022,networkId:27082022,explorers:[{name:"exlscan",url:"https://exlscan.com",icon:{url:"ipfs://QmeooM7QicT1YbgY93XPd5p7JsCjYhN3qjWt68X57g6bVC",width:400,height:400,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"excoincial-chain"},W7={name:"Auxilium Network Mainnet",chain:"AUX",rpc:["https://auxilium-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.auxilium.global"],faucets:[],nativeCurrency:{name:"Auxilium coin",symbol:"AUX",decimals:18},infoURL:"https://auxilium.global",shortName:"auxi",chainId:28945486,networkId:28945486,slip44:344,testnet:!1,slug:"auxilium-network"},B7={name:"Flachain Mainnet",chain:"FLX",icon:{url:"ipfs://bafybeiadlvc4pfiykehyt2z67nvgt5w4vlov27olu5obvmryv4xzua4tae",width:256,height:256,format:"png"},rpc:["https://flachain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://flachain.flaexchange.top/"],features:[{name:"EIP155"},{name:"EIP1559"}],faucets:[],nativeCurrency:{name:"Flacoin",symbol:"FLA",decimals:18},infoURL:"https://www.flaexchange.top",shortName:"fla",chainId:29032022,networkId:29032022,explorers:[{name:"FLXExplorer",url:"https://explorer.flaexchange.top",standard:"EIP3091"}],testnet:!1,slug:"flachain"},N7={name:"Filecoin - Local testnet",chain:"FIL",status:"incubating",rpc:[],faucets:[],nativeCurrency:{name:"testnet filecoin",symbol:"tFIL",decimals:18},infoURL:"https://filecoin.io",shortName:"filecoin-local",icon:{url:"ipfs://QmS9r9XQkMHVomWcSBNDkKkz9n87h9bH9ssabeiKZtANoU",width:1e3,height:1e3,format:"png"},chainId:31415926,networkId:31415926,slip44:1,explorers:[],testnet:!0,slug:"filecoin-local-testnet"},D7={name:"Joys Digital Mainnet",chain:"JOYS",rpc:["https://joys-digital.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://node.joys.digital"],faucets:[],nativeCurrency:{name:"JOYS",symbol:"JOYS",decimals:18},infoURL:"https://joys.digital",shortName:"JOYS",chainId:35855456,networkId:35855456,testnet:!1,slug:"joys-digital"},L7={name:"maistestsubnet",chain:"MAI",rpc:["https://maistestsubnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://174.138.9.169:9650/ext/bc/VUKSzFZKckx4PoZF9gX5QAqLPxbLzvu1vcssPG5QuodaJtdHT/rpc"],faucets:[],nativeCurrency:{name:"maistestsubnet",symbol:"MAI",decimals:18},infoURL:"",shortName:"mais",chainId:43214913,networkId:43214913,explorers:[{name:"maistesntet",url:"http://174.138.9.169:3006/?network=maistesntet",standard:"none"}],testnet:!0,slug:"maistestsubnet"},U7={name:"Aquachain",chain:"AQUA",rpc:["https://aquachain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://c.onical.org","https://tx.aquacha.in/api"],faucets:["https://aquacha.in/faucet"],nativeCurrency:{name:"Aquachain Ether",symbol:"AQUA",decimals:18},infoURL:"https://aquachain.github.io",shortName:"aqua",chainId:61717561,networkId:61717561,slip44:61717561,testnet:!1,slug:"aquachain"},F7={name:"Autonity Bakerloo (Thames) Testnet",chain:"AUT",rpc:["https://autonity-bakerloo-thames-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc1.bakerloo.autonity.org/","wss://rpc1.bakerloo.autonity.org/ws/"],faucets:["https://faucet.autonity.org/"],nativeCurrency:{name:"Bakerloo Auton",symbol:"ATN",decimals:18},infoURL:"https://autonity.org/",shortName:"bakerloo-0",chainId:6501e4,networkId:6501e4,icon:{url:"ipfs://Qme5nxFZZoNNpiT8u9WwcBot4HyLTg2jxMxRnsbc5voQwB",width:1e3,height:1e3,format:"png"},explorers:[{name:"autonity-blockscout",url:"https://bakerloo.autonity.org",standard:"EIP3091"}],testnet:!0,slug:"autonity-bakerloo-thames-testnet"},H7={name:"Autonity Piccadilly (Thames) Testnet",chain:"AUT",rpc:["https://autonity-piccadilly-thames-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc1.piccadilly.autonity.org/","wss://rpc1.piccadilly.autonity.org/ws/"],faucets:["https://faucet.autonity.org/"],nativeCurrency:{name:"Piccadilly Auton",symbol:"ATN",decimals:18},infoURL:"https://autonity.org/",shortName:"piccadilly-0",chainId:651e5,networkId:651e5,icon:{url:"ipfs://Qme5nxFZZoNNpiT8u9WwcBot4HyLTg2jxMxRnsbc5voQwB",width:1e3,height:1e3,format:"png"},explorers:[{name:"autonity-blockscout",url:"https://piccadilly.autonity.org",standard:"EIP3091"}],testnet:!0,slug:"autonity-piccadilly-thames-testnet"},K7={name:"T.E.A.M Blockchain",chain:"TEAM",icon:{url:"ipfs://QmcnA15BLE9uvznbugXKjqquizZs1eLPeEEkc92DSmvhmt",width:248,height:248,format:"png"},rpc:["https://t-e-a-m-blockchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.teamblockchain.team"],faucets:[],nativeCurrency:{name:"TEAM",symbol:"$TEAM",decimals:18},features:[{name:"EIP155"},{name:"EIP1559"}],infoURL:"https://teamblockchain.team",shortName:"team",chainId:88888888,networkId:88888888,explorers:[{name:"teamscan",url:"https://teamblockchain.team",standard:"EIP3091"}],testnet:!1,slug:"t-e-a-m-blockchain"},O7={name:"Joys Digital TestNet",chain:"TOYS",rpc:["https://joys-digital-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://toys.joys.cash/"],faucets:["https://faucet.joys.digital/"],nativeCurrency:{name:"TOYS",symbol:"TOYS",decimals:18},infoURL:"https://joys.digital",shortName:"TOYS",chainId:99415706,networkId:99415706,testnet:!0,slug:"joys-digital-testnet"},$7={name:"Gather Mainnet Network",chain:"GTH",rpc:["https://gather-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.gather.network"],faucets:[],nativeCurrency:{name:"Gather",symbol:"GTH",decimals:18},infoURL:"https://gather.network",shortName:"GTH",chainId:192837465,networkId:192837465,icon:{url:"ipfs://Qmc9AJGg9aNhoH56n3deaZeUc8Ty1jDYJsW6Lu6hgSZH4S",height:512,width:512,format:"png"},explorers:[{name:"Blockscout",url:"https://explorer.gather.network",icon:{url:"ipfs://QmTYR8CeFiNbJ1zJHnE3DK2wEN18r2y2vqSKUcLweUT2Gz",width:1080,height:1080,format:"svg"},standard:"none"}],testnet:!1,slug:"gather-network"},Y7={name:"Kanazawa",title:"Meld Testnet Kanazawa",chain:"Kanazawa",rpc:["https://kanazawa.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://subnets.avax.network/meld/testnet/rpc"],faucets:[],features:[],nativeCurrency:{name:"gMeld",symbol:"gMELD",decimals:18},icon:{url:"ipfs://QmRhB4AbjDrhvwfSAQi2JvKirFiDWxzJvKEvG8S8AdDdED",width:4e3,height:4e3,format:"png"},infoURL:"https://meld.com",shortName:"kanazawa",chainId:222000222,networkId:222000222,explorers:[{name:"explorer",url:"https://subnets-test.avax.network/meld",icon:{url:"ipfs://QmRhB4AbjDrhvwfSAQi2JvKirFiDWxzJvKEvG8S8AdDdED",width:4e3,height:4e3,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"kanazawa"},z7={name:"Neon EVM DevNet",chain:"Solana",rpc:["https://neon-evm-devnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnet.neonevm.org"],faucets:["https://neonfaucet.org"],icon:{url:"ipfs://Qmcxevb3v8PEvnvfYgcG3bCBuPhe5YAdsHeaufDChSSR3Q",width:512,height:512,format:"png"},nativeCurrency:{name:"Neon",symbol:"NEON",decimals:18},infoURL:"https://neon-labs.org",shortName:"neonevm-devnet",chainId:245022926,networkId:245022926,explorers:[{name:"native",url:"https://devnet.explorer.neon-labs.org",standard:"EIP3091"},{name:"neonscan",url:"https://devnet.neonscan.org",standard:"EIP3091"}],testnet:!1,slug:"neon-evm-devnet"},q7={name:"Neon EVM MainNet",chain:"Solana",rpc:["https://neon-evm.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.neonevm.org"],faucets:[],icon:{url:"ipfs://Qmcxevb3v8PEvnvfYgcG3bCBuPhe5YAdsHeaufDChSSR3Q",width:512,height:512,format:"png"},nativeCurrency:{name:"Neon",symbol:"NEON",decimals:18},infoURL:"https://neon-labs.org",shortName:"neonevm-mainnet",chainId:245022934,networkId:245022934,explorers:[{name:"native",url:"https://mainnet.explorer.neon-labs.org",standard:"EIP3091"},{name:"neonscan",url:"https://mainnet.neonscan.org",standard:"EIP3091"}],testnet:!1,slug:"neon-evm"},Q7={name:"Neon EVM TestNet",chain:"Solana",rpc:["https://neon-evm-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.neonevm.org"],faucets:[],icon:{url:"ipfs://Qmcxevb3v8PEvnvfYgcG3bCBuPhe5YAdsHeaufDChSSR3Q",width:512,height:512,format:"png"},nativeCurrency:{name:"Neon",symbol:"NEON",decimals:18},infoURL:"https://neon-labs.org",shortName:"neonevm-testnet",chainId:245022940,networkId:245022940,explorers:[{name:"native",url:"https://testnet.explorer.neon-labs.org",standard:"EIP3091"},{name:"neonscan",url:"https://testnet.neonscan.org",standard:"EIP3091"}],testnet:!0,slug:"neon-evm-testnet"},j7={name:"Razor Skale Chain",chain:"Razor Schain",icon:{url:"ipfs://QmUdwAZJfyKGZnfPGDsCnNvGu123mdd57kTGj1Y3EWVuWK",width:900,height:900,format:"png"},rpc:["https://razor-skale-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.skalenodes.com/v1/turbulent-unique-scheat"],faucets:["https://faucet.razorscan.io/"],nativeCurrency:{name:"sFuel",symbol:"SFUEL",decimals:18},infoURL:"https://razor.network",shortName:"razor",chainId:278611351,networkId:278611351,explorers:[{name:"turbulent-unique-scheat",url:"https://turbulent-unique-scheat.explorer.mainnet.skalenodes.com",standard:"EIP3091"}],testnet:!1,slug:"razor-skale-chain"},V7={name:"OneLedger Mainnet",chain:"OLT",icon:{url:"ipfs://QmRhqq4Gp8G9w27ND3LeFW49o5PxcxrbJsqHbpBFtzEMfC",width:225,height:225,format:"png"},rpc:["https://oneledger.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet-rpc.oneledger.network"],faucets:[],nativeCurrency:{name:"OLT",symbol:"OLT",decimals:18},infoURL:"https://oneledger.io",shortName:"oneledger",chainId:311752642,networkId:311752642,explorers:[{name:"OneLedger Block Explorer",url:"https://mainnet-explorer.oneledger.network",standard:"EIP3091"}],testnet:!1,slug:"oneledger"},G7={name:"Meld",title:"Meld Mainnet",chain:"MELD",rpc:["https://meld.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://subnets.avax.network/meld/mainnet/rpc"],faucets:[],features:[],nativeCurrency:{name:"gMeld",symbol:"gMELD",decimals:18},icon:{url:"ipfs://QmRhB4AbjDrhvwfSAQi2JvKirFiDWxzJvKEvG8S8AdDdED",width:4e3,height:4e3,format:"png"},infoURL:"https://meld.com",shortName:"meld",chainId:333000333,networkId:333000333,explorers:[{name:"explorer",url:"https://subnets.avax.network/meld",icon:{url:"ipfs://QmRhB4AbjDrhvwfSAQi2JvKirFiDWxzJvKEvG8S8AdDdED",width:4e3,height:4e3,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"meld"},Z7={name:"Calypso NFT Hub (SKALE Testnet)",title:"Calypso NFT Hub Testnet",chain:"staging-utter-unripe-menkar",rpc:["https://calypso-nft-hub-skale-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://staging-v3.skalenodes.com/v1/staging-utter-unripe-menkar"],faucets:["https://sfuel.dirtroad.dev/staging"],nativeCurrency:{name:"sFUEL",symbol:"sFUEL",decimals:18},infoURL:"https://calypsohub.network/",shortName:"calypso-testnet",chainId:344106930,networkId:344106930,explorers:[{name:"Blockscout",url:"https://staging-utter-unripe-menkar.explorer.staging-v3.skalenodes.com",icon:{url:"ipfs://bafybeigyayzxvt7vosat4rtrbmhhnldgx57w2pfbutuniax7h6kswzi42m",width:1637,height:1636,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"calypso-nft-hub-skale-testnet"},X7={name:"Gather Testnet Network",chain:"GTH",rpc:["https://gather-testnet-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.gather.network"],faucets:["https://testnet-faucet.gather.network/"],nativeCurrency:{name:"Gather",symbol:"GTH",decimals:18},infoURL:"https://gather.network",shortName:"tGTH",chainId:356256156,networkId:356256156,icon:{url:"ipfs://Qmc9AJGg9aNhoH56n3deaZeUc8Ty1jDYJsW6Lu6hgSZH4S",height:512,width:512,format:"png"},explorers:[{name:"Blockscout",url:"https://testnet-explorer.gather.network",icon:{url:"ipfs://QmTYR8CeFiNbJ1zJHnE3DK2wEN18r2y2vqSKUcLweUT2Gz",width:1080,height:1080,format:"svg"},standard:"none"}],testnet:!0,slug:"gather-testnet-network"},J7={name:"Gather Devnet Network",chain:"GTH",rpc:["https://gather-devnet-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://devnet.gather.network"],faucets:[],nativeCurrency:{name:"Gather",symbol:"GTH",decimals:18},infoURL:"https://gather.network",shortName:"dGTH",chainId:486217935,networkId:486217935,explorers:[{name:"Blockscout",url:"https://devnet-explorer.gather.network",standard:"none"}],testnet:!1,slug:"gather-devnet-network"},eD={name:"Nebula Staging",chain:"staging-faint-slimy-achird",rpc:["https://nebula-staging.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://staging-v3.skalenodes.com/v1/staging-faint-slimy-achird","wss://staging-v3.skalenodes.com/v1/ws/staging-faint-slimy-achird"],faucets:[],nativeCurrency:{name:"sFUEL",symbol:"sFUEL",decimals:18},infoURL:"https://nebulachain.io/",shortName:"nebula-staging",chainId:503129905,networkId:503129905,explorers:[{name:"nebula",url:"https://staging-faint-slimy-achird.explorer.staging-v3.skalenodes.com",icon:{url:"ipfs://QmfQkfmQuoUUUKwF1yCcrPEzFcWLaqNyiSv5YMcSj6zs74",width:500,height:500,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"nebula-staging"},tD={name:"IPOS Network",chain:"IPOS",rpc:["https://ipos-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.iposlab.com","https://rpc2.iposlab.com"],faucets:[],nativeCurrency:{name:"IPOS Network Ether",symbol:"IPOS",decimals:18},infoURL:"https://iposlab.com",shortName:"ipos",chainId:1122334455,networkId:1122334455,testnet:!1,slug:"ipos-network"},nD={name:"CyberdeckNet",chain:"cyberdeck",rpc:["https://cyberdecknet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","http://cybeth1.cyberdeck.eu:8545"],faucets:[],nativeCurrency:{name:"Cyb",symbol:"CYB",decimals:18},infoURL:"https://cyberdeck.eu",shortName:"cyb",chainId:1146703430,networkId:1146703430,icon:{url:"ipfs://QmTvYMJXeZeWxYPuoQ15mHCS8K5EQzkMMCHQVs3GshooyR",width:193,height:214,format:"png"},status:"active",explorers:[{name:"CybEthExplorer",url:"http://cybeth1.cyberdeck.eu:8000",icon:{url:"ipfs://QmTvYMJXeZeWxYPuoQ15mHCS8K5EQzkMMCHQVs3GshooyR",width:193,height:214,format:"png"},standard:"none"}],testnet:!1,slug:"cyberdecknet"},aD={name:"HUMAN Protocol",title:"HUMAN Protocol",chain:"wan-red-ain",rpc:["https://human-protocol.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.skalenodes.com/v1/wan-red-ain"],faucets:["https://dashboard.humanprotocol.org/faucet"],nativeCurrency:{name:"sFUEL",symbol:"sFUEL",decimals:18},infoURL:"https://www.humanprotocol.org",shortName:"human-mainnet",chainId:1273227453,networkId:1273227453,explorers:[{name:"Blockscout",url:"https://wan-red-ain.explorer.mainnet.skalenodes.com",icon:{url:"ipfs://QmT5KKrpNt6duU8QfwaYw3xf4ifTBPtjahpWsMi3gsFmcS",width:440,height:600,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"human-protocol"},rD={name:"Aurora Mainnet",chain:"NEAR",rpc:["https://aurora.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.aurora.dev"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://aurora.dev",shortName:"aurora",chainId:1313161554,networkId:1313161554,explorers:[{name:"aurorascan.dev",url:"https://aurorascan.dev",standard:"EIP3091"}],testnet:!1,slug:"aurora"},iD={name:"Aurora Testnet",chain:"NEAR",rpc:["https://aurora-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://testnet.aurora.dev/"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://aurora.dev",shortName:"aurora-testnet",chainId:1313161555,networkId:1313161555,explorers:[{name:"aurorascan.dev",url:"https://testnet.aurorascan.dev",standard:"EIP3091"}],testnet:!0,slug:"aurora-testnet"},sD={name:"Aurora Betanet",chain:"NEAR",rpc:[],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},infoURL:"https://aurora.dev",shortName:"aurora-betanet",chainId:1313161556,networkId:1313161556,testnet:!1,slug:"aurora-betanet"},oD={name:"Chaos (SKALE Testnet)",title:"Chaos Testnet",chain:"staging-fast-active-bellatrix",rpc:["https://chaos-skale-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://staging-v3.skalenodes.com/v1/staging-fast-active-bellatrix"],faucets:["https://sfuel.skale.network/staging/chaos"],nativeCurrency:{name:"sFUEL",symbol:"sFUEL",decimals:18},infoURL:"https://docs.skale.network/develop/",shortName:"chaos-tenet",chainId:1351057110,networkId:1351057110,explorers:[{name:"Blockscout",url:"https://staging-fast-active-bellatrix.explorer.staging-v3.skalenodes.com",icon:{url:"ipfs://QmbYYCoU2G4LUfRr9ofGowF3eatfvWv9FiPVhqKndZeqwA",width:400,height:400,format:"png"},standard:"EIP3091"}],testnet:!0,slug:"chaos-skale-testnet"},cD={name:"RaptorChain",chain:"RPTR",rpc:["https://raptorchain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.raptorchain.io/web3"],faucets:[],nativeCurrency:{name:"Raptor",symbol:"RPTR",decimals:18},features:[{name:"EIP155"}],infoURL:"https://raptorchain.io",shortName:"rptr",chainId:1380996178,networkId:1380996178,icon:{url:"ipfs://QmQuvmiN6vM6Rqzqe1pMzDf8iZXqTtSeqCgGe5k5AyksDU",width:200,height:200,format:"png"},explorers:[{name:"RaptorChain Explorer",url:"https://explorer.raptorchain.io",icon:{url:"ipfs://QmQuvmiN6vM6Rqzqe1pMzDf8iZXqTtSeqCgGe5k5AyksDU",width:200,height:200,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"raptorchain"},pD={name:"Nebula Mainnet",chain:"green-giddy-denebola",rpc:["https://nebula.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.skalenodes.com/v1/green-giddy-denebola","wss://mainnet-proxy.skalenodes.com/v1/ws/green-giddy-denebola"],faucets:[],nativeCurrency:{name:"sFUEL",symbol:"sFUEL",decimals:18},infoURL:"https://nebulachain.io/",shortName:"nebula-mainnet",chainId:1482601649,networkId:1482601649,explorers:[{name:"nebula",url:"https://green-giddy-denebola.explorer.mainnet.skalenodes.com",icon:{url:"ipfs://QmfQkfmQuoUUUKwF1yCcrPEzFcWLaqNyiSv5YMcSj6zs74",width:500,height:500,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"nebula"},lD={name:"Calypso NFT Hub (SKALE)",title:"Calypso NFT Hub Mainnet",chain:"honorable-steel-rasalhague",rpc:["https://calypso-nft-hub-skale.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.skalenodes.com/v1/honorable-steel-rasalhague"],faucets:["https://sfuel.dirtroad.dev"],nativeCurrency:{name:"sFUEL",symbol:"sFUEL",decimals:18},infoURL:"https://calypsohub.network/",shortName:"calypso-mainnet",chainId:1564830818,networkId:1564830818,explorers:[{name:"Blockscout",url:"https://honorable-steel-rasalhague.explorer.mainnet.skalenodes.com",icon:{url:"ipfs://bafybeigyayzxvt7vosat4rtrbmhhnldgx57w2pfbutuniax7h6kswzi42m",width:1637,height:1636,format:"png"},standard:"EIP3091"}],testnet:!1,slug:"calypso-nft-hub-skale"},dD={name:"Harmony Mainnet Shard 0",chain:"Harmony",rpc:["https://harmony-shard-0.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.harmony.one","https://api.s0.t.hmny.io"],faucets:["https://free-online-app.com/faucet-for-eth-evm-chains/"],nativeCurrency:{name:"ONE",symbol:"ONE",decimals:18},infoURL:"https://www.harmony.one/",shortName:"hmy-s0",chainId:16666e5,networkId:16666e5,explorers:[{name:"Harmony Block Explorer",url:"https://explorer.harmony.one",standard:"EIP3091"}],testnet:!1,slug:"harmony-shard-0"},uD={name:"Harmony Mainnet Shard 1",chain:"Harmony",rpc:["https://harmony-shard-1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.s1.t.hmny.io"],faucets:[],nativeCurrency:{name:"ONE",symbol:"ONE",decimals:18},infoURL:"https://www.harmony.one/",shortName:"hmy-s1",chainId:1666600001,networkId:1666600001,testnet:!1,slug:"harmony-shard-1"},mD={name:"Harmony Mainnet Shard 2",chain:"Harmony",rpc:["https://harmony-shard-2.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.s2.t.hmny.io"],faucets:[],nativeCurrency:{name:"ONE",symbol:"ONE",decimals:18},infoURL:"https://www.harmony.one/",shortName:"hmy-s2",chainId:1666600002,networkId:1666600002,testnet:!1,slug:"harmony-shard-2"},hD={name:"Harmony Mainnet Shard 3",chain:"Harmony",rpc:["https://harmony-shard-3.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.s3.t.hmny.io"],faucets:[],nativeCurrency:{name:"ONE",symbol:"ONE",decimals:18},infoURL:"https://www.harmony.one/",shortName:"hmy-s3",chainId:1666600003,networkId:1666600003,testnet:!1,slug:"harmony-shard-3"},yD={name:"Harmony Testnet Shard 0",chain:"Harmony",rpc:["https://harmony-testnet-shard-0.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.s0.b.hmny.io"],faucets:["https://faucet.pops.one"],nativeCurrency:{name:"ONE",symbol:"ONE",decimals:18},infoURL:"https://www.harmony.one/",shortName:"hmy-b-s0",chainId:16667e5,networkId:16667e5,explorers:[{name:"Harmony Testnet Block Explorer",url:"https://explorer.pops.one",standard:"EIP3091"}],testnet:!0,slug:"harmony-testnet-shard-0"},fD={name:"Harmony Testnet Shard 1",chain:"Harmony",rpc:["https://harmony-testnet-shard-1.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.s1.b.hmny.io"],faucets:[],nativeCurrency:{name:"ONE",symbol:"ONE",decimals:18},infoURL:"https://www.harmony.one/",shortName:"hmy-b-s1",chainId:1666700001,networkId:1666700001,testnet:!0,slug:"harmony-testnet-shard-1"},gD={name:"Harmony Testnet Shard 2",chain:"Harmony",rpc:["https://harmony-testnet-shard-2.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.s2.b.hmny.io"],faucets:[],nativeCurrency:{name:"ONE",symbol:"ONE",decimals:18},infoURL:"https://www.harmony.one/",shortName:"hmy-b-s2",chainId:1666700002,networkId:1666700002,testnet:!0,slug:"harmony-testnet-shard-2"},bD={name:"Harmony Testnet Shard 3",chain:"Harmony",rpc:["https://harmony-testnet-shard-3.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.s3.b.hmny.io"],faucets:[],nativeCurrency:{name:"ONE",symbol:"ONE",decimals:18},infoURL:"https://www.harmony.one/",shortName:"hmy-b-s3",chainId:1666700003,networkId:1666700003,testnet:!0,slug:"harmony-testnet-shard-3"},TD={name:"Harmony Devnet Shard 0",chain:"Harmony",rpc:["https://harmony-devnet-shard-0.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://api.s1.ps.hmny.io"],faucets:["http://dev.faucet.easynode.one/"],nativeCurrency:{name:"ONE",symbol:"ONE",decimals:18},infoURL:"https://www.harmony.one/",shortName:"hmy-ps-s0",chainId:16669e5,networkId:16669e5,explorers:[{name:"Harmony Block Explorer",url:"https://explorer.ps.hmny.io",standard:"EIP3091"}],testnet:!1,slug:"harmony-devnet-shard-0"},wD={name:"DataHopper",chain:"HOP",rpc:["https://datahopper.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://23.92.21.121:8545"],faucets:[],nativeCurrency:{name:"DataHoppers",symbol:"HOP",decimals:18},infoURL:"https://www.DataHopper.com",shortName:"hop",chainId:2021121117,networkId:2021121117,testnet:!1,slug:"datahopper"},ID={name:"Europa SKALE Chain",chain:"europa",icon:{url:"ipfs://bafkreiezcwowhm6xjrkt44cmiu6ml36rhrxx3amcg3cfkcntv2vgcvgbre",width:600,height:600,format:"png"},rpc:["https://europa-skale-chain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.skalenodes.com/v1/elated-tan-skat","wss://mainnet.skalenodes.com/v1/elated-tan-skat"],faucets:["https://ruby.exchange/faucet.html","https://sfuel.mylilius.com/"],nativeCurrency:{name:"sFUEL",symbol:"sFUEL",decimals:18},infoURL:"https://europahub.network/",shortName:"europa",chainId:2046399126,networkId:2046399126,explorers:[{name:"Blockscout",url:"https://elated-tan-skat.explorer.mainnet.skalenodes.com",standard:"EIP3091"}],parent:{type:"L2",chain:"eip155-1",bridges:[{url:"https://ruby.exchange/bridge.html"}]},testnet:!1,slug:"europa-skale-chain"},vD={name:"Pirl",chain:"PIRL",rpc:["https://pirl.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://wallrpc.pirl.io"],faucets:[],nativeCurrency:{name:"Pirl Ether",symbol:"PIRL",decimals:18},infoURL:"https://pirl.io",shortName:"pirl",chainId:3125659152,networkId:3125659152,slip44:164,testnet:!1,slug:"pirl"},CD={name:"OneLedger Testnet Frankenstein",chain:"OLT",icon:{url:"ipfs://QmRhqq4Gp8G9w27ND3LeFW49o5PxcxrbJsqHbpBFtzEMfC",width:225,height:225,format:"png"},rpc:["https://oneledger-testnet-frankenstein.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://frankenstein-rpc.oneledger.network"],faucets:["https://frankenstein-faucet.oneledger.network"],nativeCurrency:{name:"OLT",symbol:"OLT",decimals:18},infoURL:"https://oneledger.io",shortName:"frankenstein",chainId:4216137055,networkId:4216137055,explorers:[{name:"OneLedger Block Explorer",url:"https://frankenstein-explorer.oneledger.network",standard:"EIP3091"}],testnet:!0,slug:"oneledger-testnet-frankenstein"},kD={name:"Palm Testnet",chain:"Palm",icon:{url:"ipfs://bafkreihifvvbq6xzviygveivayogqiotdtpjvilu27bgqobduqemzeq7o4",width:72,height:72,format:"svg"},rpc:["https://palm-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://palm-testnet.infura.io/v3/${INFURA_API_KEY}"],faucets:[],nativeCurrency:{name:"PALM",symbol:"PALM",decimals:18},infoURL:"https://palm.io",shortName:"tpalm",chainId:11297108099,networkId:11297108099,explorers:[{name:"Palm Testnet Explorer",url:"https://explorer.palm-uat.xyz",standard:"EIP3091"}],testnet:!0,slug:"palm-testnet"},ED={name:"Palm",chain:"Palm",icon:{url:"ipfs://bafkreihifvvbq6xzviygveivayogqiotdtpjvilu27bgqobduqemzeq7o4",width:72,height:72,format:"svg"},rpc:["https://palm.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://palm-mainnet.infura.io/v3/${INFURA_API_KEY}"],faucets:[],nativeCurrency:{name:"PALM",symbol:"PALM",decimals:18},infoURL:"https://palm.io",shortName:"palm",chainId:11297108109,networkId:11297108109,explorers:[{name:"Palm Explorer",url:"https://explorer.palm.io",standard:"EIP3091"}],testnet:!1,slug:"palm"},xD={name:"Alphabet Mainnet",chain:"Alphabet Network",icon:{url:"ipfs://QmfTeudwVJcu7jzySBcpD9H5ZVK66nPJKRnicxend1bxfq",width:500,height:500,format:"svg"},rpc:["https://alphabet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://londonpublic.alphabetnetwork.org","wss://londonpublic.alphabetnetwork.org/ws/","https://main-rpc.com","wss://main-rpc.com/ws/"],faucets:[],nativeCurrency:{name:"ALT",symbol:"ALT",decimals:18},infoURL:"https://alphabetnetwork.org",shortName:"alphabet",chainId:111222333444,networkId:111222333444,explorers:[{name:"Alphabet Explorer",url:"https://scan.alphabetnetwork.org",standard:"EIP3091"}],testnet:!1,slug:"alphabet"},RD={name:"Ntity Mainnet",chain:"Ntity",rpc:["https://ntity.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc.ntity.io"],faucets:[],nativeCurrency:{name:"Ntity",symbol:"NTT",decimals:18},infoURL:"https://ntity.io",shortName:"ntt",chainId:197710212030,networkId:197710212030,icon:{url:"ipfs://QmSW2YhCvMpnwtPGTJAuEK2QgyWfFjmnwcrapUg6kqFsPf",width:711,height:715,format:"svg"},explorers:[{name:"Ntity Blockscout",url:"https://blockscout.ntity.io",icon:{url:"ipfs://QmSW2YhCvMpnwtPGTJAuEK2QgyWfFjmnwcrapUg6kqFsPf",width:711,height:715,format:"svg"},standard:"EIP3091"}],testnet:!1,slug:"ntity"},AD={name:"Haradev Testnet",chain:"Ntity",rpc:["https://haradev-testnet.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://blockchain.haradev.com"],faucets:[],nativeCurrency:{name:"Ntity Haradev",symbol:"NTTH",decimals:18},infoURL:"https://ntity.io",shortName:"ntt-haradev",chainId:197710212031,networkId:197710212031,icon:{url:"ipfs://QmSW2YhCvMpnwtPGTJAuEK2QgyWfFjmnwcrapUg6kqFsPf",width:711,height:715,format:"svg"},explorers:[{name:"Ntity Haradev Blockscout",url:"https://blockscout.haradev.com",icon:{url:"ipfs://QmSW2YhCvMpnwtPGTJAuEK2QgyWfFjmnwcrapUg6kqFsPf",width:711,height:715,format:"svg"},standard:"EIP3091"}],testnet:!0,slug:"haradev-testnet"},PD={name:"Zeniq",chain:"ZENIQ",rpc:["https://zeniq.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://smart.zeniq.network:9545"],faucets:["https://faucet.zeniq.net/"],nativeCurrency:{name:"Zeniq",symbol:"ZENIQ",decimals:18},infoURL:"https://www.zeniq.dev/",shortName:"zeniq",chainId:383414847825,networkId:383414847825,explorers:[{name:"zeniq-smart-chain-explorer",url:"https://smart.zeniq.net",standard:"EIP3091"}],testnet:!1,slug:"zeniq"},MD={name:"PDC Mainnet",chain:"IPDC",rpc:["https://pdc.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://mainnet.ipdc.io/"],faucets:[],nativeCurrency:{name:"PDC",symbol:"PDC",decimals:18},infoURL:"https://ipdc.io",shortName:"ipdc",chainId:666301171999,networkId:666301171999,explorers:[{name:"ipdcscan",url:"https://scan.ipdc.io",standard:"EIP3091"}],testnet:!1,slug:"pdc"},_D={name:"Molereum Network",chain:"ETH",rpc:["https://molereum-network.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://molereum.jdubedition.com"],faucets:[],nativeCurrency:{name:"Molereum Ether",symbol:"MOLE",decimals:18},infoURL:"https://github.com/Jdubedition/molereum",shortName:"mole",chainId:6022140761023,networkId:6022140761023,testnet:!1,slug:"molereum-network"},SD={name:"Localhost",chain:"ETH",rpc:["http://localhost:8545"],faucets:[],nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},icon:{url:"ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/ethereum/512.png",height:512,width:512,format:"png"},shortName:"local",chainId:1337,networkId:1337,testnet:!0,slug:"localhost"},WD={name:"XRP Ledger EVM Devnet Sidechain",chain:"XRPL",shortName:"XRPL-EVM-Devnet-Sidechain",chainId:1440001,testnet:!0,icon:{format:"png",url:"ipfs://bafkreidmgxjwjircegjkvysgz25b2ukw6h7axoirkxv6idupzzqsdrljgy",width:780,height:680},rpc:["https://xrp-ledger-evm-devnet-sidechain.rpc.thirdweb.com/${THIRDWEB_API_KEY}","https://rpc-evm-sidechain.xrpl.org"],nativeCurrency:{decimals:18,name:"XRP",symbol:"XRP"},explorers:[{url:"https://evm-sidechain.xrpl.org/",name:"XRP Ledger Explorer",standard:"EIP3091"}],slug:"xrp-ledger-evm-devnet-sidechain"};const BD={mode:"http"};function G5(t,e){const{thirdwebApiKey:n,alchemyApiKey:a,infuraApiKey:r,mode:i}={...BD,...e},s=t.rpc.filter(m=>!!(m.startsWith("http")&&i==="http"||m.startsWith("ws")&&i==="ws")),o=s.filter(m=>m.includes("${THIRDWEB_API_KEY}")&&n).map(m=>n?m.replace("${THIRDWEB_API_KEY}",n):m),c=s.filter(m=>m.includes("${ALCHEMY_API_KEY}")&&a).map(m=>a?m.replace("${ALCHEMY_API_KEY}",a):m),p=s.filter(m=>m.includes("${INFURA_API_KEY}")&&r).map(m=>r?m.replace("${INFURA_API_KEY}",r):m),d=s.filter(m=>!m.includes("${")),u=[...o,...p,...c,...d];if(u.length===0)throw new Error(`No RPC available for chainId "${t.chainId}" with mode ${i}`);return u}function M1(t,e){return G5(t,e)[0]}const Ca=pE,Wr=lE,Br=dE,Nr=uE,ka=mE,Dr=hE,Lr=yE,Ur=fE,Fr=gE,Ea=bE,Hr=TE,Kr=wE,Or=IE,$r=vE,Yr=CE,zr=kE,qr=EE,Qr=xE,jr=RE,Vr=AE,Gr=PE,Zr=ME,Xr=_E,Jr=SE,ei=WE,ti=BE,ni=NE,ai=DE,ri=LE,ii=UE,si=FE,oi=HE,ci=KE,pi=OE,li=$E,di=YE,ui=zE,mi=qE,hi=QE,yi=jE,fi=VE,gi=GE,bi=ZE,Ti=XE,wi=JE,Ii=ex,vi=tx,Ci=nx,ki=ax,Ei=rx,xi=ix,Ri=sx,Ai=ox,Pi=cx,Mi=px,xa=lx,_i=dx,Si=ux,Wi=mx,Bi=hx,Ni=yx,Di=fx,Li=gx,Ui=bx,Fi=Tx,Hi=wx,Ki=Ix,Oi=vx,$i=Cx,Yi=kx,zi=Ex,qi=xx,Qi=Rx,ji=Ax,Vi=Px,Gi=Mx,Zi=_x,Xi=Sx,Ji=Wx,es=Bx,ts=Nx,ns=Dx,as=Lx,rs=Ux,is=Fx,ss=Hx,os=Kx,cs=Ox,ps=$x,ls=Yx,ds=zx,us=qx,ms=Qx,hs=jx,Ra=Vx,ys=Gx,fs=Zx,gs=Xx,bs=Jx,Ts=e3,ws=t3,Is=n3,vs=a3,Cs=r3,ks=i3,Es=s3,xs=o3,Rs=c3,As=p3,Ps=l3,Ms=d3,_s=u3,Ss=m3,Ws=h3,Bs=y3,Ns=f3,Ds=g3,Ls=b3,Us=T3,Fs=w3,Hs=I3,Ks=v3,Os=C3,$s=k3,Ys=E3,zs=x3,qs=R3,Aa=A3,Qs=P3,js=M3,Vs=_3,Gs=S3,Zs=W3,Xs=B3,Js=N3,eo=D3,to=L3,no=U3,ao=F3,ro=H3,io=K3,so=O3,oo=$3,co=Y3,po=z3,lo=q3,uo=Q3,mo=j3,ho=V3,yo=G3,fo=Z3,go=X3,bo=J3,To=e8,wo=t8,Io=n8,vo=a8,Co=r8,ko=i8,Eo=s8,xo=o8,Ro=c8,Ao=p8,Po=l8,Mo=d8,Pa=u8,_o=m8,So=h8,Wo=y8,Bo=f8,No=g8,Do=b8,Lo=T8,Uo=w8,Fo=I8,Ho=v8,Ko=C8,Oo=k8,$o=E8,Yo=x8,zo=R8,qo=A8,Qo=P8,jo=M8,Vo=_8,Go=S8,Zo=W8,Xo=B8,Jo=N8,ec=D8,tc=L8,nc=U8,ac=F8,rc=H8,ic=K8,sc=O8,oc=$8,cc=Y8,pc=z8,Ma=q8,lc=Q8,dc=j8,uc=V8,mc=G8,hc=Z8,yc=X8,fc=J8,gc=eR,bc=tR,Tc=nR,wc=aR,Ic=rR,vc=iR,Cc=sR,kc=oR,Ec=cR,xc=pR,Rc=lR,Ac=dR,Pc=uR,Mc=mR,_c=hR,Sc=yR,Wc=fR,Bc=gR,Nc=bR,Dc=TR,Lc=wR,Uc=IR,Fc=vR,Hc=CR,Kc=kR,Oc=ER,$c=xR,Yc=RR,zc=AR,qc=PR,Qc=MR,jc=_R,Vc=SR,Gc=WR,Zc=BR,Xc=NR,Jc=DR,ep=LR,tp=UR,np=FR,ap=HR,rp=KR,ip=OR,sp=$R,op=YR,cp=zR,pp=qR,lp=QR,dp=jR,up=VR,mp=GR,hp=ZR,yp=XR,fp=JR,gp=eA,bp=tA,Tp=nA,wp=aA,Ip=rA,vp=iA,Cp=sA,kp=oA,Ep=cA,xp=pA,Rp=lA,Ap=dA,Pp=uA,Mp=mA,_p=hA,Sp=yA,Wp=fA,Bp=gA,Np=bA,Dp=TA,Lp=wA,Up=IA,Fp=vA,Hp=CA,Kp=kA,Op=EA,$p=xA,Yp=RA,zp=AA,qp=PA,Qp=MA,jp=_A,Vp=SA,Gp=WA,Zp=BA,Xp=NA,Jp=DA,el=LA,tl=UA,nl=FA,al=HA,rl=KA,il=OA,sl=$A,ol=YA,cl=zA,pl=qA,ll=QA,dl=jA,ul=VA,ml=GA,hl=ZA,yl=XA,fl=JA,gl=eP,bl=tP,Tl=nP,wl=aP,Il=rP,vl=iP,Cl=sP,kl=oP,El=cP,xl=pP,Rl=lP,Al=dP,Pl=uP,Ml=mP,_l=hP,Sl=yP,Wl=fP,Bl=gP,Nl=bP,Dl=TP,Ll=wP,Ul=IP,Fl=vP,Hl=CP,Kl=kP,Ol=EP,$l=xP,Yl=RP,zl=AP,ql=PP,Ql=MP,jl=_P,Vl=SP,Gl=WP,Zl=BP,Xl=NP,Jl=DP,ed=LP,td=UP,nd=FP,ad=HP,rd=KP,id=OP,sd=$P,od=YP,cd=zP,pd=qP,ld=QP,dd=jP,ud=VP,md=GP,hd=ZP,yd=XP,fd=JP,gd=eM,bd=tM,Td=nM,wd=aM,Id=rM,vd=iM,Cd=sM,kd=oM,Ed=cM,xd=pM,Rd=lM,Ad=dM,Pd=uM,Md=mM,_d=hM,Sd=yM,Wd=fM,Bd=gM,Nd=bM,Dd=TM,Ld=wM,Ud=IM,Fd=vM,Hd=CM,Kd=kM,Od=EM,$d=xM,Yd=RM,zd=AM,qd=PM,Qd=MM,jd=_M,Vd=SM,Gd=WM,Zd=BM,Xd=NM,Jd=DM,eu=LM,tu=UM,nu=FM,au=HM,ru=KM,iu=OM,su=$M,ou=YM,cu=zM,pu=qM,lu=QM,du=jM,uu=VM,mu=GM,hu=ZM,yu=XM,fu=JM,gu=e_,bu=t_,Tu=n_,wu=a_,Iu=r_,vu=i_,Cu=s_,ku=o_,Eu=c_,xu=p_,Ru=l_,Au=d_,Pu=u_,Mu=m_,_u=h_,Su=y_,Wu=f_,Bu=g_,Nu=b_,Du=T_,Lu=w_,Uu=I_,Fu=v_,Hu=C_,Ku=k_,_a=E_,Ou=x_,$u=R_,Yu=A_,zu=P_,qu=M_,Qu=__,ju=S_,Vu=W_,Gu=B_,Zu=N_,Xu=D_,Ju=L_,em=U_,tm=F_,nm=H_,am=K_,rm=O_,im=$_,sm=Y_,om=z_,cm=q_,pm=Q_,lm=j_,dm=V_,um=G_,mm=Z_,hm=X_,ym=J_,fm=e4,gm=t4,bm=n4,Tm=a4,wm=r4,Im=i4,vm=s4,Cm=o4,km=c4,Em=p4,xm=l4,Rm=d4,Am=u4,Pm=m4,Mm=h4,_m=y4,Sm=f4,Wm=g4,Bm=b4,Nm=T4,Dm=w4,Lm=I4,Um=v4,Fm=C4,Hm=k4,Km=E4,Om=x4,$m=R4,Ym=A4,zm=P4,qm=M4,Qm=_4,jm=S4,Vm=W4,Gm=B4,Zm=N4,Xm=D4,Jm=L4,eh=U4,th=F4,nh=H4,ah=K4,rh=O4,ih=$4,sh=Y4,oh=z4,ch=q4,ph=Q4,lh=j4,dh=V4,uh=G4,mh=Z4,hh=X4,yh=J4,fh=eS,gh=tS,bh=nS,Th=aS,wh=rS,Ih=iS,vh=sS,Ch=oS,kh=cS,Eh=pS,xh=lS,Rh=dS,Ah=uS,Ph=mS,Mh=hS,_h=yS,Sh=fS,Wh=gS,Bh=bS,Nh=TS,Dh=wS,Lh=IS,Uh=vS,Fh=CS,Hh=kS,Kh=ES,Oh=xS,$h=RS,Yh=AS,zh=PS,qh=MS,Qh=_S,jh=SS,Vh=WS,Gh=BS,Zh=NS,Xh=DS,Jh=LS,ey=US,ty=FS,ny=HS,ay=KS,ry=OS,iy=$S,sy=YS,oy=zS,cy=qS,py=QS,ly=jS,dy=VS,uy=GS,my=ZS,hy=XS,yy=JS,fy=eW,gy=tW,by=nW,Ty=aW,wy=rW,Iy=iW,vy=sW,Cy=oW,ky=cW,Ey=pW,xy=lW,Ry=dW,Ay=uW,Py=mW,My=hW,_y=yW,Sy=fW,Wy=gW,By=bW,Ny=TW,Dy=wW,Ly=IW,Uy=vW,Fy=CW,Hy=kW,Ky=EW,Oy=xW,$y=RW,Yy=AW,zy=PW,qy=MW,Qy=_W,jy=SW,Vy=WW,Gy=BW,Zy=NW,Xy=DW,Jy=LW,ef=UW,tf=FW,nf=HW,af=KW,rf=OW,sf=$W,of=YW,cf=zW,pf=qW,lf=QW,df=jW,uf=VW,mf=GW,hf=ZW,yf=XW,ff=JW,gf=e9,bf=t9,Tf=n9,wf=a9,Sa=r9,If=i9,vf=s9,Cf=o9,kf=c9,Ef=p9,Wa=l9,Ba=d9,xf=u9,Rf=m9,Af=h9,Pf=y9,Mf=f9,_f=g9,Sf=b9,Wf=T9,Bf=w9,Nf=I9,Df=v9,Lf=C9,Uf=k9,Ff=E9,Hf=x9,Kf=R9,Of=A9,$f=P9,Yf=M9,zf=_9,qf=S9,Qf=W9,jf=B9,Vf=N9,Gf=D9,Zf=L9,Xf=U9,Jf=F9,eg=H9,tg=K9,ng=O9,ag=$9,rg=Y9,ig=z9,sg=q9,og=Q9,cg=j9,pg=V9,lg=G9,dg=Z9,ug=X9,mg=J9,hg=eB,yg=tB,fg=nB,gg=aB,bg=rB,Na=iB,Tg=sB,wg=oB,Ig=cB,vg=pB,Cg=lB,kg=dB,Eg=uB,xg=mB,Rg=hB,Ag=yB,Pg=fB,Mg=gB,_g=bB,Sg=TB,Wg=wB,Bg=IB,Ng=vB,Dg=CB,Lg=kB,Ug=EB,Fg=xB,Hg=RB,Kg=AB,Og=PB,$g=MB,Yg=_B,zg=SB,qg=WB,Qg=BB,jg=NB,Vg=DB,Gg=LB,Zg=UB,Xg=FB,Jg=HB,eb=KB,tb=OB,nb=$B,ab=YB,rb=zB,ib=qB,sb=QB,ob=jB,cb=VB,pb=GB,lb=ZB,db=XB,ub=JB,mb=eN,hb=tN,yb=nN,fb=aN,gb=rN,bb=iN,Tb=sN,wb=oN,Ib=cN,vb=pN,Cb=lN,kb=dN,Eb=uN,xb=mN,Rb=hN,Ab=yN,Pb=fN,Mb=gN,_b=bN,Sb=TN,Wb=wN,Bb=IN,Nb=vN,Db=CN,Lb=kN,Ub=EN,Fb=xN,Hb=RN,Kb=AN,Da=PN,Ob=MN,$b=_N,Yb=SN,zb=WN,qb=BN,Qb=NN,jb=DN,Vb=LN,Gb=UN,Zb=FN,Xb=HN,Jb=KN,eT=ON,tT=$N,nT=YN,aT=zN,rT=qN,iT=QN,sT=jN,oT=VN,cT=GN,pT=ZN,lT=XN,dT=JN,uT=e7,mT=t7,hT=n7,yT=a7,fT=r7,gT=i7,bT=s7,TT=o7,wT=c7,IT=p7,vT=l7,CT=d7,kT=u7,ET=m7,xT=h7,RT=y7,AT=f7,PT=g7,MT=b7,_T=T7,ST=w7,WT=I7,BT=v7,NT=C7,DT=k7,LT=E7,UT=x7,FT=R7,HT=A7,KT=P7,OT=M7,$T=_7,YT=S7,zT=W7,qT=B7,QT=N7,jT=D7,VT=L7,GT=U7,ZT=F7,XT=H7,JT=K7,ew=O7,tw=$7,nw=Y7,aw=z7,rw=q7,iw=Q7,sw=j7,ow=V7,cw=G7,pw=Z7,lw=X7,dw=J7,uw=eD,mw=tD,hw=nD,yw=aD,fw=rD,gw=iD,bw=sD,Tw=oD,ww=cD,Iw=pD,vw=lD,Cw=dD,kw=uD,Ew=mD,xw=hD,Rw=yD,Aw=fD,Pw=gD,Mw=bD,_w=TD,Sw=wD,Ww=ID,Bw=vD,Nw=CD,Dw=kD,Lw=ED,Uw=xD,Fw=RD,Hw=AD,Kw=PD,Ow=MD,$w=_D,wn=SD,Yw=WD,yt=[Ca,ka,Aa,Na,Sa,Da,Ea,Ma,xa,Ra,Pa,_a,Ba,Wa,wn];Ca.chainId+"",Wr.chainId+"",Br.chainId+"",Nr.chainId+"",ka.chainId+"",Dr.chainId+"",Lr.chainId+"",Ur.chainId+"",Fr.chainId+"",Ea.chainId+"",Hr.chainId+"",Kr.chainId+"",Or.chainId+"",$r.chainId+"",Yr.chainId+"",zr.chainId+"",qr.chainId+"",Qr.chainId+"",jr.chainId+"",Vr.chainId+"",Gr.chainId+"",Zr.chainId+"",Xr.chainId+"",Jr.chainId+"",ei.chainId+"",ti.chainId+"",ni.chainId+"",ai.chainId+"",ri.chainId+"",ii.chainId+"",si.chainId+"",oi.chainId+"",ci.chainId+"",pi.chainId+"",li.chainId+"",di.chainId+"",ui.chainId+"",mi.chainId+"",hi.chainId+"",yi.chainId+"",fi.chainId+"",gi.chainId+"",bi.chainId+"",Ti.chainId+"",wi.chainId+"",Ii.chainId+"",vi.chainId+"",Ci.chainId+"",ki.chainId+"",Ei.chainId+"",xi.chainId+"",Ri.chainId+"",Ai.chainId+"",Pi.chainId+"",Mi.chainId+"",xa.chainId+"",_i.chainId+"",Si.chainId+"",Wi.chainId+"",Bi.chainId+"",Ni.chainId+"",Di.chainId+"",Li.chainId+"",Ui.chainId+"",Fi.chainId+"",Hi.chainId+"",Ki.chainId+"",Oi.chainId+"",$i.chainId+"",Yi.chainId+"",zi.chainId+"",qi.chainId+"",Qi.chainId+"",ji.chainId+"",Vi.chainId+"",Gi.chainId+"",Zi.chainId+"",Xi.chainId+"",Ji.chainId+"",es.chainId+"",ts.chainId+"",ns.chainId+"",as.chainId+"",rs.chainId+"",is.chainId+"",ss.chainId+"",os.chainId+"",cs.chainId+"",ps.chainId+"",ls.chainId+"",ds.chainId+"",us.chainId+"",ms.chainId+"",hs.chainId+"",Ra.chainId+"",ys.chainId+"",fs.chainId+"",gs.chainId+"",bs.chainId+"",Ts.chainId+"",ws.chainId+"",Is.chainId+"",vs.chainId+"",Cs.chainId+"",ks.chainId+"",Es.chainId+"",xs.chainId+"",Rs.chainId+"",As.chainId+"",Ps.chainId+"",Ms.chainId+"",_s.chainId+"",Ss.chainId+"",Ws.chainId+"",Bs.chainId+"",Ns.chainId+"",Ds.chainId+"",Ls.chainId+"",Us.chainId+"",Fs.chainId+"",Hs.chainId+"",Ks.chainId+"",Os.chainId+"",$s.chainId+"",Ys.chainId+"",zs.chainId+"",qs.chainId+"",Aa.chainId+"",Qs.chainId+"",js.chainId+"",Vs.chainId+"",Gs.chainId+"",Zs.chainId+"",Xs.chainId+"",Js.chainId+"",eo.chainId+"",to.chainId+"",no.chainId+"",ao.chainId+"",ro.chainId+"",io.chainId+"",so.chainId+"",oo.chainId+"",co.chainId+"",po.chainId+"",lo.chainId+"",uo.chainId+"",mo.chainId+"",ho.chainId+"",yo.chainId+"",fo.chainId+"",go.chainId+"",bo.chainId+"",To.chainId+"",wo.chainId+"",Io.chainId+"",vo.chainId+"",Co.chainId+"",ko.chainId+"",Eo.chainId+"",xo.chainId+"",Ro.chainId+"",Ao.chainId+"",Po.chainId+"",Mo.chainId+"",Pa.chainId+"",_o.chainId+"",So.chainId+"",Wo.chainId+"",Bo.chainId+"",No.chainId+"",Do.chainId+"",Lo.chainId+"",Uo.chainId+"",Fo.chainId+"",Ho.chainId+"",Ko.chainId+"",Oo.chainId+"",$o.chainId+"",Yo.chainId+"",zo.chainId+"",qo.chainId+"",Qo.chainId+"",jo.chainId+"",Vo.chainId+"",Go.chainId+"",Zo.chainId+"",Xo.chainId+"",Jo.chainId+"",ec.chainId+"",tc.chainId+"",nc.chainId+"",ac.chainId+"",rc.chainId+"",ic.chainId+"",sc.chainId+"",oc.chainId+"",cc.chainId+"",pc.chainId+"",Ma.chainId+"",lc.chainId+"",dc.chainId+"",uc.chainId+"",mc.chainId+"",hc.chainId+"",yc.chainId+"",fc.chainId+"",gc.chainId+"",bc.chainId+"",Tc.chainId+"",wc.chainId+"",Ic.chainId+"",vc.chainId+"",Cc.chainId+"",kc.chainId+"",Ec.chainId+"",xc.chainId+"",Rc.chainId+"",Ac.chainId+"",Pc.chainId+"",Mc.chainId+"",_c.chainId+"",Sc.chainId+"",Wc.chainId+"",Bc.chainId+"",Nc.chainId+"",Dc.chainId+"",Lc.chainId+"",Uc.chainId+"",Fc.chainId+"",Hc.chainId+"",Kc.chainId+"",Oc.chainId+"",$c.chainId+"",Yc.chainId+"",zc.chainId+"",qc.chainId+"",Qc.chainId+"",jc.chainId+"",Vc.chainId+"",Gc.chainId+"",Zc.chainId+"",Xc.chainId+"",Jc.chainId+"",ep.chainId+"",tp.chainId+"",np.chainId+"",ap.chainId+"",rp.chainId+"",ip.chainId+"",sp.chainId+"",op.chainId+"",cp.chainId+"",pp.chainId+"",lp.chainId+"",dp.chainId+"",up.chainId+"",mp.chainId+"",hp.chainId+"",yp.chainId+"",fp.chainId+"",gp.chainId+"",bp.chainId+"",Tp.chainId+"",wp.chainId+"",Ip.chainId+"",vp.chainId+"",Cp.chainId+"",kp.chainId+"",Ep.chainId+"",xp.chainId+"",Rp.chainId+"",Ap.chainId+"",Pp.chainId+"",Mp.chainId+"",_p.chainId+"",Sp.chainId+"",Wp.chainId+"",Bp.chainId+"",Np.chainId+"",Dp.chainId+"",Lp.chainId+"",Up.chainId+"",Fp.chainId+"",Hp.chainId+"",Kp.chainId+"",Op.chainId+"",$p.chainId+"",Yp.chainId+"",zp.chainId+"",qp.chainId+"",Qp.chainId+"",jp.chainId+"",Vp.chainId+"",Gp.chainId+"",Zp.chainId+"",Xp.chainId+"",Jp.chainId+"",el.chainId+"",tl.chainId+"",nl.chainId+"",al.chainId+"",rl.chainId+"",il.chainId+"",sl.chainId+"",ol.chainId+"",cl.chainId+"",pl.chainId+"",ll.chainId+"",dl.chainId+"",ul.chainId+"",ml.chainId+"",hl.chainId+"",yl.chainId+"",fl.chainId+"",gl.chainId+"",bl.chainId+"",Tl.chainId+"",wl.chainId+"",Il.chainId+"",vl.chainId+"",Cl.chainId+"",kl.chainId+"",El.chainId+"",xl.chainId+"",Rl.chainId+"",Al.chainId+"",Pl.chainId+"",Ml.chainId+"",_l.chainId+"",Sl.chainId+"",Wl.chainId+"",Bl.chainId+"",Nl.chainId+"",Dl.chainId+"",Ll.chainId+"",Ul.chainId+"",Fl.chainId+"",Hl.chainId+"",Kl.chainId+"",Ol.chainId+"",$l.chainId+"",Yl.chainId+"",zl.chainId+"",ql.chainId+"",Ql.chainId+"",jl.chainId+"",Vl.chainId+"",Gl.chainId+"",Zl.chainId+"",Xl.chainId+"",Jl.chainId+"",ed.chainId+"",td.chainId+"",nd.chainId+"",ad.chainId+"",rd.chainId+"",id.chainId+"",sd.chainId+"",od.chainId+"",cd.chainId+"",pd.chainId+"",ld.chainId+"",dd.chainId+"",ud.chainId+"",md.chainId+"",hd.chainId+"",yd.chainId+"",fd.chainId+"",gd.chainId+"",bd.chainId+"",Td.chainId+"",wd.chainId+"",Id.chainId+"",vd.chainId+"",Cd.chainId+"",kd.chainId+"",Ed.chainId+"",xd.chainId+"",Rd.chainId+"",Ad.chainId+"",Pd.chainId+"",Md.chainId+"",_d.chainId+"",Sd.chainId+"",Wd.chainId+"",Bd.chainId+"",Nd.chainId+"",Dd.chainId+"",Ld.chainId+"",Ud.chainId+"",Fd.chainId+"",Hd.chainId+"",Kd.chainId+"",Od.chainId+"",$d.chainId+"",Yd.chainId+"",zd.chainId+"",qd.chainId+"",Qd.chainId+"",jd.chainId+"",Vd.chainId+"",Gd.chainId+"",Zd.chainId+"",Xd.chainId+"",Jd.chainId+"",eu.chainId+"",tu.chainId+"",nu.chainId+"",au.chainId+"",ru.chainId+"",iu.chainId+"",su.chainId+"",ou.chainId+"",cu.chainId+"",pu.chainId+"",lu.chainId+"",du.chainId+"",uu.chainId+"",mu.chainId+"",hu.chainId+"",yu.chainId+"",fu.chainId+"",gu.chainId+"",bu.chainId+"",Tu.chainId+"",wu.chainId+"",Iu.chainId+"",vu.chainId+"",Cu.chainId+"",ku.chainId+"",Eu.chainId+"",xu.chainId+"",Ru.chainId+"",Au.chainId+"",Pu.chainId+"",Mu.chainId+"",_u.chainId+"",Su.chainId+"",Wu.chainId+"",Bu.chainId+"",Nu.chainId+"",Du.chainId+"",Lu.chainId+"",Uu.chainId+"",Fu.chainId+"",Hu.chainId+"",Ku.chainId+"",_a.chainId+"",Ou.chainId+"",$u.chainId+"",Yu.chainId+"",zu.chainId+"",qu.chainId+"",Qu.chainId+"",ju.chainId+"",Vu.chainId+"",Gu.chainId+"",Zu.chainId+"",Xu.chainId+"",Ju.chainId+"",em.chainId+"",tm.chainId+"",nm.chainId+"",am.chainId+"",rm.chainId+"",im.chainId+"",sm.chainId+"",om.chainId+"",cm.chainId+"",pm.chainId+"",lm.chainId+"",dm.chainId+"",um.chainId+"",mm.chainId+"",hm.chainId+"",ym.chainId+"",fm.chainId+"",gm.chainId+"",bm.chainId+"",Tm.chainId+"",wm.chainId+"",Im.chainId+"",vm.chainId+"",Cm.chainId+"",km.chainId+"",Em.chainId+"",xm.chainId+"",Rm.chainId+"",Am.chainId+"",Pm.chainId+"",Mm.chainId+"",_m.chainId+"",Sm.chainId+"",Wm.chainId+"",Bm.chainId+"",Nm.chainId+"",Dm.chainId+"",Lm.chainId+"",Um.chainId+"",Fm.chainId+"",Hm.chainId+"",Km.chainId+"",Om.chainId+"",$m.chainId+"",Ym.chainId+"",zm.chainId+"",qm.chainId+"",Qm.chainId+"",jm.chainId+"",Vm.chainId+"",Gm.chainId+"",Zm.chainId+"",Xm.chainId+"",Jm.chainId+"",eh.chainId+"",th.chainId+"",nh.chainId+"",ah.chainId+"",rh.chainId+"",ih.chainId+"",sh.chainId+"",oh.chainId+"",ch.chainId+"",ph.chainId+"",lh.chainId+"",dh.chainId+"",uh.chainId+"",mh.chainId+"",hh.chainId+"",yh.chainId+"",fh.chainId+"",gh.chainId+"",bh.chainId+"",Th.chainId+"",wh.chainId+"",Ih.chainId+"",vh.chainId+"",Ch.chainId+"",kh.chainId+"",Eh.chainId+"",xh.chainId+"",Rh.chainId+"",Ah.chainId+"",Ph.chainId+"",Mh.chainId+"",_h.chainId+"",Sh.chainId+"",Wh.chainId+"",Bh.chainId+"",Nh.chainId+"",Dh.chainId+"",Lh.chainId+"",Uh.chainId+"",Fh.chainId+"",Hh.chainId+"",Kh.chainId+"",Oh.chainId+"",$h.chainId+"",Yh.chainId+"",zh.chainId+"",qh.chainId+"",Qh.chainId+"",jh.chainId+"",Vh.chainId+"",Gh.chainId+"",Zh.chainId+"",Xh.chainId+"",Jh.chainId+"",ey.chainId+"",ty.chainId+"",ny.chainId+"",ay.chainId+"",ry.chainId+"",iy.chainId+"",sy.chainId+"",oy.chainId+"",cy.chainId+"",py.chainId+"",ly.chainId+"",dy.chainId+"",uy.chainId+"",my.chainId+"",hy.chainId+"",yy.chainId+"",fy.chainId+"",gy.chainId+"",by.chainId+"",Ty.chainId+"",wy.chainId+"",Iy.chainId+"",vy.chainId+"",Cy.chainId+"",ky.chainId+"",Ey.chainId+"",xy.chainId+"",Ry.chainId+"",Ay.chainId+"",Py.chainId+"",My.chainId+"",_y.chainId+"",Sy.chainId+"",Wy.chainId+"",By.chainId+"",Ny.chainId+"",Dy.chainId+"",Ly.chainId+"",Uy.chainId+"",Fy.chainId+"",Hy.chainId+"",Ky.chainId+"",Oy.chainId+"",$y.chainId+"",Yy.chainId+"",zy.chainId+"",qy.chainId+"",Qy.chainId+"",jy.chainId+"",Vy.chainId+"",Gy.chainId+"",Zy.chainId+"",Xy.chainId+"",Jy.chainId+"",ef.chainId+"",tf.chainId+"",nf.chainId+"",af.chainId+"",rf.chainId+"",sf.chainId+"",of.chainId+"",cf.chainId+"",pf.chainId+"",lf.chainId+"",df.chainId+"",uf.chainId+"",mf.chainId+"",hf.chainId+"",yf.chainId+"",ff.chainId+"",gf.chainId+"",bf.chainId+"",Tf.chainId+"",wf.chainId+"",Sa.chainId+"",If.chainId+"",vf.chainId+"",Cf.chainId+"",kf.chainId+"",Ef.chainId+"",Wa.chainId+"",Ba.chainId+"",xf.chainId+"",Rf.chainId+"",Af.chainId+"",Pf.chainId+"",Mf.chainId+"",_f.chainId+"",Sf.chainId+"",Wf.chainId+"",Bf.chainId+"",Nf.chainId+"",Df.chainId+"",Lf.chainId+"",Uf.chainId+"",Ff.chainId+"",Hf.chainId+"",Kf.chainId+"",Of.chainId+"",$f.chainId+"",Yf.chainId+"",zf.chainId+"",qf.chainId+"",Qf.chainId+"",jf.chainId+"",Vf.chainId+"",Gf.chainId+"",Zf.chainId+"",Xf.chainId+"",Jf.chainId+"",eg.chainId+"",tg.chainId+"",ng.chainId+"",ag.chainId+"",rg.chainId+"",ig.chainId+"",sg.chainId+"",og.chainId+"",cg.chainId+"",pg.chainId+"",lg.chainId+"",dg.chainId+"",ug.chainId+"",mg.chainId+"",hg.chainId+"",yg.chainId+"",fg.chainId+"",gg.chainId+"",bg.chainId+"",Na.chainId+"",Tg.chainId+"",wg.chainId+"",Ig.chainId+"",vg.chainId+"",Cg.chainId+"",kg.chainId+"",Eg.chainId+"",xg.chainId+"",Rg.chainId+"",Ag.chainId+"",Pg.chainId+"",Mg.chainId+"",_g.chainId+"",Sg.chainId+"",Wg.chainId+"",Bg.chainId+"",Ng.chainId+"",Dg.chainId+"",Lg.chainId+"",Ug.chainId+"",Fg.chainId+"",Hg.chainId+"",Kg.chainId+"",Og.chainId+"",$g.chainId+"",Yg.chainId+"",zg.chainId+"",qg.chainId+"",Qg.chainId+"",jg.chainId+"",Vg.chainId+"",Gg.chainId+"",Zg.chainId+"",Xg.chainId+"",Jg.chainId+"",eb.chainId+"",tb.chainId+"",nb.chainId+"",ab.chainId+"",rb.chainId+"",ib.chainId+"",sb.chainId+"",ob.chainId+"",cb.chainId+"",pb.chainId+"",lb.chainId+"",db.chainId+"",ub.chainId+"",mb.chainId+"",hb.chainId+"",yb.chainId+"",fb.chainId+"",gb.chainId+"",bb.chainId+"",Tb.chainId+"",wb.chainId+"",Ib.chainId+"",vb.chainId+"",Cb.chainId+"",kb.chainId+"",Eb.chainId+"",xb.chainId+"",Rb.chainId+"",Ab.chainId+"",Pb.chainId+"",Mb.chainId+"",_b.chainId+"",Sb.chainId+"",Wb.chainId+"",Bb.chainId+"",Nb.chainId+"",Db.chainId+"",Lb.chainId+"",Ub.chainId+"",Fb.chainId+"",Hb.chainId+"",Kb.chainId+"",Da.chainId+"",Ob.chainId+"",$b.chainId+"",Yb.chainId+"",zb.chainId+"",qb.chainId+"",Qb.chainId+"",jb.chainId+"",Vb.chainId+"",Gb.chainId+"",Zb.chainId+"",Xb.chainId+"",Jb.chainId+"",eT.chainId+"",tT.chainId+"",nT.chainId+"",aT.chainId+"",rT.chainId+"",iT.chainId+"",sT.chainId+"",oT.chainId+"",cT.chainId+"",pT.chainId+"",lT.chainId+"",dT.chainId+"",uT.chainId+"",mT.chainId+"",hT.chainId+"",yT.chainId+"",fT.chainId+"",gT.chainId+"",bT.chainId+"",TT.chainId+"",wT.chainId+"",IT.chainId+"",vT.chainId+"",CT.chainId+"",kT.chainId+"",ET.chainId+"",xT.chainId+"",RT.chainId+"",AT.chainId+"",PT.chainId+"",MT.chainId+"",_T.chainId+"",ST.chainId+"",WT.chainId+"",BT.chainId+"",NT.chainId+"",DT.chainId+"",LT.chainId+"",UT.chainId+"",FT.chainId+"",HT.chainId+"",KT.chainId+"",OT.chainId+"",$T.chainId+"",YT.chainId+"",zT.chainId+"",qT.chainId+"",QT.chainId+"",jT.chainId+"",VT.chainId+"",GT.chainId+"",ZT.chainId+"",XT.chainId+"",JT.chainId+"",ew.chainId+"",tw.chainId+"",nw.chainId+"",aw.chainId+"",rw.chainId+"",iw.chainId+"",sw.chainId+"",ow.chainId+"",cw.chainId+"",pw.chainId+"",lw.chainId+"",dw.chainId+"",uw.chainId+"",mw.chainId+"",hw.chainId+"",yw.chainId+"",fw.chainId+"",gw.chainId+"",bw.chainId+"",Tw.chainId+"",ww.chainId+"",Iw.chainId+"",vw.chainId+"",Cw.chainId+"",kw.chainId+"",Ew.chainId+"",xw.chainId+"",Rw.chainId+"",Aw.chainId+"",Pw.chainId+"",Mw.chainId+"",_w.chainId+"",Sw.chainId+"",Ww.chainId+"",Bw.chainId+"",Nw.chainId+"",Dw.chainId+"",Lw.chainId+"",Uw.chainId+"",Fw.chainId+"",Hw.chainId+"",Kw.chainId+"",Ow.chainId+"",$w.chainId+"",wn.chainId+"",Yw.chainId+"";Ca.slug+"",Ca.chainId,Wr.slug+"",Wr.chainId,Br.slug+"",Br.chainId,Nr.slug+"",Nr.chainId,ka.slug+"",ka.chainId,Dr.slug+"",Dr.chainId,Lr.slug+"",Lr.chainId,Ur.slug+"",Ur.chainId,Fr.slug+"",Fr.chainId,Ea.slug+"",Ea.chainId,Hr.slug+"",Hr.chainId,Kr.slug+"",Kr.chainId,Or.slug+"",Or.chainId,$r.slug+"",$r.chainId,Yr.slug+"",Yr.chainId,zr.slug+"",zr.chainId,qr.slug+"",qr.chainId,Qr.slug+"",Qr.chainId,jr.slug+"",jr.chainId,Vr.slug+"",Vr.chainId,Gr.slug+"",Gr.chainId,Zr.slug+"",Zr.chainId,Xr.slug+"",Xr.chainId,Jr.slug+"",Jr.chainId,ei.slug+"",ei.chainId,ti.slug+"",ti.chainId,ni.slug+"",ni.chainId,ai.slug+"",ai.chainId,ri.slug+"",ri.chainId,ii.slug+"",ii.chainId,si.slug+"",si.chainId,oi.slug+"",oi.chainId,ci.slug+"",ci.chainId,pi.slug+"",pi.chainId,li.slug+"",li.chainId,di.slug+"",di.chainId,ui.slug+"",ui.chainId,mi.slug+"",mi.chainId,hi.slug+"",hi.chainId,yi.slug+"",yi.chainId,fi.slug+"",fi.chainId,gi.slug+"",gi.chainId,bi.slug+"",bi.chainId,Ti.slug+"",Ti.chainId,wi.slug+"",wi.chainId,Ii.slug+"",Ii.chainId,vi.slug+"",vi.chainId,Ci.slug+"",Ci.chainId,ki.slug+"",ki.chainId,Ei.slug+"",Ei.chainId,xi.slug+"",xi.chainId,Ri.slug+"",Ri.chainId,Ai.slug+"",Ai.chainId,Pi.slug+"",Pi.chainId,Mi.slug+"",Mi.chainId,xa.slug+"",xa.chainId,_i.slug+"",_i.chainId,Si.slug+"",Si.chainId,Wi.slug+"",Wi.chainId,Bi.slug+"",Bi.chainId,Ni.slug+"",Ni.chainId,Di.slug+"",Di.chainId,Li.slug+"",Li.chainId,Ui.slug+"",Ui.chainId,Fi.slug+"",Fi.chainId,Hi.slug+"",Hi.chainId,Ki.slug+"",Ki.chainId,Oi.slug+"",Oi.chainId,$i.slug+"",$i.chainId,Yi.slug+"",Yi.chainId,zi.slug+"",zi.chainId,qi.slug+"",qi.chainId,Qi.slug+"",Qi.chainId,ji.slug+"",ji.chainId,Vi.slug+"",Vi.chainId,Gi.slug+"",Gi.chainId,Zi.slug+"",Zi.chainId,Xi.slug+"",Xi.chainId,Ji.slug+"",Ji.chainId,es.slug+"",es.chainId,ts.slug+"",ts.chainId,ns.slug+"",ns.chainId,as.slug+"",as.chainId,rs.slug+"",rs.chainId,is.slug+"",is.chainId,ss.slug+"",ss.chainId,os.slug+"",os.chainId,cs.slug+"",cs.chainId,ps.slug+"",ps.chainId,ls.slug+"",ls.chainId,ds.slug+"",ds.chainId,us.slug+"",us.chainId,ms.slug+"",ms.chainId,hs.slug+"",hs.chainId,Ra.slug+"",Ra.chainId,ys.slug+"",ys.chainId,fs.slug+"",fs.chainId,gs.slug+"",gs.chainId,bs.slug+"",bs.chainId,Ts.slug+"",Ts.chainId,ws.slug+"",ws.chainId,Is.slug+"",Is.chainId,vs.slug+"",vs.chainId,Cs.slug+"",Cs.chainId,ks.slug+"",ks.chainId,Es.slug+"",Es.chainId,xs.slug+"",xs.chainId,Rs.slug+"",Rs.chainId,As.slug+"",As.chainId,Ps.slug+"",Ps.chainId,Ms.slug+"",Ms.chainId,_s.slug+"",_s.chainId,Ss.slug+"",Ss.chainId,Ws.slug+"",Ws.chainId,Bs.slug+"",Bs.chainId,Ns.slug+"",Ns.chainId,Ds.slug+"",Ds.chainId,Ls.slug+"",Ls.chainId,Us.slug+"",Us.chainId,Fs.slug+"",Fs.chainId,Hs.slug+"",Hs.chainId,Ks.slug+"",Ks.chainId,Os.slug+"",Os.chainId,$s.slug+"",$s.chainId,Ys.slug+"",Ys.chainId,zs.slug+"",zs.chainId,qs.slug+"",qs.chainId,Aa.slug+"",Aa.chainId,Qs.slug+"",Qs.chainId,js.slug+"",js.chainId,Vs.slug+"",Vs.chainId,Gs.slug+"",Gs.chainId,Zs.slug+"",Zs.chainId,Xs.slug+"",Xs.chainId,Js.slug+"",Js.chainId,eo.slug+"",eo.chainId,to.slug+"",to.chainId,no.slug+"",no.chainId,ao.slug+"",ao.chainId,ro.slug+"",ro.chainId,io.slug+"",io.chainId,so.slug+"",so.chainId,oo.slug+"",oo.chainId,co.slug+"",co.chainId,po.slug+"",po.chainId,lo.slug+"",lo.chainId,uo.slug+"",uo.chainId,mo.slug+"",mo.chainId,ho.slug+"",ho.chainId,yo.slug+"",yo.chainId,fo.slug+"",fo.chainId,go.slug+"",go.chainId,bo.slug+"",bo.chainId,To.slug+"",To.chainId,wo.slug+"",wo.chainId,Io.slug+"",Io.chainId,vo.slug+"",vo.chainId,Co.slug+"",Co.chainId,ko.slug+"",ko.chainId,Eo.slug+"",Eo.chainId,xo.slug+"",xo.chainId,Ro.slug+"",Ro.chainId,Ao.slug+"",Ao.chainId,Po.slug+"",Po.chainId,Mo.slug+"",Mo.chainId,Pa.slug+"",Pa.chainId,_o.slug+"",_o.chainId,So.slug+"",So.chainId,Wo.slug+"",Wo.chainId,Bo.slug+"",Bo.chainId,No.slug+"",No.chainId,Do.slug+"",Do.chainId,Lo.slug+"",Lo.chainId,Uo.slug+"",Uo.chainId,Fo.slug+"",Fo.chainId,Ho.slug+"",Ho.chainId,Ko.slug+"",Ko.chainId,Oo.slug+"",Oo.chainId,$o.slug+"",$o.chainId,Yo.slug+"",Yo.chainId,zo.slug+"",zo.chainId,qo.slug+"",qo.chainId,Qo.slug+"",Qo.chainId,jo.slug+"",jo.chainId,Vo.slug+"",Vo.chainId,Go.slug+"",Go.chainId,Zo.slug+"",Zo.chainId,Xo.slug+"",Xo.chainId,Jo.slug+"",Jo.chainId,ec.slug+"",ec.chainId,tc.slug+"",tc.chainId,nc.slug+"",nc.chainId,ac.slug+"",ac.chainId,rc.slug+"",rc.chainId,ic.slug+"",ic.chainId,sc.slug+"",sc.chainId,oc.slug+"",oc.chainId,cc.slug+"",cc.chainId,pc.slug+"",pc.chainId,Ma.slug+"",Ma.chainId,lc.slug+"",lc.chainId,dc.slug+"",dc.chainId,uc.slug+"",uc.chainId,mc.slug+"",mc.chainId,hc.slug+"",hc.chainId,yc.slug+"",yc.chainId,fc.slug+"",fc.chainId,gc.slug+"",gc.chainId,bc.slug+"",bc.chainId,Tc.slug+"",Tc.chainId,wc.slug+"",wc.chainId,Ic.slug+"",Ic.chainId,vc.slug+"",vc.chainId,Cc.slug+"",Cc.chainId,kc.slug+"",kc.chainId,Ec.slug+"",Ec.chainId,xc.slug+"",xc.chainId,Rc.slug+"",Rc.chainId,Ac.slug+"",Ac.chainId,Pc.slug+"",Pc.chainId,Mc.slug+"",Mc.chainId,_c.slug+"",_c.chainId,Sc.slug+"",Sc.chainId,Wc.slug+"",Wc.chainId,Bc.slug+"",Bc.chainId,Nc.slug+"",Nc.chainId,Dc.slug+"",Dc.chainId,Lc.slug+"",Lc.chainId,Uc.slug+"",Uc.chainId,Fc.slug+"",Fc.chainId,Hc.slug+"",Hc.chainId,Kc.slug+"",Kc.chainId,Oc.slug+"",Oc.chainId,$c.slug+"",$c.chainId,Yc.slug+"",Yc.chainId,zc.slug+"",zc.chainId,qc.slug+"",qc.chainId,Qc.slug+"",Qc.chainId,jc.slug+"",jc.chainId,Vc.slug+"",Vc.chainId,Gc.slug+"",Gc.chainId,Zc.slug+"",Zc.chainId,Xc.slug+"",Xc.chainId,Jc.slug+"",Jc.chainId,ep.slug+"",ep.chainId,tp.slug+"",tp.chainId,np.slug+"",np.chainId,ap.slug+"",ap.chainId,rp.slug+"",rp.chainId,ip.slug+"",ip.chainId,sp.slug+"",sp.chainId,op.slug+"",op.chainId,cp.slug+"",cp.chainId,pp.slug+"",pp.chainId,lp.slug+"",lp.chainId,dp.slug+"",dp.chainId,up.slug+"",up.chainId,mp.slug+"",mp.chainId,hp.slug+"",hp.chainId,yp.slug+"",yp.chainId,fp.slug+"",fp.chainId,gp.slug+"",gp.chainId,bp.slug+"",bp.chainId,Tp.slug+"",Tp.chainId,wp.slug+"",wp.chainId,Ip.slug+"",Ip.chainId,vp.slug+"",vp.chainId,Cp.slug+"",Cp.chainId,kp.slug+"",kp.chainId,Ep.slug+"",Ep.chainId,xp.slug+"",xp.chainId,Rp.slug+"",Rp.chainId,Ap.slug+"",Ap.chainId,Pp.slug+"",Pp.chainId,Mp.slug+"",Mp.chainId,_p.slug+"",_p.chainId,Sp.slug+"",Sp.chainId,Wp.slug+"",Wp.chainId,Bp.slug+"",Bp.chainId,Np.slug+"",Np.chainId,Dp.slug+"",Dp.chainId,Lp.slug+"",Lp.chainId,Up.slug+"",Up.chainId,Fp.slug+"",Fp.chainId,Hp.slug+"",Hp.chainId,Kp.slug+"",Kp.chainId,Op.slug+"",Op.chainId,$p.slug+"",$p.chainId,Yp.slug+"",Yp.chainId,zp.slug+"",zp.chainId,qp.slug+"",qp.chainId,Qp.slug+"",Qp.chainId,jp.slug+"",jp.chainId,Vp.slug+"",Vp.chainId,Gp.slug+"",Gp.chainId,Zp.slug+"",Zp.chainId,Xp.slug+"",Xp.chainId,Jp.slug+"",Jp.chainId,el.slug+"",el.chainId,tl.slug+"",tl.chainId,nl.slug+"",nl.chainId,al.slug+"",al.chainId,rl.slug+"",rl.chainId,il.slug+"",il.chainId,sl.slug+"",sl.chainId,ol.slug+"",ol.chainId,cl.slug+"",cl.chainId,pl.slug+"",pl.chainId,ll.slug+"",ll.chainId,dl.slug+"",dl.chainId,ul.slug+"",ul.chainId,ml.slug+"",ml.chainId,hl.slug+"",hl.chainId,yl.slug+"",yl.chainId,fl.slug+"",fl.chainId,gl.slug+"",gl.chainId,bl.slug+"",bl.chainId,Tl.slug+"",Tl.chainId,wl.slug+"",wl.chainId,Il.slug+"",Il.chainId,vl.slug+"",vl.chainId,Cl.slug+"",Cl.chainId,kl.slug+"",kl.chainId,El.slug+"",El.chainId,xl.slug+"",xl.chainId,Rl.slug+"",Rl.chainId,Al.slug+"",Al.chainId,Pl.slug+"",Pl.chainId,Ml.slug+"",Ml.chainId,_l.slug+"",_l.chainId,Sl.slug+"",Sl.chainId,Wl.slug+"",Wl.chainId,Bl.slug+"",Bl.chainId,Nl.slug+"",Nl.chainId,Dl.slug+"",Dl.chainId,Ll.slug+"",Ll.chainId,Ul.slug+"",Ul.chainId,Fl.slug+"",Fl.chainId,Hl.slug+"",Hl.chainId,Kl.slug+"",Kl.chainId,Ol.slug+"",Ol.chainId,$l.slug+"",$l.chainId,Yl.slug+"",Yl.chainId,zl.slug+"",zl.chainId,ql.slug+"",ql.chainId,Ql.slug+"",Ql.chainId,jl.slug+"",jl.chainId,Vl.slug+"",Vl.chainId,Gl.slug+"",Gl.chainId,Zl.slug+"",Zl.chainId,Xl.slug+"",Xl.chainId,Jl.slug+"",Jl.chainId,ed.slug+"",ed.chainId,td.slug+"",td.chainId,nd.slug+"",nd.chainId,ad.slug+"",ad.chainId,rd.slug+"",rd.chainId,id.slug+"",id.chainId,sd.slug+"",sd.chainId,od.slug+"",od.chainId,cd.slug+"",cd.chainId,pd.slug+"",pd.chainId,ld.slug+"",ld.chainId,dd.slug+"",dd.chainId,ud.slug+"",ud.chainId,md.slug+"",md.chainId,hd.slug+"",hd.chainId,yd.slug+"",yd.chainId,fd.slug+"",fd.chainId,gd.slug+"",gd.chainId,bd.slug+"",bd.chainId,Td.slug+"",Td.chainId,wd.slug+"",wd.chainId,Id.slug+"",Id.chainId,vd.slug+"",vd.chainId,Cd.slug+"",Cd.chainId,kd.slug+"",kd.chainId,Ed.slug+"",Ed.chainId,xd.slug+"",xd.chainId,Rd.slug+"",Rd.chainId,Ad.slug+"",Ad.chainId,Pd.slug+"",Pd.chainId,Md.slug+"",Md.chainId,_d.slug+"",_d.chainId,Sd.slug+"",Sd.chainId,Wd.slug+"",Wd.chainId,Bd.slug+"",Bd.chainId,Nd.slug+"",Nd.chainId,Dd.slug+"",Dd.chainId,Ld.slug+"",Ld.chainId,Ud.slug+"",Ud.chainId,Fd.slug+"",Fd.chainId,Hd.slug+"",Hd.chainId,Kd.slug+"",Kd.chainId,Od.slug+"",Od.chainId,$d.slug+"",$d.chainId,Yd.slug+"",Yd.chainId,zd.slug+"",zd.chainId,qd.slug+"",qd.chainId,Qd.slug+"",Qd.chainId,jd.slug+"",jd.chainId,Vd.slug+"",Vd.chainId,Gd.slug+"",Gd.chainId,Zd.slug+"",Zd.chainId,Xd.slug+"",Xd.chainId,Jd.slug+"",Jd.chainId,eu.slug+"",eu.chainId,tu.slug+"",tu.chainId,nu.slug+"",nu.chainId,au.slug+"",au.chainId,ru.slug+"",ru.chainId,iu.slug+"",iu.chainId,su.slug+"",su.chainId,ou.slug+"",ou.chainId,cu.slug+"",cu.chainId,pu.slug+"",pu.chainId,lu.slug+"",lu.chainId,du.slug+"",du.chainId,uu.slug+"",uu.chainId,mu.slug+"",mu.chainId,hu.slug+"",hu.chainId,yu.slug+"",yu.chainId,fu.slug+"",fu.chainId,gu.slug+"",gu.chainId,bu.slug+"",bu.chainId,Tu.slug+"",Tu.chainId,wu.slug+"",wu.chainId,Iu.slug+"",Iu.chainId,vu.slug+"",vu.chainId,Cu.slug+"",Cu.chainId,ku.slug+"",ku.chainId,Eu.slug+"",Eu.chainId,xu.slug+"",xu.chainId,Ru.slug+"",Ru.chainId,Au.slug+"",Au.chainId,Pu.slug+"",Pu.chainId,Mu.slug+"",Mu.chainId,_u.slug+"",_u.chainId,Su.slug+"",Su.chainId,Wu.slug+"",Wu.chainId,Bu.slug+"",Bu.chainId,Nu.slug+"",Nu.chainId,Du.slug+"",Du.chainId,Lu.slug+"",Lu.chainId,Uu.slug+"",Uu.chainId,Fu.slug+"",Fu.chainId,Hu.slug+"",Hu.chainId,Ku.slug+"",Ku.chainId,_a.slug+"",_a.chainId,Ou.slug+"",Ou.chainId,$u.slug+"",$u.chainId,Yu.slug+"",Yu.chainId,zu.slug+"",zu.chainId,qu.slug+"",qu.chainId,Qu.slug+"",Qu.chainId,ju.slug+"",ju.chainId,Vu.slug+"",Vu.chainId,Gu.slug+"",Gu.chainId,Zu.slug+"",Zu.chainId,Xu.slug+"",Xu.chainId,Ju.slug+"",Ju.chainId,em.slug+"",em.chainId,tm.slug+"",tm.chainId,nm.slug+"",nm.chainId,am.slug+"",am.chainId,rm.slug+"",rm.chainId,im.slug+"",im.chainId,sm.slug+"",sm.chainId,om.slug+"",om.chainId,cm.slug+"",cm.chainId,pm.slug+"",pm.chainId,lm.slug+"",lm.chainId,dm.slug+"",dm.chainId,um.slug+"",um.chainId,mm.slug+"",mm.chainId,hm.slug+"",hm.chainId,ym.slug+"",ym.chainId,fm.slug+"",fm.chainId,gm.slug+"",gm.chainId,bm.slug+"",bm.chainId,Tm.slug+"",Tm.chainId,wm.slug+"",wm.chainId,Im.slug+"",Im.chainId,vm.slug+"",vm.chainId,Cm.slug+"",Cm.chainId,km.slug+"",km.chainId,Em.slug+"",Em.chainId,xm.slug+"",xm.chainId,Rm.slug+"",Rm.chainId,Am.slug+"",Am.chainId,Pm.slug+"",Pm.chainId,Mm.slug+"",Mm.chainId,_m.slug+"",_m.chainId,Sm.slug+"",Sm.chainId,Wm.slug+"",Wm.chainId,Bm.slug+"",Bm.chainId,Nm.slug+"",Nm.chainId,Dm.slug+"",Dm.chainId,Lm.slug+"",Lm.chainId,Um.slug+"",Um.chainId,Fm.slug+"",Fm.chainId,Hm.slug+"",Hm.chainId,Km.slug+"",Km.chainId,Om.slug+"",Om.chainId,$m.slug+"",$m.chainId,Ym.slug+"",Ym.chainId,zm.slug+"",zm.chainId,qm.slug+"",qm.chainId,Qm.slug+"",Qm.chainId,jm.slug+"",jm.chainId,Vm.slug+"",Vm.chainId,Gm.slug+"",Gm.chainId,Zm.slug+"",Zm.chainId,Xm.slug+"",Xm.chainId,Jm.slug+"",Jm.chainId,eh.slug+"",eh.chainId,th.slug+"",th.chainId,nh.slug+"",nh.chainId,ah.slug+"",ah.chainId,rh.slug+"",rh.chainId,ih.slug+"",ih.chainId,sh.slug+"",sh.chainId,oh.slug+"",oh.chainId,ch.slug+"",ch.chainId,ph.slug+"",ph.chainId,lh.slug+"",lh.chainId,dh.slug+"",dh.chainId,uh.slug+"",uh.chainId,mh.slug+"",mh.chainId,hh.slug+"",hh.chainId,yh.slug+"",yh.chainId,fh.slug+"",fh.chainId,gh.slug+"",gh.chainId,bh.slug+"",bh.chainId,Th.slug+"",Th.chainId,wh.slug+"",wh.chainId,Ih.slug+"",Ih.chainId,vh.slug+"",vh.chainId,Ch.slug+"",Ch.chainId,kh.slug+"",kh.chainId,Eh.slug+"",Eh.chainId,xh.slug+"",xh.chainId,Rh.slug+"",Rh.chainId,Ah.slug+"",Ah.chainId,Ph.slug+"",Ph.chainId,Mh.slug+"",Mh.chainId,_h.slug+"",_h.chainId,Sh.slug+"",Sh.chainId,Wh.slug+"",Wh.chainId,Bh.slug+"",Bh.chainId,Nh.slug+"",Nh.chainId,Dh.slug+"",Dh.chainId,Lh.slug+"",Lh.chainId,Uh.slug+"",Uh.chainId,Fh.slug+"",Fh.chainId,Hh.slug+"",Hh.chainId,Kh.slug+"",Kh.chainId,Oh.slug+"",Oh.chainId,$h.slug+"",$h.chainId,Yh.slug+"",Yh.chainId,zh.slug+"",zh.chainId,qh.slug+"",qh.chainId,Qh.slug+"",Qh.chainId,jh.slug+"",jh.chainId,Vh.slug+"",Vh.chainId,Gh.slug+"",Gh.chainId,Zh.slug+"",Zh.chainId,Xh.slug+"",Xh.chainId,Jh.slug+"",Jh.chainId,ey.slug+"",ey.chainId,ty.slug+"",ty.chainId,ny.slug+"",ny.chainId,ay.slug+"",ay.chainId,ry.slug+"",ry.chainId,iy.slug+"",iy.chainId,sy.slug+"",sy.chainId,oy.slug+"",oy.chainId,cy.slug+"",cy.chainId,py.slug+"",py.chainId,ly.slug+"",ly.chainId,dy.slug+"",dy.chainId,uy.slug+"",uy.chainId,my.slug+"",my.chainId,hy.slug+"",hy.chainId,yy.slug+"",yy.chainId,fy.slug+"",fy.chainId,gy.slug+"",gy.chainId,by.slug+"",by.chainId,Ty.slug+"",Ty.chainId,wy.slug+"",wy.chainId,Iy.slug+"",Iy.chainId,vy.slug+"",vy.chainId,Cy.slug+"",Cy.chainId,ky.slug+"",ky.chainId,Ey.slug+"",Ey.chainId,xy.slug+"",xy.chainId,Ry.slug+"",Ry.chainId,Ay.slug+"",Ay.chainId,Py.slug+"",Py.chainId,My.slug+"",My.chainId,_y.slug+"",_y.chainId,Sy.slug+"",Sy.chainId,Wy.slug+"",Wy.chainId,By.slug+"",By.chainId,Ny.slug+"",Ny.chainId,Dy.slug+"",Dy.chainId,Ly.slug+"",Ly.chainId,Uy.slug+"",Uy.chainId,Fy.slug+"",Fy.chainId,Hy.slug+"",Hy.chainId,Ky.slug+"",Ky.chainId,Oy.slug+"",Oy.chainId,$y.slug+"",$y.chainId,Yy.slug+"",Yy.chainId,zy.slug+"",zy.chainId,qy.slug+"",qy.chainId,Qy.slug+"",Qy.chainId,jy.slug+"",jy.chainId,Vy.slug+"",Vy.chainId,Gy.slug+"",Gy.chainId,Zy.slug+"",Zy.chainId,Xy.slug+"",Xy.chainId,Jy.slug+"",Jy.chainId,ef.slug+"",ef.chainId,tf.slug+"",tf.chainId,nf.slug+"",nf.chainId,af.slug+"",af.chainId,rf.slug+"",rf.chainId,sf.slug+"",sf.chainId,of.slug+"",of.chainId,cf.slug+"",cf.chainId,pf.slug+"",pf.chainId,lf.slug+"",lf.chainId,df.slug+"",df.chainId,uf.slug+"",uf.chainId,mf.slug+"",mf.chainId,hf.slug+"",hf.chainId,yf.slug+"",yf.chainId,ff.slug+"",ff.chainId,gf.slug+"",gf.chainId,bf.slug+"",bf.chainId,Tf.slug+"",Tf.chainId,wf.slug+"",wf.chainId,Sa.slug+"",Sa.chainId,If.slug+"",If.chainId,vf.slug+"",vf.chainId,Cf.slug+"",Cf.chainId,kf.slug+"",kf.chainId,Ef.slug+"",Ef.chainId,Wa.slug+"",Wa.chainId,Ba.slug+"",Ba.chainId,xf.slug+"",xf.chainId,Rf.slug+"",Rf.chainId,Af.slug+"",Af.chainId,Pf.slug+"",Pf.chainId,Mf.slug+"",Mf.chainId,_f.slug+"",_f.chainId,Sf.slug+"",Sf.chainId,Wf.slug+"",Wf.chainId,Bf.slug+"",Bf.chainId,Nf.slug+"",Nf.chainId,Df.slug+"",Df.chainId,Lf.slug+"",Lf.chainId,Uf.slug+"",Uf.chainId,Ff.slug+"",Ff.chainId,Hf.slug+"",Hf.chainId,Kf.slug+"",Kf.chainId,Of.slug+"",Of.chainId,$f.slug+"",$f.chainId,Yf.slug+"",Yf.chainId,zf.slug+"",zf.chainId,qf.slug+"",qf.chainId,Qf.slug+"",Qf.chainId,jf.slug+"",jf.chainId,Vf.slug+"",Vf.chainId,Gf.slug+"",Gf.chainId,Zf.slug+"",Zf.chainId,Xf.slug+"",Xf.chainId,Jf.slug+"",Jf.chainId,eg.slug+"",eg.chainId,tg.slug+"",tg.chainId,ng.slug+"",ng.chainId,ag.slug+"",ag.chainId,rg.slug+"",rg.chainId,ig.slug+"",ig.chainId,sg.slug+"",sg.chainId,og.slug+"",og.chainId,cg.slug+"",cg.chainId,pg.slug+"",pg.chainId,lg.slug+"",lg.chainId,dg.slug+"",dg.chainId,ug.slug+"",ug.chainId,mg.slug+"",mg.chainId,hg.slug+"",hg.chainId,yg.slug+"",yg.chainId,fg.slug+"",fg.chainId,gg.slug+"",gg.chainId,bg.slug+"",bg.chainId,Na.slug+"",Na.chainId,Tg.slug+"",Tg.chainId,wg.slug+"",wg.chainId,Ig.slug+"",Ig.chainId,vg.slug+"",vg.chainId,Cg.slug+"",Cg.chainId,kg.slug+"",kg.chainId,Eg.slug+"",Eg.chainId,xg.slug+"",xg.chainId,Rg.slug+"",Rg.chainId,Ag.slug+"",Ag.chainId,Pg.slug+"",Pg.chainId,Mg.slug+"",Mg.chainId,_g.slug+"",_g.chainId,Sg.slug+"",Sg.chainId,Wg.slug+"",Wg.chainId,Bg.slug+"",Bg.chainId,Ng.slug+"",Ng.chainId,Dg.slug+"",Dg.chainId,Lg.slug+"",Lg.chainId,Ug.slug+"",Ug.chainId,Fg.slug+"",Fg.chainId,Hg.slug+"",Hg.chainId,Kg.slug+"",Kg.chainId,Og.slug+"",Og.chainId,$g.slug+"",$g.chainId,Yg.slug+"",Yg.chainId,zg.slug+"",zg.chainId,qg.slug+"",qg.chainId,Qg.slug+"",Qg.chainId,jg.slug+"",jg.chainId,Vg.slug+"",Vg.chainId,Gg.slug+"",Gg.chainId,Zg.slug+"",Zg.chainId,Xg.slug+"",Xg.chainId,Jg.slug+"",Jg.chainId,eb.slug+"",eb.chainId,tb.slug+"",tb.chainId,nb.slug+"",nb.chainId,ab.slug+"",ab.chainId,rb.slug+"",rb.chainId,ib.slug+"",ib.chainId,sb.slug+"",sb.chainId,ob.slug+"",ob.chainId,cb.slug+"",cb.chainId,pb.slug+"",pb.chainId,lb.slug+"",lb.chainId,db.slug+"",db.chainId,ub.slug+"",ub.chainId,mb.slug+"",mb.chainId,hb.slug+"",hb.chainId,yb.slug+"",yb.chainId,fb.slug+"",fb.chainId,gb.slug+"",gb.chainId,bb.slug+"",bb.chainId,Tb.slug+"",Tb.chainId,wb.slug+"",wb.chainId,Ib.slug+"",Ib.chainId,vb.slug+"",vb.chainId,Cb.slug+"",Cb.chainId,kb.slug+"",kb.chainId,Eb.slug+"",Eb.chainId,xb.slug+"",xb.chainId,Rb.slug+"",Rb.chainId,Ab.slug+"",Ab.chainId,Pb.slug+"",Pb.chainId,Mb.slug+"",Mb.chainId,_b.slug+"",_b.chainId,Sb.slug+"",Sb.chainId,Wb.slug+"",Wb.chainId,Bb.slug+"",Bb.chainId,Nb.slug+"",Nb.chainId,Db.slug+"",Db.chainId,Lb.slug+"",Lb.chainId,Ub.slug+"",Ub.chainId,Fb.slug+"",Fb.chainId,Hb.slug+"",Hb.chainId,Kb.slug+"",Kb.chainId,Da.slug+"",Da.chainId,Ob.slug+"",Ob.chainId,$b.slug+"",$b.chainId,Yb.slug+"",Yb.chainId,zb.slug+"",zb.chainId,qb.slug+"",qb.chainId,Qb.slug+"",Qb.chainId,jb.slug+"",jb.chainId,Vb.slug+"",Vb.chainId,Gb.slug+"",Gb.chainId,Zb.slug+"",Zb.chainId,Xb.slug+"",Xb.chainId,Jb.slug+"",Jb.chainId,eT.slug+"",eT.chainId,tT.slug+"",tT.chainId,nT.slug+"",nT.chainId,aT.slug+"",aT.chainId,rT.slug+"",rT.chainId,iT.slug+"",iT.chainId,sT.slug+"",sT.chainId,oT.slug+"",oT.chainId,cT.slug+"",cT.chainId,pT.slug+"",pT.chainId,lT.slug+"",lT.chainId,dT.slug+"",dT.chainId,uT.slug+"",uT.chainId,mT.slug+"",mT.chainId,hT.slug+"",hT.chainId,yT.slug+"",yT.chainId,fT.slug+"",fT.chainId,gT.slug+"",gT.chainId,bT.slug+"",bT.chainId,TT.slug+"",TT.chainId,wT.slug+"",wT.chainId,IT.slug+"",IT.chainId,vT.slug+"",vT.chainId,CT.slug+"",CT.chainId,kT.slug+"",kT.chainId,ET.slug+"",ET.chainId,xT.slug+"",xT.chainId,RT.slug+"",RT.chainId,AT.slug+"",AT.chainId,PT.slug+"",PT.chainId,MT.slug+"",MT.chainId,_T.slug+"",_T.chainId,ST.slug+"",ST.chainId,WT.slug+"",WT.chainId,BT.slug+"",BT.chainId,NT.slug+"",NT.chainId,DT.slug+"",DT.chainId,LT.slug+"",LT.chainId,UT.slug+"",UT.chainId,FT.slug+"",FT.chainId,HT.slug+"",HT.chainId,KT.slug+"",KT.chainId,OT.slug+"",OT.chainId,$T.slug+"",$T.chainId,YT.slug+"",YT.chainId,zT.slug+"",zT.chainId,qT.slug+"",qT.chainId,QT.slug+"",QT.chainId,jT.slug+"",jT.chainId,VT.slug+"",VT.chainId,GT.slug+"",GT.chainId,ZT.slug+"",ZT.chainId,XT.slug+"",XT.chainId,JT.slug+"",JT.chainId,ew.slug+"",ew.chainId,tw.slug+"",tw.chainId,nw.slug+"",nw.chainId,aw.slug+"",aw.chainId,rw.slug+"",rw.chainId,iw.slug+"",iw.chainId,sw.slug+"",sw.chainId,ow.slug+"",ow.chainId,cw.slug+"",cw.chainId,pw.slug+"",pw.chainId,lw.slug+"",lw.chainId,dw.slug+"",dw.chainId,uw.slug+"",uw.chainId,mw.slug+"",mw.chainId,hw.slug+"",hw.chainId,yw.slug+"",yw.chainId,fw.slug+"",fw.chainId,gw.slug+"",gw.chainId,bw.slug+"",bw.chainId,Tw.slug+"",Tw.chainId,ww.slug+"",ww.chainId,Iw.slug+"",Iw.chainId,vw.slug+"",vw.chainId,Cw.slug+"",Cw.chainId,kw.slug+"",kw.chainId,Ew.slug+"",Ew.chainId,xw.slug+"",xw.chainId,Rw.slug+"",Rw.chainId,Aw.slug+"",Aw.chainId,Pw.slug+"",Pw.chainId,Mw.slug+"",Mw.chainId,_w.slug+"",_w.chainId,Sw.slug+"",Sw.chainId,Ww.slug+"",Ww.chainId,Bw.slug+"",Bw.chainId,Nw.slug+"",Nw.chainId,Dw.slug+"",Dw.chainId,Lw.slug+"",Lw.chainId,Uw.slug+"",Uw.chainId,Fw.slug+"",Fw.chainId,Hw.slug+"",Hw.chainId,Kw.slug+"",Kw.chainId,Ow.slug+"",Ow.chainId,$w.slug+"",$w.chainId,wn.slug+"",wn.chainId,Yw.slug+"",Yw.chainId;function Z5(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function ze(t,e,n){Z5(t,e),e.set(t,n)}function ND(t,e){return e.get?e.get.call(t):e.value}function X5(t,e,n){if(!e.has(t))throw new TypeError("attempted to "+n+" private field on non-instance");return e.get(t)}function K(t,e){var n=X5(t,e,"get");return ND(t,n)}function DD(t,e,n){if(e.set)e.set.call(t,n);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=n}}function st(t,e,n){var a=X5(t,e,"set");return DD(t,a,n),n}function In(t,e){Z5(t,e),e.add(t)}function Dt(t,e,n){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return n}function LD(t,e){if(typeof t!="object"||t===null)return t;var n=t[Symbol.toPrimitive];if(n!==void 0){var a=n.call(t,e||"default");if(typeof a!="object")return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(t)}function UD(t){var e=LD(t,"string");return typeof e=="symbol"?e:String(e)}function W(t,e,n){return e=UD(e),e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function FD(t){return`https://${t}.rpc.thirdweb.com`}const HD=["function isValidSignature(bytes32 _message, bytes _signature) public view returns (bytes4)"],KD="0x1626ba7e";async function OD(t,e,n,a){const r=new GC(FD(a)),i=new J(n,HD,r),s=k1(t);try{return await i.isValidSignature(s,e)===KD}catch{return!1}}class $D extends Nt{constructor(){super(...arguments),W(this,"type","evm"),W(this,"signerPromise",void 0)}async getAddress(){return(await this.getCachedSigner()).getAddress()}async getChainId(){return(await this.getCachedSigner()).getChainId()}async signMessage(e){return await(await this.getCachedSigner()).signMessage(e)}async verifySignature(e,n,a,r){const i=k1(e),s=en(i);if(E1(s,n)===a)return!0;if(r!==void 0)try{return await OD(e,n,a,r||1)}catch{}return!1}async getCachedSigner(){return this.signerPromise?this.signerPromise:(this.signerPromise=this.getSigner().catch(()=>{throw this.signerPromise=void 0,new Error("Unable to get a signer!")}),this.signerPromise)}}const C2="__TW__";class YD{constructor(e){W(this,"name",void 0),this.name=e}getItem(e){return new Promise(n=>{n(localStorage.getItem(`${C2}/${this.name}/${e}`))})}setItem(e,n){return new Promise((a,r)=>{try{localStorage.setItem(`${C2}/${this.name}/${e}`,n),a()}catch(i){r(i)}})}removeItem(e){return new Promise(n=>{localStorage.removeItem(`${C2}/${this.name}/${e}`),n()})}}function J5(t){return new YD(t)}const zD={name:"thirdweb powered dApp",url:"https://thirdweb.com",description:"thirdweb powered dApp",logoUrl:"https://thirdweb.com/favicon.ico",isDarkMode:!0};var k2=new WeakMap,E2=new WeakSet,ev=new WeakSet;class U0 extends $D{getMeta(){return this.constructor.meta}constructor(e,n){super(),In(this,ev),In(this,E2),W(this,"walletId",void 0),W(this,"walletStorage",void 0),W(this,"chains",void 0),W(this,"dappMetadata",void 0),W(this,"options",void 0),ze(this,k2,{writable:!0,value:void 0}),this.walletId=e,this.options=n,this.chains=(n==null?void 0:n.chains)||yt,this.dappMetadata=(n==null?void 0:n.dappMetadata)||zD,this.walletStorage=(n==null?void 0:n.walletStorage)||J5(this.walletId)}async autoConnect(e){const n=e?{...e,chainId:void 0}:void 0;return Dt(this,E2,wI).call(this,!0,n)}async connect(e){st(this,k2,e);const n=await Dt(this,E2,wI).call(this,!1,e);if(!n)throw new Error("Failed to connect to the wallet.");return n}getConnectParams(){return K(this,k2)}async getSigner(){const e=await this.getConnector();if(!e)throw new Error("Wallet not connected");return await e.getSigner()}async disconnect(){const e=await this.getConnector();e&&(await e.disconnect(),this.emit("disconnect"),e.removeAllListeners())}async switchChain(e){const n=await this.getConnector();if(!n)throw new Error("Wallet not connected");if(!n.switchChain)throw new Error("Wallet does not support switching chains");return await n.switchChain(e)}async updateChains(e){this.chains=e,(await this.getConnector()).updateChains(e)}getPersonalWallet(){}}async function wI(t,e){const n=await this.getConnector();if(Dt(this,ev,qD).call(this,n),await n.isConnected()){const i=await n.getAddress();return n.setupListeners(),e!=null&&e.chainId&&await n.switchChain(e==null?void 0:e.chainId),this.emit("connect",{address:i,chainId:await this.getChainId()}),i}if(t)throw new Error("Failed to auto connect to the wallet.");return await n.connect(e)}async function qD(t){t.on("connect",e=>{var n;this.emit("connect",{address:e.account,chainId:(n=e.chain)==null?void 0:n.id})}),t.on("change",e=>{var n;this.emit("change",{address:e.account,chainId:(n=e.chain)==null?void 0:n.id})}),t.on("message",e=>{this.emit("message",e)}),t.on("disconnect",async()=>{this.emit("disconnect")}),t.on("error",e=>this.emit("error",e))}W(U0,"meta",void 0);const Qe={coinbase:"coinbase",metamask:"metamask",localWallet:"localWallet",smartWallet:"smartWallet",safe:"safe",walletConnectV1:"walletConnectV1",walletConnect:"walletConnect",magicLink:"magicLink",paper:"paper"};class _1 extends Nt{constructor(e){let{chains:n=yt,options:a}=e;super(),W(this,"id",void 0),W(this,"name",void 0),W(this,"chains",void 0),W(this,"options",void 0),W(this,"ready",void 0),this.chains=n,this.options=a}getBlockExplorerUrls(e){var a,r;const n=(r=(a=e.explorers)==null?void 0:a.map(i=>i.url))!=null?r:[];return n.length>0?n:void 0}isChainUnsupported(e){return!this.chains.some(n=>n.chainId===e)}updateChains(e){this.chains=e}}class tv extends Error{constructor(e,n){const{cause:a,code:r,data:i}=n;if(!Number.isInteger(r))throw new Error('"code" must be an integer.');if(!e||typeof e!="string")throw new Error('"message" must be a nonempty string.');super(e),W(this,"cause",void 0),W(this,"code",void 0),W(this,"data",void 0),this.cause=a,this.code=r,this.data=i}}class nv extends tv{constructor(e,n){const{cause:a,code:r,data:i}=n;if(!(Number.isInteger(r)&&r>=1e3&&r<=4999))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(e,{cause:a,code:r,data:i})}}class av extends Error{constructor(){super(...arguments),W(this,"name","AddChainError"),W(this,"message","Error adding chain")}}class rv extends Error{constructor(e){let{chainId:n,connectorId:a}=e;super(`Chain "${n}" not configured for connector "${a}".`),W(this,"name","ChainNotConfigured")}}class Dn extends Error{constructor(){super(...arguments),W(this,"name","ConnectorNotFoundError"),W(this,"message","Connector not found")}}class iv extends tv{constructor(e){super("Resource unavailable",{cause:e,code:-32002}),W(this,"name","ResourceUnavailable")}}class zw extends nv{constructor(e){super("Error switching chain",{cause:e,code:4902}),W(this,"name","SwitchChainError")}}class vt extends nv{constructor(e){super("User rejected request",{cause:e,code:4001}),W(this,"name","UserRejectedRequestError")}}function Zn(t){return typeof t=="string"?Number.parseInt(t,t.trim().substring(0,2)==="0x"?16:10):typeof t=="bigint"?Number(t):t}class QD extends Nt{}class qw extends QD{constructor(e){super(),W(this,"wagmiConnector",void 0),this.wagmiConnector=e}async connect(e){return this.setupConnectorListeners(),(await this.wagmiConnector.connect(e)).account}disconnect(){return this.wagmiConnector.removeAllListeners("connect"),this.wagmiConnector.removeAllListeners("change"),this.wagmiConnector.disconnect()}isConnected(){return this.wagmiConnector.isAuthorized()}getAddress(){return this.wagmiConnector.getAccount()}getSigner(){return this.wagmiConnector.getSigner()}getProvider(){return this.wagmiConnector.getProvider()}async switchChain(e){if(!this.wagmiConnector.switchChain)throw new Error("Switch chain not supported");await this.wagmiConnector.switchChain(e)}setupConnectorListeners(){this.wagmiConnector.addListener("connect",e=>{this.emit("connect",e)}),this.wagmiConnector.addListener("change",e=>{this.emit("change",e)}),this.wagmiConnector.addListener("disconnect",()=>{this.emit("disconnect")})}async setupListeners(){this.setupConnectorListeners(),await this.wagmiConnector.setupListeners()}updateChains(e){this.wagmiConnector.updateChains(e)}}function ar(t){return typeof t<"u"&&"ethereum"in t}const jD="modulepreload",VD=function(t){return"/"+t},II={},j=function(e,n,a){if(!n||n.length===0)return e();const r=document.getElementsByTagName("link");return Promise.all(n.map(i=>{if(i=VD(i),i in II)return;II[i]=!0;const s=i.endsWith(".css"),o=s?'[rel="stylesheet"]':"";if(!!a)for(let d=r.length-1;d>=0;d--){const u=r[d];if(u.href===i&&(!s||u.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${i}"]${o}`))return;const p=document.createElement("link");if(p.rel=s?"stylesheet":jD,s||(p.as="script",p.crossOrigin=""),p.href=i,document.head.appendChild(p),s)return new Promise((d,u)=>{p.addEventListener("load",d),p.addEventListener("error",()=>u(new Error(`Unable to preload CSS for ${i}`)))})})).then(()=>e())};window.Buffer=Ja.Buffer;class Xn extends U0{get walletName(){return"Coinbase Wallet"}constructor(e){super(Xn.id,e),W(this,"connector",void 0),W(this,"coinbaseConnector",void 0),W(this,"headlessMode",void 0),this.headlessMode=(e==null?void 0:e.headlessMode)||!1}async getConnector(){if(!this.connector){const{CoinbaseWalletConnector:e}=await j(()=>Promise.resolve().then(()=>cY),void 0),n=new e({chains:this.chains,options:{appName:this.dappMetadata.name,reloadOnDisconnect:!1,darkMode:this.dappMetadata.isDarkMode,headlessMode:this.headlessMode}});n.on("connect",()=>{}),this.coinbaseConnector=n,this.connector=new qw(n)}return this.connector}async getQrUrl(){if(await this.getConnector(),!this.coinbaseConnector)throw new Error("Coinbase connector not initialized");return this.coinbaseConnector.getQrUrl()}}W(Xn,"meta",{iconURL:"ipfs://QmcJBHopbwfJcLqJpX2xEufSS84aLbF7bHavYhaXUcrLaH/coinbase.svg",name:"Coinbase Wallet",urls:{chrome:"https://chrome.google.com/webstore/detail/coinbase-wallet-extension/hnfanknocfeofbddgcijnmhnfnkdnaad",android:"https://play.google.com/store/apps/details?id=org.toshi",ios:"https://apps.apple.com/us/app/coinbase-wallet-nfts-crypto/id1278383455"}});W(Xn,"id",Qe.coinbase);class hn extends U0{get walletName(){return"MetaMask"}constructor(e){var n;super(hn.id,e),W(this,"connector",void 0),W(this,"walletConnectConnector",void 0),W(this,"metamaskConnector",void 0),W(this,"isInjected",void 0),ar(globalThis.window)?this.isInjected=!!((n=globalThis.window.ethereum)!=null&&n.isMetaMask):this.isInjected=!1}async getConnector(){var e;if(!this.connector)if(this.isInjected){const{MetaMaskConnector:n}=await j(()=>Promise.resolve().then(()=>uY),void 0),a=new n({chains:this.chains,connectorStorage:this.walletStorage,options:{shimDisconnect:!0}});this.metamaskConnector=a,this.connector=new qw(a)}else{const{WalletConnectV1Connector:n}=await j(()=>Promise.resolve().then(()=>DC),void 0),a=new n({chains:this.chains,storage:this.walletStorage,options:{clientMeta:{name:this.dappMetadata.name,description:this.dappMetadata.description||"",url:this.dappMetadata.url,icons:[this.dappMetadata.logoUrl||""]},qrcode:(e=this.options)==null?void 0:e.qrcode}});this.walletConnectConnector=a,this.connector=new qw(a)}return this.connector}async connectWithQrCode(e){await this.getConnector();const n=this.walletConnectConnector;if(!n)throw new Error("WalletConnect connector not found");const a=await n.getProvider();a.connector.on("display_uri",(r,i)=>{e.onQrCodeUri(i.params[0])}),await a.enable(),this.connect({chainId:e.chainId}).then(e.onConnected)}async switchAccount(){if(!this.metamaskConnector)throw new Error("Can not switch Account");await this.metamaskConnector.switchAccount()}}W(hn,"meta",{name:"MetaMask",iconURL:"ipfs://QmZZHcw7zcXursywnLDAyY6Hfxzqop5GKgwoq8NB9jjrkN/metamask.svg",urls:{chrome:"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn",android:"https://play.google.com/store/apps/details?id=io.metamask",ios:"https://apps.apple.com/us/app/metamask-blockchain-wallet/id1438144202"}});W(hn,"id",Qe.metamask);var Ke=new WeakMap,br=new WeakMap,S1=new WeakMap,W1=new WeakMap,B1=new WeakMap,N1=new WeakMap,vI=new WeakSet,CI=new WeakSet;class yn extends U0{get walletName(){var e;return((e=K(this,Ke))==null?void 0:e.walletName)||"WalletConnect"}constructor(e){super((e==null?void 0:e.walletId)||yn.id,e),In(this,CI),In(this,vI),ze(this,Ke,{writable:!0,value:void 0}),ze(this,br,{writable:!0,value:void 0}),W(this,"connector",void 0),W(this,"qrcode",void 0),ze(this,S1,{writable:!0,value:n=>{if(st(this,br,n.provider),!K(this,br))throw new Error("WalletConnect provider not found after connecting.")}}),ze(this,W1,{writable:!0,value:()=>{Dt(this,CI,ZD).call(this)}}),ze(this,B1,{writable:!0,value:async n=>{n.chain||n.account}}),ze(this,N1,{writable:!0,value:n=>{switch(n.type){case"request":case"add_chain":case"switch_chain":this.emit("open_wallet");break;case"display_uri":this.emit("open_wallet",n.data);break}}}),this.qrcode=(e==null?void 0:e.qrcode)!==!1}async getConnector(){if(!this.connector){const{WalletConnectV1Connector:e}=await j(()=>Promise.resolve().then(()=>DC),void 0);st(this,Ke,new e({chains:this.chains,storage:this.walletStorage,options:{qrcode:this.qrcode,clientMeta:{description:this.dappMetadata.description||"",url:this.dappMetadata.url,icons:[this.dappMetadata.logoUrl||""],name:this.dappMetadata.name}}})),this.connector=new qw(K(this,Ke)),st(this,br,await K(this,Ke).getProvider()),Dt(this,vI,GD).call(this)}return this.connector}}function GD(){!K(this,Ke)||(K(this,Ke).on("connect",K(this,S1)),K(this,Ke).on("disconnect",K(this,W1)),K(this,Ke).on("change",K(this,B1)),K(this,Ke).on("message",K(this,N1)))}function ZD(){!K(this,Ke)||(K(this,Ke).removeListener("connect",K(this,S1)),K(this,Ke).removeListener("disconnect",K(this,W1)),K(this,Ke).removeListener("change",K(this,B1)),K(this,Ke).removeListener("message",K(this,N1)))}W(yn,"id",Qe.walletConnectV1);W(yn,"meta",{name:"WalletConnect",iconURL:"ipfs://QmX58KPRaTC9JYZ7KriuBzeoEaV2P9eZcA3qbFnTHZazKw/wallet-connect.svg"});const vn="c6634ad2d97b74baf15ff556016830c251050e6c36b9da508ce3ec80095d3dc1",kI=y.instanceof(File),XD=y.union([kI,y.object({data:y.union([kI,y.string()]),name:y.string()})]),fn=y.union([XD,y.string()]),sv=1e4,JD=y.union([y.array(y.number()),y.string()]),eL=y.union([y.string(),y.number(),y.bigint(),y.custom(t=>b.isBigNumber(t)),y.custom(t=>$n.isBN(t))]).transform(t=>{let e=$n.isBN(t)?new $n(t).toString():b.from(t).toString();return b.from(e)});eL.transform(t=>t.toString());const ov=y.union([y.bigint(),y.custom(t=>b.isBigNumber(t)),y.custom(t=>$n.isBN(t))]).transform(t=>$n.isBN(t)?new $n(t).toString():b.from(t).toString()),oa=y.number().max(sv,"Cannot exceed 100%").min(0,"Cannot be below 0%"),tL=y.number().max(100,"Cannot exceed 100%").min(0,"Cannot be below 0%"),nL=y.union([y.string().regex(/^([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/,"Invalid hex color"),y.string().regex(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/,"Invalid hex color").transform(t=>t.replace("#","")),y.string().length(0)]),Ne=y.union([y.string().regex(/^([0-9]+\.?[0-9]*|\.[0-9]+)$/,"Invalid amount"),y.number().min(0,"Amount cannot be negative")]).transform(t=>typeof t=="number"?t.toString():t),Jn=y.union([Ne,y.literal("unlimited")]).default("unlimited"),cv=y.date().transform(t=>b.from(Math.floor(t.getTime()/1e3)));cv.default(new Date(0));cv.default(new Date(Date.now()+1e3*60*60*24*365*10));function aL(t,e){if(typeof t!="object"||t===null)return t;var n=t[Symbol.toPrimitive];if(n!==void 0){var a=n.call(t,e||"default");if(typeof a!="object")return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(t)}function rL(t){var e=aL(t,"string");return typeof e=="symbol"?e:String(e)}function l(t,e,n){return e=rL(e),e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}const EI=y.object({}).catchall(y.union([ov,y.unknown()])),xI=y.union([y.array(EI),EI]).optional().nullable(),Lt=y.object({name:y.union([y.string(),y.number()]).optional().nullable(),description:y.string().nullable().optional().nullable(),image:fn.nullable().optional(),external_url:fn.nullable().optional(),animation_url:fn.optional().nullable(),background_color:nL.optional().nullable(),properties:xI,attributes:xI}).catchall(y.union([ov,y.unknown()])),ca=y.union([Lt,y.string()]),D1=Lt.extend({id:y.string(),uri:y.string(),image:y.string().nullable().optional(),external_url:y.string().nullable().optional(),animation_url:y.string().nullable().optional()}),ot=100;y.object({start:y.number().default(0),count:y.number().default(ot)}).default({start:0,count:ot});const pv=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{components:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"gas",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct Forwarder.ForwardRequest",name:"req",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"execute",outputs:[{internalType:"bool",name:"",type:"bool"},{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"}],name:"getNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"gas",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct Forwarder.ForwardRequest",name:"req",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"verify",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],iL=[{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burnFrom",outputs:[],stateMutability:"nonpayable",type:"function"}],lv=[{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],indexed:!1,internalType:"struct IClaimCondition.ClaimCondition[]",name:"claimConditions",type:"tuple[]"},{indexed:!1,internalType:"bool",name:"resetEligibility",type:"bool"}],name:"ClaimConditionsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"claimConditionIndex",type:"uint256"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDrop.AllowlistProof",name:"allowlistProof",type:"tuple"},{internalType:"bytes",name:"data",type:"bytes"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],internalType:"struct IClaimCondition.ClaimCondition[]",name:"phases",type:"tuple[]"},{internalType:"bool",name:"resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"}],sL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],indexed:!1,internalType:"struct IDropClaimCondition_V2.ClaimCondition[]",name:"claimConditions",type:"tuple[]"}],name:"ClaimConditionsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"prevURI",type:"string"},{indexed:!1,internalType:"string",name:"newURI",type:"string"}],name:"ContractURIUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"maxTotalSupply",type:"uint256"}],name:"MaxTotalSupplyUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"count",type:"uint256"}],name:"MaxWalletClaimCountUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"claimConditionIndex",type:"uint256"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"wallet",type:"address"},{indexed:!1,internalType:"uint256",name:"count",type:"uint256"}],name:"WalletClaimCountUpdated",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"bytes32[]",name:"proofs",type:"bytes32[]"},{internalType:"uint256",name:"proofMaxQuantityPerTransaction",type:"uint256"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDropClaimCondition_V2.ClaimCondition[]",name:"phases",type:"tuple[]"},{internalType:"bool",name:"resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],dv=[{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],indexed:!1,internalType:"struct IClaimCondition.ClaimCondition",name:"condition",type:"tuple"},{indexed:!1,internalType:"bool",name:"resetEligibility",type:"bool"}],name:"ClaimConditionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDropSinglePhase.AllowlistProof",name:"allowlistProof",type:"tuple"},{internalType:"bytes",name:"data",type:"bytes"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],internalType:"struct IClaimCondition.ClaimCondition",name:"phase",type:"tuple"},{internalType:"bool",name:"resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"}],uv=[{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],indexed:!1,internalType:"struct IClaimCondition_V1.ClaimCondition",name:"condition",type:"tuple"},{indexed:!1,internalType:"bool",name:"resetEligibility",type:"bool"}],name:"ClaimConditionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"maxQuantityInAllowlist",type:"uint256"}],internalType:"struct IDropSinglePhase_V1.AllowlistProof",name:"allowlistProof",type:"tuple"},{internalType:"bytes",name:"data",type:"bytes"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IClaimCondition_V1.ClaimCondition",name:"phase",type:"tuple"},{internalType:"bool",name:"resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"}],Ee=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"who",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],oL=[{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"}],mv=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{indexed:!1,internalType:"uint256",name:"quantityMinted",type:"uint256"}],name:"TokensMinted",type:"event"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mintTo",outputs:[],stateMutability:"nonpayable",type:"function"}],L1=[{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"}],cL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"signer",type:"address"},{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],indexed:!1,internalType:"struct ISignatureMintERC20.MintRequest",name:"mintRequest",type:"tuple"}],name:"TokensMintedWithSignature",type:"event"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ISignatureMintERC20.MintRequest",name:"req",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"mintWithSignature",outputs:[{internalType:"address",name:"signer",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ISignatureMintERC20.MintRequest",name:"req",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"verify",outputs:[{internalType:"bool",name:"success",type:"bool"},{internalType:"address",name:"signer",type:"address"}],stateMutability:"view",type:"function"}],pL=[{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"}],lL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"}],name:"verifyClaim",outputs:[],stateMutability:"view",type:"function"}],hv=[{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"index",type:"uint256"},{indexed:!1,internalType:"string",name:"revealedURI",type:"string"}],name:"TokenURIRevealed",type:"event"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"key",type:"bytes"}],name:"encryptDecrypt",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"uint256",name:"identifier",type:"uint256"},{internalType:"bytes",name:"key",type:"bytes"}],name:"reveal",outputs:[{internalType:"string",name:"revealedURI",type:"string"}],stateMutability:"nonpayable",type:"function"}],dL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],indexed:!1,internalType:"struct IDropClaimCondition_V2.ClaimCondition[]",name:"claimConditions",type:"tuple[]"}],name:"ClaimConditionsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"maxTotalSupply",type:"uint256"}],name:"MaxTotalSupplyUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"count",type:"uint256"}],name:"MaxWalletClaimCountUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"endTokenId",type:"uint256"},{indexed:!1,internalType:"string",name:"revealedURI",type:"string"}],name:"NFTRevealed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"claimConditionIndex",type:"uint256"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTokenId",type:"uint256"},{indexed:!1,internalType:"string",name:"baseURI",type:"string"},{indexed:!1,internalType:"bytes",name:"encryptedBaseURI",type:"bytes"}],name:"TokensLazyMinted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"wallet",type:"address"},{indexed:!1,internalType:"uint256",name:"count",type:"uint256"}],name:"WalletClaimCountUpdated",type:"event"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"bytes32[]",name:"proofs",type:"bytes32[]"},{internalType:"uint256",name:"proofMaxQuantityPerTransaction",type:"uint256"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"operator",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"string",name:"baseURIForTokens",type:"string"},{internalType:"bytes",name:"encryptedBaseURI",type:"bytes"}],name:"lazyMint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"owner",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"_approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDropClaimCondition_V2.ClaimCondition[]",name:"phases",type:"tuple[]"},{internalType:"bool",name:"resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"}],xe=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"_approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"}],uL=[{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],mL=[{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],F0=[{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTokenId",type:"uint256"},{indexed:!1,internalType:"string",name:"baseURI",type:"string"},{indexed:!1,internalType:"bytes",name:"encryptedBaseURI",type:"bytes"}],name:"TokensLazyMinted",type:"event"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"string",name:"baseURIForTokens",type:"string"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"lazyMint",outputs:[{internalType:"uint256",name:"batchId",type:"uint256"}],stateMutability:"nonpayable",type:"function"}],yv=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenIdMinted",type:"uint256"},{indexed:!1,internalType:"string",name:"uri",type:"string"}],name:"TokensMinted",type:"event"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"string",name:"uri",type:"string"}],name:"mintTo",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"}],hL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"signer",type:"address"},{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenIdMinted",type:"uint256"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],indexed:!1,internalType:"struct ISignatureMintERC721.MintRequest",name:"mintRequest",type:"tuple"}],name:"TokensMintedWithSignature",type:"event"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ISignatureMintERC721.MintRequest",name:"req",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"mintWithSignature",outputs:[{internalType:"address",name:"signer",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ISignatureMintERC721.MintRequest",name:"req",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"verify",outputs:[{internalType:"bool",name:"success",type:"bool"},{internalType:"address",name:"signer",type:"address"}],stateMutability:"view",type:"function"}],yL=[{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ITokenERC721.MintRequest",name:"_req",type:"tuple"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"mintWithSignature",outputs:[{internalType:"uint256",name:"tokenIdMinted",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ITokenERC721.MintRequest",name:"_req",type:"tuple"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"verify",outputs:[{internalType:"bool",name:"",type:"bool"},{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}],fL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"string",name:"tier",type:"string"},{indexed:!0,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTokenId",type:"uint256"},{indexed:!1,internalType:"string",name:"baseURI",type:"string"},{indexed:!1,internalType:"bytes",name:"encryptedBaseURI",type:"bytes"}],name:"TokensLazyMinted",type:"event"},{inputs:[],name:"getBaseURICount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"getBatchIdAtIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMetadataForAllTiers",outputs:[{components:[{internalType:"string",name:"tier",type:"string"},{components:[{internalType:"uint256",name:"startIdInclusive",type:"uint256"},{internalType:"uint256",name:"endIdNonInclusive",type:"uint256"}],internalType:"struct LazyMintWithTier.TokenRange[]",name:"ranges",type:"tuple[]"},{internalType:"string[]",name:"baseURIs",type:"string[]"}],internalType:"struct LazyMintWithTier.TierMetadata[]",name:"metadataForAllTiers",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"string",name:"_baseURIForTokens",type:"string"},{internalType:"string",name:"_tier",type:"string"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"lazyMint",outputs:[{internalType:"uint256",name:"batchId",type:"uint256"}],stateMutability:"nonpayable",type:"function"}],gL=[{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"burnBatch",outputs:[],stateMutability:"nonpayable",type:"function"}],bL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_quantity",type:"uint256"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_quantity",type:"uint256"}],name:"verifyClaim",outputs:[],stateMutability:"view",type:"function"}],TL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],indexed:!1,internalType:"struct IClaimCondition.ClaimCondition[]",name:"claimConditions",type:"tuple[]"},{indexed:!1,internalType:"bool",name:"resetEligibility",type:"bool"}],name:"ClaimConditionsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"claimConditionIndex",type:"uint256"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDrop1155.AllowlistProof",name:"allowlistProof",type:"tuple"},{internalType:"bytes",name:"data",type:"bytes"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],internalType:"struct IClaimCondition.ClaimCondition[]",name:"phases",type:"tuple[]"},{internalType:"bool",name:"resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"}],fv=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],indexed:!1,internalType:"struct IDropClaimCondition_V2.ClaimCondition[]",name:"claimConditions",type:"tuple[]"}],name:"ClaimConditionsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxTotalSupply",type:"uint256"}],name:"MaxTotalSupplyUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"count",type:"uint256"}],name:"MaxWalletClaimCountUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"saleRecipient",type:"address"}],name:"SaleRecipientForTokenUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"claimConditionIndex",type:"uint256"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTokenId",type:"uint256"},{indexed:!1,internalType:"string",name:"baseURI",type:"string"}],name:"TokensLazyMinted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256[]",name:"ids",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"TransferBatch",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"TransferSingle",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"value",type:"string"},{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"URI",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"wallet",type:"address"},{indexed:!1,internalType:"uint256",name:"count",type:"uint256"}],name:"WalletClaimCountUpdated",type:"event"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"ids",type:"uint256[]"}],name:"balanceOfBatch",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"bytes32[]",name:"proofs",type:"bytes32[]"},{internalType:"uint256",name:"proofMaxQuantityPerTransaction",type:"uint256"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"string",name:"baseURIForTokens",type:"string"}],name:"lazyMint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeBatchTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDropClaimCondition_V2.ClaimCondition[]",name:"phases",type:"tuple[]"},{internalType:"bool",name:"resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],wL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],indexed:!1,internalType:"struct IClaimCondition.ClaimCondition",name:"condition",type:"tuple"},{indexed:!1,internalType:"bool",name:"resetEligibility",type:"bool"}],name:"ClaimConditionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDropSinglePhase1155.AllowlistProof",name:"allowlistProof",type:"tuple"},{internalType:"bytes",name:"data",type:"bytes"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],internalType:"struct IClaimCondition.ClaimCondition",name:"phase",type:"tuple"},{internalType:"bool",name:"resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"}],IL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],indexed:!1,internalType:"struct IClaimCondition_V1.ClaimCondition",name:"condition",type:"tuple"},{indexed:!1,internalType:"bool",name:"resetEligibility",type:"bool"}],name:"ClaimConditionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"maxQuantityInAllowlist",type:"uint256"}],internalType:"struct IDropSinglePhase1155_V1.AllowlistProof",name:"allowlistProof",type:"tuple"},{internalType:"bytes",name:"data",type:"bytes"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IClaimCondition_V1.ClaimCondition",name:"phase",type:"tuple"},{internalType:"bool",name:"resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"}],De=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_owner",type:"address"},{indexed:!0,internalType:"address",name:"_operator",type:"address"},{indexed:!1,internalType:"bool",name:"_approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_operator",type:"address"},{indexed:!0,internalType:"address",name:"_from",type:"address"},{indexed:!0,internalType:"address",name:"_to",type:"address"},{indexed:!1,internalType:"uint256[]",name:"_ids",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"_values",type:"uint256[]"}],name:"TransferBatch",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_operator",type:"address"},{indexed:!0,internalType:"address",name:"_from",type:"address"},{indexed:!0,internalType:"address",name:"_to",type:"address"},{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_value",type:"uint256"}],name:"TransferSingle",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"_value",type:"string"},{indexed:!0,internalType:"uint256",name:"_id",type:"uint256"}],name:"URI",type:"event"},{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"uint256",name:"_id",type:"uint256"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"_owners",type:"address[]"},{internalType:"uint256[]",name:"_ids",type:"uint256[]"}],name:"balanceOfBatch",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256[]",name:"_ids",type:"uint256[]"},{internalType:"uint256[]",name:"_values",type:"uint256[]"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeBatchTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_id",type:"uint256"},{internalType:"uint256",name:"_value",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_operator",type:"address"},{internalType:"bool",name:"_approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"}],vL=[{inputs:[],name:"nextTokenIdToMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],gv=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenIdMinted",type:"uint256"},{indexed:!1,internalType:"string",name:"uri",type:"string"},{indexed:!1,internalType:"uint256",name:"quantityMinted",type:"uint256"}],name:"TokensMinted",type:"event"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mintTo",outputs:[],stateMutability:"nonpayable",type:"function"}],CL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"signer",type:"address"},{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenIdMinted",type:"uint256"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],indexed:!1,internalType:"struct ISignatureMintERC1155.MintRequest",name:"mintRequest",type:"tuple"}],name:"TokensMintedWithSignature",type:"event"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ISignatureMintERC1155.MintRequest",name:"req",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"mintWithSignature",outputs:[{internalType:"address",name:"signer",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ISignatureMintERC1155.MintRequest",name:"req",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"verify",outputs:[{internalType:"bool",name:"success",type:"bool"},{internalType:"address",name:"signer",type:"address"}],stateMutability:"view",type:"function"}],kL=[{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],EL=[{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"prevURI",type:"string"},{indexed:!1,internalType:"string",name:"newURI",type:"string"}],name:"AppURIUpdated",type:"event"},{inputs:[],name:"appURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setAppURI",outputs:[],stateMutability:"nonpayable",type:"function"}],xL=[{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"prevURI",type:"string"},{indexed:!1,internalType:"string",name:"newURI",type:"string"}],name:"ContractURIUpdated",type:"event"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"}],RL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"listingId",type:"uint256"},{indexed:!0,internalType:"address",name:"buyer",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"BuyerApprovedForListing",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"listingCreator",type:"address"},{indexed:!0,internalType:"uint256",name:"listingId",type:"uint256"}],name:"CancelledListing",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"listingId",type:"uint256"},{indexed:!0,internalType:"address",name:"currency",type:"address"},{indexed:!1,internalType:"uint256",name:"pricePerToken",type:"uint256"}],name:"CurrencyApprovedForListing",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"listingCreator",type:"address"},{indexed:!0,internalType:"uint256",name:"listingId",type:"uint256"},{indexed:!0,internalType:"address",name:"assetContract",type:"address"},{components:[{internalType:"uint256",name:"listingId",type:"uint256"},{internalType:"address",name:"listingCreator",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"uint128",name:"startTimestamp",type:"uint128"},{internalType:"uint128",name:"endTimestamp",type:"uint128"},{internalType:"bool",name:"reserved",type:"bool"},{internalType:"enum IDirectListings.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IDirectListings.Status",name:"status",type:"uint8"}],indexed:!1,internalType:"struct IDirectListings.Listing",name:"listing",type:"tuple"}],name:"NewListing",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"listingCreator",type:"address"},{indexed:!0,internalType:"uint256",name:"listingId",type:"uint256"},{indexed:!0,internalType:"address",name:"assetContract",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"buyer",type:"address"},{indexed:!1,internalType:"uint256",name:"quantityBought",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalPricePaid",type:"uint256"}],name:"NewSale",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"listingCreator",type:"address"},{indexed:!0,internalType:"uint256",name:"listingId",type:"uint256"},{indexed:!0,internalType:"address",name:"assetContract",type:"address"},{components:[{internalType:"uint256",name:"listingId",type:"uint256"},{internalType:"address",name:"listingCreator",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"uint128",name:"startTimestamp",type:"uint128"},{internalType:"uint128",name:"endTimestamp",type:"uint128"},{internalType:"bool",name:"reserved",type:"bool"},{internalType:"enum IDirectListings.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IDirectListings.Status",name:"status",type:"uint8"}],indexed:!1,internalType:"struct IDirectListings.Listing",name:"listing",type:"tuple"}],name:"UpdatedListing",type:"event"},{inputs:[{internalType:"uint256",name:"_listingId",type:"uint256"},{internalType:"address",name:"_buyer",type:"address"},{internalType:"bool",name:"_toApprove",type:"bool"}],name:"approveBuyerForListing",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_listingId",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerTokenInCurrency",type:"uint256"}],name:"approveCurrencyForListing",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_listingId",type:"uint256"},{internalType:"address",name:"_buyFor",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_expectedTotalPrice",type:"uint256"}],name:"buyFromListing",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"_listingId",type:"uint256"}],name:"cancelListing",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"uint128",name:"startTimestamp",type:"uint128"},{internalType:"uint128",name:"endTimestamp",type:"uint128"},{internalType:"bool",name:"reserved",type:"bool"}],internalType:"struct IDirectListings.ListingParameters",name:"_params",type:"tuple"}],name:"createListing",outputs:[{internalType:"uint256",name:"listingId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_startId",type:"uint256"},{internalType:"uint256",name:"_endId",type:"uint256"}],name:"getAllListings",outputs:[{components:[{internalType:"uint256",name:"listingId",type:"uint256"},{internalType:"address",name:"listingCreator",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"uint128",name:"startTimestamp",type:"uint128"},{internalType:"uint128",name:"endTimestamp",type:"uint128"},{internalType:"bool",name:"reserved",type:"bool"},{internalType:"enum IDirectListings.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IDirectListings.Status",name:"status",type:"uint8"}],internalType:"struct IDirectListings.Listing[]",name:"listings",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_startId",type:"uint256"},{internalType:"uint256",name:"_endId",type:"uint256"}],name:"getAllValidListings",outputs:[{components:[{internalType:"uint256",name:"listingId",type:"uint256"},{internalType:"address",name:"listingCreator",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"uint128",name:"startTimestamp",type:"uint128"},{internalType:"uint128",name:"endTimestamp",type:"uint128"},{internalType:"bool",name:"reserved",type:"bool"},{internalType:"enum IDirectListings.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IDirectListings.Status",name:"status",type:"uint8"}],internalType:"struct IDirectListings.Listing[]",name:"listings",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_listingId",type:"uint256"}],name:"getListing",outputs:[{components:[{internalType:"uint256",name:"listingId",type:"uint256"},{internalType:"address",name:"listingCreator",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"uint128",name:"startTimestamp",type:"uint128"},{internalType:"uint128",name:"endTimestamp",type:"uint128"},{internalType:"bool",name:"reserved",type:"bool"},{internalType:"enum IDirectListings.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IDirectListings.Status",name:"status",type:"uint8"}],internalType:"struct IDirectListings.Listing",name:"listing",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalListings",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_listingId",type:"uint256"},{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"uint128",name:"startTimestamp",type:"uint128"},{internalType:"uint128",name:"endTimestamp",type:"uint128"},{internalType:"bool",name:"reserved",type:"bool"}],internalType:"struct IDirectListings.ListingParameters",name:"_params",type:"tuple"}],name:"updateListing",outputs:[],stateMutability:"nonpayable",type:"function"}],AL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"auctionId",type:"uint256"},{indexed:!0,internalType:"address",name:"assetContract",type:"address"},{indexed:!0,internalType:"address",name:"closer",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"auctionCreator",type:"address"},{indexed:!1,internalType:"address",name:"winningBidder",type:"address"}],name:"AuctionClosed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"auctionCreator",type:"address"},{indexed:!0,internalType:"uint256",name:"auctionId",type:"uint256"}],name:"CancelledAuction",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"auctionCreator",type:"address"},{indexed:!0,internalType:"uint256",name:"auctionId",type:"uint256"},{indexed:!0,internalType:"address",name:"assetContract",type:"address"},{components:[{internalType:"uint256",name:"auctionId",type:"uint256"},{internalType:"address",name:"auctionCreator",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"minimumBidAmount",type:"uint256"},{internalType:"uint256",name:"buyoutBidAmount",type:"uint256"},{internalType:"uint64",name:"timeBufferInSeconds",type:"uint64"},{internalType:"uint64",name:"bidBufferBps",type:"uint64"},{internalType:"uint64",name:"startTimestamp",type:"uint64"},{internalType:"uint64",name:"endTimestamp",type:"uint64"},{internalType:"enum IEnglishAuctions.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IEnglishAuctions.Status",name:"status",type:"uint8"}],indexed:!1,internalType:"struct IEnglishAuctions.Auction",name:"auction",type:"tuple"}],name:"NewAuction",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"auctionId",type:"uint256"},{indexed:!0,internalType:"address",name:"bidder",type:"address"},{indexed:!0,internalType:"address",name:"assetContract",type:"address"},{indexed:!1,internalType:"uint256",name:"bidAmount",type:"uint256"},{components:[{internalType:"uint256",name:"auctionId",type:"uint256"},{internalType:"address",name:"auctionCreator",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"minimumBidAmount",type:"uint256"},{internalType:"uint256",name:"buyoutBidAmount",type:"uint256"},{internalType:"uint64",name:"timeBufferInSeconds",type:"uint64"},{internalType:"uint64",name:"bidBufferBps",type:"uint64"},{internalType:"uint64",name:"startTimestamp",type:"uint64"},{internalType:"uint64",name:"endTimestamp",type:"uint64"},{internalType:"enum IEnglishAuctions.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IEnglishAuctions.Status",name:"status",type:"uint8"}],indexed:!1,internalType:"struct IEnglishAuctions.Auction",name:"auction",type:"tuple"}],name:"NewBid",type:"event"},{inputs:[{internalType:"uint256",name:"_auctionId",type:"uint256"},{internalType:"uint256",name:"_bidAmount",type:"uint256"}],name:"bidInAuction",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"_auctionId",type:"uint256"}],name:"cancelAuction",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_auctionId",type:"uint256"}],name:"collectAuctionPayout",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_auctionId",type:"uint256"}],name:"collectAuctionTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"minimumBidAmount",type:"uint256"},{internalType:"uint256",name:"buyoutBidAmount",type:"uint256"},{internalType:"uint64",name:"timeBufferInSeconds",type:"uint64"},{internalType:"uint64",name:"bidBufferBps",type:"uint64"},{internalType:"uint64",name:"startTimestamp",type:"uint64"},{internalType:"uint64",name:"endTimestamp",type:"uint64"}],internalType:"struct IEnglishAuctions.AuctionParameters",name:"_params",type:"tuple"}],name:"createAuction",outputs:[{internalType:"uint256",name:"auctionId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_startId",type:"uint256"},{internalType:"uint256",name:"_endId",type:"uint256"}],name:"getAllAuctions",outputs:[{components:[{internalType:"uint256",name:"auctionId",type:"uint256"},{internalType:"address",name:"auctionCreator",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"minimumBidAmount",type:"uint256"},{internalType:"uint256",name:"buyoutBidAmount",type:"uint256"},{internalType:"uint64",name:"timeBufferInSeconds",type:"uint64"},{internalType:"uint64",name:"bidBufferBps",type:"uint64"},{internalType:"uint64",name:"startTimestamp",type:"uint64"},{internalType:"uint64",name:"endTimestamp",type:"uint64"},{internalType:"enum IEnglishAuctions.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IEnglishAuctions.Status",name:"status",type:"uint8"}],internalType:"struct IEnglishAuctions.Auction[]",name:"auctions",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_startId",type:"uint256"},{internalType:"uint256",name:"_endId",type:"uint256"}],name:"getAllValidAuctions",outputs:[{components:[{internalType:"uint256",name:"auctionId",type:"uint256"},{internalType:"address",name:"auctionCreator",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"minimumBidAmount",type:"uint256"},{internalType:"uint256",name:"buyoutBidAmount",type:"uint256"},{internalType:"uint64",name:"timeBufferInSeconds",type:"uint64"},{internalType:"uint64",name:"bidBufferBps",type:"uint64"},{internalType:"uint64",name:"startTimestamp",type:"uint64"},{internalType:"uint64",name:"endTimestamp",type:"uint64"},{internalType:"enum IEnglishAuctions.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IEnglishAuctions.Status",name:"status",type:"uint8"}],internalType:"struct IEnglishAuctions.Auction[]",name:"auctions",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_auctionId",type:"uint256"}],name:"getAuction",outputs:[{components:[{internalType:"uint256",name:"auctionId",type:"uint256"},{internalType:"address",name:"auctionCreator",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"minimumBidAmount",type:"uint256"},{internalType:"uint256",name:"buyoutBidAmount",type:"uint256"},{internalType:"uint64",name:"timeBufferInSeconds",type:"uint64"},{internalType:"uint64",name:"bidBufferBps",type:"uint64"},{internalType:"uint64",name:"startTimestamp",type:"uint64"},{internalType:"uint64",name:"endTimestamp",type:"uint64"},{internalType:"enum IEnglishAuctions.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IEnglishAuctions.Status",name:"status",type:"uint8"}],internalType:"struct IEnglishAuctions.Auction",name:"auction",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_auctionId",type:"uint256"}],name:"getWinningBid",outputs:[{internalType:"address",name:"bidder",type:"address"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"bidAmount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_auctionId",type:"uint256"}],name:"isAuctionExpired",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_auctionId",type:"uint256"},{internalType:"uint256",name:"_bidAmount",type:"uint256"}],name:"isNewWinningBid",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],PL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"offeror",type:"address"},{indexed:!0,internalType:"uint256",name:"offerId",type:"uint256"},{indexed:!0,internalType:"address",name:"assetContract",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"seller",type:"address"},{indexed:!1,internalType:"uint256",name:"quantityBought",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalPricePaid",type:"uint256"}],name:"AcceptedOffer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"offeror",type:"address"},{indexed:!0,internalType:"uint256",name:"offerId",type:"uint256"}],name:"CancelledOffer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"offeror",type:"address"},{indexed:!0,internalType:"uint256",name:"offerId",type:"uint256"},{indexed:!0,internalType:"address",name:"assetContract",type:"address"},{components:[{internalType:"uint256",name:"offerId",type:"uint256"},{internalType:"address",name:"offeror",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"totalPrice",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"},{internalType:"enum IOffers.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IOffers.Status",name:"status",type:"uint8"}],indexed:!1,internalType:"struct IOffers.Offer",name:"offer",type:"tuple"}],name:"NewOffer",type:"event"},{inputs:[{internalType:"uint256",name:"_offerId",type:"uint256"}],name:"acceptOffer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_offerId",type:"uint256"}],name:"cancelOffer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_startId",type:"uint256"},{internalType:"uint256",name:"_endId",type:"uint256"}],name:"getAllOffers",outputs:[{components:[{internalType:"uint256",name:"offerId",type:"uint256"},{internalType:"address",name:"offeror",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"totalPrice",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"},{internalType:"enum IOffers.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IOffers.Status",name:"status",type:"uint8"}],internalType:"struct IOffers.Offer[]",name:"offers",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_startId",type:"uint256"},{internalType:"uint256",name:"_endId",type:"uint256"}],name:"getAllValidOffers",outputs:[{components:[{internalType:"uint256",name:"offerId",type:"uint256"},{internalType:"address",name:"offeror",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"totalPrice",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"},{internalType:"enum IOffers.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IOffers.Status",name:"status",type:"uint8"}],internalType:"struct IOffers.Offer[]",name:"offers",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_offerId",type:"uint256"}],name:"getOffer",outputs:[{components:[{internalType:"uint256",name:"offerId",type:"uint256"},{internalType:"address",name:"offeror",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"totalPrice",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"},{internalType:"enum IOffers.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IOffers.Status",name:"status",type:"uint8"}],internalType:"struct IOffers.Offer",name:"offer",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"totalPrice",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],internalType:"struct IOffers.OfferParams",name:"_params",type:"tuple"}],name:"makeOffer",outputs:[{internalType:"uint256",name:"offerId",type:"uint256"}],stateMutability:"nonpayable",type:"function"}],bv=[{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"packId",type:"uint256"},{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"totalPacksCreated",type:"uint256"}],name:"PackCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"opener",type:"address"},{indexed:!0,internalType:"uint256",name:"packId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountToOpen",type:"uint256"},{indexed:!1,internalType:"uint256",name:"requestId",type:"uint256"}],name:"PackOpenRequested",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"packId",type:"uint256"},{indexed:!0,internalType:"address",name:"opener",type:"address"},{indexed:!1,internalType:"uint256",name:"numOfPacksOpened",type:"uint256"},{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"enum ITokenBundle.TokenType",name:"tokenType",type:"uint8"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],indexed:!1,internalType:"struct ITokenBundle.Token[]",name:"rewardUnitsDistributed",type:"tuple[]"}],name:"PackOpened",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"packId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"requestId",type:"uint256"}],name:"PackRandomnessFulfilled",type:"event"},{inputs:[{internalType:"address",name:"_opener",type:"address"}],name:"canClaimRewards",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"claimRewards",outputs:[{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"enum ITokenBundle.TokenType",name:"tokenType",type:"uint8"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],internalType:"struct ITokenBundle.Token[]",name:"rewardUnits",type:"tuple[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"enum ITokenBundle.TokenType",name:"tokenType",type:"uint8"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],internalType:"struct ITokenBundle.Token[]",name:"contents",type:"tuple[]"},{internalType:"uint256[]",name:"numOfRewardUnits",type:"uint256[]"},{internalType:"string",name:"packUri",type:"string"},{internalType:"uint128",name:"openStartTimestamp",type:"uint128"},{internalType:"uint128",name:"amountDistributedPerOpen",type:"uint128"},{internalType:"address",name:"recipient",type:"address"}],name:"createPack",outputs:[{internalType:"uint256",name:"packId",type:"uint256"},{internalType:"uint256",name:"packTotalSupply",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"packId",type:"uint256"},{internalType:"uint256",name:"amountToOpen",type:"uint256"}],name:"openPack",outputs:[{internalType:"uint256",name:"requestId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_packId",type:"uint256"},{internalType:"uint256",name:"_amountToOpen",type:"uint256"},{internalType:"uint32",name:"_callBackGasLimit",type:"uint32"}],name:"openPackAndClaimRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"}],ML=[{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"}],_L=[{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"}],SL=[{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"}],WL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"}],name:"PrimarySaleRecipientUpdated",type:"event"},{inputs:[],name:"primarySaleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setPrimarySaleRecipient",outputs:[],stateMutability:"nonpayable",type:"function"}],BL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newRoyaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"newRoyaltyBps",type:"uint256"}],name:"DefaultRoyalty",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"royaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"royaltyBps",type:"uint256"}],name:"RoyaltyForToken",type:"event"},{inputs:[],name:"getDefaultRoyaltyInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getRoyaltyInfoForToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"salePrice",type:"uint256"}],name:"royaltyInfo",outputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"royaltyAmount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint256",name:"_royaltyBps",type:"uint256"}],name:"setDefaultRoyaltyInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"bps",type:"uint256"}],name:"setRoyaltyInfoForToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],NL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"prevOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerUpdated",type:"event"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function"}],DL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"accountAdmin",type:"address"}],name:"AccountCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"signer",type:"address"}],name:"SignerAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"signer",type:"address"}],name:"SignerRemoved",type:"event"},{inputs:[],name:"accountImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"signer",type:"address"}],name:"addSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"admin",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"createAccount",outputs:[{internalType:"address",name:"account",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"signer",type:"address"}],name:"getAccountsOfSigner",outputs:[{internalType:"address[]",name:"accounts",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"adminSigner",type:"address"}],name:"getAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getSignersOfAccount",outputs:[{internalType:"address[]",name:"signers",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"signer",type:"address"}],name:"removeSigner",outputs:[],stateMutability:"nonpayable",type:"function"}],LL=[{inputs:[{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"callData",type:"bytes"},{internalType:"uint256",name:"callGasLimit",type:"uint256"},{internalType:"uint256",name:"verificationGasLimit",type:"uint256"},{internalType:"uint256",name:"preVerificationGas",type:"uint256"},{internalType:"uint256",name:"maxFeePerGas",type:"uint256"},{internalType:"uint256",name:"maxPriorityFeePerGas",type:"uint256"},{internalType:"bytes",name:"paymasterAndData",type:"bytes"},{internalType:"bytes",name:"signature",type:"bytes"}],internalType:"struct UserOperation",name:"userOp",type:"tuple"},{internalType:"bytes32",name:"userOpHash",type:"bytes32"},{internalType:"uint256",name:"missingAccountFunds",type:"uint256"}],name:"validateUserOp",outputs:[{internalType:"uint256",name:"validationData",type:"uint256"}],stateMutability:"nonpayable",type:"function"}],Tv=[{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"}],rr=[{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],UL=[{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}],FL=[{inputs:[{internalType:"uint256",name:"_id",type:"uint256"}],name:"uri",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}],HL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"index",type:"uint256"},{indexed:!1,internalType:"string",name:"revealedURI",type:"string"}],name:"TokenURIRevealed",type:"event"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"key",type:"bytes"}],name:"encryptDecrypt",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"uint256",name:"identifier",type:"uint256"}],name:"encryptedBaseURI",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"identifier",type:"uint256"},{internalType:"bytes",name:"key",type:"bytes"}],name:"reveal",outputs:[{internalType:"string",name:"revealedURI",type:"string"}],stateMutability:"nonpayable",type:"function"}],KL=[{inputs:[{internalType:"address",name:"_trustedForwarder",type:"address"},{internalType:"contract IContractPublisher",name:"_prevPublisher",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"publisher",type:"address"},{components:[{internalType:"string",name:"contractId",type:"string"},{internalType:"uint256",name:"publishTimestamp",type:"uint256"},{internalType:"string",name:"publishMetadataUri",type:"string"},{internalType:"bytes32",name:"bytecodeHash",type:"bytes32"},{internalType:"address",name:"implementation",type:"address"}],indexed:!1,internalType:"struct IContractPublisher.CustomContractInstance",name:"publishedContract",type:"tuple"}],name:"ContractPublished",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"publisher",type:"address"},{indexed:!0,internalType:"string",name:"contractId",type:"string"}],name:"ContractUnpublished",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"isPaused",type:"bool"}],name:"Paused",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"publisher",type:"address"},{indexed:!1,internalType:"string",name:"prevURI",type:"string"},{indexed:!1,internalType:"string",name:"newURI",type:"string"}],name:"PublisherProfileUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_publisher",type:"address"}],name:"getAllPublishedContracts",outputs:[{components:[{internalType:"string",name:"contractId",type:"string"},{internalType:"uint256",name:"publishTimestamp",type:"uint256"},{internalType:"string",name:"publishMetadataUri",type:"string"},{internalType:"bytes32",name:"bytecodeHash",type:"bytes32"},{internalType:"address",name:"implementation",type:"address"}],internalType:"struct IContractPublisher.CustomContractInstance[]",name:"published",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_publisher",type:"address"},{internalType:"string",name:"_contractId",type:"string"}],name:"getPublishedContract",outputs:[{components:[{internalType:"string",name:"contractId",type:"string"},{internalType:"uint256",name:"publishTimestamp",type:"uint256"},{internalType:"string",name:"publishMetadataUri",type:"string"},{internalType:"bytes32",name:"bytecodeHash",type:"bytes32"},{internalType:"address",name:"implementation",type:"address"}],internalType:"struct IContractPublisher.CustomContractInstance",name:"published",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_publisher",type:"address"},{internalType:"string",name:"_contractId",type:"string"}],name:"getPublishedContractVersions",outputs:[{components:[{internalType:"string",name:"contractId",type:"string"},{internalType:"uint256",name:"publishTimestamp",type:"uint256"},{internalType:"string",name:"publishMetadataUri",type:"string"},{internalType:"bytes32",name:"bytecodeHash",type:"bytes32"},{internalType:"address",name:"implementation",type:"address"}],internalType:"struct IContractPublisher.CustomContractInstance[]",name:"published",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"compilerMetadataUri",type:"string"}],name:"getPublishedUriFromCompilerUri",outputs:[{internalType:"string[]",name:"publishedMetadataUris",type:"string[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"publisher",type:"address"}],name:"getPublisherProfileUri",outputs:[{internalType:"string",name:"uri",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"isPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"prevPublisher",outputs:[{internalType:"contract IContractPublisher",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_publisher",type:"address"},{internalType:"string",name:"_contractId",type:"string"},{internalType:"string",name:"_publishMetadataUri",type:"string"},{internalType:"string",name:"_compilerMetadataUri",type:"string"},{internalType:"bytes32",name:"_bytecodeHash",type:"bytes32"},{internalType:"address",name:"_implementation",type:"address"}],name:"publishContract",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_pause",type:"bool"}],name:"setPause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"publisher",type:"address"},{internalType:"string",name:"uri",type:"string"}],name:"setPublisherProfileUri",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_publisher",type:"address"},{internalType:"string",name:"_contractId",type:"string"}],name:"unpublishContract",outputs:[],stateMutability:"nonpayable",type:"function"}],OL=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"deployer",type:"address"},{indexed:!0,internalType:"address",name:"deployment",type:"address"},{indexed:!0,internalType:"uint256",name:"chainId",type:"uint256"},{indexed:!1,internalType:"string",name:"metadataUri",type:"string"}],name:"Added",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"deployer",type:"address"},{indexed:!0,internalType:"address",name:"deployment",type:"address"},{indexed:!0,internalType:"uint256",name:"chainId",type:"uint256"}],name:"Deleted",type:"event"},{inputs:[],name:"OPERATOR_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"_msgData",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"_msgSender",outputs:[{internalType:"address",name:"sender",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_deployer",type:"address"},{internalType:"address",name:"_deployment",type:"address"},{internalType:"uint256",name:"_chainId",type:"uint256"},{internalType:"string",name:"metadataUri",type:"string"}],name:"add",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"_deployer",type:"address"}],name:"count",outputs:[{internalType:"uint256",name:"deploymentCount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_deployer",type:"address"}],name:"getAll",outputs:[{components:[{internalType:"address",name:"deploymentAddress",type:"address"},{internalType:"uint256",name:"chainId",type:"uint256"},{internalType:"string",name:"metadataURI",type:"string"}],internalType:"struct ITWMultichainRegistry.Deployment[]",name:"allDeployments",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_chainId",type:"uint256"},{internalType:"address",name:"_deployment",type:"address"}],name:"getMetadataUri",outputs:[{internalType:"string",name:"metadataUri",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_deployer",type:"address"},{internalType:"address",name:"_deployment",type:"address"},{internalType:"uint256",name:"_chainId",type:"uint256"}],name:"remove",outputs:[],stateMutability:"nonpayable",type:"function"}],$L=[{inputs:[{internalType:"address",name:"_pluginMap",type:"address"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes4",name:"functionSelector",type:"bytes4"},{indexed:!0,internalType:"address",name:"pluginAddress",type:"address"}],name:"PluginAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes4",name:"functionSelector",type:"bytes4"},{indexed:!0,internalType:"address",name:"pluginAddress",type:"address"}],name:"PluginRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes4",name:"functionSelector",type:"bytes4"},{indexed:!0,internalType:"string",name:"functionSignature",type:"string"},{indexed:!0,internalType:"address",name:"pluginAddress",type:"address"}],name:"PluginSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes4",name:"functionSelector",type:"bytes4"},{indexed:!0,internalType:"address",name:"oldPluginAddress",type:"address"},{indexed:!0,internalType:"address",name:"newPluginAddress",type:"address"}],name:"PluginUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{stateMutability:"payable",type:"fallback"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"_selector",type:"bytes4"}],name:"_getPluginForFunction",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bytes4",name:"functionSelector",type:"bytes4"},{internalType:"string",name:"functionSignature",type:"string"},{internalType:"address",name:"pluginAddress",type:"address"}],internalType:"struct IPluginMap.Plugin",name:"_plugin",type:"tuple"}],name:"addPlugin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_pluginAddress",type:"address"}],name:"getAllFunctionsOfPlugin",outputs:[{internalType:"bytes4[]",name:"registered",type:"bytes4[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAllPlugins",outputs:[{components:[{internalType:"bytes4",name:"functionSelector",type:"bytes4"},{internalType:"string",name:"functionSignature",type:"string"},{internalType:"address",name:"pluginAddress",type:"address"}],internalType:"struct IPluginMap.Plugin[]",name:"registered",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"_selector",type:"bytes4"}],name:"getPluginForFunction",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"member",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRoleWithSwitch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pluginMap",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"_selector",type:"bytes4"}],name:"removePlugin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bytes4",name:"functionSelector",type:"bytes4"},{internalType:"string",name:"functionSignature",type:"string"},{internalType:"address",name:"pluginAddress",type:"address"}],internalType:"struct IPluginMap.Plugin",name:"_plugin",type:"tuple"}],name:"updatePlugin",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],Qw={},YL=[{inputs:[{internalType:"address",name:"_trustedForwarder",type:"address"},{internalType:"address",name:"_registry",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"implementation",type:"address"},{indexed:!0,internalType:"bytes32",name:"contractType",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"version",type:"uint256"}],name:"ImplementationAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"implementation",type:"address"},{indexed:!1,internalType:"bool",name:"isApproved",type:"bool"}],name:"ImplementationApproved",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"},{indexed:!1,internalType:"address",name:"proxy",type:"address"},{indexed:!0,internalType:"address",name:"deployer",type:"address"}],name:"ProxyDeployed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"FACTORY_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_implementation",type:"address"}],name:"addImplementation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"approval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_implementation",type:"address"},{internalType:"bool",name:"_toApprove",type:"bool"}],name:"approveImplementation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"currentVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"_type",type:"bytes32"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"deployProxy",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_implementation",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"},{internalType:"bytes32",name:"_salt",type:"bytes32"}],name:"deployProxyByImplementation",outputs:[{internalType:"address",name:"deployedProxy",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_type",type:"bytes32"},{internalType:"bytes",name:"_data",type:"bytes"},{internalType:"bytes32",name:"_salt",type:"bytes32"}],name:"deployProxyDeterministic",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"deployer",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"_type",type:"bytes32"},{internalType:"uint256",name:"_version",type:"uint256"}],name:"getImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"_type",type:"bytes32"}],name:"getLatestImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"uint256",name:"",type:"uint256"}],name:"implementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"registry",outputs:[{internalType:"contract TWRegistry",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],zL=[{inputs:[{internalType:"address",name:"_trustedForwarder",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"deployer",type:"address"},{indexed:!0,internalType:"address",name:"deployment",type:"address"}],name:"Added",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"deployer",type:"address"},{indexed:!0,internalType:"address",name:"deployment",type:"address"}],name:"Deleted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"OPERATOR_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_deployer",type:"address"},{internalType:"address",name:"_deployment",type:"address"}],name:"add",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_deployer",type:"address"}],name:"count",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_deployer",type:"address"}],name:"getAll",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_deployer",type:"address"},{internalType:"address",name:"_deployment",type:"address"}],name:"remove",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],qL=[{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];function QL(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Rr(t,e,n){QL(t,e),e.set(t,n)}function jL(t,e){return e.get?e.get.call(t):e.value}function wv(t,e,n){if(!e.has(t))throw new TypeError("attempted to "+n+" private field on non-instance");return e.get(t)}function ln(t,e){var n=wv(t,e,"get");return jL(t,n)}function VL(t,e,n){if(e.set)e.set.call(t,n);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=n}}function Ar(t,e,n){var a=wv(t,e,"set");return VL(t,a,n),n}let S=function(t){return t[t.Mainnet=1]="Mainnet",t[t.Goerli=5]="Goerli",t[t.Polygon=137]="Polygon",t[t.Mumbai=80001]="Mumbai",t[t.Localhost=1337]="Localhost",t[t.Hardhat=31337]="Hardhat",t[t.Fantom=250]="Fantom",t[t.FantomTestnet=4002]="FantomTestnet",t[t.Avalanche=43114]="Avalanche",t[t.AvalancheFujiTestnet=43113]="AvalancheFujiTestnet",t[t.Optimism=10]="Optimism",t[t.OptimismGoerli=420]="OptimismGoerli",t[t.Arbitrum=42161]="Arbitrum",t[t.ArbitrumGoerli=421613]="ArbitrumGoerli",t[t.BinanceSmartChainMainnet=56]="BinanceSmartChainMainnet",t[t.BinanceSmartChainTestnet=97]="BinanceSmartChainTestnet",t}({});const Iv=[S.Mainnet,S.Goerli,S.Polygon,S.Mumbai,S.Fantom,S.FantomTestnet,S.Avalanche,S.AvalancheFujiTestnet,S.Optimism,S.OptimismGoerli,S.Arbitrum,S.ArbitrumGoerli,S.BinanceSmartChainMainnet,S.BinanceSmartChainTestnet,S.Hardhat,S.Localhost];let J2=yt;function GL(t){t&&t.length>0?J2=t:J2=yt}function ZL(){return J2}const XL="0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80",on="0xc82BbE41f2cF04e3a8efA18F7032BDD7f6d98a81",Ot="0x7c487845f98938Bb955B1D5AD069d9a30e4131fd",cn="0x5DBC7B840baa9daBcBe9D2492E45D7244B54A2A0",JL="0x664244560eBa21Bf82d7150C791bE1AbcD5B4cd7",eU="0xcdAD8FA86e18538aC207872E8ff3536501431B73",Cn={[S.Mainnet]:{openzeppelinForwarder:on,openzeppelinForwarderEOA:"0x76ce2CB1Ae48Fa067f4fb8c5f803111AE0B24BEA",biconomyForwarder:"0x84a0856b038eaAd1cC7E297cF34A7e72685A8693",twFactory:cn,twRegistry:Ot,twBYOCRegistry:B},[S.Goerli]:{openzeppelinForwarder:"0x5001A14CA6163143316a7C614e30e6041033Ac20",openzeppelinForwarderEOA:"0xe73c50cB9c5B378627ff625BB6e6725A4A5D65d2",biconomyForwarder:"0xE041608922d06a4F26C0d4c27d8bCD01daf1f792",twFactory:cn,twRegistry:Ot,twBYOCRegistry:"0xB1Bd9d7942A250BA2Dce27DD601F2ED4211A60C4"},[S.Polygon]:{openzeppelinForwarder:on,openzeppelinForwarderEOA:"0x4f247c69184ad61036EC2Bb3213b69F10FbEDe1F",biconomyForwarder:"0x86C80a8aa58e0A4fa09A69624c31Ab2a6CAD56b8",twFactory:cn,twRegistry:Ot,twBYOCRegistry:"0x308473Be900F4185A56587dE54bDFF5E8f7a6AE7"},[S.Mumbai]:{openzeppelinForwarder:on,openzeppelinForwarderEOA:"0xb1A2883fc4d287d9cB8Dbb96cFF60C76BEf2D250",biconomyForwarder:"0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b",twFactory:cn,twRegistry:Ot,twBYOCRegistry:"0x3F17972CB27506eb4a6a3D59659e0B57a43fd16C"},[S.Avalanche]:{openzeppelinForwarder:on,openzeppelinForwarderEOA:"0xb1A2883fc4d287d9cB8Dbb96cFF60C76BEf2D250",biconomyForwarder:"0x64CD353384109423a966dCd3Aa30D884C9b2E057",twFactory:cn,twRegistry:Ot,twBYOCRegistry:B},[S.AvalancheFujiTestnet]:{openzeppelinForwarder:on,openzeppelinForwarderEOA:"0xe73c50cB9c5B378627ff625BB6e6725A4A5D65d2",biconomyForwarder:"0x6271Ca63D30507f2Dcbf99B52787032506D75BBF",twFactory:cn,twRegistry:Ot,twBYOCRegistry:"0x3E6eE864f850F5e5A98bc950B68E181Cf4010F23"},[S.Fantom]:{openzeppelinForwarder:on,openzeppelinForwarderEOA:"0xb1A2883fc4d287d9cB8Dbb96cFF60C76BEf2D250",biconomyForwarder:"0x64CD353384109423a966dCd3Aa30D884C9b2E057",twFactory:"0x97EA0Fcc552D5A8Fb5e9101316AAd0D62Ea0876B",twRegistry:Ot,twBYOCRegistry:B},[S.FantomTestnet]:{openzeppelinForwarder:on,openzeppelinForwarderEOA:"0x42D3048b595B6e1c28a588d70366CcC2AA4dB47b",biconomyForwarder:"0x69FB8Dca8067A5D38703b9e8b39cf2D51473E4b4",twFactory:cn,twRegistry:Ot,twBYOCRegistry:"0x3E6eE864f850F5e5A98bc950B68E181Cf4010F23"},[S.Arbitrum]:{openzeppelinForwarder:"0x4a8AC7f22DeD2CF923A51e4A1c67490bd8868add",openzeppelinForwarderEOA:"0x4f247c69184ad61036EC2Bb3213b69F10FbEDe1F",biconomyForwarder:"0xfe0fa3C06d03bDC7fb49c892BbB39113B534fB57",twFactory:"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0",twRegistry:"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd",twBYOCRegistry:B},[S.ArbitrumGoerli]:{openzeppelinForwarder:"0x8cbc8B5d71702032904750A66AEfE8B603eBC538",openzeppelinForwarderEOA:"0x119704314Ef304EaAAE4b3c7C9ABd59272A28310",biconomyForwarder:B,twFactory:"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0",twRegistry:"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd",twBYOCRegistry:B},[S.Optimism]:{openzeppelinForwarder:"0xd85da690EF288A6976DE0E85Fb2Aad512eBAfbf7",openzeppelinForwarderEOA:"0x7e80648EB2071E26937F9D42A513ccf4815fc702",biconomyForwarder:"0xefba8a2a82ec1fb1273806174f5e28fbb917cf95",twFactory:"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0",twRegistry:"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd",twBYOCRegistry:B},[S.OptimismGoerli]:{openzeppelinForwarder:"0x8cbc8B5d71702032904750A66AEfE8B603eBC538",openzeppelinForwarderEOA:"0x119704314Ef304EaAAE4b3c7C9ABd59272A28310",biconomyForwarder:B,twFactory:"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0",twRegistry:"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd",twBYOCRegistry:B},[S.BinanceSmartChainMainnet]:{openzeppelinForwarder:"0x7C4717039B89d5859c4Fbb85EDB19A6E2ce61171",openzeppelinForwarderEOA:"0xE8dd2Ff0212F86d3197b4AfDC6dAC6ac47eb10aC",biconomyForwarder:"0x86C80a8aa58e0A4fa09A69624c31Ab2a6CAD56b8",twBYOCRegistry:B,twFactory:"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0",twRegistry:"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd"},[S.BinanceSmartChainTestnet]:{openzeppelinForwarder:"0x44bE9D54B9C8b5e57a3325E8Ec9154640e7c6955",openzeppelinForwarderEOA:"0x7e80648EB2071E26937F9D42A513ccf4815fc702",biconomyForwarder:"0x61456BF1715C1415730076BB79ae118E806E74d2",twBYOCRegistry:B,twFactory:"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0",twRegistry:"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd"},[S.Hardhat]:{openzeppelinForwarder:B,openzeppelinForwarderEOA:B,biconomyForwarder:B,twFactory:B,twRegistry:B,twBYOCRegistry:B},[S.Localhost]:{openzeppelinForwarder:B,openzeppelinForwarderEOA:B,biconomyForwarder:B,twFactory:B,twRegistry:B,twBYOCRegistry:B}},RI={[S.Mainnet]:{"nft-drop":"0x60fF9952e0084A6DEac44203838cDC91ABeC8736","edition-drop":"0x74af262d0671F378F97a1EDC3d0970Dbe8A1C550","token-drop":"0xE1eE43D23f247b6A9aF81fcE2766E76709482728","signature-drop":"0x6fD690EB509BdE4C50028C5D9C0dE3750C2Fad6A"},[S.Polygon]:{"nft-drop":"0xB96508050Ba0925256184103560EBADA912Fcc69","edition-drop":"0x74af262d0671F378F97a1EDC3d0970Dbe8A1C550","token-drop":"0x5A8eA4Adad8289746D073947BA06D69A62499aaf","signature-drop":"0xBE2fDc35410E268e41Bec62DBb01AEb43245c7d5"},[S.Fantom]:{"nft-drop":"0x2A396b2D90BAcEF19cDa973586B2633d22710fC2","edition-drop":"0x06395FCF9AC6ED827f9dD6e776809cEF1Be0d21B","token-drop":"0x0148b28a38efaaC31b6aa0a6D9FEb70FE7C91FFa","signature-drop":"0xe135Ef65C2B2213C3fD56d0Bd6500A2cA147aC10"},[S.Avalanche]:{"nft-drop":"0x9cF91118C8ee2913F0588e0F10e36B3d63F68bF6","edition-drop":"0x135fC9D26E5eC51260ece1DF4ED424E2f55c7766","token-drop":"0xca0B071899E575BA86495D46c5066971b6f3A901","signature-drop":"0x1d47526C3292B0130ef0afD5F02c1DA052A017B3"},[S.Optimism]:{"nft-drop":"0xFBd7D24d80ee005671E731a7287DEB6073264dD1","edition-drop":"0xe135Ef65C2B2213C3fD56d0Bd6500A2cA147aC10","token-drop":"0x902Dd246e66d8C3CE652375a723F2a52b43b9AAE","signature-drop":"0x8a4cd3549e548bbEEb38C16E041FFf040a5acabD"},[S.Arbitrum]:{"nft-drop":"0xC4903c1Ff5367b9ac2c349B63DC2409421AaEE2a","edition-drop":"0xCcddcec1831646Beff2753249f1B9C580327E89F","token-drop":"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9","signature-drop":"0x2dF9851af45dd41C8584ac55D983C604da985Bc7"},[S.BinanceSmartChainMainnet]:{"nft-drop":"0x902Dd246e66d8C3CE652375a723F2a52b43b9AAE","edition-drop":"0x2A396b2D90BAcEF19cDa973586B2633d22710fC2","token-drop":"0xe135Ef65C2B2213C3fD56d0Bd6500A2cA147aC10","signature-drop":"0xFBd7D24d80ee005671E731a7287DEB6073264dD1"},[S.Goerli]:{"nft-drop":"0xD11c97DD5F5546B5bBd630D7D1d7327481B0b92C","edition-drop":"0x5A8eA4Adad8289746D073947BA06D69A62499aaf","token-drop":"0x5680933221B752EB443654a014f88B101F868d50","signature-drop":"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9"},[S.Mumbai]:{"nft-drop":"0xC4903c1Ff5367b9ac2c349B63DC2409421AaEE2a","edition-drop":"0xCcddcec1831646Beff2753249f1B9C580327E89F","token-drop":"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9","signature-drop":"0x2dF9851af45dd41C8584ac55D983C604da985Bc7"},[S.FantomTestnet]:{"nft-drop":"0x8a4cd3549e548bbEEb38C16E041FFf040a5acabD","edition-drop":"0x902Dd246e66d8C3CE652375a723F2a52b43b9AAE","token-drop":"0xFBd7D24d80ee005671E731a7287DEB6073264dD1","signature-drop":"0x5A8eA4Adad8289746D073947BA06D69A62499aaf"},[S.AvalancheFujiTestnet]:{"nft-drop":"0xD11c97DD5F5546B5bBd630D7D1d7327481B0b92C","edition-drop":"0xE1eE43D23f247b6A9aF81fcE2766E76709482728","token-drop":"0x6fD690EB509BdE4C50028C5D9C0dE3750C2Fad6A","signature-drop":"0xCcddcec1831646Beff2753249f1B9C580327E89F"},[S.OptimismGoerli]:{"nft-drop":"0xCcddcec1831646Beff2753249f1B9C580327E89F","edition-drop":"0x6fD690EB509BdE4C50028C5D9C0dE3750C2Fad6A","token-drop":"0xD11c97DD5F5546B5bBd630D7D1d7327481B0b92C","signature-drop":"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9"},[S.ArbitrumGoerli]:{"nft-drop":"0x9CfE807a5b124b962064Fa8F7FD823Cc701255b6","edition-drop":"0x9cF91118C8ee2913F0588e0F10e36B3d63F68bF6","token-drop":"0x1d47526C3292B0130ef0afD5F02c1DA052A017B3","signature-drop":"0xE1eE43D23f247b6A9aF81fcE2766E76709482728"},[S.BinanceSmartChainTestnet]:{"nft-drop":"","edition-drop":"","token-drop":"","signature-drop":""},[S.Hardhat]:{"nft-drop":"","edition-drop":"","token-drop":"","signature-drop":""},[S.Localhost]:{"nft-drop":"","edition-drop":"","token-drop":"","signature-drop":""}};function tU(t,e){if(t in RI){const n=RI[t];if(e in n)return n[e]}return null}function jw(t,e){var n;return t===S.Hardhat||t===S.Localhost?e==="twFactory"?{}.factoryAddress:e==="twRegistry"?{}.registryAddress:B:(n=Cn[t])==null?void 0:n[e]}function nU(){return{}.contractPublisherAddress?{}.contractPublisherAddress:JL}function AI(){return{}.multiChainRegistryAddress?{}.multiChainRegistryAddress:eU}function vv(t){const e=Iv.find(r=>r===t),n=e?Cn[e].biconomyForwarder:B;return[e?Cn[e].openzeppelinForwarder:B,n].filter(r=>r!==B)}const ir=en("0x80ac58cd"),sr=en("0xd9b67a26"),je="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",La={[S.Mainnet]:{name:"Ether",symbol:"ETH",decimals:18,wrapped:{address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",name:"Wrapped Ether",symbol:"WETH"}},[S.Goerli]:{name:"G\xF6rli Ether",symbol:"GOR",decimals:18,wrapped:{address:"0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6",name:"Wrapped Ether",symbol:"WETH"}},11155111:{name:"Sepolia Ether",symbol:"SEP",decimals:18,wrapped:{address:"0x7b79995e5f793A07Bc00c21412e50Ecae098E7f9",name:"Wrapped Ether",symbol:"WETH"}},[S.Polygon]:{name:"Matic",symbol:"MATIC",decimals:18,wrapped:{address:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",name:"Wrapped Matic",symbol:"WMATIC"}},[S.Mumbai]:{name:"Matic",symbol:"MATIC",decimals:18,wrapped:{address:"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",name:"Wrapped Matic",symbol:"WMATIC"}},[S.Avalanche]:{name:"Avalanche",symbol:"AVAX",decimals:18,wrapped:{address:"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",name:"Wrapped AVAX",symbol:"WAVAX"}},[S.AvalancheFujiTestnet]:{name:"Avalanche",symbol:"AVAX",decimals:18,wrapped:{address:"0xd00ae08403B9bbb9124bB305C09058E32C39A48c",name:"Wrapped AVAX",symbol:"WAVAX"}},[S.Fantom]:{name:"Fantom",symbol:"FTM",decimals:18,wrapped:{address:"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",name:"Wrapped Fantom",symbol:"WFTM"}},[S.FantomTestnet]:{name:"Fantom",symbol:"FTM",decimals:18,wrapped:{address:"0xf1277d1Ed8AD466beddF92ef448A132661956621",name:"Wrapped Fantom",symbol:"WFTM"}},[S.Arbitrum]:{name:"Ether",symbol:"ETH",decimals:18,wrapped:{address:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1",name:"Wrapped Ether",symbol:"WETH"}},[S.ArbitrumGoerli]:{name:"Arbitrum Goerli Ether",symbol:"AGOR",decimals:18,wrapped:{address:"0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3",name:"Wrapped Ether",symbol:"WETH"}},[S.Optimism]:{name:"Ether",symbol:"ETH",decimals:18,wrapped:{address:"0x4200000000000000000000000000000000000006",name:"Wrapped Ether",symbol:"WETH"}},[S.OptimismGoerli]:{name:"Goerli Ether",symbol:"ETH",decimals:18,wrapped:{address:"0x4200000000000000000000000000000000000006",name:"Wrapped Ether",symbol:"WETH"}},[S.BinanceSmartChainMainnet]:{name:"Binance Chain Native Token",symbol:"BNB",decimals:18,wrapped:{address:"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",name:"Wrapped Binance Chain Token",symbol:"WBNB"}},[S.BinanceSmartChainTestnet]:{name:"Binance Chain Native Token",symbol:"TBNB",decimals:18,wrapped:{address:"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd",name:"Wrapped Binance Chain Testnet Token",symbol:"WBNB"}},[S.Hardhat]:{name:"Ether",symbol:"ETH",decimals:18,wrapped:{address:"0x5FbDB2315678afecb367f032d93F642f64180aa3",name:"Wrapped Ether",symbol:"WETH"}},[S.Localhost]:{name:"Ether",symbol:"ETH",decimals:18,wrapped:{address:"0x5FbDB2315678afecb367f032d93F642f64180aa3",name:"Wrapped Ether",symbol:"WETH"}},84531:{name:"Base Goerli Testnet",symbol:"ETH",decimals:18,wrapped:{address:"0x4200000000000000000000000000000000000006",name:"Wrapped Ether",symbol:"WETH"}},[280]:{name:"zkSync Era Testnet",symbol:"ETH",decimals:18,wrapped:{address:"0x5AEa5775959fBC2557Cc8789bC1bf90A239D9a91",name:"Wrapped Ether",symbol:"WETH"}}};function Cv(t){const e=ZL().find(n=>n.chainId===t);return e&&e.nativeCurrency?{name:e.nativeCurrency.name,symbol:e.nativeCurrency.symbol,decimals:18,wrapped:{address:B,name:`Wrapped ${e.nativeCurrency.name}`,symbol:`W${e.nativeCurrency.symbol}`}}:La[t]||{name:"Ether",symbol:"ETH",decimals:18,wrapped:{address:B,name:"Wrapped Ether",symbol:"WETH"}}}const aU={[S.Mainnet]:"0x514910771AF9Ca656af840dff83E8264EcF986CA",[S.Goerli]:"0x326C977E6efc84E512bB9C30f76E30c160eD06FB",[S.BinanceSmartChainMainnet]:"0x404460C6A5EdE2D891e8297795264fDe62ADBB75",[S.Polygon]:"0xb0897686c545045aFc77CF20eC7A532E3120E0F1",[S.Mumbai]:"0x326C977E6efc84E512bB9C30f76E30c160eD06FB",[S.Avalanche]:"0x5947BB275c521040051D82396192181b413227A3",[S.AvalancheFujiTestnet]:"0x0b9d5D9136855f6FEc3c0993feE6E9CE8a297846",[S.Fantom]:"0x6F43FF82CCA38001B6699a8AC47A2d0E66939407",[S.FantomTestnet]:"0xfaFedb041c0DD4fA2Dc0d87a6B0979Ee6FA7af5F"};let Ve=function(t){return t.Transaction="transaction",t.Signature="signature",t}({});function U1(t){return!!(t&&t._isSigner)}function kv(t){return!!(t&&t._isProvider)}function Se(t,e){let n,a;if(U1(t)?(n=t,t.provider&&(a=t.provider)):kv(t)?a=t:a=Ut(t,e),e!=null&&e.readonlySettings&&(a=a1(e.readonlySettings.rpcUrl,e.readonlySettings.chainId)),!a)throw n?new Error("No provider passed to the SDK! Please make sure that your signer is connected to a provider!"):new Error("No provider found! Make sure to specify which network to connect to, or pass a signer or provider to the SDK!");return[n,a]}const Ev=50,xv=250,rU={timeLimitMs:Ev,sizeLimit:xv};class iU extends tk{constructor(e,n){let a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:rU;super(e,n),l(this,"_timeLimitMs",void 0),l(this,"_sizeLimit",void 0),l(this,"_pendingBatchAggregator",void 0),l(this,"_pendingBatch",void 0),this._timeLimitMs=a.timeLimitMs||xv,this._sizeLimit=a.sizeLimit||Ev,this._pendingBatchAggregator=null,this._pendingBatch=null}sendCurrentBatch(e){this._pendingBatchAggregator&&clearTimeout(this._pendingBatchAggregator);const n=this._pendingBatch||[];this._pendingBatch=null,this._pendingBatchAggregator=null;const a=n.map(r=>r.request);return this.emit("debug",{action:"requestBatch",request:nk(e),provider:this}),ak(this.connection,JSON.stringify(a)).then(r=>{this.emit("debug",{action:"response",request:a,response:r,provider:this}),n.forEach((i,s)=>{const o=r[s];if(o)if(o.error){const c=new Error(o.error.message);c.code=o.error.code,c.data=o.error.data,i.reject(c)}else i.resolve(o.result);else i.reject(new Error("No response for request"))})},r=>{this.emit("debug",{action:"response",error:r,request:a,provider:this}),n.forEach(i=>{i.reject(r)})})}send(e,n){const a={method:e,params:n,id:this._nextId++,jsonrpc:"2.0"};this._pendingBatch===null&&(this._pendingBatch=[]);const r={request:a,resolve:null,reject:null},i=new Promise((s,o)=>{r.resolve=s,r.reject=o});return this._pendingBatch.push(r),this._pendingBatch.length===this._sizeLimit&&this.sendCurrentBatch(a),this._pendingBatchAggregator||(this._pendingBatchAggregator=setTimeout(()=>{this.sendCurrentBatch(a)},this._timeLimitMs)),i}}let x2;const R2=new Map;async function Rv(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;x2||(x2=Se("ethereum")[1]);let n;R2.has(t)?n=R2.get(t):n=x2.resolveName(t).then(r=>r?{address:r,expirationTime:new Date(Date.now()+1e3*60*5)}:{address:null,expirationTime:new Date(Date.now()+1e3*30)});const a=await n;return a.expirationTime<new Date&&(R2.delete(t),e===0&&Rv(t,e+1)),a.address}async function k(t){return ae.parseAsync(t)}const sU=y.custom(t=>typeof t=="string"&&(t.endsWith(".eth")||t.endsWith(".cb.id"))).transform(async t=>Rv(t)).refine(t=>!!t&&tr(t),{message:"Provided value was not a valid ENS name"}),pe=y.union([y.string(),y.number(),y.bigint(),y.custom(t=>b.isBigNumber(t))]).transform(t=>b.from(t)),te=pe.transform(t=>t.toString()),Av=y.union([y.bigint(),y.custom(t=>b.isBigNumber(t))]).transform(t=>b.from(t).toString()),Pv=y.custom(t=>typeof t=="string"&&tr(t),t=>({message:`${t} is not a valid address`})),ae=y.union([Pv,sU],{invalid_type_error:"Provided value was not a valid address or ENS name"}),or=y.union([y.date().transform(t=>b.from(Math.floor(t.getTime()/1e3))),y.number().transform(t=>b.from(t))]),Mv=or.default(new Date(0)),H0=or.default(new Date(Date.now()+1e3*60*60*24*365*10)),oU=y.object({gasLimit:te.optional(),gasPrice:te.optional(),maxFeePerGas:te.optional(),maxPriorityFeePerGas:te.optional(),nonce:te.optional(),value:te.optional(),blockTag:y.union([y.string(),y.number()]).optional(),from:ae.optional(),type:y.number().optional()}).strict(),cU=y.object({rpc:y.array(y.string().url()),chainId:y.number(),nativeCurrency:y.object({name:y.string(),symbol:y.string(),decimals:y.number()}),slug:y.string()}),e1=y.object({supportedChains:y.array(cU).default(yt),thirdwebApiKey:y.string().default(vn),alchemyApiKey:y.string().optional(),infuraApiKey:y.string().optional(),readonlySettings:y.object({rpcUrl:y.string().url(),chainId:y.number().optional()}).optional(),gasSettings:y.object({maxPriceInGwei:y.number().min(1,"gas price cannot be less than 1").default(300),speed:y.enum(["standard","fast","fastest"]).default("fastest")}).default({maxPriceInGwei:300,speed:"fastest"}),gasless:y.union([y.object({openzeppelin:y.object({relayerUrl:y.string().url(),relayerForwarderAddress:y.string().optional(),useEOAForwarder:y.boolean().default(!1),domainName:y.string().default("GSNv2 Forwarder"),domainVersion:y.string().default("0.0.1")}),experimentalChainlessSupport:y.boolean().default(!1)}),y.object({biconomy:y.object({apiId:y.string(),apiKey:y.string(),deadlineSeconds:y.number().min(1,"deadlineSeconds cannot be les than 1").default(3600)})})]).optional(),gatewayUrls:y.array(y.string()).optional()}).default({gasSettings:{maxPriceInGwei:300,speed:"fastest"}}),pU=y.object({name:y.string(),symbol:y.string(),decimals:y.number()}),lU=pU.extend({value:pe,displayValue:y.string()}),tn=y.object({merkle:y.record(y.string()).default({})}),t1=y.object({address:ae,maxClaimable:Jn.default(0),price:Jn.optional(),currencyAddress:ae.default(B).optional()}),F1=y.union([y.array(y.string()).transform(async t=>await Promise.all(t.map(e=>t1.parseAsync({address:e})))),y.array(t1)]),_v=t1.extend({proof:y.array(y.string())}),Sv=y.object({merkleRoot:y.string(),claims:y.array(_v)});y.object({merkleRoot:y.string(),snapshotUri:y.string()});const dU=y.object({name:y.string().optional()}).catchall(y.unknown()),K0=y.object({startTime:Mv,currencyAddress:y.string().default(je),price:Ne.default(0),maxClaimableSupply:Jn,maxClaimablePerWallet:Jn,waitInSeconds:te.default(0),merkleRootHash:JD.default(Kt([0],32)),snapshot:y.optional(F1).nullable(),metadata:dU.optional()}),uU=y.array(K0);K0.partial();const Wv=K0.extend({availableSupply:Jn,currentMintSupply:Jn,currencyMetadata:lU.default({value:b.from("0"),displayValue:"0",symbol:"",decimals:18,name:""}),price:pe,waitInSeconds:pe,startTime:pe.transform(t=>new Date(t.toNumber()*1e3)),snapshot:F1.optional().nullable()});function mU(t){if(t===void 0){const e=Ja.Buffer.alloc(16);return Qk({},e),j2(rt(e.toString("hex")))}else return j2(t)}const H1=y.object({to:ae.refine(t=>t.toLowerCase()!==B,{message:"Cannot create payload to mint to zero address"}),price:Ne.default(0),currencyAddress:Pv.default(je),mintStartTime:Mv,mintEndTime:H0,uid:y.string().optional().transform(t=>mU(t)),primarySaleRecipient:ae.default(B)}),Bv=H1.extend({quantity:Ne}),hU=Bv.extend({mintStartTime:pe,mintEndTime:pe}),K1=H1.extend({metadata:ca,royaltyRecipient:y.string().default(B),royaltyBps:oa.default(0)}),Nv=K1.extend({metadata:ca.default(""),uri:y.string(),royaltyBps:pe,mintStartTime:pe,mintEndTime:pe}),yU=K1.extend({metadata:ca.default(""),quantity:te}),fU=yU.extend({tokenId:te}),gU=Nv.extend({tokenId:pe,quantity:pe}),bU=K1.extend({metadata:ca.default(""),quantity:pe.default(1)}),TU=Nv.extend({quantity:pe.default(1)}),wU=[{name:"to",type:"address"},{name:"primarySaleRecipient",type:"address"},{name:"quantity",type:"uint256"},{name:"price",type:"uint256"},{name:"currency",type:"address"},{name:"validityStartTimestamp",type:"uint128"},{name:"validityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],IU=[{name:"to",type:"address"},{name:"royaltyRecipient",type:"address"},{name:"royaltyBps",type:"uint256"},{name:"primarySaleRecipient",type:"address"},{name:"uri",type:"string"},{name:"price",type:"uint256"},{name:"currency",type:"address"},{name:"validityStartTimestamp",type:"uint128"},{name:"validityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],vU=[{name:"to",type:"address"},{name:"royaltyRecipient",type:"address"},{name:"royaltyBps",type:"uint256"},{name:"primarySaleRecipient",type:"address"},{name:"tokenId",type:"uint256"},{name:"uri",type:"string"},{name:"quantity",type:"uint256"},{name:"pricePerToken",type:"uint256"},{name:"currency",type:"address"},{name:"validityStartTimestamp",type:"uint128"},{name:"validityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],CU=[{name:"to",type:"address"},{name:"royaltyRecipient",type:"address"},{name:"royaltyBps",type:"uint256"},{name:"primarySaleRecipient",type:"address"},{name:"uri",type:"string"},{name:"quantity",type:"uint256"},{name:"pricePerToken",type:"uint256"},{name:"currency",type:"address"},{name:"validityStartTimestamp",type:"uint128"},{name:"validityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],kU=[{name:"validityStartTimestamp",type:"uint128"},{name:"validityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"},{name:"data",type:"bytes"}],Ze=y.object({name:y.string(),description:y.string().optional(),image:fn.optional(),external_link:y.string().optional(),app_uri:y.string().optional()}),pt=Ze.extend({image:y.string().optional()}).catchall(y.unknown()),_e=y.object({seller_fee_basis_points:oa.default(0),fee_recipient:ae.default(B)}),Rn=y.object({primary_sale_recipient:ae}),ft=y.object({platform_fee_basis_points:oa.default(0),platform_fee_recipient:ae.default(B)}),lt=y.object({trusted_forwarders:y.array(ae).default([])}),Re=y.object({symbol:y.string().default("")}),Dv=Ze.merge(_e).merge(tn).merge(Re),EU=pt.merge(_e).merge(tn).merge(Re),xU=Dv.merge(ft).merge(Rn).merge(lt),O0={deploy:xU,output:EU,input:Dv},Lv=Ze.merge(_e).merge(tn).merge(Re),RU=pt.merge(_e).merge(tn).merge(Re),AU=Lv.merge(ft).merge(Rn).merge(lt),Uv={deploy:AU,output:RU,input:Lv},Fv=Ze,PU=pt,MU=Fv.merge(ft).merge(lt),$0={deploy:MU,output:PU,input:Fv},Hv=Ze.merge(_e).merge(Re),_U=pt.merge(_e).merge(Re),SU=Hv.merge(ft).merge(lt),Kv={deploy:SU,output:_U,input:Hv},Ov=y.object({address:ae,sharesBps:oa.gt(0,"Shares must be greater than 0")}),WU=Ov.extend({address:ae,sharesBps:oa}),n1=Ze.extend({recipients:y.array(Ov).default([]).superRefine((t,e)=>{const n={};let a=0;for(let r=0;r<t.length;r++){const i=t[r];n[i.address]&&e.addIssue({code:y.ZodIssueCode.custom,message:"Duplicate address.",path:[r,"address"]}),n[i.address]=!0,a+=i.sharesBps,a>1e4&&e.addIssue({code:y.ZodIssueCode.custom,message:"Total shares cannot go over 100%.",path:[r,"sharesBps"]})}a!==1e4&&e.addIssue({code:y.ZodIssueCode.custom,message:`Total shares need to add up to 100%. Total shares are currently ${a/100}%`,path:[]})})}),BU=pt.extend({recipients:y.array(WU)}),NU=n1.merge(n1).merge(lt),$v={deploy:NU,output:BU,input:n1},Yv=Ze.merge(Re),DU=pt.merge(Re),LU=Yv.merge(ft).merge(Rn).merge(lt),zv={deploy:LU,output:DU,input:Yv},qv=Ze.merge(_e).merge(Re),UU=pt.merge(_e).merge(Re),FU=qv.merge(ft).merge(Rn).merge(lt),Qv={deploy:FU,output:UU,input:qv},jv=Ze.merge(_e).merge(Re),HU=pt.merge(_e).merge(Re),KU=jv.merge(ft).merge(Rn).merge(lt),Vv={deploy:KU,output:HU,input:jv},Gv=y.object({voting_delay_in_blocks:y.number().min(0).default(0),voting_period_in_blocks:y.number().min(1).default(1),voting_token_address:ae,voting_quorum_fraction:tL.default(0),proposal_token_threshold:te.default(1)}),OU=Gv.extend({proposal_token_threshold:pe}),Zv=Ze.merge(Gv),$U=pt.merge(OU),YU=Zv.merge(lt),Xv={deploy:YU,output:$U,input:Zv};y.object({proposalId:pe,proposer:y.string(),targets:y.array(y.string()),values:y.array(pe),signatures:y.array(y.string()),calldatas:y.array(y.string()),startBlock:pe,endBlock:pe,description:y.string()});function zU(t){return t.supportedChains.reduce((e,n)=>(e[n.chainId]=n,e),{})}function Ut(t,e){if(typeof t=="string"&&QU(t))return a1(t);const n=e1.parse(e);O1(t)&&(n.supportedChains=[t,...n.supportedChains]);const a=zU(n);let r="",i;try{i=qU(t,n),r=M1(a[i],{thirdwebApiKey:n.thirdwebApiKey||vn,infuraApiKey:n.infuraApiKey,alchemyApiKey:n.alchemyApiKey})}catch{}if(r||(r=`https://${i||t}.rpc.thirdweb.com/${n.thirdwebApiKey||vn}`),!r)throw new Error(`No rpc url found for chain ${t}. Please provide a valid rpc url via the 'supportedChains' property of the sdk options.`);return a1(r,i)}function qU(t,e){if(O1(t))return t.chainId;if(typeof t=="number")return t;{const n=e.supportedChains.reduce((a,r)=>(a[r.slug]=r.chainId,a),{});if(t in n)return n[t]}throw new Error(`Cannot resolve chainId from: ${t} - please pass the chainId instead and specify it in the 'supportedChains' property of the SDK options.`)}function O1(t){return typeof t!="string"&&typeof t!="number"&&!U1(t)&&!kv(t)}function QU(t){const e=t.match(/^(ws|http)s?:/i);if(e)switch(e[1].toLowerCase()){case"http":case"https":case"ws":case"wss":return!0}return!1}const PI=new Map;function a1(t,e){try{const n=t.match(/^(ws|http)s?:/i);if(n)switch(n[1].toLowerCase()){case"http":case"https":const a=`${t}-${e||-1}`,r=PI.get(a);if(r)return r;const i=e?new iU(t,e):new XC(t);return PI.set(a,i),i;case"ws":case"wss":return new ZC(t,e)}}catch{}return JC(t)}const MI={name:"ERC20ClaimConditionsV1",namespace:"token.drop.claim",docLinks:{sdk:"sdk.erc20dclaimable",contracts:"erc20claimconditions"},abis:[Ee,uv],features:{}},Ua={name:"ERC20ClaimConditionsV2",namespace:"token.drop.claim",docLinks:{sdk:"sdk.erc20dclaimable",contracts:"erc20claimconditions"},abis:[Ee,dv],features:{}},_I={name:"ERC20ClaimPhasesV2",namespace:"token.drop.claim",docLinks:{sdk:"sdk.erc20dclaimable",contracts:"erc20claimphases"},abis:[Ee,lv],features:{}},SI={name:"ERC20ClaimPhasesV1",namespace:"token.drop.claim",docLinks:{sdk:"sdk.erc20dclaimable",contracts:"erc20claimphases"},abis:[sL],features:{}},Fa={name:"ERC20Burnable",namespace:"token.burn",docLinks:{sdk:"sdk.erc20burnable",contracts:"erc20burnable"},abis:[Ee,iL],features:{}},Vw={name:"ERC20SignatureMintable",namespace:"token.signature",docLinks:{sdk:"sdk.erc20signaturemintable",contracts:"erc20signaturemint"},abis:[Ee,cL],features:{}},Gw={name:"ERC20BatchMintable",namespace:"token.mint.batch",docLinks:{sdk:"sdk.erc20batchmintable",contracts:"erc20batchmintable"},abis:[Ee,mv,L1],features:{}},Ha={name:"ERC20Mintable",namespace:"token.mint",docLinks:{sdk:"sdk.erc20mintable",contracts:"erc20mintable"},abis:[Ee,mv],features:{[Gw.name]:Gw}},WI={name:"ERC20Permit",namespace:"token.permit",docLinks:{sdk:"sdk.erc20permit",contracts:"erc20permit"},abis:[Ee,oL],features:{}},Zw={name:"ERC20",namespace:"token",docLinks:{sdk:"sdk.erc20",contracts:"erc20"},abis:[Ee],features:{[Fa.name]:Fa,[Ha.name]:Ha,[MI.name]:MI,[Ua.name]:Ua,[SI.name]:SI,[_I.name]:_I,[Vw.name]:Vw,[WI.name]:WI}},Xw={name:"ERC721Burnable",namespace:"nft.burn",docLinks:{sdk:"sdk.erc721burnable",contracts:"erc721burnable"},abis:[xe,pL],features:{}},ea={name:"ERC721Revealable",namespace:"nft.drop.revealer",docLinks:{sdk:"sdk.delayedreveal",contracts:"erc721revealable"},abis:[xe,F0,hv],features:{}},Jw={name:"ERC721TieredDrop",namespace:"nft.tieredDrop",docLinks:{sdk:"sdk.erc721tiereddrop",contracts:""},abis:[xe,fL],features:{}},BI={name:"ERC721ClaimConditionsV1",namespace:"nft.drop.claim",docLinks:{sdk:"sdk.erc721claimable",contracts:"erc721claimconditions"},abis:[xe,uv],features:{}},e0={name:"ERC721ClaimConditionsV2",namespace:"nft.drop.claim",docLinks:{sdk:"sdk.erc721claimable",contracts:"erc721claimconditions"},abis:[xe,dv],features:{}},NI={name:"ERC721ClaimPhasesV1",namespace:"nft.drop.claim",docLinks:{sdk:"sdk.erc721claimable",contracts:"erc721claimphases"},abis:[dL],features:{}},DI={name:"ERC721ClaimPhasesV2",namespace:"nft.drop.claim",docLinks:{sdk:"sdk.erc721claimable",contracts:"erc721claimphases"},abis:[xe,lv],features:{}},Ka={name:"ERC721ClaimCustom",namespace:"nft.drop.claim",docLinks:{sdk:"sdk.erc721claimable",contracts:"erc721claimcustom"},abis:[xe,lL],features:{}},t0={name:"ERC721LazyMintable",namespace:"nft.drop",docLinks:{sdk:"sdk.erc721lazymintable",contracts:"lazymint"},abis:[xe,F0],features:{[ea.name]:ea}},n0={name:"ERC721BatchMintable",namespace:"nft.mint.batch",docLinks:{sdk:"sdk.erc721batchmintable",contracts:"erc721batchmintable"},abis:[xe,yv,L1],features:{}},a0={name:"ERC721Mintable",namespace:"nft.mint",docLinks:{sdk:"sdk.erc721mintable",contracts:"erc721mintable"},abis:[xe,yv],features:{[n0.name]:n0}},r0={name:"ERC721SignatureMintV2",namespace:"nft.signature",docLinks:{sdk:"sdk.erc721signaturemint",contracts:"erc721signaturemint"},abis:[xe,hL],features:{}},LI={name:"ERC721SignatureMintV1",namespace:"nft.signature",docLinks:{sdk:"sdk.erc721signaturemint",contracts:"erc721signaturemint"},abis:[yL],features:{}},r1={name:"ERC721Enumerable",namespace:"nft.query.owned",docLinks:{sdk:"sdk.erc721enumerable",contracts:"erc721enumerable"},abis:[xe,uL],features:{}},qn={name:"ERC721Supply",namespace:"nft.query",docLinks:{sdk:"sdk.erc721supply",contracts:"erc721supply"},abis:[xe,mL],features:{[r1.name]:r1}},i0={name:"ERC721",namespace:"nft",docLinks:{sdk:"sdk.erc721",contracts:"erc721"},abis:[xe],features:{[Xw.name]:Xw,[qn.name]:qn,[a0.name]:a0,[t0.name]:t0,[LI.name]:LI,[r0.name]:r0,[Jw.name]:Jw,[Ka.name]:Ka,[BI.name]:BI,[e0.name]:e0,[NI.name]:NI,[DI.name]:DI}},dn={name:"ERC1155Burnable",namespace:"edition.burn",docLinks:{sdk:"sdk.erc1155burnable",contracts:"erc1155burnable"},abis:[De,gL],features:{}},UI={name:"ERC1155ClaimConditionsV1",namespace:"edition.drop.claim",docLinks:{sdk:"sdk.erc1155claimable",contracts:"erc1155dropsinglephase"},abis:[De,IL],features:{}},s0={name:"ERC1155ClaimConditionsV2",namespace:"edition.drop.claim",docLinks:{sdk:"sdk.erc1155claimable",contracts:"erc1155claimconditions"},abis:[De,wL],features:{}},FI={name:"ERC1155ClaimPhasesV2",namespace:"edition.drop.claim",docLinks:{sdk:"sdk.erc1155claimable",contracts:"erc1155claimphases"},abis:[De,TL],features:{}},HI={name:"ERC1155ClaimPhasesV1",namespace:"edition.drop.claim",docLinks:{sdk:"sdk.erc1155claimable",contracts:"erc1155claimphases"},abis:[fv],features:{}},Oa={name:"ERC1155ClaimCustom",namespace:"edition.drop.claim",docLinks:{sdk:"sdk.erc1155claimable",contracts:"erc1155claimcustom"},abis:[De,bL],features:{}},ta={name:"ERC1155Revealable",namespace:"edition.drop.revealer",docLinks:{sdk:"sdk.drop.delayedreveal",contracts:"erc1155revealable"},abis:[De,F0,hv],features:{}},o0={name:"ERC1155LazyMintableV2",namespace:"edition.drop",docLinks:{sdk:"sdk.erc1155droppable",contracts:"lazymint"},abis:[De,F0],features:{[ta.name]:ta}},KI={name:"ERC1155LazyMintableV1",namespace:"edition.drop",docLinks:{sdk:"sdk.erc1155droppable",contracts:"lazymint"},abis:[fv],features:{[HI.name]:HI}},c0={name:"ERC1155SignatureMintable",namespace:"edition.signature",docLinks:{sdk:"sdk.erc1155signaturemintable",contracts:"erc1155signaturemint"},abis:[De,CL],features:{}},p0={name:"ERC1155BatchMintable",namespace:"edition.mint.batch",docLinks:{sdk:"sdk.erc1155batchmintable",contracts:"erc1155batchmintable"},abis:[De,gv,L1],features:{}},un={name:"ERC1155Mintable",namespace:"edition.mint",docLinks:{sdk:"sdk.erc1155mintable",contracts:"erc1155mintable"},abis:[De,gv],features:{[p0.name]:p0}},mn={name:"ERC1155Enumerable",namespace:"edition.query",docLinks:{sdk:"sdk.erc1155",contracts:"erc1155enumerable"},abis:[De,vL],features:{}},l0={name:"ERC1155",namespace:"edition",docLinks:{sdk:"sdk.erc1155enumerable",contracts:"erc1155"},abis:[De],features:{[dn.name]:dn,[mn.name]:mn,[un.name]:un,[KI.name]:KI,[o0.name]:o0,[ta.name]:ta,[c0.name]:c0,[Oa.name]:Oa,[UI.name]:UI,[s0.name]:s0,[FI.name]:FI}},$1=[{inputs:[],name:"getAllPlugins",outputs:[{components:[{internalType:"bytes4",name:"functionSelector",type:"bytes4"},{internalType:"string",name:"functionSignature",type:"string"},{internalType:"address",name:"pluginAddress",type:"address"}],internalType:"struct IPluginMap.Plugin[]",name:"registered",type:"tuple[]"}],stateMutability:"view",type:"function"}],Jv=[{inputs:[],name:"getAllExtensions",outputs:[{components:[{components:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"metadataURI",type:"string"},{internalType:"address",name:"implementation",type:"address"}],internalType:"struct IExtension.ExtensionMetadata",name:"metadata",type:"tuple"},{components:[{internalType:"bytes4",name:"functionSelector",type:"bytes4"},{internalType:"string",name:"functionSignature",type:"string"}],internalType:"struct IExtension.ExtensionFunction[]",name:"functions",type:"tuple[]"}],internalType:"struct IExtension.Extension[]",name:"allExtensions",type:"tuple[]"}],stateMutability:"view",type:"function"}],d0={name:"Royalty",namespace:"royalty",docLinks:{sdk:"sdk.contractroyalty",contracts:"royalty"},abis:[BL],features:{}},u0={name:"PrimarySale",namespace:"sales",docLinks:{sdk:"sdk.contractprimarysale",contracts:"primarysale"},abis:[WL],features:{}},m0={name:"PlatformFee",namespace:"platformFee",docLinks:{sdk:"sdk.platformfee",contracts:"platformfee"},abis:[SL],features:{}},OI={name:"PermissionsEnumerable",namespace:"roles",docLinks:{sdk:"sdk.contractroles",contracts:"permissionsenumerable"},abis:[_L],features:{}},h0={name:"Permissions",namespace:"roles",docLinks:{sdk:"sdk.contractroles",contracts:"permissions"},abis:[ML],features:{[OI.name]:OI}},y0={name:"ContractMetadata",namespace:"metadata",docLinks:{sdk:"sdk.contractmetadata",contracts:"contractmetadata"},abis:[xL],features:{}},f0={name:"AppURI",namespace:"appURI",docLinks:{sdk:"sdk.appURI",contracts:""},abis:[EL],features:{}},g0={name:"Ownable",namespace:"owner",docLinks:{sdk:"sdk.owner",contracts:"ownable"},abis:[NL],features:{}},$I={name:"Gasless",namespace:"gasless",docLinks:{sdk:"sdk.gaslesstransaction",contracts:""},abis:[kL],features:{}},b0={name:"PackVRF",namespace:"pack.vrf",docLinks:{sdk:"sdk.packvrf",contracts:""},abis:[bv],features:{}},YI={name:"PluginRouter",namespace:"plugin.router",docLinks:{sdk:"sdk.pluginrouter",contracts:""},abis:[$1],features:{}},zI={name:"ExtensionRouter",namespace:"extension.router",docLinks:{sdk:"",contracts:""},abis:[Jv],features:{}},$a={name:"DirectListings",namespace:"direct.listings",docLinks:{sdk:"",contracts:""},abis:[RL],features:{}},Ya={name:"EnglishAuctions",namespace:"english.auctions",docLinks:{sdk:"",contracts:""},abis:[AL],features:{}},za={name:"Offers",namespace:"offers",docLinks:{sdk:"",contracts:""},abis:[PL],features:{}},qI={name:"SmartWalletFactory",namespace:"smartwallet.factory",docLinks:{sdk:"",contracts:""},abis:[DL],features:{}},QI={name:"SmartWallet",namespace:"smartwallet",docLinks:{sdk:"",contracts:""},abis:[LL],features:{}},jU={[Zw.name]:Zw,[i0.name]:i0,[l0.name]:l0,[d0.name]:d0,[m0.name]:m0,[u0.name]:u0,[h0.name]:h0,[y0.name]:y0,[f0.name]:f0,[g0.name]:g0,[$I.name]:$I,[b0.name]:b0,[YI.name]:YI,[zI.name]:zI,[$a.name]:$a,[Ya.name]:Ya,[za.name]:za,[qI.name]:qI,[QI.name]:QI};class e6 extends Error{constructor(e){super(e?`Object with id ${e} NOT FOUND`:"NOT_FOUND")}}class VU extends Error{constructor(e,n){super(`MISSING ROLE: ${e} does not have the '${n}' role`)}}class GU extends Error{constructor(e){super(`DUPLICATE_LEAFS${e?` : ${e}`:""}`)}}class ZU extends Error{constructor(e){super(`Auction already started with existing bid${e?`, id: ${e}`:""}`)}}class Fn extends Error{constructor(e,n){super(`Could not find listing.${e?` marketplace address: ${e}`:""}${n?` listing id: ${n}`:""}`)}}class t6 extends Error{constructor(e,n,a,r){super(`Incorrect listing type. Are you sure you're using the right method?.${e?` marketplace address: ${e}`:""}${n?` listing id: ${n}`:""}${r?` expected type: ${r}`:""}${a?` actual type: ${a}`:""}`)}}class ga extends Error{constructor(e,n){super(`Auction has not ended yet${e?`, id: ${e}`:""}${n?`, end time: ${n.toString()}`:""}`)}}class na extends Error{constructor(e){super(`This functionality is not available because the contract does not implement the '${e.docLinks.contracts}' Extension. Learn how to unlock this functionality at https://portal.thirdweb.com/extensions `)}}var A2=new WeakMap,P2=new WeakMap,M2=new WeakMap;class Y1 extends Error{constructor(e,n){var r;let a=`


\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557
\u2551 TRANSACTION ERROR \u2551
\u255A\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255D

`;if(a+=`Reason: ${e.reason}`,a+=`


\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557
\u2551 TRANSACTION INFORMATION \u2551
\u255A\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255D
`,a+=$t("from",e.from),e.to&&(a+=$t("to",e.contractName?`${e.to} (${e.contractName})`:e.to)),a+=$t("chain",`${e.network.name} (${e.network.chainId})`),e.rpcUrl)try{const i=new URL(e.rpcUrl);a+=$t("rpc",i.hostname)}catch{}if(e.hash&&(a+=$t("tx hash",e.hash)),e.value&&e.value.gt(0)&&(a+=$t("value",`${P1(e.value)} ${((r=La[e.network.chainId])==null?void 0:r.symbol)||""}`)),a+=$t("data",`${e.data}`),e.method&&(a+=$t("method",e.method)),e.sources){const i=e.sources.find(s=>s.source.includes(e.reason));if(i){const s=i.source.split(`
`).map((p,d)=>`${d+1}  ${p}`),o=s.findIndex(p=>p.includes(e.reason));s[o]+="   <-- REVERT";const c=s.slice(o-8,o+4);a+=`


\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557
\u2551 SOLIDITY STACK TRACE \u2551
\u255A\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255D

`,a+=`File: ${i.filename.replace("node_modules/","")}

`,a+=c.join(`
`)}}a+=`


\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557
\u2551 DEBUGGING RESOURCES \u2551
\u255A\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255D

`,a+="Need helping debugging? Join our Discord: https://discord.gg/thirdweb",a+=`

`,super(a),Rr(this,A2,{writable:!0,value:void 0}),Rr(this,P2,{writable:!0,value:void 0}),Rr(this,M2,{writable:!0,value:void 0}),Ar(this,A2,e.reason),Ar(this,P2,e),Ar(this,M2,n)}get reason(){return ln(this,A2)}get raw(){return ln(this,M2)}get info(){return ln(this,P2)}}function z1(t){if(t.reason&&!t.reason.includes("cannot estimate gas"))return t.reason;if(t.error)return t.error;let e=t;return typeof t=="object"?e=JSON.stringify(t):typeof t!="string"&&(e=t.toString()),jI(/.*?"message":"([^"\\]*).*?/,e)||jI(/.*?"reason":"([^"\\]*).*?/,e)||t.message||""}function $t(t,e){if(e==="")return e;const n=Array(10-t.length).fill(" ").join("");return e.includes(`
`)?e=`

  `+e.split(`
`).join(`
  `):e=`${n}${e}`,`
${t}:${e}`}function jI(t,e){const n=e.match(t)||[];let a="";return(n==null?void 0:n.length)>0&&(a+=n[1]),a}function T0(t,e){return t?t&&t.toString().includes(e)||t&&t.message&&t.message.toString().includes(e)||t&&t.error&&t.error.toString().includes(e):!1}const n6=[{name:"from",type:"address"},{name:"to",type:"address"},{name:"value",type:"uint256"},{name:"gas",type:"uint256"},{name:"nonce",type:"uint256"},{name:"data",type:"bytes"}],a6=[{name:"from",type:"address"},{name:"to",type:"address"},{name:"value",type:"uint256"},{name:"gas",type:"uint256"},{name:"nonce",type:"uint256"},{name:"data",type:"bytes"},{name:"chainid",type:"uint256"}],r6=[{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"uint256",name:"batchId",type:"uint256"}],name:"getNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],_n={},VI={};async function w0(t,e,n){const a=n.join("|"),r=VI[a],i=Date.now()-r>=2e3;if(!(a in _n)||i){const o=await t.functions[e](...n);Array.isArray(o)&&o.length>0?_n[a]=b.from(o[0]):_n[a]=b.from(o),VI[a]=Date.now()}const s=_n[a];return _n[a]=b.from(_n[a]).add(1),s}async function qa(t,e,n,a){var c,p;const r=t==null?void 0:t.provider;if(!r)throw new Error("missing provider");const i=H5.getPayload(e,n,a);let s="";const o=(await t.getAddress()).toLowerCase();if((c=r==null?void 0:r.provider)!=null&&c.isWalletConnect)s=await r.send("eth_signTypedData",[(await t.getAddress()).toLowerCase(),JSON.stringify(i)]);else try{s=await t._signTypedData(e,n,a)}catch(d){if((p=d==null?void 0:d.message)!=null&&p.includes("Method eth_signTypedData_v4 not supported"))s=await r.send("eth_signTypedData",[o,JSON.stringify(i)]);else try{await r.send("eth_signTypedData_v4",[o,JSON.stringify(i)])}catch(u){throw u}}return{payload:i,signature:K5(x1(s))}}const XU=[{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}],JU=[{constant:!0,inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeperator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"}],eF=[{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getNonce",outputs:[{internalType:"uint256",name:"nonce",type:"uint256"}],stateMutability:"view",type:"function"}];async function tF(t,e){const n=new J(e,eF,t);try{return await n.nonces(await t.getAddress())}catch{return await n.getNonce(await t.getAddress())}}async function nF(t,e){const n=new J(e,JU,t);try{return await n.DOMAIN_SEPARATOR()}catch{try{return await n.getDomainSeperator()}catch(r){console.error("Error getting domain separator",r)}}}async function aF(t,e){return new J(e,XU,t).name()}async function rF(t,e){const n=await nF(t,e.verifyingContract),a={name:e.name,version:e.version,verifyingContract:e.verifyingContract,salt:Kt(b.from(e.chainId).toHexString(),32)};return H5.hashDomain(a)===n?a:e}async function i6(t,e,n,a,r,i,s){const o=await rF(t,{name:await aF(t,e),version:"1",chainId:await t.getChainId(),verifyingContract:e});s=s||(await tF(t,e)).toString(),i=i||ke;const c={owner:n,spender:a,value:r,nonce:s,deadline:i},p={Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},{signature:d}=await qa(t,o,p,c);return{message:c,signature:d}}const iF=()=>!0,s6=()=>!iF();function sF(t,e){if(t.length===0||t.length===1||!e)return t;for(let n=0;n<t.length;n++)for(let a=n+1;a<t.length;a++)e(t[n],t[a])&&t.splice(a,1);return t}class pa extends Nt{constructor(e,n){super(),l(this,"provider",void 0),l(this,"signer",void 0),l(this,"options",void 0);try{this.options=e1.parse(n)}catch(i){console.error("invalid sdk options object passed, falling back to default options",i),this.options=e1.parse({})}const[a,r]=Se(e,this.options);this.signer=a,this.provider=r}updateSignerOrProvider(e){const[n,a]=Se(e,this.options);this.signer=n,this.provider=a}isReadOnly(){return!U1(this.signer)}getSigner(){return this.signer}getProvider(){return this.provider}getSignerOrProvider(){return this.getSigner()||this.getProvider()}}var Sn=new WeakMap;class Z extends pa{constructor(e,n,a,r){super(e,r),Rr(this,Sn,{writable:!0,value:void 0}),l(this,"isValidContract",!1),l(this,"customOverrides",()=>({})),l(this,"writeContract",void 0),l(this,"readContract",void 0),l(this,"abi",void 0),this.abi=a,this.writeContract=new J(n,a,this.getSignerOrProvider()),this.readContract=this.writeContract.connect(this.getProvider()),Ar(this,Sn,new Gn)}updateSignerOrProvider(e){super.updateSignerOrProvider(e),this.writeContract=this.writeContract.connect(this.getSignerOrProvider()),this.readContract=this.writeContract.connect(this.getProvider())}async getChainID(){const e=this.getProvider(),{chainId:n}=await e.getNetwork();return n}async getSignerAddress(){const e=this.getSigner();if(!e)throw new Error("This action requires a connected wallet to sign the transaction. Please pass a valid signer to the SDK.");return await e.getAddress()}callStatic(){return this.writeContract.callStatic}async getCallOverrides(){return{}}getPreferredPriorityFee(e){const n=this.options.gasSettings.speed,a=this.options.gasSettings.maxPriceInGwei;let r;switch(n){case"standard":r=b.from(0);break;case"fast":r=e.div(100).mul(5);break;case"fastest":r=e.div(100).mul(10);break}let i=e.add(r);const s=Oe(a.toString(),"gwei"),o=Oe("2.5","gwei");return i.gt(s)&&(i=s),i.lt(o)&&(i=o),i}async getPreferredGasPrice(){const e=await this.getProvider().getGasPrice(),n=this.options.gasSettings.speed,a=this.options.gasSettings.maxPriceInGwei;let r=e,i;switch(n){case"standard":i=b.from(1);break;case"fast":i=e.div(100).mul(5);break;case"fastest":i=e.div(100).mul(10);break}r=r.add(i);const s=Oe(a.toString(),"gwei");return r.gt(s)&&(r=s),r}emitTransactionEvent(e,n){this.emit(Ve.Transaction,{status:e,transactionHash:n})}async multiCall(e){return this.sendTransaction("multicall",[e])}async estimateGas(e,n){return this.writeContract.estimateGas[e](...n)}withTransactionOverride(e){this.customOverrides=e}async call(e){let n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],a=arguments.length>2?arguments[2]:void 0,r=a?await oU.parseAsync(a):void 0;const i=Va(G.parse(this.abi)).filter(p=>p.name===e);if(!i.length)throw new Error(`Function "${e}" not found in contract. Check your dashboard for the list of functions available`);const s=i.find(p=>p.name===e&&p.inputs.length===n.length);if(!s)throw new Error(`Function "${e}" requires ${i[0].inputs.length} arguments, but ${n.length} were provided.
Expected function signature: ${i[0].signature}`);const o=`${e}(${s.inputs.map(p=>p.type).join()})`,c=o in this.readContract.functions?o:e;return s.stateMutability==="view"||s.stateMutability==="pure"?this.readContract[c](...n):{receipt:await this.sendTransaction(c,n,r)}}async sendTransaction(e,n,a){var r;if(a||(a=await this.getCallOverrides()),a={...a,...this.customOverrides()},this.customOverrides=()=>({}),((r=this.options)==null?void 0:r.gasless)&&("openzeppelin"in this.options.gasless||"biconomy"in this.options.gasless)){if(e==="multicall"&&Array.isArray(n[0])&&n[0].length>0){const c=await this.getSignerAddress();n[0]=n[0].map(p=>Ta(["bytes","address"],[p,c]))}const i=this.getProvider(),s=await this.sendGaslessTransaction(e,n,a);this.emitTransactionEvent("submitted",s);const o=await i.waitForTransaction(s);return this.emitTransactionEvent("completed",s),o}else{if(!this.isValidContract){const o=await this.getProvider().getCode(this.readContract.address);if(this.isValidContract=o!=="0x",!this.isValidContract)throw new Error("The address you're trying to send a transaction to is not a smart contract. Make sure you are on the correct network and the contract address is correct")}const i=await this.sendTransactionByFunction(e,n,a);this.emitTransactionEvent("submitted",i.hash);let s;try{s=await i.wait()}catch(o){try{await this.writeContract.callStatic[e](...n,...a.value?[{value:a.value}]:[])}catch(c){throw await this.formatError(c,e,n,a)}throw await this.formatError(o,e,n,a)}return this.emitTransactionEvent("completed",i.hash),s}}async sendTransactionByFunction(e,n,a){const r=this.writeContract.functions[e];if(!r)throw new Error(`invalid function: "${e.toString()}"`);if(!a.gasLimit)try{a.gasLimit=await this.writeContract.estimateGas[e](...n,a)}catch{try{await this.writeContract.callStatic[e](...n,...a.value?[{value:a.value}]:[])}catch(s){throw await this.formatError(s,e,n,a)}}try{return await r(...n,a)}catch(i){const s=await(a.from||this.getSignerAddress()),o=await(a.value?a.value:0),c=await this.getProvider().getBalance(s);throw c.eq(0)||o&&c.lt(o)?await this.formatError(new Error("You have insufficient funds in your account to execute this transaction."),e,n,a):await this.formatError(i,e,n,a)}}async formatError(e,n,a,r){var x,L,H;const i=this.getProvider(),s=await i.getNetwork(),o=await(r.from||this.getSignerAddress()),c=this.readContract.address,p=this.readContract.interface.encodeFunctionData(n,a),d=b.from(r.value||0),u=(x=i.connection)==null?void 0:x.url,m=this.readContract.interface.getFunction(n),f=a.map(Q=>JSON.stringify(Q).length<=80?JSON.stringify(Q):JSON.stringify(Q,void 0,2)),g=f.join(", ").length<=80?f.join(", "):`
`+f.map(Q=>"  "+Q.split(`
`).join(`
  `)).join(`,
`)+`
`,w=`${m.name}(${g})`,I=e.transactionHash||((L=e.transaction)==null?void 0:L.hash)||((H=e.receipt)==null?void 0:H.transactionHash),M=z1(e);let R,N;try{const Q=await Ft(this.readContract.address,this.getProvider(),ln(this,Sn));Q.name&&(N=Q.name),Q.metadata.sources&&(R=await Z0(Q,ln(this,Sn)))}catch{}return new Y1({reason:M,from:o,to:c,method:w,data:p,network:s,rpcUrl:u,value:d,hash:I,contractName:N,sources:R},e)}async sendGaslessTransaction(e){let n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[],a=arguments.length>2?arguments[2]:void 0;const r=this.getSigner();P(r,"Cannot execute gasless transaction without valid signer");const i=await this.getChainID(),s=await this.getSignerAddress(),o=this.writeContract.address,c=(a==null?void 0:a.value)||0;if(b.from(c).gt(0))throw new Error("Cannot send native token value with gasless transaction");const p=this.writeContract.interface.encodeFunctionData(e,n);let d=b.from(0);try{d=(await this.readContract.estimateGas[e](...n)).mul(2)}catch{}d.lt(1e5)&&(d=b.from(5e5)),a.gasLimit&&b.from(a.gasLimit).gt(d)&&(d=b.from(a.gasLimit));const u={from:s,to:o,data:p,chainId:i,gasLimit:d,functionName:e.toString(),functionArgs:n,callOverrides:a};return await this.defaultGaslessSendFunction(u)}async signTypedData(e,n,a,r){this.emit(Ve.Signature,{status:"submitted",message:r,signature:""});const{signature:i}=await qa(e,n,a,r);return this.emit(Ve.Signature,{status:"completed",message:r,signature:i}),i}parseLogs(e,n){if(!n||n.length===0)return[];const a=this.writeContract.interface.getEventTopic(e);return n.filter(i=>i.topics.indexOf(a)>=0).map(i=>this.writeContract.interface.parseLog(i))}async defaultGaslessSendFunction(e){return this.options.gasless&&"biconomy"in this.options.gasless?this.biconomySendFunction(e):this.defenderSendFunction(e)}async biconomySendFunction(e){var u,m;P(this.options.gasless&&"biconomy"in this.options.gasless,"calling biconomySendFunction without biconomy");const n=this.getSigner(),a=this.getProvider();P(n&&a,"signer and provider must be set");const r=new J(jw(e.chainId,"biconomyForwarder"),r6,a),i=0,s=await w0(r,"getNonce",[e.from,i]),o={from:e.from,to:e.to,token:B,txGas:e.gasLimit.toNumber(),tokenGasPrice:"0",batchId:i,batchNonce:s.toNumber(),deadline:Math.floor(Date.now()/1e3+(((u=this.options)==null?void 0:u.gasless)&&"biconomy"in this.options.gasless&&((m=this.options.gasless.biconomy)==null?void 0:m.deadlineSeconds)||3600)),data:e.data},c=en(it(["address","address","address","uint256","uint256","uint256","uint256","uint256","bytes32"],[o.from,o.to,o.token,o.txGas,o.tokenGasPrice,o.batchId,o.batchNonce,o.deadline,Yn(o.data)]));this.emit(Ve.Signature,{status:"submitted",message:c,signature:""});const p=await n.signMessage(c);this.emit(Ve.Signature,{status:"completed",message:c,signature:p});const d=await ht("https://api.biconomy.io/api/v2/meta-tx/native",{method:"POST",body:JSON.stringify({from:e.from,apiId:this.options.gasless.biconomy.apiId,params:[o,p],to:e.to,gasLimit:e.gasLimit.toHexString()}),headers:{"x-api-key":this.options.gasless.biconomy.apiKey,"Content-Type":"application/json;charset=utf-8"}});if(d.ok){const f=await d.json();if(!f.txHash)throw new Error(`relay transaction failed: ${f.log}`);return f.txHash}throw new Error(`relay transaction failed with status: ${d.status} (${d.statusText})`)}async defenderSendFunction(e){P(this.options.gasless&&"openzeppelin"in this.options.gasless,"calling openzeppelin gasless transaction without openzeppelin config in the SDK options");const n=this.getSigner(),a=this.getProvider();P(n,"provider is not set"),P(a,"provider is not set");const r=this.options.gasless.openzeppelin.relayerForwarderAddress||(this.options.gasless.openzeppelin.useEOAForwarder?Cn[e.chainId].openzeppelinForwarderEOA||await M6(this.getProvider(),ln(this,Sn)):Cn[e.chainId].openzeppelinForwarder||await G1(this.getProvider(),ln(this,Sn))),i=new J(r,pv,a),s=await w0(i,"getNonce",[e.from]);let o,c,p;this.options.gasless.experimentalChainlessSupport?(o={name:"GSNv2 Forwarder",version:"0.0.1",verifyingContract:r},c={ForwardRequest:a6},p={from:e.from,to:e.to,value:b.from(0).toString(),gas:b.from(e.gasLimit).toString(),nonce:b.from(s).toString(),data:e.data,chainid:b.from(e.chainId).toString()}):(o={name:this.options.gasless.openzeppelin.domainName,version:this.options.gasless.openzeppelin.domainVersion,chainId:e.chainId,verifyingContract:r},c={ForwardRequest:n6},p={from:e.from,to:e.to,value:b.from(0).toString(),gas:b.from(e.gasLimit).toString(),nonce:b.from(s).toString(),data:e.data});let d;if(this.emit(Ve.Signature,{status:"submitted",message:p,signature:""}),e.functionName==="approve"&&e.functionArgs.length===2){const g=e.functionArgs[0],w=e.functionArgs[1],{message:I,signature:M}=await i6(n,this.writeContract.address,e.from,g,w),{r:R,s:N,v:x}=x1(M);p={to:this.readContract.address,owner:I.owner,spender:I.spender,value:b.from(I.value).toString(),nonce:b.from(I.nonce).toString(),deadline:b.from(I.deadline).toString(),r:R,s:N,v:x},d=M}else{const{signature:g}=await qa(n,o,c,p);d=g}let u="forward";p!=null&&p.owner&&(u="permit");const m=JSON.stringify({request:p,signature:d,forwarderAddress:r,type:u});this.emit(Ve.Signature,{status:"completed",message:p,signature:d});const f=await ht(this.options.gasless.openzeppelin.relayerUrl,{method:"POST",body:m});if(f.ok){const g=await f.json();if(!g.result)throw new Error(`Relay transaction failed: ${g.message}`);return JSON.parse(g.result).txHash}throw new Error(`relay transaction failed with status: ${f.status} (${f.statusText})`)}}function ct(t){return t.toLowerCase()===je||t.toLowerCase()===B}function Qa(t){return ct(t)?je:t}async function se(t,e,n){const a=await gt(t,n);return Oe(Ne.parse(e),a.decimals)}async function gt(t,e){if(ct(e)){const n=await t.getNetwork(),a=Cv(n.chainId);return{name:a.name,symbol:a.symbol,decimals:a.decimals}}else{const n=new J(e,qL,t),[a,r,i]=await Promise.all([n.name(),n.symbol(),n.decimals()]);return{name:a,symbol:r,decimals:i}}}async function Ce(t,e,n){const a=await gt(t,e);return{...a,value:b.from(n),displayValue:Ge(n,a.decimals)}}async function bt(t,e,n,a){if(ct(n))a.value=e;else{const r=t.getSigner(),i=t.getProvider(),s=new Z(r||i,n,Ee,t.options),o=await t.getSignerAddress(),c=t.readContract.address;return(await s.readContract.allowance(o,c)).lt(e)&&await s.sendTransaction("approve",[c,e]),a}}async function o6(t,e,n,a,r){const i=t.getSigner(),s=t.getProvider(),o=new Z(i||s,e,Ee,t.options),c=await t.getSignerAddress(),p=t.readContract.address,d=await o.readContract.allowance(c,p),u=b.from(n).mul(b.from(a)).div(Oe("1",r));d.lt(u)&&await o.sendTransaction("approve",[p,d.add(u)])}async function c6(t,e,n){const a=t.getProvider(),r=new Z(a,e,Ee,{}),i=await t.getSignerAddress(),s=t.readContract.address;return(await r.readContract.allowance(i,s)).gte(n)}function oF(t){return ik(Ne.parse(t))}async function p6(t,e,n,a,r,i,s,o,c){let p=wt(n.maxClaimablePerWallet,r),d=[Kt([0],32)],u=n.price,m=n.currencyAddress;try{if(!n.merkleRootHash.toString().startsWith(B)){const I=await q1(t,n.merkleRootHash.toString(),await a(),i.getProvider(),s,c);if(I)d=I.proof,p=I.maxClaimable==="unlimited"?ke:Oe(I.maxClaimable,r),u=I.price===void 0||I.price==="unlimited"?ke:await se(i.getProvider(),I.price,I.currencyAddress||B),m=I.currencyAddress||B;else if(c===kn.V1)throw new Error("No claim found for this address")}}catch(I){if((I==null?void 0:I.message)==="No claim found for this address")throw I;console.warn("failed to check claim condition merkle root hash, continuing anyways",I)}const f=await i.getCallOverrides()||{},g=u.toString()!==ke.toString()?u:n.price,w=m!==B?m:n.currencyAddress;return g.gt(0)&&(ct(w)?f.value=b.from(g).mul(e).div(Oe("1",r)):o&&await o6(i,w,g,e,r)),{overrides:f,proofs:d,maxClaimable:p,price:g,currencyAddress:w,priceInProof:u,currencyAddressInProof:m}}async function cF(t,e,n){if(!e)return null;const a=e[t];if(a){const r=await n.downloadJSON(a);if(r.isShardedMerkleTree&&r.merkleRoot===t){const i=await tt.fromUri(a,n);return(i==null?void 0:i.getAllEntries())||null}else{const i=await Sv.parseAsync(r);if(t===i.merkleRoot)return i.claims.map(s=>({address:s.address,maxClaimable:s.maxClaimable,price:s.price,currencyAddress:s.currencyAddress}))}}return null}async function q1(t,e,n,a,r,i){if(!n)return null;const s=n[e];if(s){const o=await r.downloadJSON(s);if(o.isShardedMerkleTree&&o.merkleRoot===e)return await(await tt.fromShardedMerkleTreeInfo(o,r)).getProof(t,a,i);const c=await Sv.parseAsync(o);if(e===c.merkleRoot)return c.claims.find(p=>p.address.toLowerCase()===t.toLowerCase())||null}return null}async function l6(t,e,n){if(t>=n.length)throw Error(`Index out of bounds - got index: ${t} with ${n.length} conditions`);const a=n[t].currencyMetadata.decimals,r=n[t].price,i=Ge(r,a),s=await K0.parseAsync({...n[t],price:i,...e}),o=await Wv.parseAsync({...s,price:r});return n.map((c,p)=>{let d;p===t?d=o:d=c;const u=Ge(d.price,a);return{...d,price:u}})}async function pF(t,e,n,a,r){const i=[];return{inputsWithSnapshots:await Promise.all(t.map(async o=>{if(o.snapshot&&o.snapshot.length>0){const c=await mF(o.snapshot,e,n,a,r);i.push(c),o.merkleRootHash=c.merkleRoot}else o.merkleRootHash=Kt([0],32);return o})),snapshotInfos:i}}function lF(t,e){const n=b.from(t),a=b.from(e);return n.eq(a)?0:n.gt(a)?1:-1}async function d6(t,e,n,a,r){const{inputsWithSnapshots:i,snapshotInfos:s}=await pF(t,e,n,a,r),o=await uU.parseAsync(i),c=(await Promise.all(o.map(p=>dF(p,e,n,a)))).sort((p,d)=>lF(p.startTimestamp,d.startTimestamp));return{snapshotInfos:s,sortedConditions:c}}async function dF(t,e,n,a){const r=t.currencyAddress===B?je:t.currencyAddress,i=wt(t.maxClaimableSupply,e),s=wt(t.maxClaimablePerWallet,e);let o;return t.metadata&&(typeof t.metadata=="string"?o=t.metadata:o=await a.upload(t.metadata)),{startTimestamp:t.startTime,maxClaimableSupply:i,supplyClaimed:0,maxClaimablePerWallet:s,pricePerToken:await se(n,t.price,r),currency:r,merkleRoot:t.merkleRootHash.toString(),waitTimeInSecondsBetweenClaims:t.waitInSeconds||0,metadata:o}}function I0(t){return{startTimestamp:t.startTimestamp,maxClaimableSupply:t.maxClaimableSupply,supplyClaimed:t.supplyClaimed,merkleRoot:t.merkleRoot,pricePerToken:t.pricePerToken,currency:t.currency,quantityLimitPerTransaction:t.maxClaimablePerWallet,waitTimeInSecondsBetweenClaims:t.waitTimeInSecondsBetweenClaims||0}}function v0(t){return{startTimestamp:t.startTimestamp,maxClaimableSupply:t.maxClaimableSupply,supplyClaimed:t.supplyClaimed,merkleRoot:t.merkleRoot,pricePerToken:t.pricePerToken,currency:t.currency,quantityLimitPerWallet:t.maxClaimablePerWallet,metadata:t.metadata||""}}function C0(t){return{startTimestamp:t.startTimestamp,maxClaimableSupply:t.maxClaimableSupply,supplyClaimed:t.supplyClaimed,merkleRoot:t.merkleRoot.toString(),pricePerToken:t.pricePerToken,currency:t.currency,maxClaimablePerWallet:t.quantityLimitPerTransaction,waitTimeInSecondsBetweenClaims:t.waitTimeInSecondsBetweenClaims}}function k0(t){return{startTimestamp:t.startTimestamp,maxClaimableSupply:t.maxClaimableSupply,supplyClaimed:t.supplyClaimed,merkleRoot:t.merkleRoot.toString(),pricePerToken:t.pricePerToken,currency:t.currency,maxClaimablePerWallet:t.quantityLimitPerWallet,waitTimeInSecondsBetweenClaims:0,metadata:t.metadata}}async function E0(t,e,n,a,r,i){var m;const s=await Ce(n,t.currency,t.pricePerToken),o=Tr(t.maxClaimableSupply,e),c=Tr(t.maxClaimablePerWallet,e),p=Tr(b.from(t.maxClaimableSupply).sub(t.supplyClaimed),e),d=Tr(t.supplyClaimed,e);let u;return t.metadata&&(u=await r.downloadJSON(t.metadata)),Wv.parseAsync({startTime:t.startTimestamp,maxClaimableSupply:o,maxClaimablePerWallet:c,currentMintSupply:d,availableSupply:p,waitInSeconds:(m=t.waitTimeInSecondsBetweenClaims)==null?void 0:m.toString(),price:b.from(t.pricePerToken),currency:t.currency,currencyAddress:t.currency,currencyMetadata:s,merkleRootHash:t.merkleRoot,snapshot:i?await cF(t.merkleRoot,a,r):void 0,metadata:u})}function Tr(t,e){return t.toString()===ke.toString()?"unlimited":Ge(t,e)}function wt(t,e){return t==="unlimited"?ke:Oe(t,e)}async function u6(t,e,n,a,r){let i={};const s=a||je,c=(await se(t.getProvider(),e,s)).mul(n);return c.gt(0)&&(s===je?i={value:c}:s!==je&&r&&await o6(t,s,c,n,0)),i}const uF=2;let kn=function(t){return t[t.V1=1]="V1",t[t.V2=2]="V2",t}({});class tt{constructor(e,n,a,r,i){l(this,"shardNybbles",void 0),l(this,"shards",void 0),l(this,"trees",void 0),l(this,"storage",void 0),l(this,"baseUri",void 0),l(this,"originalEntriesUri",void 0),l(this,"tokenDecimals",void 0),this.storage=e,this.shardNybbles=r,this.baseUri=n,this.originalEntriesUri=a,this.tokenDecimals=i,this.shards={},this.trees={}}static async fromUri(e,n){try{const a=await n.downloadJSON(e);if(a.isShardedMerkleTree)return tt.fromShardedMerkleTreeInfo(a,n)}catch{return}}static async fromShardedMerkleTreeInfo(e,n){return new tt(n,e.baseUri,e.originalEntriesUri,e.shardNybbles,e.tokenDecimals)}static hashEntry(e,n,a,r){switch(r){case kn.V1:return it(["address","uint256"],[e.address,wt(e.maxClaimable,n)]);case kn.V2:return it(["address","uint256","uint256","address"],[e.address,wt(e.maxClaimable,n),wt(e.price||"unlimited",a),e.currencyAddress||B])}}static async fetchAndCacheDecimals(e,n,a){if(!a)return 18;let r=e[a];return r===void 0&&(r=(await gt(n,a)).decimals,e[a]=r),r}static async buildAndUpload(e,n,a,r,i){let s=arguments.length>5&&arguments[5]!==void 0?arguments[5]:uF;const o=await m6(e),c={};for(const N of o){const x=N.address.slice(2,2+s).toLowerCase();c[x]===void 0&&(c[x]=[]),c[x].push(N)}const p={},d=await Promise.all(Object.entries(c).map(async N=>{let[x,L]=N;return[x,new w2.MerkleTree(await Promise.all(L.map(async H=>{const Q=await tt.fetchAndCacheDecimals(p,a,H.currencyAddress);return tt.hashEntry(H,n,Q,i)})),Yn,{sort:!0}).getHexRoot()]})),u=Object.fromEntries(d),m=new w2.MerkleTree(Object.values(u),Yn,{sort:!0}),f=[];for(const[N,x]of Object.entries(c)){const L={proofs:m.getProof(u[N]).map(H=>"0x"+H.data.toString("hex")),entries:x};f.push({data:JSON.stringify(L),name:`${N}.json`})}const g=await r.uploadBatch(f),w=g[0].slice(0,g[0].lastIndexOf("/")),I=await r.upload(o),M={merkleRoot:m.getHexRoot(),baseUri:w,originalEntriesUri:I,shardNybbles:s,tokenDecimals:n,isShardedMerkleTree:!0},R=await r.upload(M);return{shardedMerkleInfo:M,uri:R}}async getProof(e,n,a){const r=e.slice(2,2+this.shardNybbles).toLowerCase();let i=this.shards[r];const s={};if(i===void 0)try{i=this.shards[r]=await this.storage.downloadJSON(`${this.baseUri}/${r}.json`);const u=await Promise.all(i.entries.map(async m=>{const f=await tt.fetchAndCacheDecimals(s,n,m.currencyAddress);return tt.hashEntry(m,this.tokenDecimals,f,a)}));this.trees[r]=new w2.MerkleTree(u,Yn,{sort:!0})}catch{return null}const o=i.entries.find(u=>u.address.toLowerCase()===e.toLowerCase());if(!o)return null;const c=await tt.fetchAndCacheDecimals(s,n,o.currencyAddress),p=tt.hashEntry(o,this.tokenDecimals,c,a),d=this.trees[r].getProof(p).map(u=>"0x"+u.data.toString("hex"));return _v.parseAsync({...o,proof:d.concat(i.proofs)})}async getAllEntries(){try{return await this.storage.downloadJSON(this.originalEntriesUri)}catch(e){return console.warn("Could not fetch original snapshot entries",e),[]}}}async function m6(t){const n=Array.from({length:Math.ceil(t.length/25e3)},(r,i)=>t.slice(i*25e3,i*25e3+25e3)),a=[];for(const r of n)a.push(...await F1.parseAsync(r));return a}async function mF(t,e,n,a,r){const i=await m6(t),s=i.map(p=>p.address);if(new Set(s).size<s.length)throw new GU;const c=await tt.buildAndUpload(i,e,n,a,r);return{merkleRoot:c.shardedMerkleInfo.merkleRoot,snapshotUri:c.uri}}const h6={admin:"",transfer:"TRANSFER_ROLE",minter:"MINTER_ROLE",pauser:"PAUSER_ROLE",lister:"LISTER_ROLE",asset:"ASSET_ROLE",unwrap:"UNWRAP_ROLE",factory:"FACTORY_ROLE",signer:"SIGNER_ROLE"},y6=Object.keys(h6);function we(t){return t==="admin"?Kt([0],32):wa(h6[t])}class Ae{constructor(e){l(this,"contractWrapper",void 0),this.contractWrapper=e}encode(e,n){return this.contractWrapper.readContract.interface.encodeFunctionData(e,n)}decode(e,n){return this.contractWrapper.readContract.interface.decodeFunctionData(e,n)}}const GI="0x60606040526040805190810160405280600d81526020017f57726170706564204574686572000000000000000000000000000000000000008152506000908051906020019061004f9291906100c8565b506040805190810160405280600481526020017f57455448000000000000000000000000000000000000000000000000000000008152506001908051906020019061009b9291906100c8565b506012600260006101000a81548160ff021916908360ff16021790555034156100c357600080fd5b61016d565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061010957805160ff1916838001178555610137565b82800160010185558215610137579182015b8281111561013657825182559160200191906001019061011b565b5b5090506101449190610148565b5090565b61016a91905b8082111561016657600081600090555060010161014e565b5090565b90565b610c348061017c6000396000f3006060604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b9578063095ea7b31461014757806318160ddd146101a157806323b872dd146101ca5780632e1a7d4d14610243578063313ce5671461026657806370a082311461029557806395d89b41146102e2578063a9059cbb14610370578063d0e30db0146103ca578063dd62ed3e146103d4575b6100b7610440565b005b34156100c457600080fd5b6100cc6104dd565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561010c5780820151818401526020810190506100f1565b50505050905090810190601f1680156101395780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015257600080fd5b610187600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061057b565b604051808215151515815260200191505060405180910390f35b34156101ac57600080fd5b6101b461066d565b6040518082815260200191505060405180910390f35b34156101d557600080fd5b610229600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061068c565b604051808215151515815260200191505060405180910390f35b341561024e57600080fd5b61026460048080359060200190919050506109d9565b005b341561027157600080fd5b610279610b05565b604051808260ff1660ff16815260200191505060405180910390f35b34156102a057600080fd5b6102cc600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b18565b6040518082815260200191505060405180910390f35b34156102ed57600080fd5b6102f5610b30565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033557808201518184015260208101905061031a565b50505050905090810190601f1680156103625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561037b57600080fd5b6103b0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610bce565b604051808215151515815260200191505060405180910390f35b6103d2610440565b005b34156103df57600080fd5b61042a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610be3565b6040518082815260200191505060405180910390f35b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040518082815260200191505060405180910390a2565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105735780601f1061054857610100808354040283529160200191610573565b820191906000526020600020905b81548152906001019060200180831161055657829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b600081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156106dc57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156107b457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156108cf5781600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561084457600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610a2757600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501515610ab457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040518082815260200191505060405180910390a250565b600260009054906101000a900460ff1681565b60036020528060005260406000206000915090505481565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bc65780601f10610b9b57610100808354040283529160200191610bc6565b820191906000526020600020905b815481529060010190602001808311610ba957829003601f168201915b505050505081565b6000610bdb33848461068c565b905092915050565b60046020528160005260406000206020528060005260406000206000915091505054815600a165627a7a72305820deb4c2ccab3c2fdca32ab3f46728389c2fe2c165d5fafa07661e4e004f6c344a0029";let i1;try{i1=new TextDecoder}catch{}let F,gn,E=0;const hF=105,yF=57342,fF=57343,ZI=57337,XI=6,Wn={};let V={},ce,x0,R0=0,ja=0,fe,ut,oe=[],s1=[],qe,Ue,ya,JI={useRecords:!1,mapsAsObjects:!0},o1=!1;class A0{constructor(e){if(e&&((e.keyMap||e._keyMap)&&!e.useRecords&&(e.useRecords=!1,e.mapsAsObjects=!0),e.useRecords===!1&&e.mapsAsObjects===void 0&&(e.mapsAsObjects=!0),e.getStructures&&(e.getShared=e.getStructures),e.getShared&&!e.structures&&((e.structures=[]).uninitialized=!0),e.keyMap)){this.mapKey=new Map;for(let[n,a]of Object.entries(e.keyMap))this.mapKey.set(a,n)}Object.assign(this,e)}decodeKey(e){return this.keyMap&&this.mapKey.get(e)||e}decode(e,n){if(F)return T6(()=>(w6(),this?this.decode(e,n):A0.prototype.decode.call(JI,e,n)));gn=n>-1?n:e.length,E=0,ja=0,x0=null,fe=null,F=e;try{Ue=e.dataView||(e.dataView=new DataView(e.buffer,e.byteOffset,e.byteLength))}catch(a){throw F=null,e instanceof Uint8Array?a:new Error("Source must be a Uint8Array or Buffer but was a "+(e&&typeof e=="object"?e.constructor.name:typeof e))}if(this instanceof A0){if(V=this,qe=this.sharedValues&&(this.pack?new Array(this.maxPrivatePackedValues||16).concat(this.sharedValues):this.sharedValues),this.structures)return ce=this.structures,e5();(!ce||ce.length>0)&&(ce=[])}else V=JI,(!ce||ce.length>0)&&(ce=[]),qe=null;return e5()}}function e5(){try{let t=X();if(fe){if(E>=fe.postBundlePosition){let e=new Error("Unexpected bundle position");throw e.incomplete=!0,e}E=fe.postBundlePosition,fe=null}if(E==gn)ce=null,F=null,ut&&(ut=null);else if(E>gn){let e=new Error("Unexpected end of CBOR data");throw e.incomplete=!0,e}else if(!o1)throw new Error("Data read, but end of buffer not reached");return t}catch(t){throw w6(),(t instanceof RangeError||t.message.startsWith("Unexpected end of buffer"))&&(t.incomplete=!0),t}}function X(){let t=F[E++],e=t>>5;if(t=t&31,t>23)switch(t){case 24:t=F[E++];break;case 25:if(e==7)return wF();t=Ue.getUint16(E),E+=2;break;case 26:if(e==7){let n=Ue.getFloat32(E);if(V.useFloat32>2){let a=I6[(F[E]&127)<<1|F[E+1]>>7];return E+=4,(a*n+(n>0?.5:-.5)>>0)/a}return E+=4,n}t=Ue.getUint32(E),E+=4;break;case 27:if(e==7){let n=Ue.getFloat64(E);return E+=8,n}if(e>1){if(Ue.getUint32(E)>0)throw new Error("JavaScript does not support arrays, maps, or strings with length over 4294967295");t=Ue.getUint32(E+4)}else V.int64AsNumber?(t=Ue.getUint32(E)*4294967296,t+=Ue.getUint32(E+4)):t=Ue.getBigUint64(E);E+=8;break;case 31:switch(e){case 2:case 3:throw new Error("Indefinite length not supported for byte or text strings");case 4:let n=[],a,r=0;for(;(a=X())!=Wn;)n[r++]=a;return e==4?n:e==3?n.join(""):Ja.Buffer.concat(n);case 5:let i;if(V.mapsAsObjects){let s={};if(V.keyMap)for(;(i=X())!=Wn;)s[It(V.decodeKey(i))]=X();else for(;(i=X())!=Wn;)s[It(i)]=X();return s}else{ya&&(V.mapsAsObjects=!0,ya=!1);let s=new Map;if(V.keyMap)for(;(i=X())!=Wn;)s.set(V.decodeKey(i),X());else for(;(i=X())!=Wn;)s.set(i,X());return s}case 7:return Wn;default:throw new Error("Invalid major type for indefinite length "+e)}default:throw new Error("Unknown token "+t)}switch(e){case 0:return t;case 1:return~t;case 2:return TF(t);case 3:if(ja>=E)return x0.slice(E-R0,(E+=t)-R0);if(ja==0&&gn<140&&t<32){let r=t<16?f6(t):bF(t);if(r!=null)return r}return gF(t);case 4:let n=new Array(t);for(let r=0;r<t;r++)n[r]=X();return n;case 5:if(V.mapsAsObjects){let r={};if(V.keyMap)for(let i=0;i<t;i++)r[It(V.decodeKey(X()))]=X();else for(let i=0;i<t;i++)r[It(X())]=X();return r}else{ya&&(V.mapsAsObjects=!0,ya=!1);let r=new Map;if(V.keyMap)for(let i=0;i<t;i++)r.set(V.decodeKey(X()),X());else for(let i=0;i<t;i++)r.set(X(),X());return r}case 6:if(t>=ZI){let r=ce[t&8191];if(r)return r.read||(r.read=c1(r)),r.read();if(t<65536){if(t==fF)return l1(X());if(t==yF){let i=fa(),s=X();for(let o=2;o<i;o++)l1([s++,X()]);return X()}else if(t==ZI)return xF();if(V.getShared&&(Q1(),r=ce[t&8191],r))return r.read||(r.read=c1(r)),r.read()}}let a=oe[t];if(a)return a.handlesRead?a(X):a(X());{let r=X();for(let i=0;i<s1.length;i++){let s=s1[i](t,r);if(s!==void 0)return s}return new Y0(r,t)}case 7:switch(t){case 20:return!1;case 21:return!0;case 22:return null;case 23:return;case 31:default:let r=(qe||pn())[t];if(r!==void 0)return r;throw new Error("Unknown token "+t)}default:if(isNaN(t)){let r=new Error("Unexpected end of CBOR data");throw r.incomplete=!0,r}throw new Error("Unknown CBOR token "+t)}}const t5=/^[a-zA-Z_$][a-zA-Z\d_$]*$/;function c1(t){function e(){let n=F[E++];if(n=n&31,n>23)switch(n){case 24:n=F[E++];break;case 25:n=Ue.getUint16(E),E+=2;break;case 26:n=Ue.getUint32(E),E+=4;break;default:throw new Error("Expected array header, but got "+F[E-1])}let a=this.compiledReader;for(;a;){if(a.propertyCount===n)return a(X);a=a.next}if(this.slowReads++>=3){let i=this.length==n?this:this.slice(0,n);return a=V.keyMap?new Function("r","return {"+i.map(s=>V.decodeKey(s)).map(s=>t5.test(s)?It(s)+":r()":"["+JSON.stringify(s)+"]:r()").join(",")+"}"):new Function("r","return {"+i.map(s=>t5.test(s)?It(s)+":r()":"["+JSON.stringify(s)+"]:r()").join(",")+"}"),this.compiledReader&&(a.next=this.compiledReader),a.propertyCount=n,this.compiledReader=a,a(X)}let r={};if(V.keyMap)for(let i=0;i<n;i++)r[It(V.decodeKey(this[i]))]=X();else for(let i=0;i<n;i++)r[It(this[i])]=X();return r}return t.slowReads=0,e}function It(t){return t==="__proto__"?"__proto_":t}let gF=p1;function p1(t){let e;if(t<16&&(e=f6(t)))return e;if(t>64&&i1)return i1.decode(F.subarray(E,E+=t));const n=E+t,a=[];for(e="";E<n;){const r=F[E++];if((r&128)===0)a.push(r);else if((r&224)===192){const i=F[E++]&63;a.push((r&31)<<6|i)}else if((r&240)===224){const i=F[E++]&63,s=F[E++]&63;a.push((r&31)<<12|i<<6|s)}else if((r&248)===240){const i=F[E++]&63,s=F[E++]&63,o=F[E++]&63;let c=(r&7)<<18|i<<12|s<<6|o;c>65535&&(c-=65536,a.push(c>>>10&1023|55296),c=56320|c&1023),a.push(c)}else a.push(r);a.length>=4096&&(e+=Te.apply(String,a),a.length=0)}return a.length>0&&(e+=Te.apply(String,a)),e}let Te=String.fromCharCode;function bF(t){let e=E,n=new Array(t);for(let a=0;a<t;a++){const r=F[E++];if((r&128)>0){E=e;return}n[a]=r}return Te.apply(String,n)}function f6(t){if(t<4)if(t<2){if(t===0)return"";{let e=F[E++];if((e&128)>1){E-=1;return}return Te(e)}}else{let e=F[E++],n=F[E++];if((e&128)>0||(n&128)>0){E-=2;return}if(t<3)return Te(e,n);let a=F[E++];if((a&128)>0){E-=3;return}return Te(e,n,a)}else{let e=F[E++],n=F[E++],a=F[E++],r=F[E++];if((e&128)>0||(n&128)>0||(a&128)>0||(r&128)>0){E-=4;return}if(t<6){if(t===4)return Te(e,n,a,r);{let i=F[E++];if((i&128)>0){E-=5;return}return Te(e,n,a,r,i)}}else if(t<8){let i=F[E++],s=F[E++];if((i&128)>0||(s&128)>0){E-=6;return}if(t<7)return Te(e,n,a,r,i,s);let o=F[E++];if((o&128)>0){E-=7;return}return Te(e,n,a,r,i,s,o)}else{let i=F[E++],s=F[E++],o=F[E++],c=F[E++];if((i&128)>0||(s&128)>0||(o&128)>0||(c&128)>0){E-=8;return}if(t<10){if(t===8)return Te(e,n,a,r,i,s,o,c);{let p=F[E++];if((p&128)>0){E-=9;return}return Te(e,n,a,r,i,s,o,c,p)}}else if(t<12){let p=F[E++],d=F[E++];if((p&128)>0||(d&128)>0){E-=10;return}if(t<11)return Te(e,n,a,r,i,s,o,c,p,d);let u=F[E++];if((u&128)>0){E-=11;return}return Te(e,n,a,r,i,s,o,c,p,d,u)}else{let p=F[E++],d=F[E++],u=F[E++],m=F[E++];if((p&128)>0||(d&128)>0||(u&128)>0||(m&128)>0){E-=12;return}if(t<14){if(t===12)return Te(e,n,a,r,i,s,o,c,p,d,u,m);{let f=F[E++];if((f&128)>0){E-=13;return}return Te(e,n,a,r,i,s,o,c,p,d,u,m,f)}}else{let f=F[E++],g=F[E++];if((f&128)>0||(g&128)>0){E-=14;return}if(t<15)return Te(e,n,a,r,i,s,o,c,p,d,u,m,f,g);let w=F[E++];if((w&128)>0){E-=15;return}return Te(e,n,a,r,i,s,o,c,p,d,u,m,f,g,w)}}}}}function TF(t){return V.copyBuffers?Uint8Array.prototype.slice.call(F,E,E+=t):F.subarray(E,E+=t)}let g6=new Float32Array(1),wr=new Uint8Array(g6.buffer,0,4);function wF(){let t=F[E++],e=F[E++],n=(t&127)>>2;if(n===31)return e||t&3?NaN:t&128?-1/0:1/0;if(n===0){let a=((t&3)<<8|e)/16777216;return t&128?-a:a}return wr[3]=t&128|(n>>1)+56,wr[2]=(t&7)<<5|e>>3,wr[1]=e<<5,wr[0]=0,g6[0]}class Y0{constructor(e,n){this.value=e,this.tag=n}}oe[0]=t=>new Date(t);oe[1]=t=>new Date(Math.round(t*1e3));oe[2]=t=>{let e=BigInt(0);for(let n=0,a=t.byteLength;n<a;n++)e=BigInt(t[n])+e<<BigInt(8);return e};oe[3]=t=>BigInt(-1)-oe[2](t);oe[4]=t=>Number(t[1]+"e"+t[0]);oe[5]=t=>t[1]*Math.exp(t[0]*Math.log(2));const l1=t=>{let e=t[0]-57344,n=t[1],a=ce[e];a&&a.isShared&&((ce.restoreStructures||(ce.restoreStructures=[]))[e]=a),ce[e]=n,n.read=c1(n);let r={};if(V.keyMap)for(let i=2,s=t.length;i<s;i++){let o=V.decodeKey(n[i-2]);r[It(o)]=t[i]}else for(let i=2,s=t.length;i<s;i++){let o=n[i-2];r[It(o)]=t[i]}return r};oe[hF]=l1;oe[14]=t=>fe?fe[0].slice(fe.position0,fe.position0+=t):new Y0(t,14);oe[15]=t=>fe?fe[1].slice(fe.position1,fe.position1+=t):new Y0(t,15);let IF={Error,RegExp};oe[27]=t=>(IF[t[0]]||Error)(t[1],t[2]);const b6=t=>{if(F[E++]!=132)throw new Error("Packed values structure must be followed by a 4 element array");let e=t();return qe=qe?e.concat(qe.slice(e.length)):e,qe.prefixes=t(),qe.suffixes=t(),t()};b6.handlesRead=!0;oe[51]=b6;oe[XI]=t=>{if(!qe)if(V.getShared)Q1();else return new Y0(t,XI);if(typeof t=="number")return qe[16+(t>=0?2*t:-2*t-1)];throw new Error("No support for non-integer packed references yet")};oe[25]=t=>stringRefs[t];oe[256]=t=>{stringRefs=[];try{return t()}finally{stringRefs=null}};oe[256].handlesRead=!0;oe[28]=t=>{ut||(ut=new Map,ut.id=0);let e=ut.id++,n=F[E],a;n>>5==4?a=[]:a={};let r={target:a};ut.set(e,r);let i=t();return r.used?Object.assign(a,i):(r.target=i,i)};oe[28].handlesRead=!0;oe[29]=t=>{let e=ut.get(t);return e.used=!0,e.target};oe[258]=t=>new Set(t);(oe[259]=t=>(V.mapsAsObjects&&(V.mapsAsObjects=!1,ya=!0),t())).handlesRead=!0;function Bn(t,e){return typeof t=="string"?t+e:t instanceof Array?t.concat(e):Object.assign({},t,e)}function pn(){if(!qe)if(V.getShared)Q1();else throw new Error("No packed values available");return qe}const vF=1399353956;s1.push((t,e)=>{if(t>=225&&t<=255)return Bn(pn().prefixes[t-224],e);if(t>=28704&&t<=32767)return Bn(pn().prefixes[t-28672],e);if(t>=1879052288&&t<=2147483647)return Bn(pn().prefixes[t-1879048192],e);if(t>=216&&t<=223)return Bn(e,pn().suffixes[t-216]);if(t>=27647&&t<=28671)return Bn(e,pn().suffixes[t-27639]);if(t>=1811940352&&t<=1879048191)return Bn(e,pn().suffixes[t-1811939328]);if(t==vF)return{packedValues:qe,structures:ce.slice(0),version:e};if(t==55799)return e});const CF=new Uint8Array(new Uint16Array([1]).buffer)[0]==1,n5=[Uint8Array],kF=[64];for(let t=0;t<n5.length;t++)EF(n5[t],kF[t]);function EF(t,e){let n="get"+t.name.slice(0,-5);typeof t!="function"&&(t=null);let a=t.BYTES_PER_ELEMENT;for(let r=0;r<2;r++){if(!r&&a==1)continue;let i=a==2?1:a==4?2:3;oe[r?e:e-4]=a==1||r==CF?s=>{if(!t)throw new Error("Could not find typed array for code "+e);return new t(Uint8Array.prototype.slice.call(s,0).buffer)}:s=>{if(!t)throw new Error("Could not find typed array for code "+e);let o=new DataView(s.buffer,s.byteOffset,s.byteLength),c=s.length>>i,p=new t(c),d=o[n];for(let u=0;u<c;u++)p[u]=d.call(o,u<<i,r);return p}}}function xF(){let t=fa(),e=E+X();for(let a=2;a<t;a++){let r=fa();E+=r}let n=E;return E=e,fe=[p1(fa()),p1(fa())],fe.position0=0,fe.position1=0,fe.postBundlePosition=E,E=n,X()}function fa(){let t=F[E++]&31;if(t>23)switch(t){case 24:t=F[E++];break;case 25:t=Ue.getUint16(E),E+=2;break;case 26:t=Ue.getUint32(E),E+=4;break}return t}function Q1(){if(V.getShared){let t=T6(()=>(F=null,V.getShared()))||{},e=t.structures||[];V.sharedVersion=t.version,qe=V.sharedValues=t.packedValues,ce===!0?V.structures=ce=e:ce.splice.apply(ce,[0,e.length].concat(e))}}function T6(t){let e=gn,n=E,a=R0,r=ja,i=x0,s=ut,o=fe,c=new Uint8Array(F.slice(0,gn)),p=ce,d=V,u=o1,m=t();return gn=e,E=n,R0=a,ja=r,x0=i,ut=s,fe=o,F=c,o1=u,ce=p,V=d,Ue=new DataView(F.buffer,F.byteOffset,F.byteLength),m}function w6(){F=null,ut=null,ce=null}const I6=new Array(147);for(let t=0;t<256;t++)I6[t]=Number("1e"+Math.floor(45.15-t*.30103));const RF=new A0({useRecords:!1}),AF=RF.decode;function PF(t,e){return MF(t,e.abis)}function MF(t,e){const n=Va(t),a=e.flatMap(i=>Va(i));return n.filter(i=>a.find(o=>o.name===i.name&&o.inputs.length===i.inputs.length&&o.inputs.every((c,p)=>{var d;return c.type==="tuple"||c.type==="tuple[]"?c.type===i.inputs[p].type&&((d=c.components)==null?void 0:d.every((u,m)=>{var f,g;return u.type===((g=(f=i.inputs[p].components)==null?void 0:f[m])==null?void 0:g.type)})):c.type===i.inputs[p].type}))!==void 0).length===a.length}async function _F(t,e){const n=await Za(t,e);return z0(n.abi)}async function SF(t,e){const n=await Za(t,e);return Va(n.abi,n.metadata)}function v6(t,e,n){var a,r,i,s,o,c,p,d,u,m;return((o=(s=(r=(a=e==null?void 0:e.output)==null?void 0:a.userdoc)==null?void 0:r[n])==null?void 0:s[Object.keys(((i=e==null?void 0:e.output)==null?void 0:i.userdoc[n])||{}).find(f=>f.includes(t||"unknown"))||""])==null?void 0:o.notice)||((m=(u=(p=(c=e==null?void 0:e.output)==null?void 0:c.devdoc)==null?void 0:p[n])==null?void 0:u[Object.keys(((d=e==null?void 0:e.output)==null?void 0:d.devdoc[n])||{}).find(f=>f.includes(t||"unknown"))||""])==null?void 0:m.details)}function z0(t){const e=G.parse(t||[]);for(const n of e)if(n.type==="constructor")return n.inputs||[];return[]}function WF(t,e){const n=G.parse(t||[]);for(const a of n)if(a.type==="function"&&a.name===e)return a.inputs||[];return[]}function Va(t,e){var r,i,s,o;const n=(t||[]).filter(c=>c.type==="function"),a=[];for(const c of n){const p=v6(c.name,e,"methods"),d=((i=(r=c.inputs)==null?void 0:r.map(w=>`${w.name||"key"}: ${d1(w)}`))==null?void 0:i.join(", "))||"",u=d?`, ${d}`:"",m=(o=(s=c.outputs)==null?void 0:s.map(w=>d1(w,!0)))==null?void 0:o.join(", "),f=m?`: Promise<${m}>`:": Promise<TransactionResult>",g=`contract.call("${c.name}"${u})${f}`;a.push({inputs:c.inputs||[],outputs:c.outputs||[],name:c.name||"unknown",signature:g,stateMutability:c.stateMutability||"",comment:p})}return a}function BF(t,e){const a=G.parse(t||[]).filter(i=>i.type==="event"),r=[];for(const i of a){const s=v6(i.name,e,"events");r.push({inputs:i.inputs||[],outputs:i.outputs||[],name:i.name||"unknown",comment:s})}return r}function d1(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,a=t.type,r=!1;return a.endsWith("[]")&&(r=!0,a=a.slice(0,-2)),a.startsWith("bytes")&&(a="BytesLike"),(a.startsWith("uint")||a.startsWith("int"))&&(a=e?"BigNumber":"BigNumberish"),a.startsWith("bool")&&(a="boolean"),a==="address"&&(a="string"),a==="tuple"&&t.components&&(a=`{ ${t.components.map(i=>d1(i,!1,!0)).join(", ")} }`),r&&(a+="[]"),n&&(a=`${t.name}: ${a}`),a}function NF(t){if(t.startsWith("0x363d3d373d3d3d363d73"))return`0x${t.slice(22,62)}`;if(t.startsWith("0x36603057343d5230"))return`0x${t.slice(122,162)}`;if(t.startsWith("0x3d3d3d3d363d3d37363d73"))return`0x${t.slice(24,64)}`;if(t.startsWith("0x366000600037611000600036600073"))return`0x${t.slice(32,72)}`}async function Ga(t,e){let n;try{n=await e.getCode(t)}catch(a){throw new Error(`Failed to get bytecode for address ${t}: ${a}`)}if(n==="0x"){const a=await e.getNetwork();throw new Error(`Contract at ${t} does not exist on chain '${a.name}' (chainId: ${a.chainId})`)}try{const a=NF(n);if(a)return await Ga(a,e)}catch{}try{const r=`0x${(await e.getStorageAt(t,b.from("0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"))).slice(-40)}`;if(Ln.isAddress(r)&&r!==B)return await Ga(r,e)}catch{}return await DF(n)}function DF(t){const e=LF(t),n=e[e.length-2]*256+e[e.length-1],a=Uint8Array.from(e.slice(e.length-2-n,-2)),r=AF(a);if("ipfs"in r&&r.ipfs)try{return`ipfs://${zC.encode(r.ipfs)}`}catch(i){console.warn("feature-detection ipfs cbor failed",i)}}function LF(t){if(t=t.toString(16),t.startsWith("0x")||(t=`0x${t}`),!UF(t))throw new Error(`Given value "${t}" is not a valid hex string.`);t=t.replace(/^0x/i,"");const e=[];for(let n=0;n<t.length;n+=2)e.push(parseInt(t.slice(n,n+2),16));return e}function UF(t){return(typeof t=="string"||typeof t=="number")&&/^(-)?0x[0-9a-f]*$/i.test(t.toString())}async function C6(t,e){return X0.parse(JSON.parse(await(await e.download(t)).text()))}async function Za(t,e){const n=await C6(t,e),a=await(await e.download(n.bytecodeUri)).text(),r=await B0(n.metadataUri,e);return vK.parse({...n,...r,bytecode:a})}async function k6(t,e){const n=await(await e.download(t)).text();return gK.parse(JSON.parse(n))}function j1(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:jU;const n={};for(const a in e){const r=e[a],i=PF(t,r),s=j1(t,r.features);n[a]={...r,features:s,enabled:i}}return n}function E6(t,e){if(!!t)for(const n in t){const a=t[n];a.enabled&&e.push(a),E6(a.features,e)}}function a5(t){const e=[];return E6(j1(t),e),e.map(n=>n.name)}function aa(t,e){const n=j1(t);return x6(n,e)}function $(t,e){if(!t)throw new na(e);return t}function U(t,e){return aa(G.parse(t.abi),e)}function x6(t,e){const n=Object.keys(t);if(!n.includes(e)){let r=!1;for(const i of n){const s=t[i];if(r=x6(s.features,e),r)break}return r}return t[e].enabled}function Ie(t,e){return t in e.readContract.functions}async function P0(t,e,n,a,r){let i=[];try{const s=aa(G.parse(e),"PluginRouter");if(aa(G.parse(e),"ExtensionRouter")){const d=(await new Z(n,t,Jv,a).call("getAllExtensions")).map(u=>u.metadata.implementation);i=await r5(d,n,r)}else if(s){const d=(await new Z(n,t,$1,a).call("getAllPlugins")).map(m=>m.pluginAddress),u=Array.from(new Set(d));i=await r5(u,n,r)}}catch{}return i.length>0?KF([e,...i]):e}async function FF(t,e){const{extendedMetadata:n}=await Gt(t,e);return(n==null?void 0:n.compositeAbi)||[]}function HF(t){const e=aa(G.parse(t),"PluginRouter");return aa(G.parse(t),"ExtensionRouter")||e}async function r5(t,e,n){return(await Promise.all(t.map(a=>Ft(a,e,n).catch(r=>(console.error(`Failed to fetch plug-in for ${a}`,r),{abi:[]}))))).map(a=>a.abi)}async function V1(t,e){var s;let n=[];const{compilerMetadata:a,extendedMetadata:r}=await Gt(t,e);if(aa(G.parse(a.abi),"PluginRouter")&&r&&((s=r.factoryDeploymentData)==null?void 0:s.implementationAddresses)){const o=Object.entries(r.factoryDeploymentData.implementationAddresses);try{const c=o.find(u=>{let[,m]=u;return m!==""}),[p,d]=c||[];if(p&&d){const u=Ut(parseInt(p),{}),g=(await new Z(u,d,$1,{}).call("getAllPlugins")).map(R=>R.pluginAddress),w=Array.from(new Set(g)),I=(await Promise.all(w.map(async R=>Ft(R,u,e)))).map(R=>R.name),M=await Promise.all(I.map(R=>cr(R)));n=(await Promise.all(M.map(async R=>Gt(R,e)))).map(R=>R.compilerMetadata)}}catch{}}return n}function KF(t){const e=t.map(r=>G.parse(r)).flat(),a=sF(e,(r,i)=>r.name===i.name&&r.type===i.type&&r.inputs.length===i.inputs.length).filter(r=>r.type!=="constructor");return G.parse(a)}function R6(t){return"("+t.map(e=>e.type==="tuple"?R6(e.components):e.type).join(",")+")"}function OF(t,e){const n=new A1(e),a=[];for(const r of Object.values(n.functions)){const i=n.getFunction(r.name);i.name.includes("_")||a.push({functionSelector:n.getSighash(i),functionSignature:i.name+R6(i.inputs),pluginAddress:t})}return a}const $F=["eip-155","eip155","protected","invalid chain id for signer","chain id none","chain_id mismatch","recovered sender mismatch","transaction hash mismatch","chainid no support"],YF=[["account","not found"],["wrong","chainid"]],Hn={[5001]:{name:"Mantle Testnet",gasPrice:1},[71402]:{name:"Godwoken Mainnet",gasPrice:4e4*10**9},[1351057110]:{name:"Chaos (SKALE Testnet)",gasPrice:1e5},[361]:{name:"Theta Mainnet",gasPrice:4e3*10**9},[365]:{name:"Theta Testnet",gasPrice:4e3*10**9}};function i5(t){const e=$F.findIndex(a=>t.includes(a)),n=YF.findIndex(a=>{let r=!0;return a.forEach(i=>{r&&(r=t.includes(i))}),r});return e!==-1||n!==-1}const s5="0xdd99b75f095d0c4d5112aCe938e4e6ed962fb024",zF="0x604580600e600039806000f350fe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe03601600081602082378035828234f58015156039578182fd5b8082525050506014600cf3",qF={v:27,r:"0x2222222222222222222222222222222222222222222222222222222222222222",s:"0x2222222222222222222222222222222222222222222222222222222222222222"},M0="0x4e59b44847b379578588920cA78FbF26c0B4956C",QF=5e6,jF="0x60806040526040516107f33803806107f383398101604081905261002291610359565b805160005b818110156100c157828181518110610041576100416104c9565b6020026020010151600001516001600160a01b03163b600014156100af576100ad838281518110610074576100746104c9565b602002602001015160200151848381518110610092576100926104c9565b6020026020010151604001516100c960201b6100091760201c565b505b806100b9816104df565b915050610027565b505050610557565b606061011183836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564000081525061011860201b60201c565b9392505050565b6060610127848460008561012f565b949350505050565b6060824710156101955760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084015b60405180910390fd5b6001600160a01b0385163b6101ec5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161018c565b600080866001600160a01b031685876040516102089190610508565b60006040518083038185875af1925050503d8060008114610245576040519150601f19603f3d011682016040523d82523d6000602084013e61024a565b606091505b50909250905061025b828286610266565b979650505050505050565b60608315610275575081610111565b8251156102855782518084602001fd5b8160405162461bcd60e51b815260040161018c9190610524565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156102d7576102d761029f565b60405290565b604051601f8201601f191681016001600160401b03811182821017156103055761030561029f565b604052919050565b80516001600160a01b038116811461032457600080fd5b919050565b60005b8381101561034457818101518382015260200161032c565b83811115610353576000848401525b50505050565b6000602080838503121561036c57600080fd5b82516001600160401b038082111561038357600080fd5b818501915085601f83011261039757600080fd5b8151818111156103a9576103a961029f565b8060051b6103b88582016102dd565b91825283810185019185810190898411156103d257600080fd5b86860192505b838310156104bc578251858111156103f05760008081fd5b86016060601f19828d0381018213156104095760008081fd5b6104116102b5565b61041c8b850161030d565b8152604061042b81860161030d565b828d01529284015192898411156104425760008081fd5b83850194508e603f86011261045957600093508384fd5b8b85015193508984111561046f5761046f61029f565b61047f8c84601f870116016102dd565b92508383528e818587010111156104965760008081fd5b6104a5848d8501838801610329565b8101919091528452505091860191908601906103d8565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561050157634e487b7160e01b600052601160045260246000fd5b5060010190565b6000825161051a818460208701610329565b9190910192915050565b6020815260008251806020840152610543816040850160208701610329565b601f01601f19169190910160400192915050565b61028d806105666000396000f3fe6080604052600080fd5b606061004b83836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610052565b9392505050565b60606100618484600085610069565b949350505050565b6060824710156100cf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084015b60405180910390fd5b6001600160a01b0385163b6101265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100c6565b600080866001600160a01b031685876040516101429190610208565b60006040518083038185875af1925050503d806000811461017f576040519150601f19603f3d011682016040523d82523d6000602084013e610184565b606091505b509150915061019482828661019f565b979650505050505050565b606083156101ae57508161004b565b8251156101be5782518084602001fd5b8160405162461bcd60e51b81526004016100c69190610224565b60005b838110156101f35781810151838201526020016101db565b83811115610202576000848401525b50505050565b6000825161021a8184602087016101d8565b9190910192915050565b60208152600082518060208401526102438160408501602087016101d8565b601f01601f1916919091016040019291505056fea26469706673582212200b524eb8ceaafe6c603273ee859fddbc2d6f1b7860c3d853dcf6f129f9d9371364736f6c634300080c0033",VF=[{inputs:[{components:[{internalType:"address",name:"predictedAddress",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct IDeployer.Transaction[]",name:"transactions",type:"tuple[]"}],stateMutability:"payable",type:"constructor"}];let Tt={};const _2={},S2={};async function Vt(t,e){const n=await e.getCode(t);return n!=="0x"&&n!=="0x0"}async function A6(t){try{await t.sendTransaction("0xf8a58085174876e800830186a08080b853604580600e600039806000f350fe7fffffffffffffffafffffffffffffffffffffffffffffffffffffffffffffffe03601600081602082378035828234f58015156039578182fd5b8082525050506014600cf31ba02222222222222222222222222222222222222222222222222222222222222222a02222222222222222222222222222222222222222222222222222222222222222")}catch(e){const n=e.toString().toLowerCase(),a=JSON.stringify(e).toLowerCase();return!!(i5(n)||i5(a))}return!1}async function An(t){if(await Vt(M0,t))return M0;const n=await A6(t),a=(await t.getNetwork()).chainId,r=n?a:0;return(Hn[a]?S0(r,Hn[a].gasPrice):S0(r)).deployment}function P6(t){const n=`tw.${wa(t)}`;return wa(n)}function o5(t,e){const n=P6(t);return Ta(["bytes32","bytes","bytes"],[n,t,e])}function c5(t,e,n){const a=P6(t),r=Ta(["bytes","bytes"],[t,e]),i=Ta(["bytes1","address","bytes32","bytes32"],["0xff",n,a,it(["bytes"],[r])]);return`0x${it(["bytes"],[i]).slice(26)}`}async function M6(t,e,n){return n||(n=await An(t)),(await mt("infra",t,e,n,{contractName:"ForwarderEOAOnly"})).transaction.predictedAddress}async function G1(t,e,n){return n||(n=await An(t)),(await mt("infra",t,e,n,{contractName:"Forwarder"})).transaction.predictedAddress}async function GF(t,e,n){return n||(n=await An(t)),(await mt("infra",t,e,n,{contractName:"TWCloneFactory"})).transaction.predictedAddress}async function ZF(t,e,n){const a=Ut(e,{thirdwebApiKey:vn}),r=await XF(t,e,n),i=await Vt(r,a);return P(i,"Contract not deployed yet"),r}async function XF(t,e,n){var c;const a=Ut(e,{thirdwebApiKey:vn}),r=await cr(t),i=await An(a);if(P(i,"Thirdweb stack not found"),(await V1(r,n)).length>0){const d=(c=(await _0(r,n,a,i)).find(u=>u.type==="implementation"))==null?void 0:c.transaction.predictedAddress;return P(d,"Error computing address for plugin router"),d}return(await mt("implementation",a,n,i,{contractName:t})).transaction.predictedAddress}async function JF(t,e,n,a){var d;const r=Ut(e,{thirdwebApiKey:vn}),i=await cr(t),s=await Gt(i,n),o=await An(r);P(o,"Thirdweb stack not found");const c=await V1(i,n);let p;return c.length>0?p=(d=(await _0(i,n,r,o)).find(m=>m.type==="implementation"))==null?void 0:d.encodedArgs:p=await _6(s.compilerMetadata,r,n,o,a),p}function eH(t,e){const n=en(Yn(yI(t))),a=E1(n,e),r=yI(t,e);return{signer:a,transaction:r}}async function tH(t,e){var c,p;if(P(t.provider,"No provider"),await Vt(M0,t.provider))return M0;const a=await A6(t.provider),r=(await t.provider.getNetwork()).chainId,i=a?r:0;console.debug(`ChainId ${r} enforces EIP155: ${a}`);const s=Hn[r]?S0(i,Hn[r].gasPrice):S0(i);if(!await Vt(s.deployment,t.provider)){const d=Hn[r]?b.from(Hn[r].gasPrice).mul(1e5):oF("0.01");(await t.provider.getBalance(s.signer)).lt(d)&&await t.sendTransaction({to:s.signer,value:d});try{console.debug(`deploying CREATE2 factory at: ${s.deployment}`),(c=e==null?void 0:e.notifier)==null||c.call(e,"deploying","create2Factory"),await t.provider.sendTransaction(s.transaction),(p=e==null?void 0:e.notifier)==null||p.call(e,"deployed","create2Factory")}catch(u){throw new Error(`Couldn't deploy CREATE2 factory: ${JSON.stringify(u)}`)}}return s.deployment}async function nH(t,e,n){var i,s;let a=arguments.length>3&&arguments[3]!==void 0?arguments[3]:7e6;if(P(t.provider,"Provider required"),!await Vt(e.predictedAddress,t.provider)){console.debug(`deploying contract via create2 factory at: ${e.predictedAddress}`);let o={to:e.to,data:e.data};try{await t.estimateGas(o)}catch(c){console.debug("error estimating gas while deploying prebuilt: ",c),o.gasLimit=b.from(a)}(i=n==null?void 0:n.notifier)==null||i.call(n,"deploying","preset"),await(await t.sendTransaction(o)).wait(),(s=n==null?void 0:n.notifier)==null||s.call(n,"deployed","preset")}}async function _0(t,e,n,a){Tt={};const r=a||await An(n),i={},s=[],{compilerMetadata:o}=await Gt(t,e),c=await V1(t,e);if(c.length>0){const u=await Promise.all(c.map(async g=>await mt("plugin",n,e,r,{metadata:g}))),m=[];c.forEach((g,w)=>{const I=OF(u[w].transaction.predictedAddress,g.abi);m.push(...I)});const f=await mt("plugin",n,e,r,{contractName:"PluginMap",constructorParams:{_pluginsToAdd:{value:m}}});i._pluginMap={value:f.transaction.predictedAddress},s.push(...u,f)}const p=await mt("implementation",n,e,r,{metadata:o,constructorParams:i}),d=await mt("infra",n,e,r,{contractName:"TWCloneFactory"});return s.push(d),s.push(...Object.values(Tt)),s.push(p),s}async function aH(t,e,n){var i,s;let a=S6(e);if(a.length===0)return;(i=n==null?void 0:n.notifier)==null||i.call(n,"deploying","infra");const r=await Promise.all(a.map(o=>new R1(VF,jF).connect(t).deploy(o)));await Promise.all(r.map(o=>o.deployed())),(s=n==null?void 0:n.notifier)==null||s.call(n,"deployed","infra")}async function mt(t,e,n,a,r){let i=r&&r.contractName,s=r&&r.metadata;if(P(i||s,"Require contract name or metadata"),i&&Tt[i])return Tt[i];if(i==="WETH9"){const u=c5(GI,[],a),m=await Vt(u,e);let f="";return m||(f=o5(GI,[])),{name:i,type:t,transaction:{predictedAddress:u,to:a,data:f}}}if(!s){P(i,"Require contract name");const u=await cr(i);s=(await Gt(u,n)).compilerMetadata}const o=await _6(s,e,n,a,r==null?void 0:r.constructorParams),c=c5(s.bytecode,o,a),p=await Vt(c,e);let d="";return p||(d=o5(s.bytecode,o)),{name:i,type:t,transaction:{predictedAddress:c,to:a,data:d},encodedArgs:o}}async function _6(t,e,n,a,r){const i=z0(t.abi);let s=i.map(p=>p.type==="tuple[]"?ek.from(p):p.type);const o=await Promise.all(i.map(async p=>{if(r&&r[p.name])return r[p.name].type&&P(r[p.name].type===p.type,`Provided type ${r[p.name].type} doesn't match the actual type ${p.type} from Abi`),r[p.name].value;if(p.name&&p.name.includes("nativeTokenWrapper")){const d=(await e.getNetwork()).chainId;let u=Cv(d).wrapped.address;if(u===B){const m=await mt("infra",e,n,a,{contractName:"WETH9"});Tt.WETH9||(Tt.WETH9=m),u=m.transaction.predictedAddress}return u}else if(p.name&&p.name.includes("trustedForwarder")){if(t.name==="Pack"){const u=await mt("infra",e,n,a,{contractName:"ForwarderEOAOnly"});return Tt.ForwarderEOAOnly||(Tt.ForwarderEOAOnly=u),u.transaction.predictedAddress}const d=await mt("infra",e,n,a,{contractName:"Forwarder"});return Tt.Forwarder||(Tt.Forwarder=d),d.transaction.predictedAddress}else throw new Error("Can't resolve constructor arguments")}));return Tn.encode(s,o)}function p5(t,e){if(t.length!==e.length)throw Error(`Passed the wrong number of constructor arguments: ${e.length}, expected ${t.length}`);return t.map((n,a)=>n==="tuple"||n.endsWith("[]")?typeof e[a]=="string"?JSON.parse(e[a]):e[a]:n==="bytes32"?(P(V2(e[a]),`Could not parse bytes32 value. Expected valid hex string but got "${e[a]}".`),Kt(e[a],32)):n.startsWith("bytes")?(P(V2(e[a]),`Could not parse bytes value. Expected valid hex string but got "${e[a]}".`),e[a]):n.startsWith("uint")||n.startsWith("int")?b.from(e[a].toString()):e[a])}function S0(t,e){const n=K5(qF),a=eH({gasPrice:e||100*10**9,gasLimit:1e5,nonce:0,data:zF,chainId:t},n),r=O5({from:a.signer,nonce:0});return{...a,deployment:r}}async function cr(t){if(S2[t])return S2[t];const e=await new at("polygon").getPublisher().getVersion(s5,t);if(!e)throw new Error(`No published contract found for ${t} at version by '${s5}'`);const n=e.metadataUri;return S2[t]=n,n}async function Gt(t,e){if(_2[t])return _2[t];const n=await Za(t,e);let a;try{a=await k6(t,e)}catch{}const r={compilerMetadata:n,extendedMetadata:a};return _2[t]=r,r}function rH(t){let e=en(t).map(n=>n===0?4:16).reduce((n,a)=>n+a)+200*t.length/2+6*Math.ceil(t.length/64)+32e3+21e3;return e=Math.floor(e*64/63),e}function S6(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:QF;if(t=t.filter(i=>i.data.length>0),t.length===0)return[];let n=[],a=0,r=[];return t.forEach(i=>{const s=rH(i.data);a+s>e?r.length===0?n.push([i]):(n.push(r),a=s,r=[i]):(a+=s,r.push(i))}),r.length>0&&n.push(r),n}function be(t){async function e(){return(await t(...arguments)).execute()}return e.prepare=t,e}function T(t){async function e(){return(await t(...arguments)).execute()}return e.prepare=t,e}async function iH(t,e,n,a,r){return r&&"biconomy"in r?oH(t,e,n,r):pH(t,e,n,a,r)}async function sH(t,e,n,a){var d;P(a&&"biconomy"in a,"calling biconomySendFunction without biconomy"),P(e&&n,"signer and provider must be set");const r=new J(jw(t.chainId,"biconomyForwarder"),r6,n),i=0,s=await w0(r,"getNonce",[t.from,i]),o={from:t.from,to:t.to,token:B,txGas:t.gasLimit.toNumber(),tokenGasPrice:"0",batchId:i,batchNonce:s.toNumber(),deadline:Math.floor(Date.now()/1e3+(a&&"biconomy"in a&&((d=a.biconomy)==null?void 0:d.deadlineSeconds)||3600)),data:t.data},c=en(it(["address","address","address","uint256","uint256","uint256","uint256","uint256","bytes32"],[o.from,o.to,o.token,o.txGas,o.tokenGasPrice,o.batchId,o.batchNonce,o.deadline,Yn(o.data)])),p=await e.signMessage(c);return{method:"POST",body:JSON.stringify({from:t.from,apiId:a.biconomy.apiId,params:[o,p],to:t.to,gasLimit:t.gasLimit.toHexString()}),headers:{"x-api-key":a.biconomy.apiKey,"Content-Type":"application/json;charset=utf-8"}}}async function oH(t,e,n,a){const r=await sH(t,e,n,a),i=await ht("https://api.biconomy.io/api/v2/meta-tx/native",r);if(i.ok){const s=await i.json();if(!s.txHash)throw new Error(`relay transaction failed: ${s.log}`);return s.txHash}throw new Error(`relay transaction failed with status: ${i.status} (${i.statusText})`)}async function cH(t,e,n,a,r){P(r&&"openzeppelin"in r,"calling openzeppelin gasless transaction without openzeppelin config in the SDK options"),P(e,"provider is not set"),P(n,"provider is not set");const i=r.openzeppelin.relayerForwarderAddress||(r.openzeppelin.useEOAForwarder?Cn[t.chainId].openzeppelinForwarderEOA||await M6(n,a):Cn[t.chainId].openzeppelinForwarder||await G1(n,a)),s=new J(i,pv,n),o=await w0(s,"getNonce",[t.from]);let c,p,d;r.experimentalChainlessSupport?(c={name:"GSNv2 Forwarder",version:"0.0.1",verifyingContract:i},p={ForwardRequest:a6},d={from:t.from,to:t.to,value:b.from(0).toString(),gas:b.from(t.gasLimit).toString(),nonce:b.from(o).toString(),data:t.data,chainid:b.from(t.chainId).toString()}):(c={name:r.openzeppelin.domainName,version:r.openzeppelin.domainVersion,chainId:t.chainId,verifyingContract:i},p={ForwardRequest:n6},d={from:t.from,to:t.to,value:b.from(0).toString(),gas:b.from(t.gasLimit).toString(),nonce:b.from(o).toString(),data:t.data});let u;if(t.functionName==="approve"&&t.functionArgs.length===2){const f=t.functionArgs[0],g=t.functionArgs[1],{message:w,signature:I}=await i6(e,t.to,t.from,f,g),{r:M,s:R,v:N}=x1(I);d={to:t.to,owner:w.owner,spender:w.spender,value:b.from(w.value).toString(),nonce:b.from(w.nonce).toString(),deadline:b.from(w.deadline).toString(),r:M,s:R,v:N},u=I}else{const{signature:f}=await qa(e,c,p,d);u=f}let m="forward";return d!=null&&d.owner&&(m="permit"),{method:"POST",body:JSON.stringify({request:d,signature:u,forwarderAddress:i,type:m})}}async function pH(t,e,n,a,r){P(r&&"openzeppelin"in r,"calling openzeppelin gasless transaction without openzeppelin config in the SDK options");const i=await cH(t,e,n,a,r),s=await ht(r.openzeppelin.relayerUrl,i);if(s.ok){const o=await s.json();if(!o.result)throw new Error(`Relay transaction failed: ${o.message}`);return JSON.parse(o.result).txHash}throw new Error(`relay transaction failed with status: ${s.status} (${s.statusText})`)}class W6{constructor(e){l(this,"args",void 0),l(this,"overrides",void 0),l(this,"provider",void 0),l(this,"signer",void 0),l(this,"storage",void 0),l(this,"gasMultiple",void 0),this.args=e.args,this.overrides=e.overrides||{},this.provider=e.provider,this.signer=e.signer,this.storage=e.storage||new Gn,this.signer.provider||(this.signer=this.signer.connect(this.provider))}getArgs(){return this.args}getOverrides(){return this.overrides}getValue(){return this.overrides.value||0}setArgs(e){return this.args=e,this}setOverrides(e){return this.overrides=e,this}updateOverrides(e){return this.overrides={...this.overrides,...e},this}setValue(e){return this.updateOverrides({value:e}),this}setGasLimit(e){return this.updateOverrides({gasLimit:e}),this}setGasPrice(e){return this.updateOverrides({gasPrice:e}),this}setNonce(e){return this.updateOverrides({nonce:e}),this}setMaxFeePerGas(e){return this.updateOverrides({maxFeePerGas:e}),this}setMaxPriorityFeePerGas(e){return this.updateOverrides({maxPriorityFeePerGas:e}),this}setType(e){return this.updateOverrides({type:e}),this}setAccessList(e){return this.updateOverrides({accessList:e}),this}setCustomData(e){return this.updateOverrides({customData:e}),this}setCcipReadEnabled(e){return this.updateOverrides({ccipReadEnabled:e}),this}setGasLimitMultiple(e){b.isBigNumber(this.overrides.gasLimit)?this.overrides.gasLimit=b.from(Math.floor(b.from(this.overrides.gasLimit).toNumber()*e)):this.gasMultiple=e}async estimateGasCost(){const e=await this.estimateGasLimit(),n=await this.getGasPrice(),a=e.mul(n);return{ether:P1(a),wei:a}}async getGasPrice(){const e=await this.provider.getGasPrice(),n=Oe("300","gwei"),a=e.div(100).mul(10),r=e.add(a);return r.gt(n)?n:r}async getSignerAddress(){return this.signer.getAddress()}async getGasOverrides(){return{}}getPreferredPriorityFee(e){const n=e.div(100).mul(10),a=e.add(n),r=Oe("300","gwei"),i=Oe("2.5","gwei");return a.gt(r)?r:a.lt(i)?i:a}}class v extends W6{static fromContractWrapper(e){const n=e.contractWrapper.getSigner();if(!n)throw new Error("Cannot create a transaction without a signer. Please ensure that you have a connected signer.");const a={...e,contract:e.contractWrapper.writeContract,provider:e.contractWrapper.getProvider(),signer:n,gasless:e.contractWrapper.options.gasless};return new v(a)}static async fromContractInfo(e){const n=e.storage||new Gn;let a=e.contractAbi;if(!a)try{a=(await Ft(e.contractAddress,e.provider,n)).abi}catch{throw new Error(`Could resolve contract metadata for address ${e.contractAddress}. Please pass the contract ABI manually with the 'contractAbi' option.`)}const r=new J(e.contractAddress,a,e.provider),i={...e,storage:n,contract:r};return new v(i)}constructor(e){super({args:e.args,overrides:e.overrides,provider:e.provider,signer:e.signer,storage:e.storage}),l(this,"method",void 0),l(this,"contract",void 0),l(this,"gaslessOptions",void 0),l(this,"parse",void 0),this.method=e.method,this.gaslessOptions=e.gasless,this.parse=e.parse,this.contract=e.contract.connect(this.signer),this.storage=e.storage||new Gn}getTarget(){return this.contract.address}getMethod(){return this.method}getGaslessOptions(){return this.gaslessOptions}setGaslessOptions(e){return this.gaslessOptions=e,this}setParse(e){return this.parse=e,this}encode(){return this.contract.interface.encodeFunctionData(this.method,this.args)}async sign(){const n={...await this.getGasOverrides(),...this.overrides};n.gasLimit||(n.gasLimit=await this.estimateGasLimit());const a=await this.contract.populateTransaction[this.method](...this.args,n),r=await this.contract.signer.populateTransaction(a);return await this.contract.signer.signTransaction(r)}async simulate(){if(!this.contract.callStatic[this.method])throw this.functionError();try{return await this.contract.callStatic[this.method](...this.args,...this.overrides.value?[{value:this.overrides.value}]:[])}catch(e){throw await this.transactionError(e)}}async estimateGasLimit(){if(!this.contract.estimateGas[this.method])throw this.functionError();try{const e=await this.contract.estimateGas[this.method](...this.args,this.overrides);return this.gasMultiple?b.from(Math.floor(b.from(e).toNumber()*this.gasMultiple)):e}catch(e){throw await this.simulate(),await this.transactionError(e)}}async send(){if(!this.contract.functions[this.method])throw this.functionError();if(this.gaslessOptions&&("openzeppelin"in this.gaslessOptions||"biconomy"in this.gaslessOptions))return this.sendGasless();const n={...await this.getGasOverrides(),...this.overrides};if(!n.gasLimit){n.gasLimit=await this.estimateGasLimit();try{const a=JSON.parse(this.contract.interface.format(Ln.FormatTypes.json));HF(a)&&(n.gasLimit=n.gasLimit.mul(110).div(100))}catch(a){console.warn("Error raising gas limit",a)}}try{return await this.contract.functions[this.method](...this.args,n)}catch(a){throw await this.transactionError(a)}}async execute(){const e=await this.send();let n;try{n=await e.wait()}catch(a){throw await this.simulate(),await this.transactionError(a)}return this.parse?this.parse(n):{receipt:n}}async sendGasless(){const e=await this.prepareGasless(),n=await iH(e,this.signer,this.provider,this.storage,this.gaslessOptions);let a,r=1;for(;!a;)if(a=await this.provider.getTransaction(n),a||(await new Promise(i=>setTimeout(i,Math.min(r*1e3,1e4))),r++),r>20)throw new Error(`Unable to retrieve transaction with hash ${n}`);return a}async prepareGasless(){var c;P(this.gaslessOptions&&("openzeppelin"in this.gaslessOptions||"biconomy"in this.gaslessOptions),"No gasless options set on this transaction!");const e=[...this.args];if(this.method==="multicall"&&Array.isArray(this.args[0])&&e[0].length>0){const p=await this.getSignerAddress();e[0]=e[0].map(d=>Ta(["bytes","address"],[d,p]))}P(this.signer,"Cannot execute gasless transaction without valid signer");const n=(await this.provider.getNetwork()).chainId,a=await(this.overrides.from||this.getSignerAddress()),r=this.contract.address,i=((c=this.overrides)==null?void 0:c.value)||0;if(b.from(i).gt(0))throw new Error("Cannot send native token value with gasless transaction");const s=this.contract.interface.encodeFunctionData(this.method,e);let o=b.from(0);try{o=(await this.contract.estimateGas[this.method](...e)).mul(2)}catch{}return o.lt(1e5)&&(o=b.from(5e5)),this.overrides.gasLimit&&b.from(this.overrides.gasLimit).gt(o)&&(o=b.from(this.overrides.gasLimit)),{from:a,to:r,data:s,chainId:n,gasLimit:o,functionName:this.method,functionArgs:e,callOverrides:this.overrides}}functionError(){return new Error(`Contract "${this.contract.address}" does not have function "${this.method}"`)}async transactionError(e){var M,R,N;const n=this.provider,a=await n.getNetwork(),r=await(this.overrides.from||this.getSignerAddress()),i=this.contract.address,s=this.encode(),o=b.from(this.overrides.value||0),c=(M=n.connection)==null?void 0:M.url,p=this.contract.interface.getFunction(this.method),d=this.args.map(x=>JSON.stringify(x).length<=80?JSON.stringify(x):JSON.stringify(x,void 0,2)),u=d.join(", ").length<=80?d.join(", "):`
`+d.map(x=>"  "+x.split(`
`).join(`
  `)).join(`,
`)+`
`,m=`${p.name}(${u})`,f=e.transactionHash||((R=e.transaction)==null?void 0:R.hash)||((N=e.receipt)==null?void 0:N.transactionHash),g=z1(e);let w,I;try{const x=await Ft(this.contract.address,this.provider,this.storage);x.name&&(I=x.name),x.metadata.sources&&(w=await Z0(x,this.storage))}catch{}return new Y1({reason:g,from:r,to:i,method:m,data:s,network:a,rpcUrl:c,value:o,hash:f,contractName:I,sources:w},e)}}class lH extends W6{constructor(e){super(e),l(this,"factory",void 0),l(this,"events",void 0),this.factory=e.factory,this.events=e.events}encode(){return j2(rk([this.factory.bytecode,this.factory.interface.encodeDeploy(this.args)]))}async sign(){const e=await this.populateTransaction();return this.signer.signTransaction(e)}async simulate(){const e=await this.populateTransaction();this.signer.call(e)}async estimateGasLimit(){try{const n={...await this.getGasOverrides(),...this.overrides},a=this.factory.getDeployTransaction(...this.args,n);return this.signer.estimateGas(a)}catch(e){throw await this.deployError(e)}}async send(){try{const e=await this.populateTransaction();return await this.signer.sendTransaction(e)}catch(e){throw await this.deployError(e)}}async execute(){const e=await this.send();try{await e.wait()}catch(a){throw await this.simulate(),await this.deployError(a)}const n=O5({from:e.from,nonce:e.nonce});return this.events&&this.events.emit("contractDeployed",{status:"completed",contractAddress:n,transactionHash:e.hash}),n}async populateTransaction(){const n={...await this.getGasOverrides(),...this.overrides};return n.gasLimit||(n.gasLimit=await this.estimateGasLimit()),this.factory.getDeployTransaction(...this.args,n)}async deployError(e){var f,g,w;const n=this.provider,a=await n.getNetwork(),r=await(this.overrides.from||this.getSignerAddress()),i=this.encode(),s=b.from(this.overrides.value||0),o=(f=n.connection)==null?void 0:f.url,c=this.args.map(I=>JSON.stringify(I).length<=80?JSON.stringify(I):JSON.stringify(I,void 0,2)),d=`deployContract(${c.join(", ").length<=80?c.join(", "):`
`+c.map(I=>"  "+I.split(`
`).join(`
  `)).join(`,
`)+`
`})`,u=e.transactionHash||((g=e.transaction)==null?void 0:g.hash)||((w=e.receipt)==null?void 0:w.transactionHash),m=z1(e);return new Y1({reason:m,from:r,method:d,data:i,network:a,rpcUrl:o,value:s,hash:u},e)}}class ge{constructor(e,n,a){l(this,"featureName",y0.name),l(this,"contractWrapper",void 0),l(this,"schema",void 0),l(this,"storage",void 0),l(this,"set",T(async r=>{const i=await this._parseAndUploadMetadata(r),s=this.contractWrapper;if(this.supportsContractMetadata(s))return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setContractURI",args:[i],parse:o=>({receipt:o,data:this.get})});throw new na(y0)})),l(this,"update",T(async r=>await this.set.prepare({...await this.get(),...r}))),this.contractWrapper=e,this.schema=n,this.storage=a}parseOutputMetadata(e){return this.schema.output.parseAsync(e)}parseInputMetadata(e){return this.schema.input.parseAsync(e)}async get(){let e;if(this.supportsContractMetadata(this.contractWrapper)){const n=await this.contractWrapper.readContract.contractURI();n&&n.includes("://")&&(e=await this.storage.downloadJSON(n))}if(!e)try{let n;try{Ie("name",this.contractWrapper)&&(n=await this.contractWrapper.readContract.name())}catch{}let a;try{Ie("symbol",this.contractWrapper)&&(a=await this.contractWrapper.readContract.symbol())}catch{}let r;try{r=await Ft(this.contractWrapper.readContract.address,this.contractWrapper.getProvider(),this.storage)}catch{}e={name:n||(r==null?void 0:r.name),symbol:a,description:r==null?void 0:r.info.title}}catch{throw new Error("Could not fetch contract metadata")}return this.parseOutputMetadata(e)}async _parseAndUploadMetadata(e){const n=await this.parseInputMetadata(e);return this.storage.upload(n)}supportsContractMetadata(e){return U(e,"ContractMetadata")}}class Xe{constructor(e,n){l(this,"featureName",h0.name),l(this,"contractWrapper",void 0),l(this,"roles",void 0),l(this,"setAll",T(async a=>{var c,p;const r=Object.keys(a);P(r.length,"you must provide at least one role to set"),P(r.every(d=>this.roles.includes(d)),"this contract does not support the given role");const i=await this.getAll(),s=[],o=r.sort(d=>d==="admin"?1:-1);for(let d=0;d<o.length;d++){const u=o[d],m=await Promise.all(((c=a[u])==null?void 0:c.map(async I=>await k(I)))||[]),f=await Promise.all(((p=i[u])==null?void 0:p.map(async I=>await k(I)))||[]),g=m.filter(I=>!f.includes(I)),w=f.filter(I=>!m.includes(I));if(g.length&&g.forEach(I=>{s.push(this.contractWrapper.readContract.interface.encodeFunctionData("grantRole",[we(u),I]))}),w.length)for(let I=0;I<w.length;I++){const M=w[I],R=await this.getRevokeRoleFunctionName(M);s.push(this.contractWrapper.readContract.interface.encodeFunctionData(R,[we(u),M]))}}return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[s]})})),l(this,"grant",T(async(a,r)=>{P(this.roles.includes(a),`this contract does not support the "${a}" role`);const i=await k(r);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"grantRole",args:[we(a),i]})})),l(this,"revoke",T(async(a,r)=>{P(this.roles.includes(a),`this contract does not support the "${a}" role`);const i=await k(r),s=await this.getRevokeRoleFunctionName(i);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:s,args:[we(a),i]})})),this.contractWrapper=e,this.roles=n}async getAll(){P(this.roles.length,"this contract has no support for roles");const e={};for(const n of this.roles)e[n]=await this.get(n);return e}async get(e){P(this.roles.includes(e),`this contract does not support the "${e}" role`);const n=this.contractWrapper;if(Ie("getRoleMemberCount",n)&&Ie("getRoleMember",n)){const a=we(e),r=(await n.readContract.getRoleMemberCount(a)).toNumber();return await Promise.all(Array.from(Array(r).keys()).map(i=>n.readContract.getRoleMember(a,i)))}throw new Error("Contract does not support enumerating roles. Please implement IPermissionsEnumerable to unlock this functionality.")}async verify(e,n){await Promise.all(e.map(async a=>{const r=await this.get(a),i=await k(n);if(!r.map(s=>s.toLowerCase()).includes(i.toLowerCase()))throw new VU(i,a)}))}async getRevokeRoleFunctionName(e){const n=await k(e);return(await this.contractWrapper.getSignerAddress()).toLowerCase()===n.toLowerCase()?"renounceRole":"revokeRole"}}class nn{constructor(e,n){l(this,"featureName",d0.name),l(this,"contractWrapper",void 0),l(this,"metadata",void 0),l(this,"setDefaultRoyaltyInfo",T(async a=>{const r=await this.metadata.get(),i=await this.metadata.parseInputMetadata({...r,...a}),s=await this.metadata._parseAndUploadMetadata(i);if(Ie("setContractURI",this.contractWrapper)){const o=[this.contractWrapper.readContract.interface.encodeFunctionData("setDefaultRoyaltyInfo",[i.fee_recipient,i.seller_fee_basis_points]),this.contractWrapper.readContract.interface.encodeFunctionData("setContractURI",[s])];return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[o],parse:c=>({receipt:c,data:()=>this.getDefaultRoyaltyInfo()})})}else throw new Error("Updating royalties requires implementing ContractMetadata in your contract to support marketplaces like OpenSea.")})),l(this,"setTokenRoyaltyInfo",T(async(a,r)=>{const i=_e.parse(r);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setRoyaltyInfoForToken",args:[a,i.fee_recipient,i.seller_fee_basis_points],parse:s=>({receipt:s,data:()=>this.getDefaultRoyaltyInfo()})})})),this.contractWrapper=e,this.metadata=n}async getDefaultRoyaltyInfo(){const[e,n]=await this.contractWrapper.readContract.getDefaultRoyaltyInfo();return _e.parseAsync({fee_recipient:e,seller_fee_basis_points:n})}async getTokenRoyaltyInfo(e){const[n,a]=await this.contractWrapper.readContract.getRoyaltyInfoForToken(e);return _e.parseAsync({fee_recipient:n,seller_fee_basis_points:a})}}class an{constructor(e){l(this,"featureName",u0.name),l(this,"contractWrapper",void 0),l(this,"setRecipient",T(async n=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPrimarySaleRecipient",args:[n]}))),this.contractWrapper=e}async getRecipient(){return await this.contractWrapper.readContract.primarySaleRecipient()}}const q0={name:"Failed to load NFT metadata"};async function Z1(t,e,n){const a=e.replace("{id}",Kt(b.from(t).toHexString(),32).slice(2));let r;try{r=await n.downloadJSON(a)}catch{const s=e.replace("{id}",b.from(t).toString());try{r=await n.downloadJSON(s)}catch{console.warn(`failed to get token metadata: ${JSON.stringify({tokenId:t.toString(),tokenUri:e})} -- falling back to default metadata`),r=q0}}return D1.parse({...r,id:b.from(t).toString(),uri:e})}async function la(t,e,n,a){let r;const i=new J(t,rr,e),s=await i.supportsInterface(ir),o=await i.supportsInterface(sr);if(s)r=await new J(t,UL,e).tokenURI(n);else if(o)r=await new J(t,FL,e).uri(n);else throw Error("Contract must implement ERC 1155 or ERC 721.");return r?Z1(n,r,a):D1.parse({...q0,id:b.from(n).toString(),uri:""})}async function Q0(t,e){return typeof t=="string"?t:await e.upload(Lt.parse(t))}async function Pn(t,e,n,a){if(dH(t))return t;if(uH(t))return await e.uploadBatch(t.map(i=>Lt.parse(i)),{rewriteFileNames:{fileStartNumber:n||0},onProgress:a==null?void 0:a.onProgress});throw new Error("NFT metadatas must all be of the same type (all URI or all NFTMetadataInput)")}function Qn(t){const e=t[0].substring(0,t[0].lastIndexOf("/"));for(let n=0;n<t.length;n++){const a=t[n].substring(0,t[n].lastIndexOf("/"));if(e!==a)throw new Error(`Can only create batches with the same base URI for every entry in the batch. Expected '${e}' but got '${a}'`)}return e.replace(/\/$/,"")+"/"}function dH(t){return t.find(e=>typeof e!="string")===void 0}function uH(t){return t.find(e=>typeof e!="object")===void 0}class j0{constructor(e,n,a,r){l(this,"featureName",void 0),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"nextTokenIdToMintFn",void 0),l(this,"createDelayedRevealBatch",T(async(i,s,o,c)=>{if(!o)throw new Error("Password is required");const p=await this.storage.uploadBatch([Lt.parse(i)],{rewriteFileNames:{fileStartNumber:0}}),d=Qn(p),u=await this.nextTokenIdToMintFn(),m=await this.storage.uploadBatch(s.map(N=>Lt.parse(N)),{onProgress:c==null?void 0:c.onProgress,rewriteFileNames:{fileStartNumber:u.toNumber()}}),f=Qn(m),g=await this.contractWrapper.readContract.getBaseURICount(),w=await this.hashDelayRevealPassword(g,o),I=await this.contractWrapper.readContract.encryptDecrypt(rt(f),w);let M;if(await this.isLegacyContract())M=I;else{const N=await this.contractWrapper.getChainID(),x=it(["bytes","bytes","uint256"],[rt(f),w,N]);M=Tn.encode(["bytes","bytes32"],[I,x])}return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"lazyMint",args:[m.length,d.endsWith("/")?d:`${d}/`,M],parse:N=>{const x=this.contractWrapper.parseLogs("TokensLazyMinted",N==null?void 0:N.logs),L=x[0].args.startTokenId,H=x[0].args.endTokenId,Q=[];for(let ne=L;ne.lte(H);ne=ne.add(1))Q.push({id:ne,receipt:N});return Q}})})),l(this,"reveal",T(async(i,s)=>{if(!s)throw new Error("Password is required");const o=await this.hashDelayRevealPassword(i,s);try{const c=await this.contractWrapper.callStatic().reveal(i,o);if(!c.includes("://")||!c.endsWith("/"))throw new Error("invalid password")}catch{throw new Error("invalid password")}return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"reveal",args:[i,o]})})),this.featureName=a,this.nextTokenIdToMintFn=r,this.contractWrapper=e,this.storage=n}async getBatchesToReveal(){const e=await this.contractWrapper.readContract.getBaseURICount();if(e.isZero())return[];const n=Array.from(Array(e.toNumber()).keys()),a=await Promise.all(n.map(p=>{if(Ie("getBatchIdAtIndex",this.contractWrapper))return this.contractWrapper.readContract.getBatchIdAtIndex(p);if(Ie("baseURIIndices",this.contractWrapper))return this.contractWrapper.readContract.baseURIIndices(p);throw new Error("Contract does not have getBatchIdAtIndex or baseURIIndices.")})),r=a.slice(0,a.length-1),i=await Promise.all(Array.from([0,...r]).map(p=>this.getNftMetadata(p.toString()))),s=await this.isLegacyContract(),c=(await Promise.all(Array.from([...a]).map(p=>s?this.getLegacyEncryptedData(p):this.contractWrapper.readContract.encryptedData(p)))).map(p=>fI(p)>0?s?p:Tn.decode(["bytes","bytes32"],p)[0]:p);return i.map((p,d)=>({batchId:b.from(d),batchUri:p.uri,placeholderMetadata:p})).filter((p,d)=>fI(c[d])>0)}async hashDelayRevealPassword(e,n){const a=await this.contractWrapper.getChainID(),r=this.contractWrapper.readContract.address;return it(["string","uint256","uint256","address"],[n,a,e,r])}async getNftMetadata(e){return la(this.contractWrapper.readContract.address,this.contractWrapper.getProvider(),e,this.storage)}async isLegacyContract(){if(Ie("contractVersion",this.contractWrapper))try{return await this.contractWrapper.readContract.contractVersion()<=2}catch{return!1}return!1}async getLegacyEncryptedData(e){const a=await new J(this.contractWrapper.readContract.address,HL,this.contractWrapper.getProvider()).functions.encryptedBaseURI(e);return a.length>0?a[0]:"0x"}}let Me=function(t){return t[t.UNSET=0]="UNSET",t[t.Created=1]="Created",t[t.Completed=2]="Completed",t[t.Cancelled=3]="Cancelled",t[t.Active=4]="Active",t[t.Expired=5]="Expired",t}({}),ee=function(t){return t.NotEnoughSupply="There is not enough supply to claim.",t.AddressNotAllowed="This address is not on the allowlist.",t.WaitBeforeNextClaimTransaction="Not enough time since last claim transaction. Please wait.",t.AlreadyClaimed="You have already claimed the token.",t.NotEnoughTokens="There are not enough tokens in the wallet to pay for the claim.",t.NoActiveClaimPhase="There is no active claim phase at the moment. Please check back in later.",t.NoClaimConditionSet="There is no claim condition set.",t.NoWallet="No wallet connected.",t.Unknown="No claim conditions found.",t}({});class pr{constructor(e,n,a){var r=this;l(this,"contractWrapper",void 0),l(this,"metadata",void 0),l(this,"storage",void 0),l(this,"set",T(async function(i){let s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,o=i;if(r.isLegacySinglePhaseDrop(r.contractWrapper)||r.isNewSinglePhaseDrop(r.contractWrapper)){if(s=!0,i.length===0)o=[{startTime:new Date(0),currencyAddress:B,price:0,maxClaimableSupply:0,maxClaimablePerWallet:0,waitInSeconds:0,merkleRootHash:Kt([0],32),snapshot:[]}];else if(i.length>1)throw new Error("Single phase drop contract cannot have multiple claim conditions, only one is allowed")}(r.isNewSinglePhaseDrop(r.contractWrapper)||r.isNewMultiphaseDrop(r.contractWrapper))&&o.forEach(g=>{var w;if(g.snapshot&&g.snapshot.length>0&&(g.maxClaimablePerWallet===void 0||g.maxClaimablePerWallet==="unlimited"))throw new Error(`maxClaimablePerWallet must be set to a specific value when an allowlist is set.
Example: Set it to 0 to only allow addresses in the allowlist to claim the amount specified in the allowlist.
contract.claimConditions.set([{ snapshot: [{ address: '0x...', maxClaimable: 1 }], maxClaimablePerWallet: 0 }])`);if(g.snapshot&&g.snapshot.length>0&&((w=g.maxClaimablePerWallet)==null?void 0:w.toString())==="0"&&g.snapshot.map(I=>{var M;return typeof I=="string"?0:Number(((M=I.maxClaimable)==null?void 0:M.toString())||0)}).reduce((I,M)=>I+M,0)===0)throw new Error("maxClaimablePerWallet is set to 0, and all addresses in the allowlist have max claimable 0. This means that no one can claim.")});const{snapshotInfos:c,sortedConditions:p}=await d6(o,await r.getTokenDecimals(),r.contractWrapper.getProvider(),r.storage,r.getSnapshotFormatVersion()),d={};c.forEach(g=>{d[g.merkleRoot]=g.snapshotUri});const u=await r.metadata.get(),m=[];if(!q5(u.merkle,d)){const g=await r.metadata.parseInputMetadata({...u,merkle:d}),w=await r.metadata._parseAndUploadMetadata(g);if(Ie("setContractURI",r.contractWrapper))m.push(r.contractWrapper.readContract.interface.encodeFunctionData("setContractURI",[w]));else throw new Error("Setting a merkle root requires implementing ContractMetadata in your contract to support storing a merkle root.")}const f=r.contractWrapper;if(r.isLegacySinglePhaseDrop(f))m.push(f.readContract.interface.encodeFunctionData("setClaimConditions",[I0(p[0]),s]));else if(r.isLegacyMultiPhaseDrop(f))m.push(f.readContract.interface.encodeFunctionData("setClaimConditions",[p.map(I0),s]));else if(r.isNewSinglePhaseDrop(f))m.push(f.readContract.interface.encodeFunctionData("setClaimConditions",[v0(p[0]),s]));else if(r.isNewMultiphaseDrop(f))m.push(f.readContract.interface.encodeFunctionData("setClaimConditions",[p.map(v0),s]));else throw new Error("Contract does not support claim conditions");return v.fromContractWrapper({contractWrapper:r.contractWrapper,method:"multicall",args:[m]})})),l(this,"update",T(async(i,s)=>{const o=await this.getAll(),c=await l6(i,s,o);return await this.set.prepare(c)})),this.storage=a,this.contractWrapper=e,this.metadata=n}async getActive(e){const n=await this.get(),a=await this.metadata.get();return await E0(n,await this.getTokenDecimals(),this.contractWrapper.getProvider(),a.merkle||{},this.storage,(e==null?void 0:e.withAllowList)||!1)}async get(e){if(this.isLegacySinglePhaseDrop(this.contractWrapper)){const n=await this.contractWrapper.readContract.claimCondition();return C0(n)}else if(this.isLegacyMultiPhaseDrop(this.contractWrapper)){const n=e!==void 0?e:await this.contractWrapper.readContract.getActiveClaimConditionId(),a=await this.contractWrapper.readContract.getClaimConditionById(n);return C0(a)}else if(this.isNewSinglePhaseDrop(this.contractWrapper)){const n=await this.contractWrapper.readContract.claimCondition();return k0(n)}else if(this.isNewMultiphaseDrop(this.contractWrapper)){const n=e!==void 0?e:await this.contractWrapper.readContract.getActiveClaimConditionId(),a=await this.contractWrapper.readContract.getClaimConditionById(n);return k0(a)}else throw new Error("Contract does not support claim conditions")}async getAll(e){if(this.isLegacyMultiPhaseDrop(this.contractWrapper)||this.isNewMultiphaseDrop(this.contractWrapper)){const n=await this.contractWrapper.readContract.claimCondition(),a=n.currentStartId.toNumber(),r=n.count.toNumber(),i=[];for(let c=a;c<a+r;c++)i.push(await this.get(c));const s=await this.metadata.get(),o=await this.getTokenDecimals();return Promise.all(i.map(c=>E0(c,o,this.contractWrapper.getProvider(),s.merkle,this.storage,(e==null?void 0:e.withAllowList)||!1)))}else return[await this.getActive(e)]}async canClaim(e,n){return n&&(n=await k(n)),(await this.getClaimIneligibilityReasons(e,n)).length===0}async getClaimIneligibilityReasons(e,n){const a=[];let r,i;const s=await this.getTokenDecimals(),o=Oe(Ne.parse(e),s);if(n===void 0)try{n=await this.contractWrapper.getSignerAddress()}catch(m){console.warn("failed to get signer address",m)}if(!n)return[ee.NoWallet];const c=await k(n);try{i=await this.getActive()}catch(m){return T0(m,"!CONDITION")||T0(m,"no active mint condition")?(a.push(ee.NoClaimConditionSet),a):(console.warn("failed to get active claim condition",m),a.push(ee.Unknown),a)}i.availableSupply!=="unlimited"&&Oe(i.availableSupply,s).lt(o)&&a.push(ee.NotEnoughSupply);const d=Mr(i.merkleRootHash).length>0;let u=null;if(d){if(u=await this.getClaimerProofs(c),!u&&(this.isLegacySinglePhaseDrop(this.contractWrapper)||this.isLegacyMultiPhaseDrop(this.contractWrapper)))return a.push(ee.AddressNotAllowed),a;if(u)try{const m=await this.prepareClaim(e,!1,s,c);let f;if(this.isLegacyMultiPhaseDrop(this.contractWrapper)){if(r=await this.contractWrapper.readContract.getActiveClaimConditionId(),[f]=await this.contractWrapper.readContract.verifyClaimMerkleProof(r,c,e,m.proofs,m.maxClaimable),!f)return a.push(ee.AddressNotAllowed),a}else if(this.isLegacySinglePhaseDrop(this.contractWrapper)){if([f]=await this.contractWrapper.readContract.verifyClaimMerkleProof(c,e,{proof:m.proofs,maxQuantityInAllowlist:m.maxClaimable}),!f)return a.push(ee.AddressNotAllowed),a}else if(this.isNewSinglePhaseDrop(this.contractWrapper)){if(await this.contractWrapper.readContract.verifyClaim(c,e,m.currencyAddress,m.price,{proof:m.proofs,quantityLimitPerWallet:m.maxClaimable,currency:m.currencyAddressInProof,pricePerToken:m.priceInProof}),wt(i.maxClaimablePerWallet,s).eq(0)&&m.maxClaimable===ke||m.maxClaimable===b.from(0))return a.push(ee.AddressNotAllowed),a}else if(this.isNewMultiphaseDrop(this.contractWrapper)&&(r=await this.contractWrapper.readContract.getActiveClaimConditionId(),await this.contractWrapper.readContract.verifyClaim(r,c,e,m.currencyAddress,m.price,{proof:m.proofs,quantityLimitPerWallet:m.maxClaimable,currency:m.currencyAddressInProof,pricePerToken:m.priceInProof}),wt(i.maxClaimablePerWallet,s).eq(0)&&m.maxClaimable===ke||m.maxClaimable===b.from(0)))return a.push(ee.AddressNotAllowed),a}catch(m){return console.warn("Merkle proof verification failed:","reason"in m?m.reason:m),a.push(ee.AddressNotAllowed),a}}if(this.isNewSinglePhaseDrop(this.contractWrapper)||this.isNewMultiphaseDrop(this.contractWrapper)){const m=await this.getClaimerProofs(c);let f=b.from(0),g=wt(i.maxClaimablePerWallet,s);if(this.isNewSinglePhaseDrop(this.contractWrapper)&&(f=await this.contractWrapper.readContract.getSupplyClaimedByWallet(c)),this.isNewMultiphaseDrop(this.contractWrapper)){const w=await this.contractWrapper.readContract.getActiveClaimConditionId();f=await this.contractWrapper.readContract.getSupplyClaimedByWallet(w,c)}if(m&&(g=wt(m.maxClaimable,s)),(!d||d&&!u)&&(g.lte(f)||g.eq(0)))return a.push(ee.AddressNotAllowed),a}if(this.isLegacySinglePhaseDrop(this.contractWrapper)||this.isLegacyMultiPhaseDrop(this.contractWrapper)){let[m,f]=[b.from(0),b.from(0)];this.isLegacyMultiPhaseDrop(this.contractWrapper)?(r=await this.contractWrapper.readContract.getActiveClaimConditionId(),[m,f]=await this.contractWrapper.readContract.getClaimTimestamp(r,c)):this.isLegacySinglePhaseDrop(this.contractWrapper)&&([m,f]=await this.contractWrapper.readContract.getClaimTimestamp(c));const g=b.from(Date.now()).div(1e3);m.gt(0)&&g.lt(f)&&(f.eq(ke)?a.push(ee.AlreadyClaimed):a.push(ee.WaitBeforeNextClaimTransaction))}if(i.price.gt(0)&&s6()){const m=i.price.mul(b.from(e)),f=this.contractWrapper.getProvider();ct(i.currencyAddress)?(await f.getBalance(c)).lt(m)&&a.push(ee.NotEnoughTokens):(await new Z(f,i.currencyAddress,Ee,{}).readContract.balanceOf(c)).lt(m)&&a.push(ee.NotEnoughTokens)}return a}async getClaimerProofs(e,n){const r=(await this.get(n)).merkleRoot;if(Mr(r).length>0){const s=await this.metadata.get(),o=await k(e);return await q1(o,r.toString(),s.merkle,this.contractWrapper.getProvider(),this.storage,this.getSnapshotFormatVersion())}else return null}async getTokenDecimals(){return U(this.contractWrapper,"ERC20")?this.contractWrapper.readContract.decimals():Promise.resolve(0)}async prepareClaim(e,n){let a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:0,r=arguments.length>3?arguments[3]:void 0;const i=r||await this.contractWrapper.getSignerAddress();return p6(i,e,await this.getActive(),async()=>(await this.metadata.get()).merkle,a,this.contractWrapper,this.storage,n,this.getSnapshotFormatVersion())}async getClaimArguments(e,n,a){const r=await k(e);return this.isLegacyMultiPhaseDrop(this.contractWrapper)?[r,n,a.currencyAddress,a.price,a.proofs,a.maxClaimable]:this.isLegacySinglePhaseDrop(this.contractWrapper)?[r,n,a.currencyAddress,a.price,{proof:a.proofs,maxQuantityInAllowlist:a.maxClaimable},rt("")]:[r,n,a.currencyAddress,a.price,{proof:a.proofs,quantityLimitPerWallet:a.maxClaimable,pricePerToken:a.priceInProof,currency:a.currencyAddressInProof},rt("")]}async getClaimTransaction(e,n,a){if(a!=null&&a.pricePerToken)throw new Error("Price per token is be set via claim conditions by calling `contract.erc721.claimConditions.set()`");const r=await this.prepareClaim(n,(a==null?void 0:a.checkERC20Allowance)===void 0?!0:a.checkERC20Allowance,await this.getTokenDecimals());return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"claim",args:await this.getClaimArguments(e,n,r),overrides:r.overrides})}isNewSinglePhaseDrop(e){return U(e,"ERC721ClaimConditionsV2")||U(e,"ERC20ClaimConditionsV2")}isNewMultiphaseDrop(e){return U(e,"ERC721ClaimPhasesV2")||U(e,"ERC20ClaimPhasesV2")}isLegacySinglePhaseDrop(e){return U(e,"ERC721ClaimConditionsV1")||U(e,"ERC20ClaimConditionsV1")}isLegacyMultiPhaseDrop(e){return U(e,"ERC721ClaimPhasesV1")||U(e,"ERC20ClaimPhasesV1")}getSnapshotFormatVersion(){return this.isLegacyMultiPhaseDrop(this.contractWrapper)||this.isLegacySinglePhaseDrop(this.contractWrapper)?kn.V1:kn.V2}}class B6{constructor(e,n,a){var r=this;l(this,"contractWrapper",void 0),l(this,"metadata",void 0),l(this,"storage",void 0),l(this,"set",T(async function(i,s){let o=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1;return r.setBatch.prepare([{tokenId:i,claimConditions:s}],o)})),l(this,"setBatch",T(async function(i){let s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;const o={},c=await Promise.all(i.map(async u=>{let{tokenId:m,claimConditions:f}=u,g=f;if(r.isLegacySinglePhaseDrop(r.contractWrapper)){if(s=!0,f.length===0)g=[{startTime:new Date(0),currencyAddress:B,price:0,maxClaimableSupply:0,maxClaimablePerWallet:0,waitInSeconds:0,merkleRootHash:Kt([0],32),snapshot:[]}];else if(f.length>1)throw new Error("Single phase drop contract cannot have multiple claim conditions, only one is allowed")}(r.isNewSinglePhaseDrop(r.contractWrapper)||r.isNewMultiphaseDrop(r.contractWrapper))&&g.forEach(M=>{var R;if(M.snapshot&&M.snapshot.length>0&&(M.maxClaimablePerWallet===void 0||M.maxClaimablePerWallet==="unlimited"))throw new Error(`maxClaimablePerWallet must be set to a specific value when an allowlist is set.
Set it to 0 to only allow addresses in the allowlist to claim the amount specified in the allowlist.

ex:
contract.claimConditions.set(tokenId, [{ snapshot: [{ address: '0x...', maxClaimable: 1 }], maxClaimablePerWallet: 0 }])`);if(M.snapshot&&M.snapshot.length>0&&((R=M.maxClaimablePerWallet)==null?void 0:R.toString())==="0"&&M.snapshot.map(N=>{var x;return typeof N=="string"?0:Number(((x=N.maxClaimable)==null?void 0:x.toString())||0)}).reduce((N,x)=>N+x,0)===0)throw new Error("maxClaimablePerWallet is set to 0, and all addresses in the allowlist have max claimable 0. This means that no one can claim.")});const{snapshotInfos:w,sortedConditions:I}=await d6(g,0,r.contractWrapper.getProvider(),r.storage,r.getSnapshotFormatVersion());return w.forEach(M=>{o[M.merkleRoot]=M.snapshotUri}),{tokenId:m,sortedConditions:I}})),p=await r.metadata.get(),d=[];for(const u of Object.keys(p.merkle||{}))o[u]=p.merkle[u];if(!q5(p.merkle,o)){const u=await r.metadata.parseInputMetadata({...p,merkle:o}),m=await r.metadata._parseAndUploadMetadata(u);if(Ie("setContractURI",r.contractWrapper))d.push(r.contractWrapper.readContract.interface.encodeFunctionData("setContractURI",[m]));else throw new Error("Setting a merkle root requires implementing ContractMetadata in your contract to support storing a merkle root.")}return c.forEach(u=>{let{tokenId:m,sortedConditions:f}=u;if(r.isLegacySinglePhaseDrop(r.contractWrapper))d.push(r.contractWrapper.readContract.interface.encodeFunctionData("setClaimConditions",[m,I0(f[0]),s]));else if(r.isLegacyMultiPhaseDrop(r.contractWrapper))d.push(r.contractWrapper.readContract.interface.encodeFunctionData("setClaimConditions",[m,f.map(I0),s]));else if(r.isNewSinglePhaseDrop(r.contractWrapper))d.push(r.contractWrapper.readContract.interface.encodeFunctionData("setClaimConditions",[m,v0(f[0]),s]));else if(r.isNewMultiphaseDrop(r.contractWrapper))d.push(r.contractWrapper.readContract.interface.encodeFunctionData("setClaimConditions",[m,f.map(v0),s]));else throw new Error("Contract does not support claim conditions")}),v.fromContractWrapper({contractWrapper:r.contractWrapper,method:"multicall",args:[d]})})),l(this,"update",T(async(i,s,o)=>{const c=await this.getAll(i),p=await l6(s,o,c);return await this.set.prepare(i,p)})),this.storage=a,this.contractWrapper=e,this.metadata=n}async getActive(e,n){const a=await this.get(e),r=await this.metadata.get();return await E0(a,0,this.contractWrapper.getProvider(),r.merkle,this.storage,(n==null?void 0:n.withAllowList)||!1)}async get(e,n){if(this.isLegacySinglePhaseDrop(this.contractWrapper)){const a=await this.contractWrapper.readContract.claimCondition(e);return C0(a)}else if(this.isLegacyMultiPhaseDrop(this.contractWrapper)){const a=n!==void 0?n:await this.contractWrapper.readContract.getActiveClaimConditionId(e),r=await this.contractWrapper.readContract.getClaimConditionById(e,a);return C0(r)}else if(this.isNewSinglePhaseDrop(this.contractWrapper)){const a=await this.contractWrapper.readContract.claimCondition(e);return k0(a)}else if(this.isNewMultiphaseDrop(this.contractWrapper)){const a=n!==void 0?n:await this.contractWrapper.readContract.getActiveClaimConditionId(e),r=await this.contractWrapper.readContract.getClaimConditionById(e,a);return k0(r)}else throw new Error("Contract does not support claim conditions")}async getAll(e,n){if(this.isLegacyMultiPhaseDrop(this.contractWrapper)||this.isNewMultiphaseDrop(this.contractWrapper)){const a=await this.contractWrapper.readContract.claimCondition(e),r=a.currentStartId.toNumber(),i=a.count.toNumber(),s=[];for(let c=r;c<r+i;c++)s.push(await this.get(e,c));const o=await this.metadata.get();return Promise.all(s.map(c=>E0(c,0,this.contractWrapper.getProvider(),o.merkle,this.storage,(n==null?void 0:n.withAllowList)||!1)))}else return[await this.getActive(e,n)]}async canClaim(e,n,a){return a&&(a=await k(a)),(await this.getClaimIneligibilityReasons(e,n,a)).length===0}async getClaimIneligibilityReasons(e,n,a){const r=[];let i,s;if(a===void 0)try{a=await this.contractWrapper.getSignerAddress()}catch(g){console.warn("failed to get signer address",g)}if(!a)return[ee.NoWallet];const o=await k(a);try{s=await this.getActive(e)}catch(g){return T0(g,"!CONDITION")||T0(g,"no active mint condition")?(r.push(ee.NoClaimConditionSet),r):(r.push(ee.Unknown),r)}s.availableSupply!=="unlimited"&&b.from(s.availableSupply).lt(n)&&r.push(ee.NotEnoughSupply);const p=Mr(s.merkleRootHash).length>0;let d=null;if(p){if(d=await this.getClaimerProofs(e,o),!d&&(this.isLegacySinglePhaseDrop(this.contractWrapper)||this.isLegacyMultiPhaseDrop(this.contractWrapper)))return r.push(ee.AddressNotAllowed),r;if(d)try{const g=await this.prepareClaim(e,n,!1,o);let w;if(this.isLegacyMultiPhaseDrop(this.contractWrapper)){if(i=await this.contractWrapper.readContract.getActiveClaimConditionId(e),[w]=await this.contractWrapper.readContract.verifyClaimMerkleProof(i,o,e,n,g.proofs,g.maxClaimable),!w)return r.push(ee.AddressNotAllowed),r}else if(this.isLegacySinglePhaseDrop(this.contractWrapper)){if([w]=await this.contractWrapper.readContract.verifyClaimMerkleProof(e,o,n,{proof:g.proofs,maxQuantityInAllowlist:g.maxClaimable}),!w)return r.push(ee.AddressNotAllowed),r}else if(this.isNewSinglePhaseDrop(this.contractWrapper)){if(await this.contractWrapper.readContract.verifyClaim(e,o,n,g.currencyAddress,g.price,{proof:g.proofs,quantityLimitPerWallet:g.maxClaimable,currency:g.currencyAddressInProof,pricePerToken:g.priceInProof}),s.maxClaimablePerWallet==="0"&&g.maxClaimable===ke||g.maxClaimable===b.from(0))return r.push(ee.AddressNotAllowed),r}else if(this.isNewMultiphaseDrop(this.contractWrapper)&&(i=await this.contractWrapper.readContract.getActiveClaimConditionId(e),await this.contractWrapper.readContract.verifyClaim(i,o,e,n,g.currencyAddress,g.price,{proof:g.proofs,quantityLimitPerWallet:g.maxClaimable,currency:g.currencyAddressInProof,pricePerToken:g.priceInProof}),s.maxClaimablePerWallet==="0"&&g.maxClaimable===ke||g.maxClaimable===b.from(0)))return r.push(ee.AddressNotAllowed),r}catch(g){return console.warn("Merkle proof verification failed:","reason"in g?g.reason:g),r.push(ee.AddressNotAllowed),r}}if((this.isNewSinglePhaseDrop(this.contractWrapper)||this.isNewMultiphaseDrop(this.contractWrapper))&&(!p||p&&!d)&&s.maxClaimablePerWallet==="0")return r.push(ee.AddressNotAllowed),r;let[u,m]=[b.from(0),b.from(0)];this.isLegacyMultiPhaseDrop(this.contractWrapper)?(i=await this.contractWrapper.readContract.getActiveClaimConditionId(e),[u,m]=await this.contractWrapper.readContract.getClaimTimestamp(e,i,o)):this.isLegacySinglePhaseDrop(this.contractWrapper)&&([u,m]=await this.contractWrapper.readContract.getClaimTimestamp(e,o));const f=b.from(Date.now()).div(1e3);if(u.gt(0)&&f.lt(m)&&(m.eq(ke)?r.push(ee.AlreadyClaimed):r.push(ee.WaitBeforeNextClaimTransaction)),s.price.gt(0)&&s6()){const g=s.price.mul(n),w=this.contractWrapper.getProvider();ct(s.currencyAddress)?(await w.getBalance(o)).lt(g)&&r.push(ee.NotEnoughTokens):(await new Z(w,s.currencyAddress,Ee,{}).readContract.balanceOf(o)).lt(g)&&r.push(ee.NotEnoughTokens)}return r}async getClaimerProofs(e,n,a){const i=(await this.get(e,a)).merkleRoot;if(Mr(i).length>0){const o=await this.metadata.get(),c=await k(n);return await q1(c,i.toString(),o.merkle,this.contractWrapper.getProvider(),this.storage,this.getSnapshotFormatVersion())}else return null}async prepareClaim(e,n,a,r){const i=await k(r||await this.contractWrapper.getSignerAddress());return p6(i,n,await this.getActive(e),async()=>(await this.metadata.get()).merkle,0,this.contractWrapper,this.storage,a,this.getSnapshotFormatVersion())}async getClaimArguments(e,n,a,r){const i=await k(n);return this.isLegacyMultiPhaseDrop(this.contractWrapper)?[i,e,a,r.currencyAddress,r.price,r.proofs,r.maxClaimable]:this.isLegacySinglePhaseDrop(this.contractWrapper)?[i,e,a,r.currencyAddress,r.price,{proof:r.proofs,maxQuantityInAllowlist:r.maxClaimable},rt("")]:[i,e,a,r.currencyAddress,r.price,{proof:r.proofs,quantityLimitPerWallet:r.maxClaimable,pricePerToken:r.priceInProof,currency:r.currencyAddressInProof},rt("")]}async getClaimTransaction(e,n,a,r){if(r!=null&&r.pricePerToken)throw new Error("Price per token should be set via claim conditions by calling `contract.erc1155.claimConditions.set()`");const i=await this.prepareClaim(n,a,(r==null?void 0:r.checkERC20Allowance)||!0);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"claim",args:await this.getClaimArguments(n,e,a,i),overrides:i.overrides})}isNewSinglePhaseDrop(e){return U(e,"ERC1155ClaimConditionsV2")}isNewMultiphaseDrop(e){return U(e,"ERC1155ClaimPhasesV2")}isLegacySinglePhaseDrop(e){return U(e,"ERC1155ClaimConditionsV1")}isLegacyMultiPhaseDrop(e){return U(e,"ERC1155ClaimPhasesV1")}getSnapshotFormatVersion(){return this.isLegacyMultiPhaseDrop(this.contractWrapper)||this.isLegacySinglePhaseDrop(this.contractWrapper)?kn.V1:kn.V2}}class mH{constructor(e,n){l(this,"featureName",Fa.name),l(this,"erc20",void 0),l(this,"contractWrapper",void 0),l(this,"tokens",T(async a=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"burn",args:[await this.erc20.normalizeAmount(a)]}))),l(this,"from",T(async(a,r)=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"burnFrom",args:[await k(a),await this.erc20.normalizeAmount(r)]}))),this.erc20=e,this.contractWrapper=n}}class hH{constructor(e,n,a){l(this,"featureName",Ua.name),l(this,"conditions",void 0),l(this,"contractWrapper",void 0),l(this,"erc20",void 0),l(this,"storage",void 0),l(this,"to",T(async(i,s,o)=>{const c=await this.erc20.normalizeAmount(s);return await this.conditions.getClaimTransaction(i,c,o)})),this.erc20=e,this.contractWrapper=n,this.storage=a;const r=new ge(this.contractWrapper,Vn,this.storage);this.conditions=new pr(this.contractWrapper,r,this.storage)}}class yH{constructor(e,n,a){l(this,"claim",void 0),l(this,"contractWrapper",void 0),l(this,"erc20",void 0),l(this,"storage",void 0),this.erc20=e,this.contractWrapper=n,this.storage=a,this.claim=new hH(this.erc20,this.contractWrapper,this.storage)}}class fH{constructor(e,n){l(this,"featureName",Gw.name),l(this,"contractWrapper",void 0),l(this,"erc20",void 0),l(this,"to",T(async a=>{const r=[];for(const i of a)r.push(this.contractWrapper.readContract.interface.encodeFunctionData("mintTo",[await k(i.toAddress),await this.erc20.normalizeAmount(i.amount)]));return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r]})})),this.erc20=e,this.contractWrapper=n}}class gH{constructor(e,n){l(this,"featureName",Ha.name),l(this,"contractWrapper",void 0),l(this,"erc20",void 0),l(this,"batch",void 0),l(this,"to",T(async(a,r)=>await this.getMintTransaction(a,r))),this.erc20=e,this.contractWrapper=n,this.batch=this.detectErc20BatchMintable()}async getMintTransaction(e,n){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"mintTo",args:[await k(e),await this.erc20.normalizeAmount(n)]})}detectErc20BatchMintable(){if(U(this.contractWrapper,"ERC20BatchMintable"))return new fH(this.erc20,this.contractWrapper)}}class N6{constructor(e,n){l(this,"featureName",Vw.name),l(this,"contractWrapper",void 0),l(this,"roles",void 0),l(this,"mint",T(async a=>{const r=a.payload,i=a.signature,s=await this.mapPayloadToContractStruct(r),o=await this.contractWrapper.getCallOverrides();return await bt(this.contractWrapper,b.from(s.price),r.currencyAddress,o),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"mintWithSignature",args:[s,i],overrides:o})})),l(this,"mintBatch",T(async a=>{const i=(await Promise.all(a.map(async s=>{const o=await this.mapPayloadToContractStruct(s.payload),c=s.signature,p=s.payload.price;if(b.from(p).gt(0))throw new Error("Can only batch free mints. For mints with a price, use regular mint()");return{message:o,signature:c}}))).map(s=>this.contractWrapper.readContract.interface.encodeFunctionData("mintWithSignature",[s.message,s.signature]));return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[i]})})),this.contractWrapper=e,this.roles=n}async verify(e){const n=e.payload,a=e.signature,r=await this.mapPayloadToContractStruct(n);return(await this.contractWrapper.readContract.verify(r,a))[0]}async generate(e){return(await this.generateBatch([e]))[0]}async generateBatch(e){var s;await((s=this.roles)==null?void 0:s.verify(["minter"],await this.contractWrapper.getSignerAddress()));const n=await Promise.all(e.map(o=>Bv.parseAsync(o))),a=await this.contractWrapper.getChainID(),r=this.contractWrapper.getSigner();P(r,"No signer available");const i=await this.contractWrapper.readContract.name();return await Promise.all(n.map(async o=>{const c=await hU.parseAsync(o),p=await this.contractWrapper.signTypedData(r,{name:i,version:"1",chainId:a,verifyingContract:this.contractWrapper.readContract.address},{MintRequest:wU},await this.mapPayloadToContractStruct(c));return{payload:c,signature:p.toString()}}))}async mapPayloadToContractStruct(e){const n=await se(this.contractWrapper.getProvider(),e.price,e.currencyAddress),a=Oe(e.quantity,await this.contractWrapper.readContract.decimals());return{to:e.to,primarySaleRecipient:e.primarySaleRecipient,quantity:a,price:n,currency:e.currencyAddress,validityEndTimestamp:e.mintEndTime,validityStartTimestamp:e.mintStartTime,uid:e.uid}}}class X1{get chainId(){return this._chainId}constructor(e,n,a){l(this,"featureName",Zw.name),l(this,"mintable",void 0),l(this,"burnable",void 0),l(this,"droppable",void 0),l(this,"signatureMintable",void 0),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"_chainId",void 0),l(this,"transfer",T(async(r,i)=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"transfer",args:[await k(r),await this.normalizeAmount(i)]}))),l(this,"transferFrom",T(async(r,i,s)=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"transferFrom",args:[await k(r),await k(i),await this.normalizeAmount(s)]}))),l(this,"setAllowance",T(async(r,i)=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approve",args:[await k(r),await this.normalizeAmount(i)]}))),l(this,"transferBatch",T(async r=>{const i=await Promise.all(r.map(async s=>{const o=await this.normalizeAmount(s.amount);return this.contractWrapper.readContract.interface.encodeFunctionData("transfer",[await k(s.toAddress),o])}));return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[i]})})),l(this,"mint",T(async r=>this.mintTo.prepare(await this.contractWrapper.getSignerAddress(),r))),l(this,"mintTo",T(async(r,i)=>$(this.mintable,Ha).to.prepare(r,i))),l(this,"mintBatchTo",T(async r=>{var i;return $((i=this.mintable)==null?void 0:i.batch,Gw).to.prepare(r)})),l(this,"burn",T(async r=>$(this.burnable,Fa).tokens.prepare(r))),l(this,"burnFrom",T(async(r,i)=>$(this.burnable,Fa).from.prepare(r,i))),l(this,"claim",T(async(r,i)=>this.claimTo.prepare(await this.contractWrapper.getSignerAddress(),r,i))),l(this,"claimTo",T(async(r,i,s)=>{var o;return $((o=this.droppable)==null?void 0:o.claim,Ua).to.prepare(r,i,s)})),this.contractWrapper=e,this.storage=n,this.mintable=this.detectErc20Mintable(),this.burnable=this.detectErc20Burnable(),this.droppable=this.detectErc20Droppable(),this.signatureMintable=this.detectErc20SignatureMintable(),this._chainId=a}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async get(){return await gt(this.contractWrapper.getProvider(),this.getAddress())}async balance(){return await this.balanceOf(await this.contractWrapper.getSignerAddress())}async balanceOf(e){return this.getValue(await this.contractWrapper.readContract.balanceOf(await k(e)))}async totalSupply(){return await this.getValue(await this.contractWrapper.readContract.totalSupply())}async allowance(e){return await this.allowanceOf(await this.contractWrapper.getSignerAddress(),await k(e))}async allowanceOf(e,n){return await this.getValue(await this.contractWrapper.readContract.allowance(await k(e),await k(n)))}async getMintTransaction(e,n){return $(this.mintable,Ha).getMintTransaction(e,n)}get claimConditions(){var e;return $((e=this.droppable)==null?void 0:e.claim,Ua).conditions}get signature(){return $(this.signatureMintable,Vw)}async normalizeAmount(e){const n=await this.contractWrapper.readContract.decimals();return Oe(Ne.parse(e),n)}async getValue(e){return await Ce(this.contractWrapper.getProvider(),this.getAddress(),b.from(e))}detectErc20Mintable(){if(U(this.contractWrapper,"ERC20"))return new gH(this,this.contractWrapper)}detectErc20Burnable(){if(U(this.contractWrapper,"ERC20Burnable"))return new mH(this,this.contractWrapper)}detectErc20Droppable(){if(U(this.contractWrapper,"ERC20ClaimConditionsV1")||U(this.contractWrapper,"ERC20ClaimConditionsV2")||U(this.contractWrapper,"ERC20ClaimPhasesV1")||U(this.contractWrapper,"ERC20ClaimPhasesV2"))return new yH(this,this.contractWrapper,this.storage)}detectErc20SignatureMintable(){if(U(this.contractWrapper,"ERC20SignatureMintable"))return new N6(this.contractWrapper)}}class bH{constructor(e){l(this,"featureName",Xw.name),l(this,"contractWrapper",void 0),l(this,"token",T(async n=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"burn",args:[n]}))),this.contractWrapper=e}}class TH{constructor(e,n,a){l(this,"featureName",t0.name),l(this,"revealer",void 0),l(this,"contractWrapper",void 0),l(this,"erc721",void 0),l(this,"storage",void 0),l(this,"lazyMint",T(async(r,i)=>{const s=await this.erc721.nextTokenIdToMint(),o=await Pn(r,this.storage,s.toNumber(),i),c=Qn(o);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"lazyMint",args:[o.length,c.endsWith("/")?c:`${c}/`,rt("")],parse:p=>{const d=this.contractWrapper.parseLogs("TokensLazyMinted",p==null?void 0:p.logs),u=d[0].args.startTokenId,m=d[0].args.endTokenId,f=[];for(let g=u;g.lte(m);g=g.add(1))f.push({id:g,receipt:p,data:()=>this.erc721.getTokenMetadata(g)});return f}})})),this.erc721=e,this.contractWrapper=n,this.storage=a,this.revealer=this.detectErc721Revealable()}detectErc721Revealable(){if(U(this.contractWrapper,"ERC721Revealable"))return new j0(this.contractWrapper,this.storage,ea.name,()=>this.erc721.nextTokenIdToMint())}}class wH{constructor(e,n,a){l(this,"featureName",n0.name),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"erc721",void 0),l(this,"to",T(async(r,i)=>{const s=await Pn(i,this.storage),o=await k(r),c=await Promise.all(s.map(async p=>this.contractWrapper.readContract.interface.encodeFunctionData("mintTo",[o,p])));return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[c],parse:p=>{const d=this.contractWrapper.parseLogs("TokensMinted",p.logs);if(d.length===0||d.length<i.length)throw new Error("TokenMinted event not found, minting failed");return d.map(u=>{const m=u.args.tokenIdMinted;return{id:m,receipt:p,data:()=>this.erc721.get(m)}})}})})),this.erc721=e,this.contractWrapper=n,this.storage=a}}class IH{constructor(e,n,a){l(this,"featureName",a0.name),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"erc721",void 0),l(this,"batch",void 0),l(this,"to",T(async(r,i)=>{const s=await Q0(i,this.storage);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"mintTo",args:[await k(r),s],parse:o=>{const c=this.contractWrapper.parseLogs("Transfer",o==null?void 0:o.logs);if(c.length===0)throw new Error("TransferEvent event not found");const p=c[0].args.tokenId;return{id:p,receipt:o,data:()=>this.erc721.get(p)}}})})),this.erc721=e,this.contractWrapper=n,this.storage=a,this.batch=this.detectErc721BatchMintable()}async getMintTransaction(e,n){return this.to.prepare(await k(e),n)}detectErc721BatchMintable(){if(U(this.contractWrapper,"ERC721BatchMintable"))return new wH(this.erc721,this.contractWrapper,this.storage)}}class vH{constructor(e,n){l(this,"featureName",r1.name),l(this,"contractWrapper",void 0),l(this,"erc721",void 0),this.erc721=e,this.contractWrapper=n}async all(e){const n=await this.tokenIds(e);return await Promise.all(n.map(a=>this.erc721.get(a.toString())))}async tokenIds(e){const n=await k(e||await this.contractWrapper.getSignerAddress()),a=await this.contractWrapper.readContract.balanceOf(n),r=Array.from(Array(a.toNumber()).keys());return await Promise.all(r.map(i=>this.contractWrapper.readContract.tokenOfOwnerByIndex(n,i)))}}class CH{constructor(e,n){l(this,"featureName",qn.name),l(this,"contractWrapper",void 0),l(this,"erc721",void 0),l(this,"owned",void 0),this.erc721=e,this.contractWrapper=n,this.owned=this.detectErc721Owned()}async all(e){const n=b.from((e==null?void 0:e.start)||0).toNumber(),a=b.from((e==null?void 0:e.count)||ot).toNumber(),r=await this.erc721.nextTokenIdToMint(),i=Math.min(r.toNumber(),n+a);return await Promise.all([...Array(i-n).keys()].map(s=>this.erc721.get((n+s).toString())))}async allOwners(){return Promise.all([...new Array((await this.totalCount()).toNumber()).keys()].map(async e=>({tokenId:e,owner:await this.erc721.ownerOf(e).catch(()=>B)})))}async totalCount(){return await this.erc721.nextTokenIdToMint()}async totalCirculatingSupply(){return await this.contractWrapper.readContract.totalSupply()}detectErc721Owned(){if(U(this.contractWrapper,"ERC721Enumerable"))return new vH(this.erc721,this.contractWrapper)}}const kH=H1.extend({tierPriority:y.array(y.string()),royaltyRecipient:ae.default(B),royaltyBps:oa.default(0),quantity:pe.default(1)});class EH{constructor(e,n,a){l(this,"featureName",Jw.name),l(this,"contractWrapper",void 0),l(this,"erc721",void 0),l(this,"storage",void 0),l(this,"createBatchWithTier",T(async(r,i,s)=>{const o=await this.erc721.nextTokenIdToMint(),c=await Pn(r,this.storage,o.toNumber(),s),p=Qn(c);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"lazyMint",args:[c.length,p.endsWith("/")?p:`${p}/`,i,rt("")],parse:d=>{const u=this.contractWrapper.parseLogs("TokensLazyMinted",d==null?void 0:d.logs),m=u[0].args[1],f=u[0].args[2],g=[];for(let w=m;w.lte(f);w=w.add(1))g.push({id:w,receipt:d,data:()=>this.erc721.getTokenMetadata(w)});return g}})})),l(this,"createDelayedRevealBatchWithTier",T(async(r,i,s,o,c)=>{if(!s)throw new Error("Password is required");const p=await this.storage.uploadBatch([Lt.parse(r)],{rewriteFileNames:{fileStartNumber:0}}),d=Qn(p),u=await this.erc721.nextTokenIdToMint(),m=await this.storage.uploadBatch(i.map(x=>Lt.parse(x)),{onProgress:c==null?void 0:c.onProgress,rewriteFileNames:{fileStartNumber:u.toNumber()}}),f=Qn(m),g=await this.contractWrapper.readContract.getBaseURICount(),w=await this.contractWrapper.getChainID(),I=it(["string","uint256","uint256","address"],[s,w,g,this.contractWrapper.readContract.address]),M=await this.contractWrapper.readContract.encryptDecrypt(rt(f),I);let R;const N=it(["bytes","bytes","uint256"],[rt(f),I,w]);return R=Tn.encode(["bytes","bytes32"],[M,N]),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"lazyMint",args:[m.length,d.endsWith("/")?d:`${d}/`,o,R],parse:x=>{const L=this.contractWrapper.parseLogs("TokensLazyMinted",x==null?void 0:x.logs),H=L[0].args[1],Q=L[0].args[2],ne=[];for(let ie=H;ie.lte(Q);ie=ie.add(1))ne.push({id:ie,receipt:x,data:()=>this.erc721.getTokenMetadata(ie)});return ne}})})),l(this,"reveal",T(async(r,i)=>{if(!i)throw new Error("Password is required");const s=await this.contractWrapper.getChainID(),o=it(["string","uint256","uint256","address"],[i,s,r,this.contractWrapper.readContract.address]);try{const c=await this.contractWrapper.callStatic().reveal(r,o);if(!c.includes("://")||!c.endsWith("/"))throw new Error("invalid password")}catch{throw new Error("invalid password")}return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"reveal",args:[r,o]})})),this.erc721=e,this.contractWrapper=n,this.storage=a}async getMetadataInTier(e){const a=(await this.contractWrapper.readContract.getMetadataForAllTiers()).find(i=>i.tier===e);if(!a)throw new Error("Tier not found in contract.");return await Promise.all(a.ranges.map((i,s)=>{const o=[],c=a.baseURIs[s];for(let p=i.startIdInclusive.toNumber();p<i.endIdNonInclusive.toNumber();p++){const d=`${c}/${p}`,u=this.storage.downloadJSON(d);o.push(u)}return o}).flat())}async getTokensInTier(e){const n=await this.contractWrapper.readContract.getTokensInTierLen();if(n.eq(0))return[];const a=await this.contractWrapper.readContract.getTokensInTier(e,0,n);return await Promise.all(a.map(i=>{const s=[];for(let o=i.startIdInclusive.toNumber();o<i.endIdNonInclusive.toNumber();o++)s.push(this.erc721.get(o));return s}).flat())}async generate(e){const[n]=await this.generateBatch([e]);return n}async generateBatch(e){const n=await Promise.all(e.map(i=>kH.parseAsync(i))),a=await this.contractWrapper.getChainID(),r=this.contractWrapper.getSigner();return P(r,"No signer available"),await Promise.all(n.map(async i=>{const s=await this.contractWrapper.signTypedData(r,{name:"SignatureAction",version:"1",chainId:a,verifyingContract:this.contractWrapper.readContract.address},{GenericRequest:kU},await this.mapPayloadToContractStruct(i));return{payload:i,signature:s.toString()}}))}async verify(e){const n=await this.mapPayloadToContractStruct(e.payload);return(await this.contractWrapper.readContract.verify(n,e.signature))[0]}async claimWithSignature(e){const n=await this.mapPayloadToContractStruct(e.payload),a=await se(this.contractWrapper.getProvider(),e.payload.price,e.payload.currencyAddress),r=await this.contractWrapper.getCallOverrides();await bt(this.contractWrapper,a,e.payload.currencyAddress,r);const i=await this.contractWrapper.sendTransaction("claimWithSignature",[n,e.signature],r),s=this.contractWrapper.parseLogs("TokensClaimed",i==null?void 0:i.logs),o=s[0].args.startTokenId,c=o.add(s[0].args.quantityClaimed),p=[];for(let d=o;d.lt(c);d=d.add(1))p.push({id:d,receipt:i,data:()=>this.erc721.get(d)});return p}async mapPayloadToContractStruct(e){const n=await se(this.contractWrapper.getProvider(),e.price,e.currencyAddress),a=Tn.encode(["string[]","address","address","uint256","address","uint256","uint256","address"],[e.tierPriority,e.to,e.royaltyRecipient,e.royaltyBps,e.primarySaleRecipient,e.quantity,n,e.currencyAddress]);return{uid:e.uid,validityStartTimestamp:e.mintStartTime,validityEndTimestamp:e.mintEndTime,data:a}}}class W0{constructor(e,n){l(this,"featureName",r0.name),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"mint",T(async a=>{const r=a.payload,i=a.signature,s=await this.contractWrapper.getCallOverrides(),o=c=>{const p=this.contractWrapper.parseLogs("TokensMintedWithSignature",c.logs);if(p.length===0)throw new Error("No MintWithSignature event found");return{id:p[0].args.tokenIdMinted,receipt:c}};if(await this.isLegacyNFTContract()){const c=await this.mapLegacyPayloadToContractStruct(r),p=c.price;return await bt(this.contractWrapper,p,r.currencyAddress,s),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"mintWithSignature",args:[c,i],overrides:s,parse:o})}else{const c=await this.mapPayloadToContractStruct(r),p=c.pricePerToken.mul(c.quantity);return await bt(this.contractWrapper,p,r.currencyAddress,s),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"mintWithSignature",args:[c,i],overrides:s,parse:o})}})),l(this,"mintBatch",T(async a=>{const r=await this.isLegacyNFTContract(),s=(await Promise.all(a.map(async o=>{let c;r?c=await this.mapLegacyPayloadToContractStruct(o.payload):c=await this.mapPayloadToContractStruct(o.payload);const p=o.signature,d=o.payload.price;if(b.from(d).gt(0))throw new Error("Can only batch free mints. For mints with a price, use regular mint()");return{message:c,signature:p}}))).map(o=>r?this.contractWrapper.readContract.interface.encodeFunctionData("mintWithSignature",[o.message,o.signature]):this.contractWrapper.readContract.interface.encodeFunctionData("mintWithSignature",[o.message,o.signature]));if(Ie("multicall",this.contractWrapper))return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[s],parse:o=>{const c=this.contractWrapper.parseLogs("TokensMintedWithSignature",o.logs);if(c.length===0)throw new Error("No MintWithSignature event found");return c.map(p=>({id:p.args.tokenIdMinted,receipt:o}))}});throw new Error("Multicall not available on this contract!")})),this.contractWrapper=e,this.storage=n}async verify(e){const n=await this.isLegacyNFTContract(),a=e.payload,r=e.signature;let i,s;if(n){const o=this.contractWrapper.readContract;i=await this.mapLegacyPayloadToContractStruct(a),s=await o.verify(i,r)}else{const o=this.contractWrapper.readContract;i=await this.mapPayloadToContractStruct(a),s=await o.verify(i,r)}return s[0]}async generate(e){return(await this.generateBatch([e]))[0]}async generateBatch(e){const n=await this.isLegacyNFTContract(),a=await Promise.all(e.map(c=>bU.parseAsync(c))),r=a.map(c=>c.metadata),i=await Pn(r,this.storage),s=await this.contractWrapper.getChainID(),o=this.contractWrapper.getSigner();return P(o,"No signer available"),await Promise.all(a.map(async(c,p)=>{const d=i[p],u=await TU.parseAsync({...c,uri:d});let m;return n?m=await this.contractWrapper.signTypedData(o,{name:"TokenERC721",version:"1",chainId:s,verifyingContract:this.contractWrapper.readContract.address},{MintRequest:IU},await this.mapLegacyPayloadToContractStruct(u)):m=await this.contractWrapper.signTypedData(o,{name:"SignatureMintERC721",version:"1",chainId:s,verifyingContract:await this.contractWrapper.readContract.address},{MintRequest:CU},await this.mapPayloadToContractStruct(u)),{payload:u,signature:m.toString()}}))}async mapPayloadToContractStruct(e){const n=await se(this.contractWrapper.getProvider(),e.price,e.currencyAddress);return{to:e.to,royaltyRecipient:e.royaltyRecipient,royaltyBps:e.royaltyBps,primarySaleRecipient:e.primarySaleRecipient,uri:e.uri,quantity:e.quantity,pricePerToken:n,currency:e.currencyAddress,validityStartTimestamp:e.mintStartTime,validityEndTimestamp:e.mintEndTime,uid:e.uid}}async mapLegacyPayloadToContractStruct(e){const n=await se(this.contractWrapper.getProvider(),e.price,e.currencyAddress);return{to:e.to,price:n,uri:e.uri,currency:e.currencyAddress,validityEndTimestamp:e.mintEndTime,validityStartTimestamp:e.mintStartTime,uid:e.uid,royaltyRecipient:e.royaltyRecipient,royaltyBps:e.royaltyBps,primarySaleRecipient:e.primarySaleRecipient}}async isLegacyNFTContract(){return U(this.contractWrapper,"ERC721SignatureMintV1")}}class xH{constructor(e,n){l(this,"featureName",Ka.name),l(this,"erc721",void 0),l(this,"contractWrapper",void 0),l(this,"to",T(async(a,r,i)=>{const s=await this.getClaimTransaction(a,r,i);return s.setParse(o=>{const p=this.contractWrapper.parseLogs("TokensClaimed",o==null?void 0:o.logs)[0].args.startTokenId,d=p.add(r),u=[];for(let m=p;m.lt(d);m=m.add(1))u.push({id:m,receipt:o,data:()=>this.erc721.get(m)});return u}),s})),this.erc721=e,this.contractWrapper=n}async getClaimTransaction(e,n,a){let r={};return a&&a.pricePerToken&&(r=await u6(this.contractWrapper,a.pricePerToken,n,a.currencyAddress,a.checkERC20Allowance)),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"claim",args:[e,n],overrides:r})}}class RH{constructor(e,n,a){l(this,"featureName",e0.name),l(this,"conditions",void 0),l(this,"contractWrapper",void 0),l(this,"erc721",void 0),l(this,"storage",void 0),l(this,"to",T(async(i,s,o)=>{const c=await this.conditions.getClaimTransaction(i,s,o);return c.setParse(p=>{const u=this.contractWrapper.parseLogs("TokensClaimed",p==null?void 0:p.logs)[0].args.startTokenId,m=u.add(s),f=[];for(let g=u;g.lt(m);g=g.add(1))f.push({id:g,receipt:p,data:()=>this.erc721.get(g)});return f}),c})),this.erc721=e,this.contractWrapper=n,this.storage=a;const r=new ge(this.contractWrapper,Vn,this.storage);this.conditions=new pr(this.contractWrapper,r,this.storage)}}class D6{get chainId(){return this._chainId}constructor(e,n,a){l(this,"featureName",i0.name),l(this,"query",void 0),l(this,"mintable",void 0),l(this,"burnable",void 0),l(this,"lazyMintable",void 0),l(this,"tieredDropable",void 0),l(this,"signatureMintable",void 0),l(this,"claimWithConditions",void 0),l(this,"claimCustom",void 0),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"_chainId",void 0),l(this,"transfer",T(async(r,i)=>{const s=await this.contractWrapper.getSignerAddress();return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"transferFrom(address,address,uint256)",args:[s,await k(r),i]})})),l(this,"setApprovalForAll",T(async(r,i)=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setApprovalForAll",args:[await k(r),i]}))),l(this,"setApprovalForToken",T(async(r,i)=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approve",args:[await k(r),i]}))),l(this,"mint",T(async r=>this.mintTo.prepare(await this.contractWrapper.getSignerAddress(),r))),l(this,"mintTo",T(async(r,i)=>$(this.mintable,a0).to.prepare(r,i))),l(this,"mintBatch",T(async r=>this.mintBatchTo.prepare(await this.contractWrapper.getSignerAddress(),r))),l(this,"mintBatchTo",T(async(r,i)=>{var s;return $((s=this.mintable)==null?void 0:s.batch,n0).to.prepare(r,i)})),l(this,"burn",T(async r=>$(this.burnable,Xw).token.prepare(r))),l(this,"lazyMint",T(async(r,i)=>$(this.lazyMintable,t0).lazyMint.prepare(r,i))),l(this,"claim",T(async(r,i)=>this.claimTo.prepare(await this.contractWrapper.getSignerAddress(),r,i))),l(this,"claimTo",T(async(r,i,s)=>{const o=this.claimWithConditions,c=this.claimCustom;if(o)return o.to.prepare(r,i,s);if(c)return c.to.prepare(r,i,s);throw new na(Ka)})),this.contractWrapper=e,this.storage=n,this.query=this.detectErc721Enumerable(),this.mintable=this.detectErc721Mintable(),this.burnable=this.detectErc721Burnable(),this.lazyMintable=this.detectErc721LazyMintable(),this.tieredDropable=this.detectErc721TieredDrop(),this.signatureMintable=this.detectErc721SignatureMintable(),this.claimWithConditions=this.detectErc721ClaimableWithConditions(),this.claimCustom=this.detectErc721Claimable(),this._chainId=a}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async get(e){const[n,a]=await Promise.all([this.ownerOf(e).catch(()=>B),this.getTokenMetadata(e).catch(()=>({id:e.toString(),uri:"",...q0}))]);return{owner:n,metadata:a,type:"ERC721",supply:"1"}}async ownerOf(e){return await this.contractWrapper.readContract.ownerOf(e)}async balanceOf(e){return await this.contractWrapper.readContract.balanceOf(await k(e))}async balance(){return await this.balanceOf(await this.contractWrapper.getSignerAddress())}async isApproved(e,n){return await this.contractWrapper.readContract.isApprovedForAll(await k(e),await k(n))}async getAll(e){return $(this.query,qn).all(e)}async getAllOwners(){return $(this.query,qn).allOwners()}async totalCount(){return this.nextTokenIdToMint()}async totalCirculatingSupply(){return $(this.query,qn).totalCirculatingSupply()}async getOwned(e){var n;if(e&&(e=await k(e)),(n=this.query)!=null&&n.owned)return this.query.owned.all(e);{const a=e||await this.contractWrapper.getSignerAddress(),r=await this.getAllOwners();return Promise.all((r||[]).filter(i=>{var s;return(a==null?void 0:a.toLowerCase())===((s=i.owner)==null?void 0:s.toLowerCase())}).map(async i=>await this.get(i.tokenId)))}}async getOwnedTokenIds(e){var n;if(e&&(e=await k(e)),(n=this.query)!=null&&n.owned)return this.query.owned.tokenIds(e);{const a=e||await this.contractWrapper.getSignerAddress();return(await this.getAllOwners()||[]).filter(i=>{var s;return(a==null?void 0:a.toLowerCase())===((s=i.owner)==null?void 0:s.toLowerCase())}).map(i=>b.from(i.tokenId))}}async getMintTransaction(e,n){return this.mintTo.prepare(e,n)}async getClaimTransaction(e,n,a){const r=this.claimWithConditions,i=this.claimCustom;if(r)return r.conditions.getClaimTransaction(e,n,a);if(i)return i.getClaimTransaction(e,n,a);throw new na(Ka)}async totalClaimedSupply(){const e=this.contractWrapper;if(Ie("nextTokenIdToClaim",e))return e.readContract.nextTokenIdToClaim();if(Ie("totalMinted",e))return e.readContract.totalMinted();throw new Error("No function found on contract to get total claimed supply")}async totalUnclaimedSupply(){return(await this.nextTokenIdToMint()).sub(await this.totalClaimedSupply())}get claimConditions(){return $(this.claimWithConditions,e0).conditions}get tieredDrop(){return $(this.tieredDropable,Jw)}get signature(){return $(this.signatureMintable,r0)}get revealer(){var e;return $((e=this.lazyMintable)==null?void 0:e.revealer,ea)}async getTokenMetadata(e){const n=await this.contractWrapper.readContract.tokenURI(e);if(!n)throw new e6;return Z1(e,n,this.storage)}async nextTokenIdToMint(){if(Ie("nextTokenIdToMint",this.contractWrapper))return await this.contractWrapper.readContract.nextTokenIdToMint();if(Ie("totalSupply",this.contractWrapper))return await this.contractWrapper.readContract.totalSupply();throw new Error("Contract requires either `nextTokenIdToMint` or `totalSupply` function available to determine the next token ID to mint")}detectErc721Enumerable(){if(U(this.contractWrapper,"ERC721Supply")||Ie("nextTokenIdToMint",this.contractWrapper))return new CH(this,this.contractWrapper)}detectErc721Mintable(){if(U(this.contractWrapper,"ERC721Mintable"))return new IH(this,this.contractWrapper,this.storage)}detectErc721Burnable(){if(U(this.contractWrapper,"ERC721Burnable"))return new bH(this.contractWrapper)}detectErc721LazyMintable(){if(U(this.contractWrapper,"ERC721LazyMintable"))return new TH(this,this.contractWrapper,this.storage)}detectErc721TieredDrop(){if(U(this.contractWrapper,"ERC721TieredDrop"))return new EH(this,this.contractWrapper,this.storage)}detectErc721SignatureMintable(){if(U(this.contractWrapper,"ERC721SignatureMintV1")||U(this.contractWrapper,"ERC721SignatureMintV2"))return new W0(this.contractWrapper,this.storage)}detectErc721ClaimableWithConditions(){if(U(this.contractWrapper,"ERC721ClaimConditionsV1")||U(this.contractWrapper,"ERC721ClaimConditionsV2")||U(this.contractWrapper,"ERC721ClaimPhasesV1")||U(this.contractWrapper,"ERC721ClaimPhasesV2"))return new RH(this,this.contractWrapper,this.storage)}detectErc721Claimable(){if(U(this.contractWrapper,"ERC721ClaimCustom"))return new xH(this,this.contractWrapper)}}const l5=y.object({address:ae,quantity:Ne.default(1)}),AH=y.union([y.array(y.string()).transform(async t=>await Promise.all(t.map(e=>l5.parseAsync({address:e})))),y.array(l5)]);class PH{constructor(e){l(this,"featureName",dn.name),l(this,"contractWrapper",void 0),l(this,"tokens",T(async(n,a)=>{const r=await this.contractWrapper.getSignerAddress();return this.from.prepare(r,n,a)})),l(this,"from",T(async(n,a,r)=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"burn",args:[await k(n),a,r]}))),l(this,"batch",T(async(n,a)=>{const r=await this.contractWrapper.getSignerAddress();return this.batchFrom.prepare(r,n,a)})),l(this,"batchFrom",T(async(n,a,r)=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"burnBatch",args:[await k(n),a,r]}))),this.contractWrapper=e}}class MH{constructor(e,n){l(this,"featureName",mn.name),l(this,"contractWrapper",void 0),l(this,"erc1155",void 0),this.erc1155=e,this.contractWrapper=n}async all(e){const n=b.from((e==null?void 0:e.start)||0).toNumber(),a=b.from((e==null?void 0:e.count)||ot).toNumber(),r=Math.min((await this.totalCount()).toNumber(),n+a);return await Promise.all([...Array(r-n).keys()].map(i=>this.erc1155.get((n+i).toString())))}async totalCount(){return await this.contractWrapper.readContract.nextTokenIdToMint()}async totalCirculatingSupply(e){return await this.contractWrapper.readContract.totalSupply(e)}async owned(e){const n=await k(e||await this.contractWrapper.getSignerAddress()),a=await this.contractWrapper.readContract.nextTokenIdToMint(),i=(await this.contractWrapper.readContract.balanceOfBatch(Array(a.toNumber()).fill(n),Array.from(Array(a.toNumber()).keys()))).map((s,o)=>({tokenId:o,balance:s})).filter(s=>s.balance.gt(0));return await Promise.all(i.map(async s=>({...await this.erc1155.get(s.tokenId.toString()),owner:n,quantityOwned:s.balance.toString()})))}}async function J1(t,e){try{const n=new J(t,Tv,e),[a,r]=await Promise.all([F5(await n.contractType()).replace(/\x00/g,""),await n.contractVersion()]);return{type:a,version:r}}catch{return}}class _H{constructor(e,n,a){l(this,"featureName",o0.name),l(this,"revealer",void 0),l(this,"contractWrapper",void 0),l(this,"erc1155",void 0),l(this,"storage",void 0),l(this,"lazyMint",T(async(r,i)=>{const s=await this.erc1155.nextTokenIdToMint(),o=await Pn(r,this.storage,s.toNumber(),i),c=o[0].substring(0,o[0].lastIndexOf("/"));for(let u=0;u<o.length;u++){const m=o[u].substring(0,o[u].lastIndexOf("/"));if(c!==m)throw new Error(`Can only create batches with the same base URI for every entry in the batch. Expected '${c}' but got '${m}'`)}const p=u=>{const m=this.contractWrapper.parseLogs("TokensLazyMinted",u==null?void 0:u.logs),f=m[0].args.startTokenId,g=m[0].args.endTokenId,w=[];for(let I=f;I.lte(g);I=I.add(1))w.push({id:I,receipt:u,data:()=>this.erc1155.getTokenMetadata(I)});return w},d=await J1(this.contractWrapper.readContract.address,this.contractWrapper.getProvider());return this.isLegacyEditionDropContract(this.contractWrapper,d)?v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"lazyMint",args:[o.length,`${c.endsWith("/")?c:`${c}/`}`],parse:p}):v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"lazyMint",args:[o.length,`${c.endsWith("/")?c:`${c}/`}`,rt("")],parse:p})})),this.erc1155=e,this.contractWrapper=n,this.storage=a,this.revealer=this.detectErc1155Revealable()}detectErc1155Revealable(){if(U(this.contractWrapper,"ERC1155Revealable"))return new j0(this.contractWrapper,this.storage,ta.name,()=>this.erc1155.nextTokenIdToMint())}isLegacyEditionDropContract(e,n){return n&&n.type==="DropERC1155"&&n.version<3||!1}}class SH{constructor(e,n,a){l(this,"featureName",p0.name),l(this,"contractWrapper",void 0),l(this,"erc1155",void 0),l(this,"storage",void 0),l(this,"to",T(async(r,i)=>{const s=i.map(u=>u.metadata),o=i.map(u=>u.supply),c=await Pn(s,this.storage),p=await k(r),d=await Promise.all(c.map(async(u,m)=>this.contractWrapper.readContract.interface.encodeFunctionData("mintTo",[p,ke,u,o[m]])));return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[d],parse:u=>{const m=this.contractWrapper.parseLogs("TokensMinted",u.logs);if(m.length===0||m.length<s.length)throw new Error("TokenMinted event not found, minting failed");return m.map(f=>{const g=f.args.tokenIdMinted;return{id:g,receipt:u,data:()=>this.erc1155.get(g)}})}})})),this.erc1155=e,this.contractWrapper=n,this.storage=a}}class WH{constructor(e,n,a){l(this,"featureName",un.name),l(this,"contractWrapper",void 0),l(this,"erc1155",void 0),l(this,"storage",void 0),l(this,"batch",void 0),l(this,"to",T(async(r,i)=>{const s=await this.getMintTransaction(r,i);return s.setParse(o=>{const c=this.contractWrapper.parseLogs("TransferSingle",o==null?void 0:o.logs);if(c.length===0)throw new Error("TransferSingleEvent event not found");const p=c[0].args.id;return{id:p,receipt:o,data:()=>this.erc1155.get(p.toString())}}),s})),l(this,"additionalSupplyTo",T(async(r,i,s)=>{const o=await this.erc1155.getTokenMetadata(i);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"mintTo",args:[await k(r),i,o.uri,s],parse:c=>({id:b.from(i),receipt:c,data:()=>this.erc1155.get(i)})})})),this.erc1155=e,this.contractWrapper=n,this.storage=a,this.batch=this.detectErc1155BatchMintable()}async getMintTransaction(e,n){const a=await Q0(n.metadata,this.storage);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"mintTo",args:[await k(e),ke,a,n.supply]})}detectErc1155BatchMintable(){if(U(this.contractWrapper,"ERC1155BatchMintable"))return new SH(this.erc1155,this.contractWrapper,this.storage)}}class L6{constructor(e,n,a){l(this,"featureName",c0.name),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"roles",void 0),l(this,"mint",T(async r=>{const i=r.payload,s=r.signature,o=await this.mapPayloadToContractStruct(i),c=await this.contractWrapper.getCallOverrides();return await bt(this.contractWrapper,o.pricePerToken.mul(o.quantity),i.currencyAddress,c),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"mintWithSignature",args:[o,s],overrides:c,parse:p=>{const d=this.contractWrapper.parseLogs("TokensMintedWithSignature",p.logs);if(d.length===0)throw new Error("No MintWithSignature event found");return{id:d[0].args.tokenIdMinted,receipt:p}}})})),l(this,"mintBatch",T(async r=>{const s=(await Promise.all(r.map(async o=>{const c=await this.mapPayloadToContractStruct(o.payload),p=o.signature,d=o.payload.price;if(b.from(d).gt(0))throw new Error("Can only batch free mints. For mints with a price, use regular mint()");return{message:c,signature:p}}))).map(o=>this.contractWrapper.readContract.interface.encodeFunctionData("mintWithSignature",[o.message,o.signature]));if(Ie("multicall",this.contractWrapper))return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[s],parse:o=>{const c=this.contractWrapper.parseLogs("TokensMintedWithSignature",o.logs);if(c.length===0)throw new Error("No MintWithSignature event found");return c.map(p=>({id:p.args.tokenIdMinted,receipt:o}))}});throw new Error("Multicall not supported on this contract!")})),this.contractWrapper=e,this.storage=n,this.roles=a}async verify(e){const n=e.payload,a=e.signature,r=await this.mapPayloadToContractStruct(n);return(await this.contractWrapper.readContract.verify(r,a))[0]}async generate(e){const n={...e,tokenId:ke};return this.generateFromTokenId(n)}async generateFromTokenId(e){return(await this.generateBatchFromTokenIds([e]))[0]}async generateBatch(e){const n=e.map(a=>({...a,tokenId:ke}));return this.generateBatchFromTokenIds(n)}async generateBatchFromTokenIds(e){var p;await((p=this.roles)==null?void 0:p.verify(["minter"],await this.contractWrapper.getSignerAddress()));const n=await Promise.all(e.map(d=>fU.parseAsync(d))),a=n.map(d=>d.metadata),r=await Pn(a,this.storage),i=await this.contractWrapper.getChainID(),s=this.contractWrapper.getSigner();P(s,"No signer available");const o=await J1(this.contractWrapper.readContract.address,this.contractWrapper.getProvider()),c=(o==null?void 0:o.type)==="TokenERC1155";return await Promise.all(n.map(async(d,u)=>{const m=r[u],f=await gU.parseAsync({...d,uri:m}),g=await this.contractWrapper.signTypedData(s,{name:c?"TokenERC1155":"SignatureMintERC1155",version:"1",chainId:i,verifyingContract:this.contractWrapper.readContract.address},{MintRequest:vU},await this.mapPayloadToContractStruct(f));return{payload:f,signature:g.toString()}}))}async mapPayloadToContractStruct(e){const n=await se(this.contractWrapper.getProvider(),e.price,e.currencyAddress);return{to:e.to,tokenId:e.tokenId,uri:e.uri,quantity:e.quantity,pricePerToken:n,currency:e.currencyAddress,validityStartTimestamp:e.mintStartTime,validityEndTimestamp:e.mintEndTime,uid:e.uid,royaltyRecipient:e.royaltyRecipient,royaltyBps:e.royaltyBps,primarySaleRecipient:e.primarySaleRecipient}}}class BH{constructor(e){l(this,"featureName",Oa.name),l(this,"contractWrapper",void 0),l(this,"to",T(async(n,a,r,i)=>await this.getClaimTransaction(n,a,r,i))),this.contractWrapper=e}async getClaimTransaction(e,n,a,r){let i={};return r&&r.pricePerToken&&(i=await u6(this.contractWrapper,r.pricePerToken,a,r.currencyAddress,r.checkERC20Allowance)),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"claim",args:[await k(e),n,a],overrides:i})}}class NH{constructor(e,n){l(this,"featureName",s0.name),l(this,"conditions",void 0),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"to",T(async(r,i,s,o)=>await this.conditions.getClaimTransaction(r,i,s,o))),this.contractWrapper=e,this.storage=n;const a=new ge(this.contractWrapper,Vn,this.storage);this.conditions=new B6(e,a,this.storage)}}class U6{get chainId(){return this._chainId}constructor(e,n,a){var r=this;l(this,"featureName",l0.name),l(this,"query",void 0),l(this,"mintable",void 0),l(this,"burnable",void 0),l(this,"lazyMintable",void 0),l(this,"signatureMintable",void 0),l(this,"claimWithConditions",void 0),l(this,"claimCustom",void 0),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"_chainId",void 0),l(this,"transfer",T(async function(i,s,o){let c=arguments.length>3&&arguments[3]!==void 0?arguments[3]:[0];const p=await r.contractWrapper.getSignerAddress();return v.fromContractWrapper({contractWrapper:r.contractWrapper,method:"safeTransferFrom",args:[p,await k(i),s,o,c]})})),l(this,"setApprovalForAll",T(async(i,s)=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setApprovalForAll",args:[i,s]}))),l(this,"airdrop",T(async function(i,s){let o=arguments.length>2&&arguments[2]!==void 0?arguments[2]:[0];const c=await r.contractWrapper.getSignerAddress(),p=await r.balanceOf(c,i),d=await AH.parseAsync(s),u=d.reduce((f,g)=>f+Number((g==null?void 0:g.quantity)||1),0);if(p.toNumber()<u)throw new Error(`The caller owns ${p.toNumber()} NFTs, but wants to airdrop ${u} NFTs.`);const m=d.map(f=>{let{address:g,quantity:w}=f;return r.contractWrapper.readContract.interface.encodeFunctionData("safeTransferFrom",[c,g,i,w,o])});return v.fromContractWrapper({contractWrapper:r.contractWrapper,method:"multicall",args:[m]})})),l(this,"mint",T(async i=>this.mintTo.prepare(await this.contractWrapper.getSignerAddress(),i))),l(this,"mintTo",T(async(i,s)=>$(this.mintable,un).to.prepare(i,s))),l(this,"mintAdditionalSupply",T(async(i,s)=>$(this.mintable,un).additionalSupplyTo.prepare(await this.contractWrapper.getSignerAddress(),i,s))),l(this,"mintAdditionalSupplyTo",T(async(i,s,o)=>$(this.mintable,un).additionalSupplyTo.prepare(i,s,o))),l(this,"mintBatch",T(async i=>this.mintBatchTo.prepare(await this.contractWrapper.getSignerAddress(),i))),l(this,"mintBatchTo",T(async(i,s)=>{var o;return $((o=this.mintable)==null?void 0:o.batch,p0).to.prepare(i,s)})),l(this,"burn",T(async(i,s)=>$(this.burnable,dn).tokens.prepare(i,s))),l(this,"burnFrom",T(async(i,s,o)=>$(this.burnable,dn).from.prepare(i,s,o))),l(this,"burnBatch",T(async(i,s)=>$(this.burnable,dn).batch.prepare(i,s))),l(this,"burnBatchFrom",T(async(i,s,o)=>$(this.burnable,dn).batchFrom.prepare(i,s,o))),l(this,"lazyMint",T(async(i,s)=>$(this.lazyMintable,o0).lazyMint.prepare(i,s))),l(this,"claim",T(async(i,s,o)=>this.claimTo.prepare(await this.contractWrapper.getSignerAddress(),i,s,o))),l(this,"claimTo",T(async(i,s,o,c)=>{const p=this.claimWithConditions,d=this.claimCustom;if(p)return p.to.prepare(i,s,o,c);if(d)return d.to.prepare(i,s,o,c);throw new na(Oa)})),this.contractWrapper=e,this.storage=n,this.query=this.detectErc1155Enumerable(),this.mintable=this.detectErc1155Mintable(),this.burnable=this.detectErc1155Burnable(),this.lazyMintable=this.detectErc1155LazyMintable(),this.signatureMintable=this.detectErc1155SignatureMintable(),this.claimCustom=this.detectErc1155Claimable(),this.claimWithConditions=this.detectErc1155ClaimableWithConditions(),this._chainId=a}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async get(e){const[n,a]=await Promise.all([this.contractWrapper.readContract.totalSupply(e).catch(()=>b.from(0)),this.getTokenMetadata(e).catch(()=>({id:e.toString(),uri:"",...q0}))]);return{owner:B,metadata:a,type:"ERC1155",supply:n.toString()}}async totalSupply(e){return await this.contractWrapper.readContract.totalSupply(e)}async balanceOf(e,n){return await this.contractWrapper.readContract.balanceOf(await k(e),n)}async balance(e){return await this.balanceOf(await this.contractWrapper.getSignerAddress(),e)}async isApproved(e,n){return await this.contractWrapper.readContract.isApprovedForAll(await k(e),await k(n))}async nextTokenIdToMint(){if(Ie("nextTokenIdToMint",this.contractWrapper))return await this.contractWrapper.readContract.nextTokenIdToMint();throw new Error("Contract requires the `nextTokenIdToMint` function available to determine the next token ID to mint")}async getAll(e){return $(this.query,mn).all(e)}async totalCount(){return $(this.query,mn).totalCount()}async totalCirculatingSupply(e){return $(this.query,mn).totalCirculatingSupply(e)}async getOwned(e){return e&&(e=await k(e)),$(this.query,mn).owned(e)}async getMintTransaction(e,n){return $(this.mintable,un).getMintTransaction(e,n)}async getClaimTransaction(e,n,a,r){const i=this.claimWithConditions,s=this.claimCustom;if(i)return i.conditions.getClaimTransaction(e,n,a,r);if(s)return s.getClaimTransaction(e,n,a,r);throw new na(Oa)}get claimConditions(){return $(this.claimWithConditions,s0).conditions}get signature(){return $(this.signatureMintable,c0)}get revealer(){var e;return $((e=this.lazyMintable)==null?void 0:e.revealer,ta)}async getTokenMetadata(e){const n=await this.contractWrapper.readContract.uri(e);if(!n)throw new e6;return Z1(e,n,this.storage)}detectErc1155Enumerable(){if(U(this.contractWrapper,"ERC1155Enumerable"))return new MH(this,this.contractWrapper)}detectErc1155Mintable(){if(U(this.contractWrapper,"ERC1155Mintable"))return new WH(this,this.contractWrapper,this.storage)}detectErc1155Burnable(){if(U(this.contractWrapper,"ERC1155Burnable"))return new PH(this.contractWrapper)}detectErc1155LazyMintable(){if(U(this.contractWrapper,"ERC1155LazyMintableV1")||U(this.contractWrapper,"ERC1155LazyMintableV2"))return new _H(this,this.contractWrapper,this.storage)}detectErc1155SignatureMintable(){if(U(this.contractWrapper,"ERC1155SignatureMintable"))return new L6(this.contractWrapper,this.storage)}detectErc1155Claimable(){if(U(this.contractWrapper,"ERC1155ClaimCustom"))return new BH(this.contractWrapper)}detectErc1155ClaimableWithConditions(){if(U(this.contractWrapper,"ERC1155ClaimConditionsV1")||U(this.contractWrapper,"ERC1155ClaimConditionsV2")||U(this.contractWrapper,"ERC1155ClaimPhasesV1")||U(this.contractWrapper,"ERC1155ClaimPhasesV2"))return new NH(this.contractWrapper,this.storage)}}async function ra(t,e,n,a,r){try{const i=new J(n,rr,t),s=await i.supportsInterface(ir),o=await i.supportsInterface(sr);if(s){const c=new J(n,xe,t);if(await c.isApprovedForAll(r,e))return!0;let d;try{d=await c.getApproved(a)}catch{}return(d==null?void 0:d.toLowerCase())===e.toLowerCase()}else return o?await new J(n,De,t).isApprovedForAll(r,e):(console.error("Contract does not implement ERC 1155 or ERC 721."),!1)}catch(i){return console.error("Failed to check if token is approved",i),!1}}async function ia(t,e,n,a,r){const i=new Z(t.getSignerOrProvider(),n,rr,t.options),s=await i.readContract.supportsInterface(ir),o=await i.readContract.supportsInterface(sr);if(s){const c=new Z(t.getSignerOrProvider(),n,xe,t.options);await c.readContract.isApprovedForAll(r,e)||(await c.readContract.getApproved(a)).toLowerCase()===e.toLowerCase()||await c.sendTransaction("setApprovalForAll",[e,!0])}else if(o){const c=new Z(t.getSignerOrProvider(),n,De,t.options);await c.readContract.isApprovedForAll(r,e)||await c.sendTransaction("setApprovalForAll",[e,!0])}else throw Error("Contract must implement ERC 1155 or ERC 721.")}function F6(t){switch(P(t.assetContractAddress!==void 0&&t.assetContractAddress!==null,"Asset contract address is required"),P(t.buyoutPricePerToken!==void 0&&t.buyoutPricePerToken!==null,"Buyout price is required"),P(t.listingDurationInSeconds!==void 0&&t.listingDurationInSeconds!==null,"Listing duration is required"),P(t.startTimestamp!==void 0&&t.startTimestamp!==null,"Start time is required"),P(t.tokenId!==void 0&&t.tokenId!==null,"Token ID is required"),P(t.quantity!==void 0&&t.quantity!==null,"Quantity is required"),t.type){case"NewAuctionListing":P(t.reservePricePerToken!==void 0&&t.reservePricePerToken!==null,"Reserve price is required")}}async function eI(t,e,n){return{quantity:n.quantityDesired,pricePerToken:n.pricePerToken,currencyContractAddress:n.currency,buyerAddress:n.offeror,quantityDesired:n.quantityWanted,currencyValue:await Ce(t,n.currency,n.quantityWanted.mul(n.pricePerToken)),listingId:e}}function DH(t,e,n){return n=b.from(n),t=b.from(t),e=b.from(e),t.eq(b.from(0))?!1:e.sub(t).mul(sv).div(t).gte(n)}async function sa(t,e,n){let a=[];for(;e-t>ot;)a.push(n(t,t+ot-1)),t+=ot;return a.push(n(t,e-1)),await Promise.all(a)}const d5=y.object({assetContractAddress:ae,tokenId:te,quantity:te.default(1),currencyContractAddress:ae.default(je),pricePerToken:Ne,startTimestamp:or.default(new Date),endTimestamp:H0,isReservedListing:y.boolean().default(!1)});class Pe{constructor(e){l(this,"contractWrapper",void 0),this.contractWrapper=e}addTransactionListener(e){this.contractWrapper.addListener(Ve.Transaction,e)}removeTransactionListener(e){this.contractWrapper.off(Ve.Transaction,e)}addEventListener(e,n){const a=this.contractWrapper.readContract.interface.getEvent(e),i={address:this.contractWrapper.readContract.address,topics:[this.contractWrapper.readContract.interface.getEventTopic(a)]},s=o=>{const c=this.contractWrapper.readContract.interface.parseLog(o);n(this.toContractEvent(c.eventFragment,c.args,o))};return this.contractWrapper.getProvider().on(i,s),()=>{this.contractWrapper.getProvider().off(i,s)}}listenToAllEvents(e){const a={address:this.contractWrapper.readContract.address},r=i=>{try{const s=this.contractWrapper.readContract.interface.parseLog(i);e(this.toContractEvent(s.eventFragment,s.args,i))}catch(s){console.error("Could not parse event:",i,s)}};return this.contractWrapper.getProvider().on(a,r),()=>{this.contractWrapper.getProvider().off(a,r)}}removeEventListener(e,n){const a=this.contractWrapper.readContract.interface.getEvent(e);this.contractWrapper.readContract.off(a.name,n)}removeAllListeners(){this.contractWrapper.readContract.removeAllListeners();const n={address:this.contractWrapper.readContract.address};this.contractWrapper.getProvider().removeAllListeners(n)}async getAllEvents(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{fromBlock:0,toBlock:"latest",order:"desc"};const a=(await this.contractWrapper.readContract.queryFilter({},e.fromBlock,e.toBlock)).sort((r,i)=>e.order==="desc"?i.blockNumber-r.blockNumber:r.blockNumber-i.blockNumber);return this.parseEvents(a)}async getEvents(e){let n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{fromBlock:0,toBlock:"latest",order:"desc"};const a=this.contractWrapper.readContract.interface.getEvent(e),r=this.contractWrapper.readContract.interface.getEvent(e),i=n.filters?r.inputs.map(p=>n.filters[p.name]):[],s=this.contractWrapper.readContract.filters[a.name](...i),c=(await this.contractWrapper.readContract.queryFilter(s,n.fromBlock,n.toBlock)).sort((p,d)=>n.order==="desc"?d.blockNumber-p.blockNumber:p.blockNumber-d.blockNumber);return this.parseEvents(c)}parseEvents(e){return e.map(n=>{const a=Object.fromEntries(Object.entries(n).filter(r=>typeof r[1]!="function"&&r[0]!=="args"));if(n.args){const r=Object.entries(n.args),i=r.slice(r.length/2,r.length),s={};for(const[o,c]of i)s[o]=c;return{eventName:n.event||"",data:s,transaction:a}}return{eventName:n.event||"",data:{},transaction:a}})}toContractEvent(e,n,a){const r=Object.fromEntries(Object.entries(a).filter(s=>typeof s[1]!="function"&&s[0]!=="args")),i={};return e.inputs.forEach((s,o)=>{if(Array.isArray(n[o])){const c=s.components;if(c){const p=n[o];if(s.type==="tuple[]"){const d=[];for(let u=0;u<p.length;u++){const m=p[u],f={};for(let g=0;g<c.length;g++){const w=c[g].name;f[w]=m[g]}d.push(f)}i[s.name]=d}else{const d={};for(let u=0;u<c.length;u++){const m=c[u].name;d[m]=p[u]}i[s.name]=d}}}else i[s.name]=n[o]}),{eventName:e.name,data:i,transaction:r}}}class Le{constructor(e){l(this,"contractWrapper",void 0),this.contractWrapper=e}overrideNextTransaction(e){this.contractWrapper.withTransactionOverride(e)}}class We{constructor(e){l(this,"contractWrapper",void 0),this.contractWrapper=e}async gasCostOf(e,n){const a=await this.contractWrapper.getPreferredGasPrice(),r=await this.contractWrapper.estimateGas(e,n);return P1(r.mul(a))}async gasLimitOf(e,n){return this.contractWrapper.estimateGas(e,n)}async currentGasPriceInGwei(){const e=await this.contractWrapper.getProvider().getGasPrice();return Ge(e,"gwei")}}class H6{constructor(e,n){l(this,"featureName",$a.name),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"events",void 0),l(this,"interceptor",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"createListing",T(async a=>{const r=await d5.parseAsync(a);await ia(this.contractWrapper,this.getAddress(),r.assetContractAddress,r.tokenId,await this.contractWrapper.getSignerAddress());const i=await se(this.contractWrapper.getProvider(),r.pricePerToken,r.currencyContractAddress),o=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;return r.startTimestamp.lt(o)&&(r.startTimestamp=b.from(o)),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createListing",args:[{assetContract:r.assetContractAddress,tokenId:r.tokenId,quantity:r.quantity,currency:Qa(r.currencyContractAddress),pricePerToken:i,startTimestamp:r.startTimestamp,endTimestamp:r.endTimestamp,reserved:r.isReservedListing}],parse:c=>({id:this.contractWrapper.parseLogs("NewListing",c==null?void 0:c.logs)[0].args.listingId,receipt:c})})})),l(this,"createListingsBatch",T(async a=>{const r=await Promise.all(a.map(async i=>(await this.createListing.prepare(i)).encode()));return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r],parse:i=>this.contractWrapper.parseLogs("NewListing",i==null?void 0:i.logs).map(o=>({id:o.args.listingId,receipt:i}))})})),l(this,"updateListing",T(async(a,r)=>{const i=await d5.parseAsync(r);await ia(this.contractWrapper,this.getAddress(),i.assetContractAddress,i.tokenId,await this.contractWrapper.getSignerAddress());const s=await se(this.contractWrapper.getProvider(),i.pricePerToken,i.currencyContractAddress);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateListing",args:[a,{assetContract:i.assetContractAddress,tokenId:i.tokenId,quantity:i.quantity,currency:Qa(i.currencyContractAddress),pricePerToken:s,startTimestamp:i.startTimestamp,endTimestamp:i.endTimestamp,reserved:i.isReservedListing}],parse:o=>({id:this.contractWrapper.parseLogs("UpdatedListing",o==null?void 0:o.logs)[0].args.listingId,receipt:o})})})),l(this,"cancelListing",T(async a=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"cancelListing",args:[a]}))),l(this,"buyFromListing",T(async(a,r,i)=>{i&&(i=await k(i));const s=await this.validateListing(b.from(a)),{valid:o,error:c}=await this.isStillValidListing(s,r);if(!o)throw new Error(`Listing ${a} is no longer valid. ${c}`);const p=i||await this.contractWrapper.getSignerAddress(),d=b.from(r),u=b.from(s.pricePerToken).mul(d),m=await this.contractWrapper.getCallOverrides()||{};return await bt(this.contractWrapper,u,s.currencyContractAddress,m),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"buyFromListing",args:[a,p,d,s.currencyContractAddress,u],overrides:m})})),l(this,"approveBuyerForReservedListing",T(async(a,r)=>{if(await this.isBuyerApprovedForListing(a,r))throw new Error(`Buyer ${r} already approved for listing ${a}.`);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approveBuyerForListing",args:[a,r,!0]})})),l(this,"revokeBuyerApprovalForReservedListing",T(async(a,r)=>{if(await this.isBuyerApprovedForListing(a,r))return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approveBuyerForListing",args:[a,r,!1]});throw new Error(`Buyer ${r} not approved for listing ${a}.`)})),l(this,"approveCurrencyForListing",T(async(a,r,i)=>{const s=await this.validateListing(b.from(a)),o=await k(r);o===s.currencyContractAddress&&P(i===s.pricePerToken,"Approving listing currency with a different price.");const c=await this.contractWrapper.readContract.currencyPriceForListing(a,o);return P(i===c,"Currency already approved with this price."),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approveCurrencyForListing",args:[a,o,i]})})),l(this,"revokeCurrencyApprovalForListing",T(async(a,r)=>{const i=await this.validateListing(b.from(a)),s=await k(r);if(s===i.currencyContractAddress)throw new Error("Can't revoke approval for main listing currency.");const o=await this.contractWrapper.readContract.currencyPriceForListing(a,s);return P(!o.isZero(),"Currency not approved."),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approveCurrencyForListing",args:[a,s,b.from(0)]})})),this.contractWrapper=e,this.storage=n,this.events=new Pe(this.contractWrapper),this.encoder=new Ae(this.contractWrapper),this.interceptor=new Le(this.contractWrapper),this.estimator=new We(this.contractWrapper)}getAddress(){return this.contractWrapper.readContract.address}async getTotalCount(){return await this.contractWrapper.readContract.totalListings()}async getAll(e){const n=await this.getTotalCount();let a=b.from((e==null?void 0:e.start)||0).toNumber(),r=n.toNumber();if(r===0)throw new Error("No listings exist on the contract.");let i=[];i=(await sa(a,r,this.contractWrapper.readContract.getAllListings)).flat();const o=await this.applyFilter(i,e);return await Promise.all(o.map(c=>this.mapListing(c)))}async getAllValid(e){const n=await this.getTotalCount();let a=b.from((e==null?void 0:e.start)||0).toNumber(),r=n.toNumber();if(r===0)throw new Error("No listings exist on the contract.");let i=[];i=(await sa(a,r,this.contractWrapper.readContract.getAllValidListings)).flat();const o=await this.applyFilter(i,e);return await Promise.all(o.map(c=>this.mapListing(c)))}async getListing(e){const n=await this.contractWrapper.readContract.getListing(e);return await this.mapListing(n)}async isBuyerApprovedForListing(e,n){if(!(await this.validateListing(b.from(e))).isReservedListing)throw new Error(`Listing ${e} is not a reserved listing.`);return await this.contractWrapper.readContract.isBuyerApprovedForListing(e,await k(n))}async isCurrencyApprovedForListing(e,n){return await this.validateListing(b.from(e)),await this.contractWrapper.readContract.isCurrencyApprovedForListing(e,await k(n))}async currencyPriceForListing(e,n){const a=await this.validateListing(b.from(e)),r=await k(n);if(r===a.currencyContractAddress)return a.pricePerToken;if(!await this.isCurrencyApprovedForListing(e,r))throw new Error(`Currency ${r} is not approved for Listing ${e}.`);return await this.contractWrapper.readContract.currencyPriceForListing(e,r)}async validateListing(e){try{return await this.getListing(e)}catch(n){throw console.error(`Error getting the listing with id ${e}`),n}}async mapListing(e){let n=Me.UNSET;const r=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;switch(e.status){case 1:n=b.from(e.startTimestamp).gt(r)?Me.Created:b.from(e.endTimestamp).lt(r)?Me.Expired:Me.Active;break;case 2:n=Me.Completed;break;case 3:n=Me.Cancelled;break}return{assetContractAddress:e.assetContract,currencyContractAddress:e.currency,pricePerToken:e.pricePerToken.toString(),currencyValuePerToken:await Ce(this.contractWrapper.getProvider(),e.currency,e.pricePerToken),id:e.listingId.toString(),tokenId:e.tokenId.toString(),quantity:e.quantity.toString(),startTimeInSeconds:b.from(e.startTimestamp).toNumber(),asset:await la(e.assetContract,this.contractWrapper.getProvider(),e.tokenId,this.storage),endTimeInSeconds:b.from(e.endTimestamp).toNumber(),creatorAddress:e.listingCreator,isReservedListing:e.reserved,status:n}}async isStillValidListing(e,n){if(!await ra(this.contractWrapper.getProvider(),this.getAddress(),e.assetContractAddress,e.tokenId,e.creatorAddress))return{valid:!1,error:`Token '${e.tokenId}' from contract '${e.assetContractAddress}' is not approved for transfer`};const r=this.contractWrapper.getProvider(),i=new J(e.assetContractAddress,rr,r),s=await i.supportsInterface(ir),o=await i.supportsInterface(sr);if(s){const c=new J(e.assetContractAddress,xe,r);let p;try{p=await c.ownerOf(e.tokenId)}catch{}const d=(p==null?void 0:p.toLowerCase())===e.creatorAddress.toLowerCase();return{valid:d,error:d?void 0:`Seller is not the owner of Token '${e.tokenId}' from contract '${e.assetContractAddress} anymore'`}}else if(o){const d=(await new J(e.assetContractAddress,De,r).balanceOf(e.creatorAddress,e.tokenId)).gte(n||e.quantity);return{valid:d,error:d?void 0:`Seller does not have enough balance of Token '${e.tokenId}' from contract '${e.assetContractAddress} to fulfill the listing`}}else return{valid:!1,error:"Contract does not implement ERC 1155 or ERC 721."}}async applyFilter(e,n){let a=[...e];if(n){if(n.seller){const r=await k(n.seller);a=a.filter(i=>i.listingCreator.toString().toLowerCase()===(r==null?void 0:r.toString().toLowerCase()))}if(n.tokenContract){const r=await k(n.tokenContract);a=a.filter(i=>i.assetContract.toString().toLowerCase()===(r==null?void 0:r.toString().toLowerCase()))}n.tokenId!==void 0&&(a=a.filter(r=>{var i;return r.tokenId.toString()===((i=n==null?void 0:n.tokenId)==null?void 0:i.toString())}))}return(n==null?void 0:n.count)&&n.count<a.length?a.slice(0,n.count):a}}const LH=y.object({assetContractAddress:ae,tokenId:te,quantity:te.default(1),currencyContractAddress:ae.default(je),minimumBidAmount:Ne,buyoutBidAmount:Ne,timeBufferInSeconds:te.default(900),bidBufferBps:te.default(500),startTimestamp:or.default(new Date),endTimestamp:H0});class K6{constructor(e,n){l(this,"featureName",Ya.name),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"events",void 0),l(this,"interceptor",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"createAuction",T(async a=>{const r=LH.parse(a);await ia(this.contractWrapper,this.getAddress(),r.assetContractAddress,r.tokenId,await this.contractWrapper.getSignerAddress());const i=await se(this.contractWrapper.getProvider(),r.buyoutBidAmount,r.currencyContractAddress),s=await se(this.contractWrapper.getProvider(),r.minimumBidAmount,r.currencyContractAddress),c=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;return r.startTimestamp.lt(c)&&(r.startTimestamp=b.from(c)),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createAuction",args:[{assetContract:r.assetContractAddress,tokenId:r.tokenId,quantity:r.quantity,currency:Qa(r.currencyContractAddress),minimumBidAmount:s,buyoutBidAmount:i,timeBufferInSeconds:r.timeBufferInSeconds,bidBufferBps:r.bidBufferBps,startTimestamp:r.startTimestamp,endTimestamp:r.endTimestamp}],parse:p=>({id:this.contractWrapper.parseLogs("NewAuction",p.logs)[0].args.auctionId,receipt:p})})})),l(this,"createAuctionsBatch",T(async a=>{const r=await Promise.all(a.map(async i=>(await this.createAuction.prepare(i)).encode()));return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r],parse:i=>this.contractWrapper.parseLogs("NewAuction",i==null?void 0:i.logs).map(o=>({id:o.args.auctionId,receipt:i}))})})),l(this,"buyoutAuction",T(async a=>{const r=await this.validateAuction(b.from(a)),i=await gt(this.contractWrapper.getProvider(),r.currencyContractAddress);return this.makeBid.prepare(a,Ge(r.buyoutBidAmount,i.decimals))})),l(this,"makeBid",T(async(a,r)=>{const i=await this.validateAuction(b.from(a)),s=await se(this.contractWrapper.getProvider(),r,i.currencyContractAddress);if(s.eq(b.from(0)))throw new Error("Cannot make a bid with 0 value");if(b.from(i.buyoutBidAmount).gt(0)&&s.gt(i.buyoutBidAmount))throw new Error("Bid amount must be less than or equal to buyoutBidAmount");if(await this.getWinningBid(a)){const p=await this.isWinningBid(a,s);P(p,"Bid price is too low based on the current winning bid and the bid buffer")}else{const p=s,d=b.from(i.minimumBidAmount);P(p.gte(d),"Bid price is too low based on minimum bid amount")}const c=await this.contractWrapper.getCallOverrides()||{};return await bt(this.contractWrapper,s,i.currencyContractAddress,c),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"bidInAuction",args:[a,s],overrides:c})})),l(this,"cancelAuction",T(async a=>{if(await this.getWinningBid(a))throw new Error("Bids already made.");return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"cancelAuction",args:[a]})})),l(this,"closeAuctionForBidder",T(async(a,r)=>{r||(r=await this.contractWrapper.getSignerAddress());const i=await this.validateAuction(b.from(a));try{return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"collectAuctionTokens",args:[b.from(a)]})}catch(s){throw s.message.includes("Marketplace: auction still active.")?new ga(a.toString(),i.endTimeInSeconds.toString()):s}})),l(this,"closeAuctionForSeller",T(async a=>{const r=await this.validateAuction(b.from(a));try{return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"collectAuctionPayout",args:[b.from(a)]})}catch(i){throw i.message.includes("Marketplace: auction still active.")?new ga(a.toString(),r.endTimeInSeconds.toString()):i}})),l(this,"executeSale",T(async a=>{const r=await this.validateAuction(b.from(a));try{const i=await this.getWinningBid(a);P(i,"No winning bid found");const s=this.encoder.encode("collectAuctionPayout",[a]),o=this.encoder.encode("collectAuctionTokens",[a]);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[[s,o]]})}catch(i){throw i.message.includes("Marketplace: auction still active.")?new ga(a.toString(),r.endTimeInSeconds.toString()):i}})),this.contractWrapper=e,this.storage=n,this.events=new Pe(this.contractWrapper),this.encoder=new Ae(this.contractWrapper),this.interceptor=new Le(this.contractWrapper),this.estimator=new We(this.contractWrapper)}getAddress(){return this.contractWrapper.readContract.address}async getTotalCount(){return await this.contractWrapper.readContract.totalAuctions()}async getAll(e){const n=await this.getTotalCount();let a=b.from((e==null?void 0:e.start)||0).toNumber(),r=n.toNumber();if(r===0)throw new Error("No auctions exist on the contract.");let i=[];i=(await sa(a,r,this.contractWrapper.readContract.getAllAuctions)).flat();const o=await this.applyFilter(i,e);return await Promise.all(o.map(c=>this.mapAuction(c)))}async getAllValid(e){const n=await this.getTotalCount();let a=b.from((e==null?void 0:e.start)||0).toNumber(),r=n.toNumber();if(r===0)throw new Error("No auctions exist on the contract.");let i=[];i=(await sa(a,r,this.contractWrapper.readContract.getAllValidAuctions)).flat();const o=await this.applyFilter(i,e);return await Promise.all(o.map(c=>this.mapAuction(c)))}async getAuction(e){const n=await this.contractWrapper.readContract.getAuction(e);return await this.mapAuction(n)}async getWinningBid(e){await this.validateAuction(b.from(e));const n=await this.contractWrapper.readContract.getWinningBid(e);if(n._bidder!==B)return await this.mapBid(e.toString(),n._bidder,n._currency,n._bidAmount.toString())}async isWinningBid(e,n){return await this.contractWrapper.readContract.isNewWinningBid(e,n)}async getWinner(e){const n=await this.validateAuction(b.from(e)),a=await this.contractWrapper.readContract.getWinningBid(e),r=b.from(Math.floor(Date.now()/1e3)),i=b.from(n.endTimeInSeconds);if(r.gt(i)&&a._bidder!==B)return a._bidder;const o=(await this.contractWrapper.readContract.queryFilter(this.contractWrapper.readContract.filters.AuctionClosed())).find(c=>c.args.auctionId.eq(b.from(e)));if(!o)throw new Error(`Could not find auction with ID ${e} in closed auctions`);return o.args.winningBidder}async getBidBufferBps(e){return(await this.getAuction(e)).bidBufferBps}async getMinimumNextBid(e){const[n,a,r]=await Promise.all([this.getBidBufferBps(e),this.getWinningBid(e),await this.validateAuction(b.from(e))]),i=a?b.from(a.bidAmount):b.from(r.minimumBidAmount),s=i.add(i.mul(n).div(1e4));return Ce(this.contractWrapper.getProvider(),r.currencyContractAddress,s)}async validateAuction(e){try{return await this.getAuction(e)}catch(n){throw console.error(`Error getting the auction with id ${e}`),n}}async mapAuction(e){let n=Me.UNSET;const r=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;switch(e.status){case 1:n=b.from(e.startTimestamp).gt(r)?Me.Created:b.from(e.endTimestamp).lt(r)?Me.Expired:Me.Active;break;case 2:n=Me.Completed;break;case 3:n=Me.Cancelled;break}return{id:e.auctionId.toString(),creatorAddress:e.auctionCreator,assetContractAddress:e.assetContract,tokenId:e.tokenId.toString(),quantity:e.quantity.toString(),currencyContractAddress:e.currency,minimumBidAmount:e.minimumBidAmount.toString(),minimumBidCurrencyValue:await Ce(this.contractWrapper.getProvider(),e.currency,e.minimumBidAmount),buyoutBidAmount:e.buyoutBidAmount.toString(),buyoutCurrencyValue:await Ce(this.contractWrapper.getProvider(),e.currency,e.buyoutBidAmount),timeBufferInSeconds:b.from(e.timeBufferInSeconds).toNumber(),bidBufferBps:b.from(e.bidBufferBps).toNumber(),startTimeInSeconds:b.from(e.startTimestamp).toNumber(),endTimeInSeconds:b.from(e.endTimestamp).toNumber(),asset:await la(e.assetContract,this.contractWrapper.getProvider(),e.tokenId,this.storage),status:n}}async mapBid(e,n,a,r){const i=await k(n),s=await k(a);return{auctionId:e,bidderAddress:i,currencyContractAddress:s,bidAmount:r,bidAmountCurrencyValue:await Ce(this.contractWrapper.getProvider(),s,r)}}async applyFilter(e,n){let a=[...e];if(n){if(n.seller){const r=await k(n.seller);a=a.filter(i=>i.auctionCreator.toString().toLowerCase()===(r==null?void 0:r.toString().toLowerCase()))}if(n.tokenContract){const r=await k(n.tokenContract);a=a.filter(i=>i.assetContract.toString().toLowerCase()===(r==null?void 0:r.toString().toLowerCase()))}n.tokenId!==void 0&&(a=a.filter(r=>{var i;return r.tokenId.toString()===((i=n==null?void 0:n.tokenId)==null?void 0:i.toString())}))}return(n==null?void 0:n.count)&&n.count<a.length?a.slice(0,n.count):a}}const UH=y.object({assetContractAddress:ae,tokenId:te,quantity:te.default(1),currencyContractAddress:ae.default(je),totalPrice:Ne,endTimestamp:H0});class O6{constructor(e,n){l(this,"featureName",za.name),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"events",void 0),l(this,"interceptor",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"makeOffer",T(async a=>{const r=await UH.parseAsync(a),i=await this.contractWrapper.getChainID(),s=ct(r.currencyContractAddress)?La[i].wrapped.address:r.currencyContractAddress,o=await se(this.contractWrapper.getProvider(),r.totalPrice,s),c=await this.contractWrapper.getCallOverrides();return await bt(this.contractWrapper,o,s,c),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"makeOffer",args:[{assetContract:r.assetContractAddress,tokenId:r.tokenId,quantity:r.quantity,currency:s,totalPrice:o,expirationTimestamp:r.endTimestamp}],parse:p=>({id:this.contractWrapper.parseLogs("NewOffer",p==null?void 0:p.logs)[0].args.offerId,receipt:p})})})),l(this,"cancelOffer",T(async a=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"cancelOffer",args:[a]}))),l(this,"acceptOffer",T(async a=>{const r=await this.validateOffer(b.from(a)),{valid:i,error:s}=await this.isStillValidOffer(r);if(!i)throw new Error(`Offer ${a} is no longer valid. ${s}`);const o=await this.contractWrapper.getCallOverrides()||{};return await ia(this.contractWrapper,this.getAddress(),r.assetContractAddress,r.tokenId,await this.contractWrapper.getSignerAddress()),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"acceptOffer",args:[a],overrides:o})})),this.contractWrapper=e,this.storage=n,this.events=new Pe(this.contractWrapper),this.encoder=new Ae(this.contractWrapper),this.interceptor=new Le(this.contractWrapper),this.estimator=new We(this.contractWrapper)}getAddress(){return this.contractWrapper.readContract.address}async getTotalCount(){return await this.contractWrapper.readContract.totalOffers()}async getAll(e){const n=await this.getTotalCount();let a=b.from((e==null?void 0:e.start)||0).toNumber(),r=n.toNumber();if(r===0)throw new Error("No offers exist on the contract.");let i=[];i=(await sa(a,r,this.contractWrapper.readContract.getAllOffers)).flat();const o=await this.applyFilter(i,e);return await Promise.all(o.map(c=>this.mapOffer(c)))}async getAllValid(e){const n=await this.getTotalCount();let a=b.from((e==null?void 0:e.start)||0).toNumber(),r=n.toNumber();if(r===0)throw new Error("No offers exist on the contract.");let i=[];i=(await sa(a,r,this.contractWrapper.readContract.getAllValidOffers)).flat();const o=await this.applyFilter(i,e);return await Promise.all(o.map(c=>this.mapOffer(c)))}async getOffer(e){const n=await this.contractWrapper.readContract.getOffer(e);return await this.mapOffer(n)}async validateOffer(e){try{return await this.getOffer(e)}catch(n){throw console.error(`Error getting the offer with id ${e}`),n}}async mapOffer(e){let n=Me.UNSET;const r=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;switch(e.status){case 1:n=b.from(e.expirationTimestamp).lt(r)?Me.Expired:Me.Active;break;case 2:n=Me.Completed;break;case 3:n=Me.Cancelled;break}return{id:e.offerId.toString(),offerorAddress:e.offeror,assetContractAddress:e.assetContract,currencyContractAddress:e.currency,tokenId:e.tokenId.toString(),quantity:e.quantity.toString(),totalPrice:e.totalPrice.toString(),currencyValue:await Ce(this.contractWrapper.getProvider(),e.currency,e.totalPrice),asset:await la(e.assetContract,this.contractWrapper.getProvider(),e.tokenId,this.storage),endTimeInSeconds:b.from(e.expirationTimestamp).toNumber(),status:n}}async isStillValidOffer(e){if(b.from(Math.floor(Date.now()/1e3)).gt(e.endTimeInSeconds))return{valid:!1,error:`Offer with ID ${e.id} has expired`};const a=await this.contractWrapper.getChainID(),r=ct(e.currencyContractAddress)?La[a].wrapped.address:e.currencyContractAddress,i=this.contractWrapper.getProvider(),s=new Z(i,r,Ee,{});return(await s.readContract.balanceOf(e.offerorAddress)).lt(e.totalPrice)?{valid:!1,error:`Offeror ${e.offerorAddress} doesn't have enough balance of token ${r}`}:(await s.readContract.allowance(e.offerorAddress,this.getAddress())).lt(e.totalPrice)?{valid:!1,error:`Offeror ${e.offerorAddress} hasn't approved enough amount of token ${r}`}:{valid:!0,error:""}}async applyFilter(e,n){let a=[...e];if(n){if(n.offeror){const r=await k(n.offeror);a=a.filter(i=>i.offeror.toString().toLowerCase()===(r==null?void 0:r.toString().toLowerCase()))}if(n.tokenContract){const r=await k(n.tokenContract);a=a.filter(i=>i.assetContract.toString().toLowerCase()===(r==null?void 0:r.toString().toLowerCase()))}n.tokenId!==void 0&&(a=a.filter(r=>{var i;return r.tokenId.toString()===((i=n==null?void 0:n.tokenId)==null?void 0:i.toString())}))}return(n==null?void 0:n.count)&&n.count<a.length?a.slice(0,n.count):a}}const $6=Ze.merge(tn).merge(Re),FH=pt.merge(tn).merge(Re),HH=$6.merge(ft).merge(Rn).merge(lt),Y6={deploy:HH,output:FH,input:$6},z6=Ze.merge(_e).merge(Re),KH=pt.merge(_e).merge(Re),OH=z6.merge(lt),q6={deploy:OH,output:KH,input:z6},Ct={name:"DropERC1155",contractType:"edition-drop",schema:Uv,roles:["admin","minter","transfer"],initialize:async function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];let[a,r,i,s]=e;const[,o]=Se(a,s),[c,p,d]=await Promise.all([await Ct.getAbi(r,o,i),j(()=>Promise.resolve().then(()=>fY),void 0),o.getNetwork()]);return new p.EditionDrop(a,r,i,s,c,d.chainId)},getAbi:async(t,e,n)=>{const a=await Je(t,e,n);if(a)return a;const r=await V0(t,e);return!r||r.version>2?(await j(()=>Promise.resolve().then(()=>bY),void 0)).default:(await j(()=>Promise.resolve().then(()=>wY),void 0)).default}},Zt={name:"TokenERC1155",contractType:"edition",schema:Vv,roles:["admin","minter","transfer"],initialize:async function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];let[a,r,i,s]=e;const[,o]=Se(a,s),[c,p,d]=await Promise.all([Zt.getAbi(r,o,i),j(()=>Promise.resolve().then(()=>IY),void 0),o.getNetwork()]);return new p.Edition(a,r,i,s,c,d.chainId)},getAbi:async(t,e,n)=>{const a=await Je(t,e,n);return a||(await j(()=>Promise.resolve().then(()=>CY),void 0)).default}},kt={name:"Marketplace",contractType:"marketplace",schema:$0,roles:["admin","lister","asset"],initialize:async function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];let[a,r,i,s]=e;const[,o]=Se(a,s),[c,p,d]=await Promise.all([kt.getAbi(r,o,i),j(()=>Promise.resolve().then(()=>kY),void 0),o.getNetwork()]);return new p.Marketplace(a,r,i,s,c,d.chainId)},getAbi:async(t,e,n)=>{const a=await Je(t,e,n);return a||(await j(()=>Promise.resolve().then(()=>xY),void 0)).default}},Bt={name:"MarketplaceV3",contractType:"marketplace-v3",schema:$0,roles:["admin","lister","asset"],initialize:async function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];let[a,r,i,s]=e;const[,o]=Se(a,s),[c,p,d]=await Promise.all([Bt.getAbi(r,o,i),j(()=>Promise.resolve().then(()=>RY),void 0),o.getNetwork()]);return new p.MarketplaceV3(a,r,i,s,c,d.chainId)},getAbi:async(t,e,n)=>{const a=(await e.getNetwork()).chainId;if(a===280||a===324){const o=await cr("MarketplaceV3");return await FF(o,n)}const i=await Je(t,e,n);if(i)return await P0(t,i,e,{},n);const s=(await j(()=>Promise.resolve().then(()=>PY),void 0)).default;return await P0(t,G.parse(s||[]),e,{},n)}},Et={name:"Multiwrap",contractType:"multiwrap",schema:q6,roles:["admin","transfer","minter","unwrap","asset"],initialize:async function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];let[a,r,i,s]=e;const[,o]=Se(a,s),[c,p,d]=await Promise.all([Et.getAbi(r,o,i),j(()=>Promise.resolve().then(()=>MY),void 0),o.getNetwork()]);return new p.Multiwrap(a,r,i,s,c,d.chainId)},getAbi:async(t,e,n)=>{const a=await Je(t,e,n);return a||(await j(()=>Promise.resolve().then(()=>SY),void 0)).default}},Xt={name:"TokenERC721",contractType:"nft-collection",schema:Qv,roles:["admin","minter","transfer"],initialize:async function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];let[a,r,i,s]=e;const[,o]=Se(a,s),[c,p,d]=await Promise.all([Xt.getAbi(r,o,i),j(()=>Promise.resolve().then(()=>WY),void 0),o.getNetwork()]);return new p.NFTCollection(a,r,i,s,c,d.chainId)},getAbi:async(t,e,n)=>{const a=await Je(t,e,n);return a||(await j(()=>Promise.resolve().then(()=>NY),void 0)).default}},xt={name:"DropERC721",contractType:"nft-drop",schema:O0,roles:["admin","minter","transfer"],initialize:async function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];let[a,r,i,s]=e;const[,o]=Se(a,s),[c,p,d]=await Promise.all([xt.getAbi(r,o,i),j(()=>Promise.resolve().then(()=>DY),void 0),o.getNetwork()]);return new p.NFTDrop(a,r,i,s,c,d.chainId)},getAbi:async(t,e,n)=>{const a=await Je(t,e,n);if(a)return a;const r=await V0(t,e);return!r||r.version>3?(await j(()=>Promise.resolve().then(()=>UY),void 0)).default:(await j(()=>Promise.resolve().then(()=>HY),void 0)).default}},nt={name:"Pack",contractType:"pack",schema:Kv,roles:["admin","minter","asset","transfer"],initialize:async function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];let[a,r,i,s]=e;const[,o]=Se(a,s),[c,p,d]=await Promise.all([nt.getAbi(r,o,i),j(()=>Promise.resolve().then(()=>GY),void 0),o.getNetwork()]);return new p.Pack(a,r,i,s,c,d.chainId)},getAbi:async(t,e,n)=>{const a=await Je(t,e,n);return a||G.parse((await j(()=>Promise.resolve().then(()=>XY),void 0)).default||[])}},Rt={name:"SignatureDrop",contractType:"signature-drop",schema:O0,roles:["admin","minter","transfer"],initialize:async function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];let[a,r,i,s]=e;const[,o]=Se(a,s),[c,p,d]=await Promise.all([Rt.getAbi(r,o,i),j(()=>Promise.resolve().then(()=>JY),void 0),o.getNetwork()]);return new p.SignatureDrop(a,r,i,s,c,d.chainId)},getAbi:async(t,e,n)=>{const a=await Je(t,e,n);if(a)return a;const r=await V0(t,e);return!r||r.version>4?(await j(()=>Promise.resolve().then(()=>tz),void 0)).default:(await j(()=>Promise.resolve().then(()=>az),void 0)).default}},At={name:"Split",contractType:"split",schema:$v,roles:["admin"],initialize:async function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];let[a,r,i,s]=e;const[,o]=Se(a,s),[c,p,d]=await Promise.all([At.getAbi(r,o,i),j(()=>Promise.resolve().then(()=>rz),void 0),o.getNetwork()]);return new p.Split(a,r,i,s,c,d.chainId)},getAbi:async(t,e,n)=>{const a=await Je(t,e,n);return a||(await j(()=>Promise.resolve().then(()=>sz),void 0)).default}},Jt={name:"DropERC20",contractType:"token-drop",schema:Y6,roles:["admin","transfer"],initialize:async function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];let[a,r,i,s]=e;const[,o]=Se(a,s),[c,p,d]=await Promise.all([Jt.getAbi(r,o,i),j(()=>Promise.resolve().then(()=>oz),void 0),o.getNetwork()]);return new p.TokenDrop(a,r,i,s,c,d.chainId)},getAbi:async(t,e,n)=>{const a=await Je(t,e,n);if(a)return a;const r=await V0(t,e);return!r||r.version>2?(await j(()=>Promise.resolve().then(()=>pz),void 0)).default:(await j(()=>Promise.resolve().then(()=>dz),void 0)).default}},Pt={name:"TokenERC20",contractType:"token",schema:zv,roles:["admin","minter","transfer"],initialize:async function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];let[a,r,i,s]=e;const[,o]=Se(a,s),[c,p,d]=await Promise.all([Pt.getAbi(r,o,i),j(()=>Promise.resolve().then(()=>uz),void 0),o.getNetwork()]);return new p.Token(a,r,i,s,c,d.chainId)},getAbi:async(t,e,n)=>{const a=await Je(t,e,n);return a||(await j(()=>Promise.resolve().then(()=>hz),void 0)).default}},Mt={name:"VoteERC20",contractType:"vote",schema:Xv,roles:[],initialize:async function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];let[a,r,i,s]=e;const[,o]=Se(a,s),[c,p,d]=await Promise.all([Mt.getAbi(r,o,i),j(()=>Promise.resolve().then(()=>fz),void 0),o.getNetwork()]);return new p.Vote(a,r,i,s,c,d.chainId)},getAbi:async(t,e,n)=>{const a=await Je(t,e,n);return a||(await j(()=>Promise.resolve().then(()=>bz),void 0)).default}};async function V0(t,e){try{return await J1(t,e)}catch{return}}const jn={[Ct.contractType]:Ct,[Zt.contractType]:Zt,[kt.contractType]:kt,[Bt.contractType]:Bt,[Et.contractType]:Et,[Xt.contractType]:Xt,[xt.contractType]:xt,[nt.contractType]:nt,[Rt.contractType]:Rt,[At.contractType]:At,[Jt.contractType]:Jt,[Pt.contractType]:Pt,[Mt.contractType]:Mt},$H={[Ct.contractType]:"ipfs://QmNm3wRzpKYWo1SRtJfgfxtvudp5p2nXD6EttcsQJHwTmk",[Zt.contractType]:"",[kt.contractType]:"ipfs://QmbAgC8YwY36n8H2kuvSWsRisxDZ15QZw3xGZyk9aDvcv7/marketplace.html",[Bt.contractType]:"ipfs://QmbAgC8YwY36n8H2kuvSWsRisxDZ15QZw3xGZyk9aDvcv7/marketplace-v3.html",[Et.contractType]:"",[Xt.contractType]:"",[xt.contractType]:"ipfs://QmZptmVipc6SGFbKAyXcxGgohzTwYRXZ9LauRX5ite1xDK",[nt.contractType]:"",[Rt.contractType]:"ipfs://QmZptmVipc6SGFbKAyXcxGgohzTwYRXZ9LauRX5ite1xDK",[At.contractType]:"",[Jt.contractType]:"ipfs://QmbAgC8YwY36n8H2kuvSWsRisxDZ15QZw3xGZyk9aDvcv7/erc20.html",[Pt.contractType]:"",[Mt.contractType]:""},u5={name:"SmartContract",contractType:"custom",schema:{},roles:y6},Q6={...jn,[u5.contractType]:u5};function YH(t){var e;return((e=Object.values(Q6).find(n=>n.name===t))==null?void 0:e.contractType)||"custom"}function j6(t){var e;return(e=Object.values(Q6).find(n=>n.contractType===t))==null?void 0:e.name}async function V6(t,e,n,a,r){const i=await a.getChainId(),s=await a.getAddress(),o=Iv.find(p=>p===i);let c=[];switch(o?c=t===nt.contractType?[]:vv(i):c=[await G1(a.provider,r)],e.trusted_forwarders&&e.trusted_forwarders.length>0&&c.push(...e.trusted_forwarders),t){case xt.contractType:case Xt.contractType:const p=await xt.schema.deploy.parseAsync(e);return[s,p.name,p.symbol,n,c,p.primary_sale_recipient,p.fee_recipient,p.seller_fee_basis_points,p.platform_fee_basis_points,p.platform_fee_recipient];case Rt.contractType:const d=await Rt.schema.deploy.parseAsync(e);return[s,d.name,d.symbol,n,c,d.primary_sale_recipient,d.fee_recipient,d.seller_fee_basis_points,d.platform_fee_basis_points,d.platform_fee_recipient];case Et.contractType:const u=await Et.schema.deploy.parseAsync(e);return[s,u.name,u.symbol,n,c,u.fee_recipient,u.seller_fee_basis_points];case Ct.contractType:case Zt.contractType:const m=await Ct.schema.deploy.parseAsync(e);return[s,m.name,m.symbol,n,c,m.primary_sale_recipient,m.fee_recipient,m.seller_fee_basis_points,m.platform_fee_basis_points,m.platform_fee_recipient];case Jt.contractType:case Pt.contractType:const f=await Pt.schema.deploy.parseAsync(e);return[s,f.name,f.symbol,n,c,f.primary_sale_recipient,f.platform_fee_recipient,f.platform_fee_basis_points];case Mt.contractType:const g=await Mt.schema.deploy.parseAsync(e);return[g.name,n,c,g.voting_token_address,g.voting_delay_in_blocks,g.voting_period_in_blocks,b.from(g.proposal_token_threshold),g.voting_quorum_fraction];case At.contractType:const w=await At.schema.deploy.parseAsync(e);return[s,n,c,w.recipients.map(R=>R.address),w.recipients.map(R=>b.from(R.sharesBps))];case kt.contractType:case Bt.contractType:const I=await kt.schema.deploy.parseAsync(e);return[s,n,c,I.platform_fee_recipient,I.platform_fee_basis_points];case nt.contractType:const M=await nt.schema.deploy.parseAsync(e);return[s,M.name,M.symbol,n,c,M.fee_recipient,M.seller_fee_basis_points];default:return[]}}function zH(t,e){return t||(e!=null&&e.gatewayUrls?new Gn({gatewayUrls:e.gatewayUrls}):new Gn)}class $e{constructor(e,n,a){l(this,"featureName",f0.name),l(this,"contractWrapper",void 0),l(this,"metadata",void 0),l(this,"storage",void 0),l(this,"set",T(async r=>U(this.contractWrapper,"AppURI")?v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAppURI",args:[r]}):await this.metadata.update.prepare({app_uri:r}))),this.contractWrapper=e,this.metadata=n,this.storage=a}async get(){return U(this.contractWrapper,"AppURI")?await this.contractWrapper.readContract.appURI():V5((await this.metadata.get()).app_uri||"",this.storage.gatewayUrls)}}class St{constructor(e){l(this,"featureName",m0.name),l(this,"contractWrapper",void 0),l(this,"set",T(async n=>{const a=await ft.parseAsync(n);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPlatformFeeInfo",args:[a.platform_fee_recipient,a.platform_fee_basis_points]})})),this.contractWrapper=e}async get(){const[e,n]=await this.contractWrapper.readContract.getPlatformFeeInfo();return ft.parseAsync({platform_fee_recipient:e,platform_fee_basis_points:n})}}class qH{constructor(e,n){l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"_cachedMetadata",void 0),this.contractWrapper=e,this.storage=n}async get(){return this._cachedMetadata?this._cachedMetadata:(this._cachedMetadata=await Ft(this.contractWrapper.readContract.address,this.contractWrapper.getProvider(),this.storage),this._cachedMetadata)}async extractFunctions(){let e;try{e=await this.get()}catch{}return Va(G.parse(this.contractWrapper.abi),e==null?void 0:e.metadata)}async extractEvents(){let e;try{e=await this.get()}catch{}return BF(G.parse(this.contractWrapper.abi),e==null?void 0:e.metadata)}}class QH{get royalties(){return $(this.detectRoyalties(),d0)}get roles(){return $(this.detectRoles(),h0)}get sales(){return $(this.detectPrimarySales(),u0)}get platformFees(){return $(this.detectPlatformFees(),m0)}get owner(){return $(this.detectOwnable(),g0)}get erc20(){return $(this.detectErc20(),Zw)}get erc721(){return $(this.detectErc721(),i0)}get erc1155(){return $(this.detectErc1155(),l0)}get app(){return $(this.detectApp(),f0)}get directListings(){return $(this.detectDirectListings(),$a)}get englishAuctions(){return $(this.detectEnglishAuctions(),Ya)}get offers(){return $(this.detectOffers(),za)}get chainId(){return this._chainId}constructor(e,n,a,r){let i=arguments.length>4&&arguments[4]!==void 0?arguments[4]:{},s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,a,i);l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"events",void 0),l(this,"interceptor",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"publishedMetadata",void 0),l(this,"abi",void 0),l(this,"metadata",void 0),l(this,"_chainId",void 0),this._chainId=s,this.storage=r,this.contractWrapper=o,this.abi=G.parse(a||[]),this.events=new Pe(this.contractWrapper),this.encoder=new Ae(this.contractWrapper),this.interceptor=new Le(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.publishedMetadata=new qH(this.contractWrapper,this.storage),this.metadata=new ge(this.contractWrapper,Vn,this.storage)}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}detectRoyalties(){if(U(this.contractWrapper,"Royalty")){const e=new ge(this.contractWrapper,Vn,this.storage);return new nn(this.contractWrapper,e)}}detectRoles(){if(U(this.contractWrapper,"Permissions"))return new Xe(this.contractWrapper,y6)}detectPrimarySales(){if(U(this.contractWrapper,"PrimarySale"))return new an(this.contractWrapper)}detectPlatformFees(){if(U(this.contractWrapper,"PlatformFee"))return new St(this.contractWrapper)}detectErc20(){if(U(this.contractWrapper,"ERC20"))return new X1(this.contractWrapper,this.storage,this.chainId)}detectErc721(){if(U(this.contractWrapper,"ERC721"))return new D6(this.contractWrapper,this.storage,this.chainId)}detectErc1155(){if(U(this.contractWrapper,"ERC1155"))return new U6(this.contractWrapper,this.storage,this.chainId)}detectOwnable(){if(U(this.contractWrapper,"Ownable"))return new rn(this.contractWrapper)}detectApp(){const e=new ge(this.contractWrapper,Vn,this.storage);if(U(this.contractWrapper,"AppURI"))return new $e(this.contractWrapper,e,this.storage);if(U(this.contractWrapper,"ContractMetadata"))return new $e(this.contractWrapper,e,this.storage)}detectDirectListings(){if(U(this.contractWrapper,"DirectListings"))return new H6(this.contractWrapper,this.storage)}detectEnglishAuctions(){if(U(this.contractWrapper,"EnglishAuctions"))return new K6(this.contractWrapper,this.storage)}detectOffers(){if(U(this.contractWrapper,"Offers"))return new O6(this.contractWrapper,this.storage)}}class jH extends pa{constructor(e,n,a){super(e,n),l(this,"storage",void 0),l(this,"publisher",void 0),l(this,"updatePublisherProfile",T(async r=>{const i=this.getSigner();P(i,"A signer is required");const s=await i.getAddress(),o=await this.storage.upload(r);return v.fromContractWrapper({contractWrapper:this.publisher,method:"setPublisherProfileUri",args:[s,o]})})),l(this,"publish",T(async(r,i)=>{var I;const s=this.getSigner();P(s,"A signer is required");const o=await s.getAddress(),c=await C6(r,this.storage);if((I=i.factoryDeploymentData)!=null&&I.implementationAddresses){const R=Object.entries(i.factoryDeploymentData.implementationAddresses).find(L=>{let[,H]=L;return H!==""}),[N,x]=R||[];if(N&&x)try{const L=await B0(c.metadataUri,this.storage),H=await P0(x,L.abi,Ut(parseInt(N),{thirdwebApiKey:vn}),{},this.storage);i.compositeAbi=G.parse(H)}catch{}}const p=await this.getLatest(o,c.name);if(p&&p.metadataUri){const R=(await this.fetchPublishedContractInfo(p)).publishedMetadata.version;if(!iK(R,i.version))throw Error(`Version ${i.version} is not greater than ${R}`)}const d=await(await this.storage.download(c.bytecodeUri)).text(),u=d.startsWith("0x")?d:`0x${d}`,m=it(["bytes"],[u]),f=c.name,g=fK.parse({...i,metadataUri:c.metadataUri,bytecodeUri:c.bytecodeUri,name:c.name,analytics:c.analytics,publisher:o}),w=await this.storage.upload(g);return v.fromContractWrapper({contractWrapper:this.publisher,method:"publishContract",args:[o,f,w,c.metadataUri,m,B],parse:M=>{const R=this.publisher.parseLogs("ContractPublished",M.logs);if(R.length<1)throw new Error("No ContractPublished event found");const N=R[0].args.publishedContract;return{receipt:M,data:async()=>this.toPublishedContract(N)}}})})),l(this,"unpublish",T(async(r,i)=>{const s=await k(r);return v.fromContractWrapper({contractWrapper:this.publisher,method:"unpublishContract",args:[s,i]})})),this.storage=a,this.publisher=new Z(e,nU(),KL,n)}updateSignerOrProvider(e){super.updateSignerOrProvider(e),this.publisher.updateSignerOrProvider(e)}async extractConstructorParams(e){return _F(e,this.storage)}async extractFunctions(e){return SF(e,this.storage)}async fetchCompilerMetadataFromPredeployURI(e){return Za(e,this.storage)}async fetchPrePublishMetadata(e,n){const a=await Za(e,this.storage),r=n?await this.getLatest(n,a.name):void 0,i=r?await this.fetchPublishedContractInfo(r):void 0;return{preDeployMetadata:a,latestPublishedContractMetadata:i}}async fetchCompilerMetadataFromAddress(e){const n=await k(e);return Ft(n,this.getProvider(),this.storage)}async fetchPublishedContractInfo(e){return{name:e.id,publishedTimestamp:e.timestamp,publishedMetadata:await this.fetchFullPublishMetadata(e.metadataUri)}}async fetchFullPublishMetadata(e){return k6(e,this.storage)}async resolvePublishMetadataFromCompilerMetadata(e){const n=await this.publisher.readContract.getPublishedUriFromCompilerUri(e);if(n.length===0)throw Error(`Could not resolve published metadata URI from ${e}`);return await Promise.all(n.filter(a=>a.length>0).map(a=>this.fetchFullPublishMetadata(a)))}async resolveContractUriFromAddress(e){const n=await k(e),a=await Ga(n,this.getProvider());return P(a,"Could not resolve contract URI from address"),a}async fetchContractSourcesFromAddress(e){const n=await k(e),a=await this.fetchCompilerMetadataFromAddress(n);return await Z0(a,this.storage)}async getPublisherProfile(e){const n=await k(e),a=await this.publisher.readContract.getPublisherProfileUri(n);return!a||a.length===0?{}:TK.parse(await this.storage.downloadJSON(a))}async getAll(e){const n=await k(e),r=(await this.publisher.readContract.getAllPublishedContracts(n)).reduce((i,s)=>(i[s.contractId]=s,i),{});return Object.entries(r).map(i=>{let[,s]=i;return this.toPublishedContract(s)})}async getAllVersions(e,n){const a=await k(e),r=await this.publisher.readContract.getPublishedContractVersions(a,n);if(r.length===0)throw Error("Not found");return r.map(i=>this.toPublishedContract(i))}async getVersion(e,n){let a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"latest";const r=await k(e);if(a==="latest")return this.getLatest(r,n);const i=await this.getAllVersions(r,n),o=(await Promise.all(i.map(c=>this.fetchPublishedContractInfo(c)))).find(c=>c.publishedMetadata.version===a);return P(o,"Contract version not found"),i.find(c=>c.timestamp===o.publishedTimestamp)}async getLatest(e,n){const a=await k(e),r=await this.publisher.readContract.getPublishedContract(a,n);if(r&&r.publishMetadataUri)return this.toPublishedContract(r)}toPublishedContract(e){return wK.parse({id:e.contractId,timestamp:e.publishTimestamp,metadataUri:e.publishMetadataUri})}}class VH{constructor(e,n){let a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};l(this,"registryLogic",void 0),l(this,"registryRouter",void 0),l(this,"storage",void 0),l(this,"addContract",T(async r=>await this.addContracts.prepare([r]))),l(this,"addContracts",T(async r=>{const i=await this.registryRouter.getSignerAddress(),s=[];return r.forEach(o=>{s.push(this.registryLogic.readContract.interface.encodeFunctionData("add",[i,o.address,o.chainId,o.metadataURI||""]))}),v.fromContractWrapper({contractWrapper:this.registryRouter,method:"multicall",args:[s]})})),l(this,"removeContract",T(async r=>await this.removeContracts.prepare([r]))),l(this,"removeContracts",T(async r=>{const i=await this.registryRouter.getSignerAddress(),s=await Promise.all(r.map(async o=>this.registryLogic.readContract.interface.encodeFunctionData("remove",[i,await k(o.address),o.chainId])));return v.fromContractWrapper({contractWrapper:this.registryRouter,method:"multicall",args:[s]})})),this.storage=n,this.registryLogic=new Z(e,AI(),OL,a),this.registryRouter=new Z(e,AI(),$L,a)}async updateSigner(e){this.registryLogic.updateSignerOrProvider(e),this.registryRouter.updateSignerOrProvider(e)}async getContractMetadataURI(e,n){return await this.registryLogic.readContract.getMetadataUri(e,await k(n))}async getContractMetadata(e,n){const a=await this.getContractMetadataURI(e,n);if(!a)throw new Error(`No metadata URI found for contract ${n} on chain ${e}`);return await this.storage.downloadJSON(a)}async getContractAddresses(e){return(await this.registryLogic.readContract.getAll(await k(e))).filter(n=>tr(n.deploymentAddress)&&n.deploymentAddress.toLowerCase()!==B).map(n=>({address:n.deploymentAddress,chainId:n.chainId.toNumber()}))}}class G0{constructor(e,n){l(this,"connection",void 0),l(this,"options",void 0),l(this,"events",new Nt),this.connection=new pa(e,n),this.options=n,this.events=new Nt}connect(e){this.connection.updateSignerOrProvider(e),this.events.emit("signerChanged",this.connection.getSigner())}async transfer(e,n){let a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:je;const r=await k(e),i=await k(a),s=this.requireWallet(),o=await se(this.connection.getProvider(),n,a);if(ct(i)){const c=await s.getAddress();return{receipt:await(await s.sendTransaction({from:c,to:r,value:o})).wait()}}else return{receipt:await this.createErc20(i).sendTransaction("transfer",[r,o])}}async balance(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:je;this.requireWallet();const n=await k(e),a=this.connection.getProvider();let r;return ct(n)?r=await a.getBalance(await this.getAddress()):r=await this.createErc20(n).readContract.balanceOf(await this.getAddress()),await Ce(a,n,r)}async getAddress(){return await this.requireWallet().getAddress()}async getChainId(){return await this.requireWallet().getChainId()}isConnected(){try{return this.requireWallet(),!0}catch{return!1}}async sign(e){return await this.requireWallet().signMessage(e)}async signTypedData(e,n,a){return await qa(this.requireWallet(),e,n,a)}recoverAddress(e,n){const a=k1(e),r=en(a);return E1(r,n)}async sendRawTransaction(e){return{receipt:await(await this.requireWallet().sendTransaction(e)).wait()}}async requestFunds(e){const n=await this.getChainId();if(n===S.Localhost||n===S.Hardhat)return new G0(new U5(XL,Ut(n,this.options)),this.options).transfer(await this.getAddress(),e);throw new Error(`Requesting funds is not supported on chain: '${n}'.`)}requireWallet(){const e=this.connection.getSigner();return P(e,"This action requires a connected wallet. Please pass a valid signer to the SDK."),e}createErc20(e){return new Z(this.connection.getSignerOrProvider(),e,Ee,this.options)}}class GH extends pa{constructor(e,n,a){super(e,n),l(this,"storage",void 0),this.storage=a}updateSignerOrProvider(e){super.updateSignerOrProvider(e)}async verifyThirdwebContract(e,n,a,r){const i=(await this.getProvider().getNetwork()).chainId,s=await oK(e,i,n,a,this.storage,r);console.info("Checking verification status...");const o=await y5(n,a,s);console.info(o)}async verifyContract(e,n,a,r){const i=(await this.getProvider().getNetwork()).chainId;let s;if(r){const p=Object.values(r).map(u=>(P(u.type,"Param type is required"),u.type)),d=Object.values(r).map(u=>u.value);s=Tn.encode(p,d)}const o=await J6(e,i,n,a,this.storage,s);console.info("Checking verification status...");const c=await y5(n,a,o);console.info(c)}}class at extends pa{static async fromWallet(e,n){let a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},r=arguments.length>3?arguments[3]:void 0;const i=await e.getSigner();return at.fromSigner(i,n,a,r)}static fromSigner(e,n){let a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},r=arguments.length>3?arguments[3]:void 0,i=e;if(n&&!e.provider){const o=Ut(n,a);i=e.connect(o)}const s=new at(n||i,a,r);return s.updateSignerOrProvider(i),s}static fromPrivateKey(e,n){let a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},r=arguments.length>3?arguments[3]:void 0;const i=Ut(n,a),s=new U5(e,i);return new at(s,a,r)}constructor(e){let n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},a=arguments.length>2?arguments[2]:void 0;O1(e)&&(n={...n,supportedChains:[e,...n.supportedChains||[]]}),super(e,n),l(this,"contractCache",new Map),l(this,"_publisher",void 0),l(this,"storageHandler",void 0),l(this,"deployer",void 0),l(this,"verifier",void 0),l(this,"multiChainRegistry",void 0),l(this,"wallet",void 0),l(this,"storage",void 0),GL(n==null?void 0:n.supportedChains);const r=zH(a,n);this.storage=r,this.storageHandler=r,this.wallet=new G0(e,n),this.deployer=new JH(e,n,r),this.verifier=new GH(e,n,r),this.multiChainRegistry=new VH(e,this.storageHandler,this.options),this._publisher=new jH(e,this.options,this.storageHandler)}get auth(){throw new Error(`The sdk.auth namespace has been moved to the @thirdweb-dev/auth package and is no longer available after @thirdweb-dev/sdk >= 3.7.0. 
      Please visit https://portal.thirdweb.com/auth for instructions on how to switch to using the new auth package (@thirdweb-dev/auth@3.0.0).
      
      If you still want to use the old @thirdweb-dev/auth@2.0.0 package, you can downgrade the SDK to version 3.6.0.`)}async getNFTDrop(e){return await this.getContract(e,"nft-drop")}async getSignatureDrop(e){return await this.getContract(e,"signature-drop")}async getNFTCollection(e){return await this.getContract(e,"nft-collection")}async getEditionDrop(e){return await this.getContract(e,"edition-drop")}async getEdition(e){return await this.getContract(e,"edition")}async getTokenDrop(e){return await this.getContract(e,"token-drop")}async getToken(e){return await this.getContract(e,"token")}async getVote(e){return await this.getContract(e,"vote")}async getSplit(e){return await this.getContract(e,"split")}async getMarketplace(e){return await this.getContract(e,"marketplace")}async getMarketplaceV3(e){return await this.getContract(e,"marketplace-v3")}async getPack(e){return await this.getContract(e,"pack")}async getMultiwrap(e){return await this.getContract(e,"multiwrap")}async getContract(e,n){const a=await k(e);if(this.contractCache.has(a))return this.contractCache.get(a);if(a in Qw)return await this.getContractFromAbi(a,Qw[a]);let r;if(!n||n==="custom")try{const i=await this.getPublisher().fetchCompilerMetadataFromAddress(a);r=await this.getContractFromAbi(a,i.abi)}catch{const s=await this.resolveContractType(e);if(s&&s!=="custom"){const o=await jn[s].getAbi(e,this.getProvider(),this.storage);r=await this.getContractFromAbi(e,o)}else{const o=(await this.getProvider().getNetwork()).chainId;throw new Error(`No ABI found for this contract. Try importing it by visiting: https://thirdweb.com/${o}/${a}`)}}else typeof n=="string"&&n in jn?r=await jn[n].initialize(this.getSignerOrProvider(),a,this.storage,this.options):r=await this.getContractFromAbi(a,n);return this.contractCache.set(a,r),r}async getBuiltInContract(e,n){return await this.getContract(e,n)}async resolveContractType(e){try{const n=new J(await k(e),Tv,this.getProvider()),a=F5(await n.contractType()).replace(/\x00/g,"");return YH(a)}catch{return"custom"}}async getContractList(e){var r;const n=await((r=await this.deployer.getRegistry())==null?void 0:r.getContractAddresses(await k(e)))||[],a=(await this.getProvider().getNetwork()).chainId;return await Promise.all(n.map(async i=>({address:i,chainId:a,contractType:()=>this.resolveContractType(i),metadata:async()=>(await this.getContract(i)).metadata.get(),extensions:async()=>a5((await this.getContract(i)).abi)})))}async getMultichainContractList(e){let n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:yt;const a=await this.multiChainRegistry.getContractAddresses(e),r=n.reduce((s,o)=>(s[o.chainId]=o,s),{}),i={};return a.map(s=>{let{address:o,chainId:c}=s;if(!r[c])return{address:o,chainId:c,contractType:async()=>"custom",metadata:async()=>({}),extensions:async()=>[]};try{let p=i[c];return p||(p=new at(c,{...this.options,readonlySettings:void 0,supportedChains:n}),i[c]=p),{address:o,chainId:c,contractType:()=>p.resolveContractType(o),metadata:async()=>(await p.getContract(o)).metadata.get(),extensions:async()=>a5((await p.getContract(o)).abi)}}catch{return{address:o,chainId:c,contractType:async()=>"custom",metadata:async()=>({}),extensions:async()=>[]}}})}updateSignerOrProvider(e){super.updateSignerOrProvider(e),this.updateContractSignerOrProvider()}updateContractSignerOrProvider(){this.wallet.connect(this.getSignerOrProvider()),this.deployer.updateSignerOrProvider(this.getSignerOrProvider()),this._publisher.updateSignerOrProvider(this.getSignerOrProvider()),this.multiChainRegistry.updateSigner(this.getSignerOrProvider()),this.verifier.updateSignerOrProvider(this.getSignerOrProvider());for(const[,e]of this.contractCache)e.onNetworkUpdated(this.getSignerOrProvider())}async getContractFromAbi(e,n){const a=await k(e);if(this.contractCache.has(a))return this.contractCache.get(a);const[,r]=Se(this.getSignerOrProvider(),this.options),i=typeof n=="string"?JSON.parse(n):n,s=new QH(this.getSignerOrProvider(),a,await P0(a,G.parse(i),r,this.options,this.storage),this.storageHandler,this.options,(await r.getNetwork()).chainId);return this.contractCache.set(a,s),s}async getBalance(e){return Ce(this.getProvider(),je,await this.getProvider().getBalance(await k(e)))}getPublisher(){return this._publisher}}class m5 extends Z{constructor(e,n,a,r){super(n,e,YL,r),l(this,"storage",void 0),l(this,"DEFAULT_VERSION_MAP",{[xt.contractType]:3,[Xt.contractType]:1,[Rt.contractType]:4,[Et.contractType]:1,[Ct.contractType]:2,[Zt.contractType]:1,[Jt.contractType]:2,[Pt.contractType]:1,[Mt.contractType]:1,[At.contractType]:1,[kt.contractType]:2,[Bt.contractType]:1,[nt.contractType]:2}),l(this,"deploy",T(async(i,s,o,c,p)=>{const d=jn[i],u=await d.schema.deploy.parseAsync(s),m=await this.storage.upload(u),f=await this.getImplementation(d,c)||void 0;if(!f||f===B)throw new Error(`No implementation found for ${i}`);const g=await d.getAbi(f,this.getProvider(),this.storage),w=this.getSigner();P(w,"A signer is required to deploy contracts");const I=await V6(i,u,m,w,this.storage),M=J.getInterface(g).encodeFunctionData("initialize",I),R=await this.getProvider().getBlockNumber(),N=gr(R.toString());return v.fromContractWrapper({contractWrapper:this,method:"deployProxyByImplementation",args:[f,M,N],parse:x=>{p&&p();const L=this.parseLogs("ProxyDeployed",x.logs);if(L.length<1)throw new Error("No ProxyDeployed event found");const H=L[0].args.proxy;return o.emit("contractDeployed",{status:"completed",contractAddress:H,transactionHash:x.transactionHash}),H}})})),l(this,"deployProxyByImplementation",T(async(i,s,o,c,p,d)=>{const u=J.getInterface(s).encodeFunctionData(o,c),m=await this.getProvider().getBlockNumber();return v.fromContractWrapper({contractWrapper:this,method:"deployProxyByImplementation",args:[i,u,gr(m.toString())],parse:f=>{d&&d();const g=this.parseLogs("ProxyDeployed",f.logs);if(g.length<1)throw new Error("No ProxyDeployed event found");const w=g[0].args.proxy;return p.emit("contractDeployed",{status:"completed",contractAddress:w,transactionHash:f.transactionHash}),w}})})),this.storage=a}async getDeployArguments(e,n,a){let r=e===nt.contractType?[]:await this.getDefaultTrustedForwarders();switch(n.trusted_forwarders&&n.trusted_forwarders.length>0&&(r=n.trusted_forwarders),e){case xt.contractType:case Xt.contractType:const i=await xt.schema.deploy.parseAsync(n);return[await this.getSignerAddress(),i.name,i.symbol,a,r,i.primary_sale_recipient,i.fee_recipient,i.seller_fee_basis_points,i.platform_fee_basis_points,i.platform_fee_recipient];case Rt.contractType:const s=await Rt.schema.deploy.parseAsync(n);return[await this.getSignerAddress(),s.name,s.symbol,a,r,s.primary_sale_recipient,s.fee_recipient,s.seller_fee_basis_points,s.platform_fee_basis_points,s.platform_fee_recipient];case Et.contractType:const o=await Et.schema.deploy.parseAsync(n);return[await this.getSignerAddress(),o.name,o.symbol,a,r,o.fee_recipient,o.seller_fee_basis_points];case Ct.contractType:case Zt.contractType:const c=await Ct.schema.deploy.parseAsync(n);return[await this.getSignerAddress(),c.name,c.symbol,a,r,c.primary_sale_recipient,c.fee_recipient,c.seller_fee_basis_points,c.platform_fee_basis_points,c.platform_fee_recipient];case Jt.contractType:case Pt.contractType:const p=await Pt.schema.deploy.parseAsync(n);return[await this.getSignerAddress(),p.name,p.symbol,a,r,p.primary_sale_recipient,p.platform_fee_recipient,p.platform_fee_basis_points];case Mt.contractType:const d=await Mt.schema.deploy.parseAsync(n);return[d.name,a,r,d.voting_token_address,d.voting_delay_in_blocks,d.voting_period_in_blocks,b.from(d.proposal_token_threshold),d.voting_quorum_fraction];case At.contractType:const u=await At.schema.deploy.parseAsync(n);return[await this.getSignerAddress(),a,r,u.recipients.map(w=>w.address),u.recipients.map(w=>b.from(w.sharesBps))];case kt.contractType:const m=await kt.schema.deploy.parseAsync(n);return[await this.getSignerAddress(),a,r,m.platform_fee_recipient,m.platform_fee_basis_points];case Bt.contractType:const f=await Bt.schema.deploy.parseAsync(n);return[await this.getSignerAddress(),a,r,f.platform_fee_recipient,f.platform_fee_basis_points];case nt.contractType:const g=await nt.schema.deploy.parseAsync(n);return[await this.getSignerAddress(),g.name,g.symbol,a,r,g.fee_recipient,g.seller_fee_basis_points];default:return[]}}async getDefaultTrustedForwarders(){const e=await this.getChainID();return vv(e)}async getImplementation(e,n){const a=gr(e.name),r=await this.getChainID(),i=tU(r,e.contractType);return i&&i.length>0&&n===void 0?i:this.readContract.getImplementation(a,n!==void 0?n:this.DEFAULT_VERSION_MAP[e.contractType])}async getLatestVersion(e){const n=j6(e);if(!n)throw new Error(`Invalid contract type ${e}`);const a=gr(n);return this.readContract.currentVersion(a)}}class ZH extends Z{constructor(e,n,a){super(n,e,zL,a),l(this,"addContract",T(async r=>await this.addContracts.prepare([r]))),l(this,"addContracts",T(async r=>{const i=await this.getSignerAddress(),s=await Promise.all(r.map(async o=>this.readContract.interface.encodeFunctionData("add",[i,await k(o)])));return v.fromContractWrapper({contractWrapper:this,method:"multicall",args:[s]})})),l(this,"removeContract",T(async r=>await this.removeContracts.prepare([r]))),l(this,"removeContracts",T(async r=>{const i=await this.getSignerAddress(),s=await Promise.all(r.map(async o=>this.readContract.interface.encodeFunctionData("remove",[i,await k(o)])));return v.fromContractWrapper({contractWrapper:this,method:"multicall",args:[s]})}))}async getContractAddresses(e){return(await this.readContract.getAll(await k(e))).filter(n=>tr(n)&&n.toLowerCase()!==B)}}const XH="0xdd99b75f095d0c4d5112aCe938e4e6ed962fb024";class JH extends pa{constructor(e,n,a){var r;super(e,n),r=this,l(this,"_factory",void 0),l(this,"_registry",void 0),l(this,"storage",void 0),l(this,"events",void 0),l(this,"transactionListener",i=>{i.status==="submitted"&&this.events.emit("contractDeployed",{status:"submitted",transactionHash:i.transactionHash})}),l(this,"deployNFTCollection",be(async i=>await this.deployBuiltInContract.prepare(Xt.contractType,i))),l(this,"deployNFTDrop",be(async i=>await this.deployBuiltInContract.prepare(xt.contractType,i))),l(this,"deploySignatureDrop",be(async i=>await this.deployBuiltInContract.prepare(Rt.contractType,i))),l(this,"deployMultiwrap",be(async i=>await this.deployBuiltInContract.prepare(Et.contractType,i))),l(this,"deployEdition",be(async i=>await this.deployBuiltInContract.prepare(Zt.contractType,i))),l(this,"deployEditionDrop",be(async i=>await this.deployBuiltInContract.prepare(Ct.contractType,i))),l(this,"deployToken",be(async i=>await this.deployBuiltInContract.prepare(Pt.contractType,i))),l(this,"deployTokenDrop",be(async i=>await this.deployBuiltInContract.prepare(Jt.contractType,i))),l(this,"deployMarketplace",be(async i=>await this.deployBuiltInContract.prepare(kt.contractType,i))),l(this,"deployMarketplaceV3",be(async i=>await this.deployBuiltInContract.prepare(Bt.contractType,i))),l(this,"deployPack",be(async i=>await this.deployBuiltInContract.prepare(nt.contractType,i))),l(this,"deploySplit",be(async i=>await this.deployBuiltInContract.prepare(At.contractType,i))),l(this,"deployVote",be(async i=>await this.deployBuiltInContract.prepare(Mt.contractType,i))),l(this,"deployBuiltInContract",be(async function(i,s){let o=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"latest";const c=r.getSigner();P(c,"A signer is required to deploy contracts");const p={app_uri:$H[i],...await jn[i].schema.deploy.parseAsync(s)};if(r.hasLocalFactory()){let g;try{g=parseInt(o),isNaN(g)&&(g=void 0)}catch{g=void 0}const w=await r.getFactory();if(!w)throw new Error("Factory not found");return w.on(Ve.Transaction,r.transactionListener),w.deploy.prepare(i,p,r.events,g,()=>{w.off(Ve.Transaction,r.transactionListener)})}const d=j6(i);P(d,"Contract name not found");const u=await r.storage.upload(p),m=await V6(i,p,u,c,r.storage),f=await r.fetchPublishedContractFromPolygon(XH,d,o);return r.deployContractFromUri.prepare(f.metadataUri,m)})),l(this,"deployReleasedContract",be(async function(i,s,o){let c=arguments.length>3&&arguments[3]!==void 0?arguments[3]:"latest",p=arguments.length>4?arguments[4]:void 0;const d=await r.fetchPublishedContractFromPolygon(i,s,c);return await r.deployContractFromUri.prepare(d.metadataUri,o,p)})),l(this,"deployViaFactory",T(async(i,s,o,c,p)=>{const d=await k(i),u=await k(s),m=this.getSigner();P(m,"signer is required");const f=new m5(d,this.getSignerOrProvider(),this.storage,this.options);return f.on(Ve.Transaction,this.transactionListener),await f.deployProxyByImplementation.prepare(u,o,c,p,this.events,()=>{f.off(Ve.Transaction,this.transactionListener)})})),l(this,"deployProxy",be(async(i,s,o,c)=>{const p=await k(i),d=J.getInterface(s).encodeFunctionData(o,c),{TWProxy__factory:u}=await j(()=>Promise.resolve().then(()=>vz),void 0);return this.deployContractWithAbi.prepare(u.abi,u.bytecode,[p,d])})),l(this,"deployContractFromUri",be(async(i,s,o)=>{var w,I,M;const c=this.getSigner();P(c,"A signer is required");const{compilerMetadata:p,extendedMetadata:d}=await Gt(i,this.storage),u=(o==null?void 0:o.forceDirectDeploy)||!1;if(d&&d.factoryDeploymentData&&(d.isDeployableViaProxy||d.isDeployableViaFactory)&&!u){const R=(await this.getProvider().getNetwork()).chainId;P(d.factoryDeploymentData.implementationInitializerFunction,"implementationInitializerFunction not set'");const N=WF(p.abi,d.factoryDeploymentData.implementationInitializerFunction).map(H=>H.type),x=p5(N,s);let L=d.factoryDeploymentData.implementationAddresses[R];if(L){const H=await k(L);if(P(H,`implementationAddress not found for chainId '${R}'`),d.isDeployableViaFactory){P(d.factoryDeploymentData.factoryAddresses,"isDeployableViaFactory is true so factoryAddresses is required");const Q=d.factoryDeploymentData.factoryAddresses[R];P(Q,`isDeployableViaFactory is true and factoryAddress not found for chainId '${R}'`);const ne=await k(Q);return await this.deployViaFactory.prepare(ne,H,p.abi,d.factoryDeploymentData.implementationInitializerFunction,x)}else if(d.isDeployableViaProxy)return await this.deployProxy.prepare(H,p.abi,d.factoryDeploymentData.implementationInitializerFunction,x)}else{const H=await tH(c,o),Q=await _0(i,this.storage,this.getProvider(),H);L=(w=Q.find(he=>he.type==="implementation"))==null?void 0:w.transaction.predictedAddress;const ne=Q.filter(he=>he.transaction.data&&he.transaction.data.length>0),ie=ne.filter(he=>he.type!=="infra").map(he=>he.transaction),ue=ne.filter(he=>he.type==="infra").map(he=>he.transaction);await aH(c,ue,o),await Promise.all(ie.map(he=>nH(c,he,o)));const me=await k(L),dt=await GF(this.getProvider(),this.storage,H);(I=o==null?void 0:o.notifier)==null||I.call(o,"deploying","proxy");const Be=await this.deployViaFactory.prepare(dt,me,p.abi,d.factoryDeploymentData.implementationInitializerFunction,x);return(M=o==null?void 0:o.notifier)==null||M.call(o,"deployed","proxy"),Be}}const m=p.bytecode.startsWith("0x")?p.bytecode:`0x${p.bytecode}`;if(!V2(m))throw new Error(`Contract bytecode is invalid.

${m}`);const f=z0(p.abi).map(R=>R.type),g=p5(f,s);return this.deployContractWithAbi.prepare(p.abi,m,g)})),l(this,"deployContractWithAbi",be(async(i,s,o)=>{const c=this.getSigner(),p=this.getProvider();P(c,"Signer is required to deploy contracts");const d=new R1(i,s).connect(c);return new lH({args:o,provider:p,signer:c,factory:d,storage:this.storage,events:this.events})})),this.storage=a,this.events=new Nt,this.getFactory(),this.getRegistry()}async getLatestBuiltInContractVersion(e){const n=await this.getFactory();if(!n)throw new Error("Factory not found");return await n.getLatestVersion(e)}async getRegistry(){return this._registry?this._registry:this._registry=this.getProvider().getNetwork().then(async e=>{let{chainId:n}=e;const a=jw(n,"twRegistry");if(!!a)return new ZH(a,this.getSignerOrProvider(),this.options)})}async getFactory(){return this._factory?this._factory:this._factory=this.getProvider().getNetwork().then(async e=>{let{chainId:n}=e;const a=jw(n,"twFactory");return a?new m5(a,this.getSignerOrProvider(),this.storage,this.options):void 0})}updateSignerOrProvider(e){super.updateSignerOrProvider(e),this.updateContractSignerOrProvider()}updateContractSignerOrProvider(){var e,n;(e=this._factory)==null||e.then(a=>{a==null||a.updateSignerOrProvider(this.getSignerOrProvider())}).catch(()=>{}),(n=this._registry)==null||n.then(a=>{a==null||a.updateSignerOrProvider(this.getSignerOrProvider())}).catch(()=>{})}async getTransactionsForDeploy(e,n){let a=[];const r=this.getProvider();P(r,"A provider is required");const{extendedMetadata:i}=await Gt(e,this.storage),s=(n==null?void 0:n.forceDirectDeploy)||!1;if(i&&i.factoryDeploymentData&&(i.isDeployableViaProxy||i.isDeployableViaFactory)&&!s){const o=(await this.getProvider().getNetwork()).chainId;if(!i.factoryDeploymentData.implementationAddresses[o]){const p=await An(this.getProvider());a.push({contractType:"create2Factory",addresses:[p]});const u=(await _0(e,this.storage,this.getProvider(),p)).filter(w=>w.transaction.data&&w.transaction.data.length>0);u.filter(w=>w.type!=="infra").map(w=>w.transaction).forEach(w=>{a.push({contractType:"preset",addresses:[w.predictedAddress]})});const f=u.filter(w=>w.type==="infra").map(w=>w.transaction);S6(f).forEach(w=>{const I=w.map(M=>M.predictedAddress);a.push({contractType:"infra",addresses:I})})}a=(await Promise.all(a.map(async p=>(await Promise.all(p.addresses.map(async u=>await Vt(u,r)?null:u))).filter(Boolean).length>0?p:null))).filter(Boolean),a.push({contractType:"proxy",addresses:[]})}else a.push({contractType:"custom",addresses:[]});return a}addDeployListener(e){this.events.on("contractDeployed",e)}removeDeployListener(e){this.events.off("contractDeployed",e)}removeAllDeployListeners(){this.events.removeAllListeners("contractDeployed")}async fetchPublishedContractFromPolygon(e,n,a){const r=await k(e),i=await new at("polygon").getPublisher().getVersion(r,n,a);if(!i)throw new Error(`No published contract found for '${n}' at version '${a}' by '${r}'`);return i}hasLocalFactory(){return{}.factoryAddress!==void 0}}class rn{constructor(e){l(this,"featureName",g0.name),l(this,"contractWrapper",void 0),l(this,"set",T(async n=>{const a=await k(n);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setOwner",args:[a]})})),this.contractWrapper=e}async get(){return this.contractWrapper.readContract.owner()}}const G6={},eK=new at("polygon");function Z6(t,e){return`${t}-${e}`}function tK(t,e,n){G6[Z6(t,e)]=n}function nK(t,e){return G6[Z6(t,e)]}async function Ft(t,e,n){const a=(await e.getNetwork()).chainId,r=nK(t,a);if(r)return r;let i;try{const s=await Ga(t,e);if(!s)throw new Error(`Could not resolve metadata for contract at ${t}`);i=await B0(s,n)}catch(s){console.warn("Failed to get Contract Metadata from IPFS, defaulting to onchain registry",s);try{const o=await eK.multiChainRegistry.getContractMetadataURI(a,t);if(!o)throw new Error(`Could not resolve metadata for contract at ${t}`);i=await B0(o,n)}catch{throw new Error(`Could not resolve metadata for contract at ${t}`)}}if(!i)throw new Error(`No ABI found for this contract. Try importing it by visiting: https://thirdweb.com/${a}/${t}`);return tK(t,a,i),i}async function Je(t,e,n){try{const a=await Ft(t,e,n);if(a&&a.abi)return a.abi}catch{}}async function B0(t,e){const n=await e.downloadJSON(t);if(!n||!n.output)throw new Error(`Could not resolve metadata for contract at ${t}`);const a=G.parse(n.output.abi),r=n.settings.compilationTarget,i=Object.keys(r),s=r[i[0]],o=nC.parse({title:n.output.devdoc.title,author:n.output.devdoc.author,details:n.output.devdoc.detail,notice:n.output.userdoc.notice}),c=[...new Set(Object.entries(n.sources).map(p=>{let[,d]=p;return d.license}))];return{name:s,abi:a,metadata:n,info:o,licenses:c}}async function Z0(t,e){return await Promise.all(Object.entries(t.metadata.sources).map(async n=>{let[a,r]=n;const i=r.urls,s=i?i.find(o=>o.includes("ipfs")):void 0;if(s){const o=s.split("ipfs/")[1],c=new Promise((d,u)=>setTimeout(()=>u("timeout"),3e3)),p=await Promise.race([(await e.download(`ipfs://${o}`)).text(),c]);return{filename:a,source:p}}else return{filename:a,source:r.content||"Could not find source for this contract"}}))}const h5=256,W2="0|[1-9]\\d*",aK=`(${W2})\\.(${W2})\\.(${W2})`,rK=new RegExp(aK);function u1(t){if(t.length>h5)throw new Error(`version is longer than ${h5} characters`);const e=t.trim().match(rK);if(!e||(e==null?void 0:e.length)!==4)throw new Error(`${t} is not a valid semantic version. Should be in the format of major.minor.patch. Ex: 0.4.1`);const n=Number(e[1]),a=Number(e[2]),r=Number(e[3]),i=[n,a,r].join(".");return{major:n,minor:a,patch:r,versionString:i}}function iK(t,e){const n=u1(t),a=u1(e);if(a.major>n.major)return!0;const r=a.major===n.major;if(r&&a.minor>n.minor)return!0;const i=a.minor===n.minor;return r&&i&&a.patch>n.patch}const sK={FAILED:"Fail - Unable to verify",SUCCESS:"Pass - Verified",PENDING:"Pending in queue",ALREADY_VERIFIED:"Contract source code already verified",AUTOMATICALLY_VERIFIED:"Already Verified"},X6={OK:"1",NOTOK:"0"};async function oK(t,e,n,a,r,i){const s=await ZF(t,e,r),o=await JF(t,e,r,i);return console.info(`Verifying ${t} at address ${s}`),await J6(s,e,n,a,r,o==null?void 0:o.toString().replace("0x",""))}async function J6(t,e,n,a,r,i){try{const s=new at(e),o=await s.getPublisher().fetchCompilerMetadataFromAddress(t),c=o.metadata.compiler.version,p=await Z0(o,r),d=o.metadata.sources,u={};for(const L of Object.keys(d)){const H=p.find(Q=>L===Q.filename);if(!H)throw new Error(`Could not find source file for ${L}`);u[L]={content:H.source}}const m={language:"Solidity",sources:u,settings:{optimizer:o.metadata.settings.optimizer,evmVersion:o.metadata.settings.evmVersion,remappings:o.metadata.settings.remappings,outputSelection:{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},f=o.metadata.settings.compilationTarget,w=Object.keys(f)[0],I=i||await cK(n,a,t,o.abi,s.getProvider(),r),M={apikey:a,module:"contract",action:"verifysourcecode",contractaddress:t,sourceCode:JSON.stringify(m),codeformat:"solidity-standard-json-input",contractname:`${w}:${o.name}`,compilerversion:`v${c}`,constructorArguements:I},R=new URLSearchParams({...M}),x=await(await ht(n,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:R.toString()})).json();if(x.status===X6.OK)return x.result;throw new Error(`${x.result}`)}catch(s){throw new Error(s.toString())}}async function y5(t,e,n){const a=`${t}?module=contract&action=checkverifystatus&guid=${n}&apikey=${e}"`;return new Promise((r,i)=>{const s=setInterval(async()=>{try{const c=await(await ht(a,{method:"GET"})).json();(c==null?void 0:c.result)!==sK.PENDING&&(clearInterval(s),r(c))}catch(o){clearInterval(s),i(o)}},3e3)})}async function cK(t,e,n,a,r,i){const s=z0(a);if(s.length===0)return"";const o={apiKey:e,module:"account",action:"txlist",address:n,page:"1",sort:"asc",offset:"1"},c=new URLSearchParams({...o}),d=await(await ht(t,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:c.toString()})).json();if(d&&d.status===X6.OK&&d.result[0]!==void 0){const u=new A1(a),m=d.result[0].input;let f="";if(u.deploy.inputs.length===0)return"";try{const g=await pK(n,r,i);if(g){const w=g.startsWith("0x")?g:`0x${g}`;f=m.substring(w.length)}}catch{}if(!f){const g=[...m.matchAll(/(64736f6c6343[\w]{6}[\w]{4})(?!.*\1)(.*)$/g)];g.length>0&&(f=g[0][2])}if(!f){const g=s.length*64;f=m.substring(m.length-g)}try{Tn.decode(u.deploy.inputs,`0x${f}`)}catch{throw new Error("Verifying this contract requires it to be published. Run `npx thirdweb publish` to publish this contract, then try again.")}return f}else return""}async function pK(t,e,n){const a=await Ga(t,e);if(a){const r=await new at("polygon").getPublisher().resolvePublishMetadataFromCompilerMetadata(a);return r.length>0?await(await n.download(r[0].bytecodeUri)).text():void 0}}const lK=Ze.catchall(y.union([Av,y.unknown()])),eC=lK.merge(_e.merge(tn).merge(Re).partial()),dK=pt.merge(_e.merge(tn).merge(Re).partial()),uK=eC.merge(ft.merge(Rn).merge(lt).partial()),Vn={deploy:uK,output:dK,input:eC},f5=y.object({type:y.string(),name:y.string().default("")}).catchall(y.any()),g5=f5.extend({stateMutability:y.string().optional(),components:y.array(f5).optional()}).catchall(y.any()),mK=y.object({type:y.string(),name:y.string().default(""),inputs:y.array(g5).default([]),outputs:y.array(g5).default([])}).catchall(y.any()),G=y.array(mK),X0=y.object({name:y.string(),metadataUri:y.string(),bytecodeUri:y.string(),analytics:y.any().optional()}).catchall(y.any()),b5=y.record(y.string(),y.string()),hK=y.object({implementationAddresses:b5,implementationInitializerFunction:y.string().default("initialize"),factoryAddresses:b5.optional()}),tC=y.object({version:y.string().refine(t=>{try{return u1(t),!0}catch{return!1}},t=>({message:`'${t}' is not a valid semantic version. Should be in the format of major.minor.patch. Ex: 0.4.1`})),displayName:y.string().optional(),description:y.string().optional(),readme:y.string().optional(),license:y.string().optional(),changelog:y.string().optional(),tags:y.array(y.string()).optional(),audit:fn.nullable().optional(),logo:fn.nullable().optional(),isDeployableViaFactory:y.boolean().optional(),isDeployableViaProxy:y.boolean().optional(),factoryDeploymentData:hK.optional(),constructorParams:y.record(y.string(),y.object({displayName:y.string().optional(),description:y.string().optional(),defaultValue:y.string().optional()}).catchall(y.any())).optional(),compositeAbi:G.optional()}).catchall(y.any()),yK=tC.extend({audit:y.string().nullable().optional(),logo:y.string().nullable().optional()}),fK=X0.merge(tC).extend({publisher:ae.optional()}),gK=X0.merge(yK).extend({publisher:ae.optional()}),bK=y.object({name:y.string().optional(),bio:y.string().optional(),avatar:fn.nullable().optional(),website:y.string().optional(),twitter:y.string().optional(),telegram:y.string().optional(),facebook:y.string().optional(),github:y.string().optional(),medium:y.string().optional(),linkedin:y.string().optional(),reddit:y.string().optional(),discord:y.string().optional()}),TK=bK.extend({avatar:y.string().nullable().optional()}),wK=y.object({id:y.string(),timestamp:te,metadataUri:y.string()}),nC=y.object({title:y.string().optional(),author:y.string().optional(),details:y.string().optional(),notice:y.string().optional()}),IK=y.object({name:y.string(),abi:G,metadata:y.record(y.string(),y.any()),info:nC,licenses:y.array(y.string().optional()).default([]).transform(t=>t.filter(e=>e!==void 0))}),vK=X0.merge(IK).extend({bytecode:y.string()}),T5=y.object({}).catchall(y.union([Av,y.unknown()]));y.union([y.array(T5),T5]).optional();const CK=y.object({supply:pe,metadata:D1});CK.extend({owner:y.string(),quantityOwned:pe});y.object({supply:te,metadata:Lt});y.object({supply:te,metadata:ca});y.object({toAddress:ae,amount:Ne});function kK(t){if(t in Qw)return Qw[t]}class EK{constructor(e){l(this,"events",void 0),this.events=e}async getAllClaimerAddresses(e){const n=(await this.events.getEvents("TokensClaimed")).filter(a=>a.data&&b.isBigNumber(a.data.tokenId)?a.data.tokenId.eq(e):!1);return Array.from(new Set(n.filter(a=>{var r;return typeof((r=a.data)==null?void 0:r.claimer)=="string"}).map(a=>a.data.claimer)))}}class xK{constructor(e,n){l(this,"events",void 0),l(this,"contractWrapper",void 0),this.contractWrapper=e,this.events=n}async getAllHolderBalances(){const n=(await this.events.getEvents("Transfer")).map(r=>r.data),a={};return n.forEach(r=>{const i=r==null?void 0:r.from,s=r==null?void 0:r.to,o=r==null?void 0:r.value;i!==B&&(i in a||(a[i]=b.from(0)),a[i]=a[i].sub(o)),s!==B&&(s in a||(a[s]=b.from(0)),a[s]=a[s].add(o))}),Promise.all(Object.keys(a).map(async r=>({holder:r,balance:await Ce(this.contractWrapper.getProvider(),this.contractWrapper.readContract.address,a[r])})))}}class aC{get chainId(){return this._chainId}constructor(e,n,a){l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"erc20",void 0),l(this,"_chainId",void 0),l(this,"transfer",T(async(r,i)=>this.erc20.transfer.prepare(r,i))),l(this,"transferFrom",T(async(r,i,s)=>this.erc20.transferFrom.prepare(r,i,s))),l(this,"setAllowance",T(async(r,i)=>this.erc20.setAllowance.prepare(r,i))),l(this,"transferBatch",T(async r=>this.erc20.transferBatch.prepare(r))),this.contractWrapper=e,this.storage=n,this.erc20=new X1(this.contractWrapper,this.storage,a),this._chainId=a}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async get(){return this.erc20.get()}async balance(){return await this.erc20.balance()}async balanceOf(e){return this.erc20.balanceOf(e)}async totalSupply(){return await this.erc20.totalSupply()}async allowance(e){return await this.erc20.allowance(e)}async allowanceOf(e,n){return await this.erc20.allowanceOf(e,n)}}class J0{get chainId(){return this._chainId}constructor(e,n,a){l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"erc721",void 0),l(this,"_chainId",void 0),l(this,"transfer",T(async(r,i)=>this.erc721.transfer.prepare(r,i))),l(this,"setApprovalForAll",T(async(r,i)=>this.erc721.setApprovalForAll.prepare(r,i))),l(this,"setApprovalForToken",T(async(r,i)=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approve",args:[await k(r),i]}))),this.contractWrapper=e,this.storage=n,this.erc721=new D6(this.contractWrapper,this.storage,a),this._chainId=a}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async getAll(e){return this.erc721.getAll(e)}async getOwned(e){return e&&(e=await k(e)),this.erc721.getOwned(e)}async getOwnedTokenIds(e){return e&&(e=await k(e)),this.erc721.getOwnedTokenIds(e)}async totalSupply(){return this.erc721.totalCirculatingSupply()}async get(e){return this.erc721.get(e)}async ownerOf(e){return this.erc721.ownerOf(e)}async balanceOf(e){return this.erc721.balanceOf(e)}async balance(){return this.erc721.balance()}async isApproved(e,n){return this.erc721.isApproved(e,n)}}class tI{get chainId(){return this._chainId}constructor(e,n,a){var r=this;l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"erc1155",void 0),l(this,"_chainId",void 0),l(this,"transfer",T(async function(i,s,o){let c=arguments.length>3&&arguments[3]!==void 0?arguments[3]:[0];return r.erc1155.transfer.prepare(i,s,o,c)})),l(this,"setApprovalForAll",T(async(i,s)=>this.erc1155.setApprovalForAll.prepare(i,s))),l(this,"airdrop",T(async function(i,s){let o=arguments.length>2&&arguments[2]!==void 0?arguments[2]:[0];return r.erc1155.airdrop.prepare(i,s,o)})),this.contractWrapper=e,this.storage=n,this.erc1155=new U6(this.contractWrapper,this.storage,a),this._chainId=a}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async get(e){return this.erc1155.get(e)}async totalSupply(e){return this.erc1155.totalSupply(e)}async balanceOf(e,n){return this.erc1155.balanceOf(e,n)}async balance(e){return this.erc1155.balance(e)}async isApproved(e,n){return this.erc1155.isApproved(e,n)}}let Fe=function(t){return t[t.Direct=0]="Direct",t[t.Auction=1]="Auction",t}({});class RK{constructor(e,n){l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"createListing",T(async a=>{F6(a);const r=await k(a.assetContractAddress),i=await k(a.currencyContractAddress);await ia(this.contractWrapper,this.getAddress(),r,a.tokenId,await this.contractWrapper.getSignerAddress());const s=await se(this.contractWrapper.getProvider(),a.buyoutPricePerToken,i);let o=Math.floor(a.startTimestamp.getTime()/1e3);const p=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;return o<p&&(o=p),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createListing",args:[{assetContract:r,tokenId:a.tokenId,buyoutPricePerToken:s,currencyToAccept:Qa(i),listingType:Fe.Direct,quantityToList:a.quantity,reservePricePerToken:s,secondsUntilEndTime:a.listingDurationInSeconds,startTime:b.from(o)}],parse:d=>({id:this.contractWrapper.parseLogs("ListingAdded",d==null?void 0:d.logs)[0].args.listingId,receipt:d})})})),l(this,"createListingsBatch",T(async a=>{const r=await Promise.all(a.map(async i=>(await this.createListing.prepare(i)).encode()));return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r],parse:i=>this.contractWrapper.parseLogs("ListingAdded",i==null?void 0:i.logs).map(o=>({id:o.args.listingId,receipt:i}))})})),l(this,"makeOffer",T(async(a,r,i,s,o)=>{if(ct(i))throw new Error("You must use the wrapped native token address when making an offer with a native token");const c=await se(this.contractWrapper.getProvider(),s,i);try{await this.getListing(a)}catch(f){throw console.error("Failed to get listing, err =",f),new Error(`Error getting the listing with id ${a}`)}const p=b.from(r),d=b.from(c).mul(p),u=await this.contractWrapper.getCallOverrides()||{};await bt(this.contractWrapper,d,i,u);let m=ke;return o&&(m=b.from(Math.floor(o.getTime()/1e3))),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"offer",args:[a,r,i,c,m],overrides:u})})),l(this,"acceptOffer",T(async(a,r)=>{await this.validateListing(b.from(a));const i=await k(r),s=await this.contractWrapper.readContract.offers(a,i);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"acceptOffer",args:[a,i,s.currency,s.pricePerToken]})})),l(this,"buyoutListing",T(async(a,r,i)=>{const s=await this.validateListing(b.from(a)),{valid:o,error:c}=await this.isStillValidListing(s,r);if(!o)throw new Error(`Listing ${a} is no longer valid. ${c}`);const p=i||await this.contractWrapper.getSignerAddress(),d=b.from(r),u=b.from(s.buyoutPrice).mul(d),m=await this.contractWrapper.getCallOverrides()||{};return await bt(this.contractWrapper,u,s.currencyContractAddress,m),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"buy",args:[a,p,d,s.currencyContractAddress,u],overrides:m})})),l(this,"updateListing",T(async a=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateListing",args:[a.id,a.quantity,a.buyoutPrice,a.buyoutPrice,await k(a.currencyContractAddress),a.startTimeInSeconds,a.secondsUntilEnd]}))),l(this,"cancelListing",T(async a=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"cancelDirectListing",args:[a]}))),this.contractWrapper=e,this.storage=n}getAddress(){return this.contractWrapper.readContract.address}async getListing(e){const n=await this.contractWrapper.readContract.listings(e);if(n.assetContract===B)throw new Fn(this.getAddress(),e.toString());if(n.listingType!==Fe.Direct)throw new t6(this.getAddress(),e.toString(),"Auction","Direct");return await this.mapListing(n)}async getActiveOffer(e,n){await this.validateListing(b.from(e)),P(tr(n),"Address must be a valid address");const a=await this.contractWrapper.readContract.offers(e,await k(n));if(a.offeror!==B)return await eI(this.contractWrapper.getProvider(),b.from(e),a)}async validateListing(e){try{return await this.getListing(e)}catch(n){throw console.error(`Error getting the listing with id ${e}`),n}}async mapListing(e){return{assetContractAddress:e.assetContract,buyoutPrice:b.from(e.buyoutPricePerToken),currencyContractAddress:e.currency,buyoutCurrencyValuePerToken:await Ce(this.contractWrapper.getProvider(),e.currency,e.buyoutPricePerToken),id:e.listingId.toString(),tokenId:e.tokenId,quantity:e.quantity,startTimeInSeconds:e.startTime,asset:await la(e.assetContract,this.contractWrapper.getProvider(),e.tokenId,this.storage),secondsUntilEnd:e.endTime,sellerAddress:e.tokenOwner,type:Fe.Direct}}async isStillValidListing(e,n){if(!await ra(this.contractWrapper.getProvider(),this.getAddress(),e.assetContractAddress,e.tokenId,e.sellerAddress))return{valid:!1,error:`Token '${e.tokenId}' from contract '${e.assetContractAddress}' is not approved for transfer`};const r=this.contractWrapper.getProvider(),i=new J(e.assetContractAddress,rr,r),s=await i.supportsInterface(ir),o=await i.supportsInterface(sr);if(s){const c=new J(e.assetContractAddress,xe,r);let p;try{p=await c.ownerOf(e.tokenId)}catch{}const d=(p==null?void 0:p.toLowerCase())===e.sellerAddress.toLowerCase();return{valid:d,error:d?void 0:`Seller is not the owner of Token '${e.tokenId}' from contract '${e.assetContractAddress} anymore'`}}else if(o){const d=(await new J(e.assetContractAddress,De,r).balanceOf(e.sellerAddress,e.tokenId)).gte(n||e.quantity);return{valid:d,error:d?void 0:`Seller does not have enough balance of Token '${e.tokenId}' from contract '${e.assetContractAddress} to fulfill the listing`}}else return{valid:!1,error:"Contract does not implement ERC 1155 or ERC 721."}}}class AK{constructor(e,n){l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"encoder",void 0),l(this,"createListing",T(async a=>{F6(a);const r=await k(a.assetContractAddress),i=await k(a.currencyContractAddress);await ia(this.contractWrapper,this.getAddress(),r,a.tokenId,await this.contractWrapper.getSignerAddress());const s=await se(this.contractWrapper.getProvider(),a.buyoutPricePerToken,i),o=await se(this.contractWrapper.getProvider(),a.reservePricePerToken,i);let c=Math.floor(a.startTimestamp.getTime()/1e3);const d=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;return c<d&&(c=d),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createListing",args:[{assetContract:r,tokenId:a.tokenId,buyoutPricePerToken:s,currencyToAccept:Qa(i),listingType:Fe.Auction,quantityToList:a.quantity,reservePricePerToken:o,secondsUntilEndTime:a.listingDurationInSeconds,startTime:b.from(c)}],parse:u=>({id:this.contractWrapper.parseLogs("ListingAdded",u==null?void 0:u.logs)[0].args.listingId,receipt:u})})})),l(this,"createListingsBatch",T(async a=>{const r=await Promise.all(a.map(async i=>(await this.createListing.prepare(i)).encode()));return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r],parse:i=>this.contractWrapper.parseLogs("ListingAdded",i==null?void 0:i.logs).map(o=>({id:o.args.listingId,receipt:i}))})})),l(this,"buyoutListing",T(async a=>{const r=await this.validateListing(b.from(a)),i=await gt(this.contractWrapper.getProvider(),r.currencyContractAddress);return this.makeBid.prepare(a,Ge(r.buyoutPrice,i.decimals))})),l(this,"makeBid",T(async(a,r)=>{const i=await this.validateListing(b.from(a)),s=await se(this.contractWrapper.getProvider(),r,i.currencyContractAddress);if(s.eq(b.from(0)))throw new Error("Cannot make a bid with 0 value");const o=await this.contractWrapper.readContract.bidBufferBps(),c=await this.getWinningBid(a);if(c){const m=DH(c.pricePerToken,s,o);P(m,"Bid price is too low based on the current winning bid and the bid buffer")}else{const m=s,f=b.from(i.reservePrice);P(m.gte(f),"Bid price is too low based on reserve price")}const p=b.from(i.quantity),d=s.mul(p),u=await this.contractWrapper.getCallOverrides()||{};return await bt(this.contractWrapper,d,i.currencyContractAddress,u),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"offer",args:[a,i.quantity,i.currencyContractAddress,s,ke],overrides:u})})),l(this,"cancelListing",T(async a=>{const r=await this.validateListing(b.from(a)),i=b.from(Math.floor(Date.now()/1e3)),s=b.from(r.startTimeInEpochSeconds),o=await this.contractWrapper.readContract.winningBid(a);if(i.gt(s)&&o.offeror!==B)throw new ZU(a.toString());return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"closeAuction",args:[b.from(a),await this.contractWrapper.getSignerAddress()]})})),l(this,"closeListing",T(async(a,r)=>{r||(r=await this.contractWrapper.getSignerAddress());const i=await this.validateListing(b.from(a));try{return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"closeAuction",args:[b.from(a),r]})}catch(s){throw s.message.includes("cannot close auction before it has ended")?new ga(a.toString(),i.endTimeInEpochSeconds.toString()):s}})),l(this,"executeSale",T(async a=>{const r=await this.validateListing(b.from(a));try{const i=await this.getWinningBid(a);P(i,"No winning bid found");const s=this.encoder.encode("closeAuction",[a,r.sellerAddress]),o=this.encoder.encode("closeAuction",[a,i.buyerAddress]);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[s,o]})}catch(i){throw i.message.includes("cannot close auction before it has ended")?new ga(a.toString(),r.endTimeInEpochSeconds.toString()):i}})),l(this,"updateListing",T(async a=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateListing",args:[a.id,a.quantity,a.reservePrice,a.buyoutPrice,a.currencyContractAddress,a.startTimeInEpochSeconds,a.endTimeInEpochSeconds]}))),this.contractWrapper=e,this.storage=n,this.encoder=new Ae(e)}getAddress(){return this.contractWrapper.readContract.address}async getListing(e){const n=await this.contractWrapper.readContract.listings(e);if(n.listingId.toString()!==e.toString())throw new Fn(this.getAddress(),e.toString());if(n.listingType!==Fe.Auction)throw new t6(this.getAddress(),e.toString(),"Direct","Auction");return await this.mapListing(n)}async getWinningBid(e){await this.validateListing(b.from(e));const n=await this.contractWrapper.readContract.winningBid(e);if(n.offeror!==B)return await eI(this.contractWrapper.getProvider(),b.from(e),n)}async getWinner(e){const n=await this.validateListing(b.from(e)),a=await this.contractWrapper.readContract.winningBid(e),r=b.from(Math.floor(Date.now()/1e3)),i=b.from(n.endTimeInEpochSeconds);if(r.gt(i)&&a.offeror!==B)return a.offeror;const o=(await this.contractWrapper.readContract.queryFilter(this.contractWrapper.readContract.filters.AuctionClosed())).find(c=>c.args.listingId.eq(b.from(e)));if(!o)throw new Error(`Could not find auction with listingId ${e} in closed auctions`);return o.args.winningBidder}async getBidBufferBps(){return this.contractWrapper.readContract.bidBufferBps()}async getMinimumNextBid(e){const[n,a,r]=await Promise.all([this.getBidBufferBps(),this.getWinningBid(e),await this.validateListing(b.from(e))]),i=a?a.currencyValue.value:r.reservePrice,s=i.add(i.mul(n).div(1e4));return Ce(this.contractWrapper.getProvider(),r.currencyContractAddress,s)}async validateListing(e){try{return await this.getListing(e)}catch(n){throw console.error(`Error getting the listing with id ${e}`),n}}async mapListing(e){return{assetContractAddress:e.assetContract,buyoutPrice:b.from(e.buyoutPricePerToken),currencyContractAddress:e.currency,buyoutCurrencyValuePerToken:await Ce(this.contractWrapper.getProvider(),e.currency,e.buyoutPricePerToken),id:e.listingId.toString(),tokenId:e.tokenId,quantity:e.quantity,startTimeInEpochSeconds:e.startTime,asset:await la(e.assetContract,this.contractWrapper.getProvider(),e.tokenId,this.storage),reservePriceCurrencyValuePerToken:await Ce(this.contractWrapper.getProvider(),e.currency,e.reservePricePerToken),reservePrice:b.from(e.reservePricePerToken),endTimeInEpochSeconds:e.endTime,sellerAddress:e.tokenOwner,type:Fe.Auction}}}let B2=function(t){return t[t.Against=0]="Against",t[t.For=1]="For",t[t.Abstain=2]="Abstain",t}({});const PK="https://paper.xyz/api",MK="2022-08-12",rC=`${PK}/${MK}/platform/thirdweb`,w5={[S.Mainnet]:"Ethereum",[S.Goerli]:"Goerli",[S.Polygon]:"Polygon",[S.Mumbai]:"Mumbai",[S.Avalanche]:"Avalanche"};function _K(t){return P(t in w5,`chainId not supported by paper: ${t}`),w5[t]}async function SK(t,e){const n=_K(e),r=await(await fetch(`${rC}/register-contract?contractAddress=${t}&chain=${n}`)).json();return P(r.result.id,"Contract is not registered with paper"),r.result.id}const WK={expiresInMinutes:15,feeBearer:"BUYER",sendEmailOnSuccess:!0,redirectAfterPayment:!1};async function BK(t,e){const a=await(await fetch(`${rC}/checkout-link-intent`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contractId:t,...WK,...e,metadata:{...e.metadata,via_platform:"thirdweb"},hideNativeMint:!0,hidePaperWallet:!!e.walletAddress,hideExternalWallet:!0,hidePayWithCrypto:!0,usePaperKey:!1})})).json();return P(a.checkoutLinkIntentUrl,"Failed to create checkout link intent"),a.checkoutLinkIntentUrl}class nI{constructor(e){l(this,"contractWrapper",void 0),this.contractWrapper=e}async getCheckoutId(){return SK(this.contractWrapper.readContract.address,await this.contractWrapper.getChainID())}async isEnabled(){try{return!!await this.getCheckoutId()}catch{return!1}}async createLinkIntent(e){return await BK(await this.getCheckoutId(),e)}}const NK=t=>{let{queryClient:e,children:n}=t;const a=C.exports.useMemo(()=>e||new jC,[e]);return h(VC,{client:a,children:n})},DK={persist:!1};function LK(t){return[...t,DK]}function m1(t,e){P(t!==null||t!==void 0,e)}globalThis.global=globalThis;function e2(t,e){if(!t)return;const n=j5(Q5(e!=null&&e.gatewayUrl?[e==null?void 0:e.gatewayUrl]:void 0));return L0(t,n)}async function UK(t){if(!t)return;const e=qC.getType(t);if(e)return e;const n=await fetch(t,{method:"HEAD"});if(n.ok&&n.headers.has("content-type"))return n.headers.get("content-type")||void 0}const lr=C.exports.createContext(void 0),iC=C.exports.createContext(void 0),FK=t=>{let{value:e,children:n}=t;const a=C.exports.useMemo(()=>{var i;return e?{...e,authUrl:(i=e.authUrl)==null?void 0:i.replace(/\/$/,"")}:void 0},[e]);return h(iC.Provider,{value:a,children:n})};function t2(){return C.exports.useContext(iC)}const I5=(t,e)=>{try{return{...t,rpc:G5(t,e)}}catch{return t}};function sC(t,e,n,a,r){const i=C.exports.useMemo(()=>({thirdwebApiKey:n,alchemyApiKey:a,infuraApiKey:r}),[n,a,r]),s=C.exports.useMemo(()=>t.map(c=>I5(c,i)),[t,i]),o=C.exports.useMemo(()=>!e||typeof e=="string"||typeof e=="number"?e:I5(e,i),[e,i]);return[s,o]}const HK="fb52f0ca630bdd02f0d5210d9e8e3568272ac765dd0709272918eefb29d3ac9e",oC=C.exports.createContext({chains:yt}),KK=t=>{let{value:e,children:n}=t;return h(oC.Provider,{value:e,children:n})};function cC(){return C.exports.useContext(oC)}const h1={wallet:void 0,address:void 0,chainId:void 0,signer:void 0},pC=C.exports.createContext(h1),OK=t=>{let{signer:e,children:n}=t;const{chains:a,thirdwebApiKey:r,alchemyApiKey:i,infuraApiKey:s}=cC(),[o,c]=C.exports.useState({...h1,signer:e||void 0});return C.exports.useEffect(()=>{c(p=>({...p,signer:e||void 0}))},[e]),C.exports.useEffect(()=>{let p=e;return e?Promise.all([e.getAddress(),e.getChainId()]).then(d=>{let[u,m]=d;const f=a.find(w=>w.chainId===m);let g;if(f)try{g=M1(f,{thirdwebApiKey:r,alchemyApiKey:i,infuraApiKey:s})}catch{}if(e===p){const w=new G0(e,{readonlySettings:g?{rpcUrl:g,chainId:m}:void 0});c({wallet:w,address:u,chainId:m,signer:e})}}).catch(d=>{}):c(h1),()=>{p=void 0}},[e,r,i,s]),h(pC.Provider,{value:o,children:n})};function aI(){return C.exports.useContext(pC)}const lC=C.exports.createContext({}),$K=t=>{let{sdkOptions:e={},storageInterface:n,supportedChains:a,activeChain:r,signer:i,children:s,thirdwebApiKey:o,infuraApiKey:c,alchemyApiKey:p}=t;const d=C.exports.useMemo(()=>{var f,g;return r?typeof r=="number"?r:typeof r=="string"?(g=a.find(w=>w.slug===r))==null?void 0:g.chainId:r.chainId:(f=a[0])==null?void 0:f.chainId},[r,a]),u=C.exports.useMemo(()=>{let f=d;const g=a.find(R=>R.chainId===f);!g&&f!==void 0&&(console.warn(`The chainId ${f} is not in the configured chains, please add it to the ThirdwebProvider`),f=void 0);let w;if(g&&g.rpc.length>0)try{const R=M1(g,{thirdwebApiKey:o,infuraApiKey:c,alchemyApiKey:p});w={chainId:g.chainId,rpcUrl:R}}catch{}const I={readonlySettings:w,...e,supportedChains:a};let M;if(f&&(M=new at(f,{...I,infuraApiKey:c,alchemyApiKey:p,thirdwebApiKey:o},n)),!M)if(a.length>0)f=a[0].chainId,M=new at(f,I,n);else{console.error("No chains configured, please pass a chain or chains to the ThirdwebProvider");return}return M._chainId=f,M},[d,p,c,a,e,n,o]);C.exports.useEffect(()=>{u&&u._chainId===d&&(i?u.updateSignerOrProvider(i):d&&u.updateSignerOrProvider(d))},[u,u==null?void 0:u._chainId,i,d]);const m=C.exports.useMemo(()=>({sdk:u&&u._chainId===d?u:void 0,_inProvider:!0}),[d,u]);return h(lC.Provider,{value:m,children:s})},YK=t=>{let{signer:e,children:n,queryClient:a,supportedChains:r,activeChain:i,thirdwebApiKey:s=HK,alchemyApiKey:o,infuraApiKey:c,...p}=t;const d=C.exports.useMemo(()=>r||yt,[r]),[u,m]=sC(d,i||d[0],s,o,c),f=C.exports.useMemo(()=>!m||typeof m=="string"||typeof m=="number"?u:[...u.filter(w=>w.chainId!==m.chainId),m].filter((w,I,M)=>I===M.findIndex(R=>R.chainId===w.chainId)),[u,m]);return h(KK,{value:{chains:f,thirdwebApiKey:s,alchemyApiKey:o,infuraApiKey:c},children:h(OK,{signer:e,children:h(NK,{queryClient:a,children:h($K,{signer:e,supportedChains:f,thirdwebApiKey:s,alchemyApiKey:o,infuraApiKey:c,activeChain:m,...p,children:n})})})})};function zK(){const t=C.exports.useContext(lC);return P(t._inProvider,"useSDK must be called from within a ThirdwebProvider, did you forget to wrap your app in a <ThirdwebProvider />?"),t}function da(){const{sdk:t}=zK();return t}function n2(){const t=da();return t==null?void 0:t._chainId}const Kn="lastConnectedWallet";let zt;const Ir=new Map,dC=C.exports.createContext(void 0);function qK(t){const[e,n]=C.exports.useState(void 0),[a,r]=C.exports.useState("unknown"),[i,s]=C.exports.useState(),[o,c]=C.exports.useState();zt||(zt=t.createWalletStorage("coordinatorStorage"));const p=t.autoSwitch?t.activeChain:void 0,d=C.exports.useContext(lr),u=C.exports.useMemo(()=>({...{chains:t.chains,dappMetadata:t.dAppMeta},chain:t.activeChain||t.chains[0],theme:d||"dark"}),[t.chains,t.dAppMeta,t.activeChain,d]),m=C.exports.useCallback(x=>{const L=x.create(u);return Ir.set(L,x),L},[u]);C.exports.useEffect(()=>{i&&i.updateChains(t.chains)},[i,t.chains]);const f=C.exports.useCallback(async function(x,L){let H=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1;s(x);const Q=Ir.get(x);if(!Q)throw new Error("Wallet config not found for given wallet instance. Do not create a wallet instance manually - use the useCreateWalletInstance() hook instead");c(Q),r("connected");const ne=await x.getSigner();if(n(ne),H)return;const ie={walletId:Q.id,connectParams:L},ue=x.getPersonalWallet(),me=Ir.get(ue);ue&&me&&(ie.connectParams={...ie.connectParams,personalWallet:{walletId:me.id,connectParams:ue.getConnectParams()}}),v5(ie)},[]),g=C.exports.useCallback(async x=>{const L=await zt.getItem(Kn);if(!!L)try{const H=JSON.parse(L);H.connectParams.chainId=x,await zt.setItem(Kn,JSON.stringify(H))}catch(H){console.error(`Error saving the last active chain: ${H}`)}},[]),w=C.exports.useCallback(async x=>{if(!i)throw new Error("No active wallet");await i.switchChain(x);const L=await i.getSigner();await g(x),n(L)},[i,g]),I=C.exports.useRef(!1);C.exports.useEffect(()=>{if(I.current)return;if(t.shouldAutoConnect===!1){r("disconnected");return}if(i||a!=="unknown")return;I.current=!0;async function x(){var ie;const L=await QK();if(!L){r("disconnected");return}const H=t.supportedWallets.find(ue=>ue.id===L.walletId);if(!H){r("disconnected");return}const Q=(ie=L.connectParams)==null?void 0:ie.personalWallet;if(Q){const me=("config"in H?H.config.personalWallets:[]).find(dt=>dt.id===Q.walletId);if(me){const dt=m(me);try{await dt.autoConnect(Q.connectParams)}catch(Be){console.error(Be),r("disconnected");return}L.connectParams={...L.connectParams,personalWallet:dt}}else{r("disconnected");return}}const ne=m(H);try{r("connecting"),await ne.autoConnect(L.connectParams),f(ne,L.connectParams,!0)}catch(ue){throw zt.removeItem(Kn),r("disconnected"),ue}}x()},[m,t.supportedWallets,f,t.shouldAutoConnect,i,a]);const M=C.exports.useCallback(async function(){for(var x=arguments.length,L=new Array(x),H=0;H<x;H++)L[H]=arguments[H];const[Q,ne]=L,ie={chainId:p==null?void 0:p.chainId,...ne||{}},ue=m(Q);r("connecting");try{await ue.connect(ie),f(ue,ie)}catch(me){throw console.error(`Error connecting to wallet: ${me}`),r("disconnected"),me}},[m,f,p]),R=C.exports.useCallback(async()=>{await zt.removeItem(Kn),r("disconnected"),n(void 0),s(void 0),c(void 0)},[]),N=C.exports.useCallback(async()=>{if(!i){R();return}const x=i.getPersonalWallet();await i.disconnect(),x&&await(x==null?void 0:x.disconnect()),R()},[i,R]);return C.exports.useEffect(()=>{if(!i)return;const x=async()=>{const L=await i.getSigner();n(L)};return i.addListener("change",()=>{x()}),i.addListener("disconnect",()=>{R()}),()=>{i.removeListener("change"),i.removeListener("disconnect")}},[i,R]),h(dC.Provider,{value:{disconnect:N,wallets:t.supportedWallets,connect:M,signer:e,activeWallet:i,activeWalletConfig:o,connectionStatus:a,setConnectionStatus:r,createWalletInstance:m,createWalletStorage:t.createWalletStorage,switchChain:w,setConnectedWallet:f,activeChain:t.activeChain,chainToConnect:p,getWalletConfig:x=>Ir.get(x)},children:t.children})}function et(){const t=C.exports.useContext(dC);if(!t)throw new Error("useWalletContext() can only be used inside <ThirdwebProvider />");return t}async function QK(){const t=await zt.getItem(Kn);return t?JSON.parse(t):null}async function v5(t){try{await zt.setItem(Kn,JSON.stringify(t))}catch(e){console.error("Error saving the last connected wallet info",e)}}const jK=t=>{let{createWalletStorage:e=J5,...n}=t;const{activeChain:a}=n,r=C.exports.useMemo(()=>typeof a=="object"&&a!==null?n.supportedChains?n.supportedChains.find(u=>u.chainId===a.chainId)?n.supportedChains.map(u=>u.chainId===a.chainId?a:u):[...n.supportedChains,a]:[...yt,a]:n.supportedChains||yt,[n.supportedChains,a]),[i,s]=sC(r,n.activeChain||r[0],n.thirdwebApiKey,n.alchemyApiKey,n.infuraApiKey),o=C.exports.useMemo(()=>{if(typeof s=="number"){const p=i.find(d=>d.chainId===s);if(!p)throw new Error(`Invalid chainId: ${s}. It is not one of supportedChains`);return p}if(typeof s=="string"){const p=i.find(d=>d.slug===s);if(!p)throw new Error(`Invalid chain: "${s}". It is not one of supportedChains`);return p}return s},[s,i]),c=n.dAppMeta;return h(lr.Provider,{value:n.theme,children:h(qK,{chains:i,supportedWallets:n.supportedWallets,shouldAutoConnect:n.autoConnect,createWalletStorage:e,dAppMeta:c,activeChain:o,autoSwitch:n.autoSwitch,children:h(VK,{queryClient:n.queryClient,sdkOptions:n.sdkOptions,supportedChains:i,activeChain:o,storageInterface:n.storageInterface,authConfig:n.authConfig,thirdwebApiKey:n.thirdwebApiKey,alchemyApiKey:n.alchemyApiKey,infuraApiKey:n.infuraApiKey,children:h(FK,{value:n.authConfig,children:n.children})})})})},VK=t=>{var r;let{children:e,...n}=t;const a=(r=et())==null?void 0:r.signer;return h(YK,{signer:a,...n,children:e})};function dr(){const t=et();return P(t,"useWallet() hook must be used within a <ThirdwebProvider/>"),t.activeWallet}function uC(){const t=et();return P(t,"useWallet() hook must be used within a <ThirdwebProvider/>"),t.activeWalletConfig}function mC(){const t=et();return P(t,"useWallets() hook must be used within a <ThirdwebProvider/>"),t.wallets}function rI(){const t=et();return P(t,"useConnect() hook must be used within a <ThirdwebProvider/>"),t.connect}function hC(){const t=et();return P(t,"useDisconnect() hook must be used within a <ThirdwebProvider/>"),t.disconnect}function iI(){const t=et();return P(t,"useConnectionStatus() must be used within a <ThirdwebProvider/>"),t.connectionStatus}function yC(){const t=et();return P(t,"useCreateWalletInstance() must be used within a <ThirdwebProvider/>"),t.createWalletInstance}function fC(){const t=et();return P(t,"useSwitchChain() must be used within a <ThirdwebProvider/>"),t.switchChain}const C5="tw-cache";function On(t){return[C5,...t.filter(e=>typeof e!="string"||e!==C5)]}function Y(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:B,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];return On(["contract",t,...e])}function a2(t,e){return On(Wt.network.active(e).concat(t))}const Wt={auth:{user:()=>On(["user"])},network:{active:t=>On(["chainId",t])},wallet:{balance:(t,e,n)=>On(a2(On(["balance",{walletAddress:e,tokenAddress:n}]),t))},contract:{read:(t,e)=>Y(t,["read",e]),type:t=>Y(t,["contract-type"]),compilerMetadata:t=>Y(t,["publish-metadata"]),typeAndCompilerMetadata:t=>Y(t,["contract-type-and-metadata"]),metadata:t=>Y(t,["metadata"]),extractFunctions:t=>Y(t,["extractFunctions"]),call:(t,e,n,a)=>Y(t,["call",e,n,a]),app:{get:t=>Y(t,["appURI"])},events:{getEvents:(t,e)=>Y(t,["events","getEvents",{eventName:e}]),getAllEvents:t=>Y(t,["events","getAllEvents"])},nft:{get:(t,e)=>Y(t,["get",{tokenId:e}]),balanceOf:(t,e,n)=>Y(t,["balanceOf",{owner:e,tokenId:n}]),query:{all:(t,e)=>Y(t,e?["query","all",e]:["query","all"]),totalCirculatingSupply:t=>Y(t,["query","totalCirculatingSupply"]),totalCount:t=>Y(t,["query","totalCount"]),owned:{all:(t,e)=>Y(t,["query","owned","all",e])}},drop:{getAllUnclaimed:(t,e)=>Y(t,e?["getAllUnclaimed",e]:["getAllUnclaimed"]),getAllClaimed:(t,e)=>Y(t,e?["getAllClaimed",e]:["getAllClaimed"]),totalUnclaimedSupply:t=>Y(t,["totalUnclaimedSupply"]),totalClaimedSupply:t=>Y(t,["totalClaimedSupply"]),revealer:{getBatchesToReveal:(t,e)=>Y(t,e?["getBatchesToReveal",e]:["getBatchesToReveal"])}}},token:{totalSupply:t=>Y(t,["totalSupply"]),decimals:t=>Y(t,["decimals"]),balanceOf:(t,e)=>Y(t,["balanceOf",{walletAddress:e}])},marketplace:{getListing:(t,e)=>Y(t,["getListing",{listingId:e}]),getAllListings:(t,e)=>Y(t,e?["getAllListings",e]:["getAllListings"]),getTotalCount:t=>Y(t,["getTotalCount"]),getActiveListings:(t,e)=>Y(t,e?["getActiveListings",e]:["getActiveListings"]),getBidBufferBps:t=>Y(t,["getBidBufferBps"]),auction:{getWinningBid:(t,e)=>Y(t,["auction","getWinningBid",{listingId:e}]),getWinner:(t,e)=>Y(t,["auction","getWinner",{listingId:e}])},directListings:{getAll:(t,e)=>Y(t,e?["getAllDirectListings",e]:["getAllDirectListings"]),getAllValid:(t,e)=>Y(t,e?["getAllValidDirectListings",e]:["getAllValidDirectListings"]),getListing:(t,e)=>Y(t,["getListing",{listingId:e}]),getTotalCount:t=>Y(t,["getTotalDirectListingsCount"])},englishAuctions:{getAll:(t,e)=>Y(t,e?["getAllEnglishAuctions",e]:["getAllEnglishAuctions"]),getAllValid:(t,e)=>Y(t,e?["getAllEValidEnglishAuctions",e]:["getAllEValidEnglishAuctions"]),getAuction:(t,e)=>Y(t,["getAuction",{auctionId:e}]),getWinningBid:(t,e)=>Y(t,["getWinningBid",{auctionId:e}]),getTotalCount:t=>Y(t,["getTotalEnglishAuctionsCount"])}}},extensions:{claimConditions:{getActive:(t,e,n)=>Y(t,e?["claimConditions","getActive",{tokenId:e},n]:["claimConditions","getActive",n]),getAll:(t,e,n)=>Y(t,e?["claimConditions","getAll",{tokenId:e},n]:["claimConditions","getAll",n]),getClaimerProofs:(t,e)=>Y(t,e?["claimConditions","getClaimerProofs",{tokenId:e}]:["claimConditions","getClaimerProofs"]),getClaimIneligibilityReasons:(t,e,n)=>Y(t,n?["claimConditions","getIneligibilityReasons",{tokenId:n},e]:["claimConditions","getIneligibilityReasons",e]),useActiveClaimConditionForWallet:(t,e,n)=>Y(t,n?["claimConditions","useActiveClaimConditionForWallet",{tokenId:n,walletAddress:e},,]:["claimConditions","getIneligibilityReasons",{walletAddress:e}])},sales:{getRecipient:t=>Y(t,["sales"])},royalties:{getDefaultRoyaltyInfo:t=>Y(t,["royalties"])},platformFees:{get:t=>Y(t,["platformFees"])},metadata:{get:t=>Y(t,["metadata"])},roles:{getAll:t=>Y(t,["roles"]),get:(t,e)=>Y(t,["roles",{role:e}])}}};function sI(){return cC().chains}function GK(t){const e=ur(),{wallet:n,address:a,chainId:r}=aI(),i=C.exports.useMemo(()=>Wt.wallet.balance(r||-1,a,t),[r,t,a]);return D0(i,()=>n==null?void 0:n.balance(t),{enabled:!!n&&!!e&&!!r,retry:!0,keepPreviousData:!1})}function ur(){return aI().address}function mr(){return aI().chainId}function ZK(){const t=mr(),e=sI(),n=C.exports.useMemo(()=>e.find(r=>r.chainId===t),[t,e]),a=C.exports.useMemo(()=>{if(!n)return yt.find(r=>r.chainId===t)},[t,n]);return n||a}function r2(t,e,n){const a=n2(),r={...n,enabled:!!(a&&(n==null?void 0:n.enabled))};return D0(a2(t,a),e,r)}async function gC(t,e){if(!t||!e)return null;try{return await e.resolveContractType(t)}catch(n){return console.error("failed to resolve contract type",n),"custom"}}function XK(t){const e=da();return r2(Wt.contract.type(t),()=>gC(t,e),{cacheTime:1/0,staleTime:1/0,enabled:!!t&&!!e})}const k5={cacheKey:(t,e)=>a2(Wt.contract.type(t),e),useQuery:XK,fetchQuery:gC};function bC(t,e){if(!t||!e)return null;try{return e.getPublisher().fetchCompilerMetadataFromAddress(t)}catch{return null}}function JK(t){const e=da();return r2(Wt.contract.compilerMetadata(t),()=>bC(t,e),{cacheTime:1/0,staleTime:1/0,enabled:!!t&&!!e})}const E5={cacheKey:(t,e)=>a2(Wt.contract.compilerMetadata(t),e),useQuery:JK,fetchQuery:bC};function eO(t,e){const n=da(),a=N0(),r=n2(),i=ur(),s=mr(),o=n==null?void 0:n._constructedAt,c=r2(LK(["contract-instance",t,{wallet:i,walletChainId:s,sdkTimestamp:o}]),async()=>{var p;if(m1(t,"contract address is required"),P(n,"SDK not initialized"),P(r,"active chain id is required"),!e||e==="custom"){const d=kK(t);if(d)return n.getContract(t,d);const u=await a.fetchQuery(k5.cacheKey(t,r),()=>k5.fetchQuery(t,n),{cacheTime:1/0,staleTime:1/0});let m;return u==="custom"&&(m=(p=await a.fetchQuery(E5.cacheKey(t,r),()=>E5.fetchQuery(t,n),{cacheTime:1/0,staleTime:1/0,retry:0}))==null?void 0:p.abi),P(u,"failed to resolve contract type"),n.getContract(t,m||u)}return n.getContract(t,e)},{keepPreviousData:!0,cacheTime:1/0,staleTime:1/0,enabled:!!t&&!!n&&!!r,retry:0});return{...c,data:c.data,contract:c.data}}function gq(t,e,n,a){const r=t==null?void 0:t.getAddress();return r2(Wt.contract.call(r,e,n,a),()=>(m1(t,"contract must be defined"),m1(e,"function name must be provided"),t.call(e,n,a)),{enabled:!!t&&!!e})}const oI="auth_token_storage_key";function tO(){const t=N0(),e=t2(),n=dr(),a=C1({mutationFn:async r=>{var c;P(e,"Please specify an authConfig in the ThirdwebProvider"),P(n,"You need a connected wallet to login."),P(e.authUrl,"Please specify an authUrl in the authConfig.");const i=await nO(n,{...e,...r||{}}),s=await fetch(`${e.authUrl}/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({payload:i}),credentials:"include"});if(!s.ok){const p=await s.json();throw p.error?new Error(p.error):new Error(`Login request failed with status code ${s.status}`)}const{token:o}=await s.json();return await((c=e.secureStorage)==null?void 0:c.setItem(oI,o)),t.invalidateQueries(Wt.auth.user()),o}});return{login:r=>a.mutateAsync(r),isLoading:a.isLoading}}async function nO(t,e){let n=e==null?void 0:e.chainId;if(!n&&t.getChainId)try{n=(await t.getChainId()).toString()}catch{}P(e==null?void 0:e.domain,"Please specify a domain to login with.");const a=(e==null?void 0:e.nonce)||Math.floor(Math.random()*1e9).toString(),r={type:t.type,domain:e.domain,address:await t.getAddress(),statement:(e==null?void 0:e.statement)||"Please ensure that the domain above matches the URL of the current website.",version:(e==null?void 0:e.version)||"1",uri:e==null?void 0:e.uri,chain_id:n,nonce:(e==null?void 0:e.nonce)||a,issued_at:new Date().toISOString(),expiration_time:new Date((e==null?void 0:e.expirationTime)||Date.now()+1e3*60*5).toISOString(),invalid_before:new Date((e==null?void 0:e.invalidBefore)||Date.now()).toISOString(),resources:e==null?void 0:e.resources},i=await t.signMessage(aO(r));return{payload:r,signature:i}}function aO(t){const e=t.type==="evm"?"Ethereum":"Solana";let a=[`${t.domain} wants you to sign in with your ${e} account:`,t.address].join(`
`);a=[a,t.statement].join(`

`),t.statement&&(a+=`
`);const r=[];if(t.uri){const d=`URI: ${t.uri}`;r.push(d)}const i=`Version: ${t.version}`;if(r.push(i),t.chain_id){const d="Chain ID: "+t.chain_id||"1";r.push(d)}const s=`Nonce: ${t.nonce}`;r.push(s);const o=`Issued At: ${t.issued_at}`;r.push(o);const c=`Expiration Time: ${t.expiration_time}`;if(r.push(c),t.invalid_before){const d=`Not Before: ${t.invalid_before}`;r.push(d)}t.resources&&r.push(["Resources:",...t.resources.map(d=>`- ${d}`)].join(`
`));const p=r.join(`
`);return[a,p].join(`
`)}function rO(){const t=N0(),e=t2(),n=C1({mutationFn:async()=>{var a;P(e,"Please specify an authConfig in the ThirdwebProvider"),P(e.authUrl,"Please specify an authUrl in the authConfig."),await fetch(`${e.authUrl}/logout`,{method:"POST",credentials:"include"}),(a=e.secureStorage)==null||a.removeItem(oI),t.invalidateQueries(Wt.auth.user())}});return{logout:n.mutateAsync,isLoading:n.isLoading}}function iO(){const t=t2(),{data:e,isLoading:n}=D0(Wt.auth.user(),async()=>{var s;P(t,"Please specify an authConfig in the ThirdwebProvider"),P(t.authUrl,"Please specify an authUrl in the authConfig.");const a=await((s=t.secureStorage)==null?void 0:s.getItem(oI)),r={credentials:"include",...a?{headers:{Authorization:`Bearer ${a}`}}:{}};return await(await fetch(`${t.authUrl}/user`,r)).json()},{enabled:!!t});return{user:e,isLoggedIn:!!e,isLoading:n}}function sO(){const t=da();return t==null?void 0:t.storage}function oO(){const t=mr(),e=n2();return!e||e===-1||!t?!1:e!==t}const hr={overlay:{subdued:"rgba(0, 0, 0, 0.74)"},bg:{base:le.mauve1,baseHover:le.mauve2,elevated:le.mauve3,elevatedHover:le.mauve4,highlighted:le.mauve5,inverted:le.mauve12,invertedFocused:le.mauve7,danger:qt.tomato12},border:{base:le.mauve3,elevated:le.mauve4},badge:{secondary:le.mauve6},text:{neutral:le.mauve12,inverted:le.mauve1,secondary:le.mauve9,danger:qt.tomato9},icon:{secondary:le.mauve11,primary:le.mauve12,inverted:le.mauve1,danger:qt.tomato9,success:Y5.green7,link:zn.blue9},link:{primary:zn.blue9,primaryHover:le.mauve12},input:{bg:le.mauve3,bgHover:le.mauve5,outline:le.mauve5,focusRing:zn.blue9,errorRing:qt.tomato9},tooltip:{bg:"black",text:"white"}},yr={overlay:{subdued:"rgba(0, 0, 0, 0.4)"},bg:{base:ye.mauve1,baseHover:ye.mauve2,elevated:ye.mauve3,elevatedHover:ye.mauve4,highlighted:ye.mauve5,inverted:ye.mauve12,invertedFocused:ye.mauve7,danger:qt.tomato4},border:{base:ye.mauve6,elevated:ye.mauve7},badge:{secondary:ye.mauve1},text:{neutral:ye.mauve12,inverted:ye.mauve1,secondary:ye.mauve10,danger:qt.tomato9},icon:{secondary:ye.mauve10,primary:ye.mauve12,inverted:ye.mauve1,danger:qt.tomato9,success:Y5.green9,link:zn.blue11},link:{primary:zn.blue11,primaryHover:ye.mauve12},input:{bg:ye.mauve3,bgHover:le.mauve5,outline:ye.mauve7,focusRing:zn.blue11,errorRing:qt.tomato10},tooltip:{bg:"black",text:"white"}},z={xs:"12px",sm:"14px",md:"16px",lg:"20px",xl:"24px"},D={xxs:"6px",xs:"8px",sm:"12px",md:"16px",lg:"24px",xl:"32px",xxl:"48px"},re={sm:"6px",md:"8px",lg:"12px",xl:"20px",xxl:"32px"},O={xs:"12",sm:"16",md:"24",lg:"32",xl:"48"},Ye={mobile:"@media (max-width: 640px)"},i2={sm:"0 1px 2px 0 rgb(0 0 0 / 0.05)",md:"0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)",lg:"0 10px 15px -3px rgb(0 0 0 / 0.07), 0 4px 6px -4px rgb(0 0 0 / 0.1)",xl:"0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)"},Ht=t=>{const e=QC();return h(lO,{style:{width:O[t.size],height:O[t.size]},viewBox:"0 0 50 50",children:h(dO,{cx:"25",cy:"25",r:"20",fill:"none",stroke:e.icon[t.color||"primary"],strokeWidth:"4"})})},cO=_t`
 0% {
    stroke-dasharray: 1, 150;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -35;
  }
  100% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -124;
  }
`,pO=_t`
100% {
    transform: rotate(360deg);
  }
`,lO=_.svg`
  animation: ${pO} 2s linear infinite;
  width: 1em;
  height: 1em;
`,dO=_.circle`
  stroke-linecap: round;
  animation: ${cO} 1.5s ease-in-out infinite;
`,q=t=>{let{y:e}=t;return h("div",{style:{height:D[e]}})},jt=_.button`
  all: unset;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: ${re.md};
  padding: ${D.sm} ${D.sm};
  font-size: ${z.md};
  font-weight: 500;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
  line-height: 1;
  flex-shrink: 0;

  &:focus {
    box-shadow: 0 0 0 3px
      ${t=>{switch(t.variant){case"inverted":return t.theme.bg.invertedFocused;case"secondary":return t.theme.bg.highlighted;case"link":return"none";case"danger":return t.theme.text.danger}}};
  }

  box-shadow: ${t=>{switch(t.variant){case"danger":return`0 0 0 2px ${t.theme.text.danger}`;case"link":return"none";default:return"none"}}};

  background: ${t=>{switch(t.variant){case"inverted":return t.theme.bg.inverted;case"secondary":return t.theme.bg.elevated;case"link":return"transparent";case"danger":return"none"}}};
  color: ${t=>{switch(t.variant){case"inverted":return t.theme.text.inverted;case"secondary":return t.theme.text.neutral;case"link":return t.theme.link.primary;case"danger":return t.theme.text.danger}}};

  ${t=>{if(t.variant==="link")return`
      padding: 0;
      &:hover {
        color: ${t.theme.text.neutral};
      }`}}

  cursor: pointer;

  /* pressed effect */
  &:active {
    transform: translateY(1px);
  }

  &[disabled] {
    cursor: not-allowed;
  }
`,s2=_.button`
  all: unset;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: ${re.sm};
  -webkit-tap-highlight-color: transparent;
  color: ${t=>{switch(t.variant){case"neutral":return t.theme.text.neutral;case"secondary":return t.theme.text.secondary}}};
  padding: 2px;
  transition: background 0.2s ease, color 0.2s ease;
  &:hover {
    background: ${t=>t.theme.bg.elevated};
    color: ${t=>t.theme.text.neutral};
  }
`,TC=_.button`
  all: unset;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: ${re.sm};
  padding: ${D.sm};
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  color: ${t=>t.theme.text.secondary};
  &:hover {
    color: ${t=>t.theme.text.neutral};
  }
  &[disabled] {
    cursor: not-allowed;
  }
`,wC=_.label`
  font-size: ${z.sm};
  color: ${t=>t.theme.text.neutral};
  display: block;
`,IC=_.input`
  font-size: ${z.md};
  display: block;
  padding: ${D.sm};
  box-sizing: border-box;
  width: 100%;
  outline: none;
  border: none;
  border-radius: 6px;
  color: ${t=>t.theme.text.neutral};
  -webkit-appearance: none;
  appearance: none;
  background: ${t=>{switch(t.variant){case"secondary":return t.theme.bg.elevated;default:return"transparent"}}};

  &::placeholder {
    color: ${t=>t.theme.text.secondary};
  }

  box-shadow: 0 0 0 1.5px
    ${t=>{switch(t.variant){case"outline":return t.theme.input.outline;case"transparent":return"transparent";case"secondary":return t.theme.bg.elevated}}};

  /* when browser auto-fills the input  */
  &:-webkit-autofill {
    -webkit-text-fill-color: ${t=>t.theme.text.neutral};
    -webkit-box-shadow: 0 0 0px 1000px ${t=>t.theme.bg.elevated} inset !important;
    box-shadow: 0 0 0px 1000px ${t=>t.theme.bg.elevated} inset !important;
    transition: background-color 5000s ease-in-out 0s;
  }

  &:-webkit-autofill:focus {
    -webkit-box-shadow: 0 0 0px 1000px ${t=>t.theme.bg.elevated} inset,
      0 0 0 2px ${t=>t.theme.input.focusRing} !important;
    box-shadow: 0 0 0px 1000px ${t=>t.theme.bg.elevated} inset,
      0 0 0 2px ${t=>t.theme.input.focusRing} !important;
  }

  &:focus {
    box-shadow: 0 0 0 2px ${t=>t.theme.input.focusRing};
  }

  /* show overflow ellipsis for long text - but not if it's a type="password"  */
  &:not([type="password"]) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  &[data-error="true"] {
    box-shadow: 0 0 0 2px ${t=>t.theme.input.errorRing} !important;
  }

  &[disabled] {
    cursor: not-allowed;
  }
`,uO=_.div`
  display: flex;
  border-radius: ${re.sm};
  box-shadow: 0 0 0px 1.5px ${t=>t.theme.input.outline};

  /* show focus ring on container instead of input  */
  &:focus-within {
    box-shadow: 0 0 0px 2px ${t=>t.theme.input.focusRing};
  }

  input:focus {
    box-shadow: none;
  }

  /* show error ring on container instead of input  */
  &[data-error="true"] {
    box-shadow: 0 0 0px 2px ${t=>t.theme.input.errorRing};
  }
`,y1=_.p`
  all: unset;
  font-size: ${z.sm};
  display: block;
  color: ${t=>t.theme.input.errorRing};
  line-height: 1.5;
`,mO=_.div`
  display: flex;
  justify-content: flex-end;
  gap: ${D.sm};
`,bn=t=>A("div",{style:{display:"flex",flexDirection:t.flexDirection,justifyContent:t.justifyContent,alignItems:t.alignItems,gap:t.gap?D[t.gap]:void 0,...t.style||{}},children:[" ",t.children]}),hO=t=>A("div",{children:[h(wC,{htmlFor:t.id,children:t.label}),h(q,{y:"sm"}),A(uO,{"data-error":!!t.error,children:[h(IC,{variant:"transparent",required:t.required,name:t.name,autoComplete:t.autocomplete,id:t.id,onChange:e=>t.onChange(e.target.value),value:t.value,type:t.noSave?"text":t.type,style:t.type==="password"&&t.noSave?{WebkitTextSecurity:"disc"}:void 0}),h(TC,{type:"button",onClick:t.right.onClick,children:t.right.icon})]}),t.error&&A(ve,{children:[h(q,{y:"sm"}),A(y1,{children:[" ",t.error," "]})]})]}),sn=_(z5)`
  margin: 0;
  font-weight: 600;
  font-size: ${z.lg};
  color: ${t=>t.theme.text.neutral};
  text-align: left;
  ${Ye.mobile} {
    text-align: ${t=>t.centerOnMobile?"center":"left"};
  }
`,Mn=_.p`
  all: unset;
  display: block;
  font-size: ${t=>t.sm?z.sm:z.md};
  color: ${t=>t.theme.text.secondary};
  line-height: 1.5;
  ${Ye.mobile} {
    text-align: ${t=>t.centerOnMobile?"center":"left"};
  }
`,cI=t=>h(s2,{variant:"secondary",onClick:t.onClick,style:t.style,type:"button",children:h(sk,{style:{width:O.md,height:O.md}})}),fr=_.a`
  all: unset;
  cursor: pointer;
  color: ${t=>t.theme.link.primary};
  font-size: ${t=>t.md?z.md:z.sm};
  text-decoration: none;
  display: block;
  ${Ye.mobile} {
    text-align: center;
  }
  &:hover {
    color: ${t=>t.theme.link.primaryHover};
    text-decoration: none;
  }
`;function yO(t){return $k(t)}function fO(){const t=pI();return t?t.toLowerCase().includes("android"):!1}function gO(){const t=pI();return t?t.toLowerCase().includes("ios")||t.toLowerCase().includes("mac")&&navigator.maxTouchPoints>1:!1}function pI(){const t=yO();return t!=null&&t.os?t.os:void 0}function En(){return pI()?fO()||gO():!1}const He=t=>h("img",{width:t.width,height:t.height,src:e2(t.src),alt:t.alt||"",loading:t.loading,decoding:"async",style:{height:t.height+"px",width:t.width+"px"},className:t.className}),vC=t=>A(ve,{children:[h(cI,{onClick:t.onBack}),h(TO,{children:h(He,{src:t.walletIconURL,width:O.xl,height:O.xl})}),h(q,{y:"lg"}),A(bO,{children:[h(sn,{children:"Connecting your wallet"}),h(Ht,{size:"md",color:"link"})]}),h(q,{y:"md"}),A(wO,{centerOnMobile:!0,children:["Connect your wallet through the ",t.walletName," ",En()?"application":"pop-up"]}),h(q,{y:"xl"}),A(fr,{target:"_blank",href:t.supportLink,children:["Having troubles connecting to ",t.walletName,"?"]})]}),bO=_.div`
  display: flex;
  align-items: center;
  gap: ${D.md};
  ${Ye.mobile} {
    flex-direction: column;
    align-items: center;
    gap: ${D.xl};
  }
`,TO=_.div`
  display: flex;
  margin-top: ${D.lg};
  ${Ye.mobile} {
    justify-content: center;
    margin-top: 0;
  }
`,wO=_(Mn)`
  ${Ye.mobile} {
    padding: 0 ${D.lg};
  }
`,lI=_t`
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
`,IO=_.div`
  animation: ${lI} 0.15s ease-in;
`,f1=t=>h(CO,{gradient:t.gradient,style:{height:t.height,width:t.width||"auto"}}),vO=_t`
0% {
    background-color: var(--skeleton-c-1);
  }
  100% {
    background-color: var(--skeleton-c-2);
  }
`,CO=_.div`
  background-size: 200% 200%;
  --skeleton-c-1: ${t=>{var e;return t.theme.bg[((e=t.gradient)==null?void 0:e.c1)||"elevated"]}};
  --skeleton-c-2: ${t=>{var e;return t.theme.bg[((e=t.gradient)==null?void 0:e.c2)||"highlighted"]}};
  animation: ${vO} 500ms ease-in-out infinite alternate;
  border-radius: ${re.sm};
`,CC=t=>A("div",{style:{position:"relative",display:"flex",justifyContent:"center",alignItems:"center"},children:[t.qrCodeUri?h(IO,{children:h(EO,{children:h(xO,{value:t.qrCodeUri})})}):h(RO,{height:"200px",width:"200px"}),t.QRIcon&&h(kO,{children:t.QRIcon})]}),kO=_.div`
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: white;
  border-radius: ${re.md};
  display: flex;
  justify-content: center;
  align-content: center;
  padding: 4px;
`,EO=_.div`
  background: white;
  padding: ${D.xxs};
  display: flex;
  justify-content: center;
  align-content: center;
  border-radius: ${re.md};
  box-shadow: ${i2.md};
`,xO=_(Yk)`
  width: 200px;
  height: 200px;
  border-radius: ${re.md};

  ${Ye.mobile} {
    width: 150px;
    height: 150px;
  }
`,RO=_(f1)`
  width: 200px;
  height: 200px;
  border-radius: ${re.md};
  ${Ye.mobile} {
    width: 150px;
    height: 150px;
  }
`,x5="ipfs://Qmcyb1akWqyu8W4DgVWzZUozrCkfES8ow36jNhjs7arwvc/AppleGray.svg",AO="ipfs://QmPu4UKsektZixeZN4ixi8Ji9KbMuwcRKAp3JRK4jrcaMK/Chrome.svg",R5="ipfs://QmTSu87iXWpfcCgy15DX3Mgp1Rqb8zFAwXdbLNh6WxmpC4/GooglePlay.svg",dI=t=>{const[e,n]=C.exports.useState("base"),a=e==="android-scan"||e==="ios-scan";return A(ve,{children:[h(cI,{style:a?{position:"absolute",top:D.lg,left:D.lg}:void 0,onClick:()=>{e==="base"?t.onBack():n("base")}}),e==="android-scan"&&t.googlePlayStoreLink&&h(A5,{platformIcon:h(He,{src:R5,width:O.md,height:O.md}),url:t.googlePlayStoreLink,platform:"Google Play",walletName:t.walletName,walletIconURL:t.walletIconURL}),e==="ios-scan"&&t.appleStoreLink&&h(A5,{platformIcon:h(He,{width:O.md,height:O.md,src:x5}),url:t.appleStoreLink,platform:"App Store",walletName:t.walletName,walletIconURL:t.walletIconURL}),e==="base"&&A(ve,{children:[h(q,{y:"lg"}),t.header||A(ve,{children:[h(He,{src:t.walletIconURL,width:O.xl,height:O.xl,alt:""}),h(q,{y:"lg"}),A(sn,{children:["Get started with ",t.walletName]}),h(q,{y:"sm"}),h(Mn,{children:"Download your preferred option and refresh this page"})]}),h(q,{y:"xl"}),A(bn,{flexDirection:"column",gap:"xs",children:[t.chromeExtensionLink&&A(N2,{onClick:()=>{window.open(t.chromeExtensionLink,"_blank")},children:[h(He,{width:O.lg,height:O.lg,src:AO}),h("span",{children:"Download Chrome Extension"})]}),t.googlePlayStoreLink&&A(N2,{as:"button",onClick:()=>{En()?window.open(t.googlePlayStoreLink,"_blank"):n("android-scan")},children:[h(He,{width:O.lg,height:O.lg,src:R5}),h("span",{children:"Download on Google Play"})]}),t.appleStoreLink&&A(N2,{as:"button",onClick:()=>{En()?window.open(t.appleStoreLink,"_blank"):n("ios-scan")},children:[h(He,{width:O.lg,height:O.lg,src:x5}),h("span",{children:"Download on App Store"})]})]})]}),a&&A(ve,{children:[h(q,{y:"xl"}),A(fr,{as:"button",onClick:t.onBack,style:{textAlign:"center",display:"block",width:"100%"},children:["I","'","ve finished setting up my ",t.walletName," on mobile"]})]}),!a&&t.footer]})},A5=t=>A("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",textAlign:"center"},children:[h(CC,{qrCodeUri:t.url,QRIcon:h(He,{src:t.walletIconURL,width:O.lg,height:O.lg})}),h(q,{y:"xl"}),A("div",{style:{display:"flex",gap:D.sm,alignItems:"center"},children:[t.platformIcon,A(sn,{children:["Install ",t.walletName," on ",t.platform]})]}),h(q,{y:"lg"}),A(Mn,{children:["Scan QR with your phone to download ",h("br",{})," ",t.walletName," for"," ",t.platform]})]}),N2=_.button`
  all: unset;
  text-decoration: none;
  padding: ${D.sm} ${D.md};
  border-radius: ${re.sm};
  display: flex;
  align-items: center;
  gap: ${D.md};
  cursor: pointer;
  box-sizing: border-box;
  width: 100%;
  color: ${t=>t.theme.text.neutral};
  background: ${t=>t.theme.bg.elevated};
  transition: 100ms ease;
  &:hover {
    background: ${t=>t.theme.bg.highlighted};
    text-decoration: none;
    color: ${t=>t.theme.text.neutral};
  }
`,kC=t=>{const e=t.walletName.toLowerCase().includes("wallet")?t.walletName:`${t.walletName} wallet`;return A(ve,{children:[!t.hideBackButton&&h(cI,{onClick:t.onBack,style:{position:"absolute",zIndex:10,left:D.lg,top:D.lg}}),A("div",{style:{textAlign:"center"},children:[h(CC,{qrCodeUri:t.qrCodeUri,QRIcon:h(He,{width:O.lg,height:O.lg,src:t.walletIconURL})}),h(q,{y:"xl"}),A(sn,{style:{textAlign:"center"},children:["Scan with ",e," "]}),h(q,{y:"md"}),A(Mn,{children:["Scan this QR code with your phone ",h("br",{}),"camera or ",e," to connect"]}),h(q,{y:"md"}),h("div",{style:{display:"flex",justifyContent:"center"},children:h(Ht,{size:"md",color:"link"})}),h(q,{y:"xl"}),A(PO,{onClick:t.onGetStarted,children:["Don't"," have ",e,"?"]})]})]})},PO=_.button`
  all: unset;
  color: ${t=>t.theme.link.primary};
  font-size: ${z.sm};
  cursor: pointer;
  &:hover {
    color: ${t=>t.theme.link.primaryHover};
  }
`,MO=t=>{let{walletConfig:e,onConnected:n,onGetStarted:a,onBack:r,hideBackButton:i}=t;const s=yC(),[o,c]=C.exports.useState(void 0),{setConnectedWallet:p,chainToConnect:d,setConnectionStatus:u}=et(),m=C.exports.useRef(!1);return C.exports.useEffect(()=>{m.current||(m.current=!0,(async()=>{const f=s(e),g=await f.getQrUrl();c(g||void 0),u("connecting");try{await f.connect({chainId:d==null?void 0:d.chainId}),p(f),n()}catch{u("disconnected")}})())},[s,n,e,d==null?void 0:d.chainId,p,u]),h(kC,{onBack:r,onGetStarted:a,qrCodeUri:o,walletName:e.meta.name,walletIconURL:e.meta.iconURL,hideBackButton:i})},_O=t=>{var d,u,m;let{walletConfig:e,close:n,goBack:a,supportedWallets:r}=t;const i=rI(),{meta:s}=e,[o,c]=C.exports.useState("loading"),p=C.exports.useRef(!1);return C.exports.useEffect(()=>{if(o!=="loading"||p.current)return;const f=e.isInstalled?e.isInstalled():!1;(async()=>{if(f)try{p.current=!0,c("connecting"),await i(e),n()}catch(g){a(),console.error(g)}else En()?i(e):c("scanning")})()},[o,e,n,i,a]),o==="connecting"||o==="loading"?h(vC,{onBack:a,walletName:s.name,walletIconURL:s.iconURL,supportLink:"https://help.coinbase.com/en/wallet/other-topics/troubleshooting-and-tips"}):o==="get-started"?h(dI,{walletIconURL:s.iconURL,walletName:s.name,chromeExtensionLink:(d=s.urls)==null?void 0:d.chrome,googlePlayStoreLink:(u=s.urls)==null?void 0:u.android,appleStoreLink:(m=s.urls)==null?void 0:m.ios,onBack:a}):o==="scanning"?h(MO,{onBack:a,onConnected:n,onGetStarted:()=>c("get-started"),walletConfig:e,hideBackButton:r.length===1}):null},SO=()=>({id:Xn.id,meta:{name:"Coinbase Wallet",iconURL:"ipfs://QmcJBHopbwfJcLqJpX2xEufSS84aLbF7bHavYhaXUcrLaH/coinbase.svg",urls:{chrome:"https://chrome.google.com/webstore/detail/coinbase-wallet-extension/hnfanknocfeofbddgcijnmhnfnkdnaad",android:"https://play.google.com/store/apps/details?id=org.toshi",ios:"https://apps.apple.com/us/app/coinbase-wallet-nfts-crypto/id1278383455"}},create(t){return new Xn({...t,headlessMode:!0})},connectUI:_O,isInstalled(){var t,e,n;return ar(globalThis.window)&&(((t=globalThis.window.ethereum)==null?void 0:t.isCoinbaseWallet)||((n=(e=globalThis.window.ethereum)==null?void 0:e.providers)==null?void 0:n.some(a=>a.isCoinbaseWallet)))||!1}}),WO=t=>{let{onBack:e,onConnected:n,onGetStarted:a,walletConfig:r}=t;const i=yC(),[s,o]=C.exports.useState(),{setConnectedWallet:c,chainToConnect:p}=et(),d=C.exports.useRef(!1);return C.exports.useEffect(()=>{if(d.current)return;d.current=!0;const u=i(r);u.connectWithQrCode({chainId:p==null?void 0:p.chainId,onQrCodeUri(m){o(m)},onConnected(){c(u),n()}})},[i,c,p,n,r]),h(kC,{onBack:e,onGetStarted:a,qrCodeUri:s,walletName:r.meta.name,walletIconURL:r.meta.iconURL})},BO=t=>{var c,p,d;const[e,n]=C.exports.useState("connecting"),{walletConfig:a,close:r}=t,i=rI(),{goBack:s}=t,o=C.exports.useRef(!1);return C.exports.useEffect(()=>{if(o.current)return;const u=a.isInstalled?a.isInstalled():!1;(async()=>{if(u)try{o.current=!0,n("connecting"),await i(a),r()}catch{s()}else En()?window.open(`https://metamask.app.link/dapp/${window.location.toString()}`):n("scanning")})()},[a,r,i,s]),e==="connecting"?h(vC,{onBack:t.goBack,walletName:a.meta.name,walletIconURL:a.meta.iconURL,supportLink:"https://support.metamask.io/hc/en-us/articles/4406430256539-User-Guide-Troubleshooting"}):e==="get-started"?h(dI,{walletIconURL:a.meta.iconURL,walletName:a.meta.name,chromeExtensionLink:(c=a.meta.urls)==null?void 0:c.chrome,googlePlayStoreLink:(p=a.meta.urls)==null?void 0:p.android,appleStoreLink:(d=a.meta.urls)==null?void 0:d.ios,onBack:t.goBack}):e==="scanning"?h(WO,{onBack:t.goBack,onConnected:r,onGetStarted:()=>{n("get-started")},walletConfig:a}):null},NO=()=>({id:hn.id,meta:hn.meta,create:t=>new hn({...t,qrcode:!1}),connectUI:BO,isInstalled(){return ar(globalThis.window)?globalThis.window.ethereum.isMetaMask:!1}}),DO=()=>({id:yn.id,meta:yn.meta,create(t){return new yn({...t,qrcode:!0})}}),LO=[NO(),SO(),DO()],EC=C.exports.createContext(!1),xC=C.exports.createContext(void 0),g1=C.exports.createContext({title:"",theme:"dark",data:void 0}),o2=C.exports.createContext(()=>{}),UO=t=>{const[e,n]=C.exports.useState(!1),[a,r]=C.exports.useState({title:"Choose your wallet",theme:t.theme||"dark",data:void 0});return h(EC.Provider,{value:e,children:h(xC.Provider,{value:n,children:h(g1.Provider,{value:a,children:h(o2.Provider,{value:r,children:t.children})})})})},FO=()=>C.exports.useContext(EC),RC=()=>{const t=C.exports.useContext(xC);if(t===void 0)throw new Error("useSetWalletModalOpen must be used within a ThirdwebProvider");return t},HO=t=>{const e=t.walletConfigs.find(r=>r.id===Qe.localWallet),n=t.walletConfigs.filter(r=>r.id!==Qe.localWallet),a=!e&&!!t.walletConfigs[0].meta.urls;return A(ve,{children:[A(sn,{children:[" ",t.title," "]}),h(q,{y:"xl"}),h(KO,{walletConfigs:n,selectWallet:t.selectWallet}),e&&A(ve,{children:[h(q,{y:"xl"}),h(bn,{justifyContent:"center",children:h(jt,{variant:"link",onClick:()=>{t.selectWallet(e)},children:"Continue as guest"})})]}),a&&A(ve,{children:[h(q,{y:"xl"}),h(fr,{as:"button",onClick:t.onGetStarted,style:{display:"block",width:"100%",textAlign:"center"},children:"Need help getting started?"})]})]})},KO=t=>{const e=C.exports.useContext(o2),n=t.walletConfigs.sort((a,r)=>{const i=a.isInstalled?a.isInstalled():!1,s=r.isInstalled?r.isInstalled():!1;return i&&!s?-1:!i&&s?1:0}).sort((a,r)=>a.selectUI&&!r.selectUI?-1:!a.selectUI&&r.selectUI?1:0);return h(OO,{children:n.map(a=>{const r=a.isInstalled?a.isInstalled():!1;return h("li",{children:a.selectUI?h(a.selectUI,{supportedWallets:t.walletConfigs,onSelect:i=>{t.selectWallet(a),e(s=>({...s,data:i}))},walletConfig:a}):A($O,{type:"button",onClick:()=>{t.selectWallet(a)},children:[h(He,{src:a.meta.iconURL,width:O.lg,height:O.lg,loading:"eager"}),h(zO,{children:a.meta.name}),r&&h(YO,{children:" Installed "})]})},a.id)})})},OO=_.ul`
  all: unset;
  list-style-type: none;
  display: flex;
  flex-direction: column;
  gap: ${D.xs};
  box-sizing: border-box;
`,$O=_.button`
  all: unset;
  padding: ${D.sm} ${D.md};
  border-radius: ${re.sm};
  display: flex;
  align-items: center;
  gap: ${D.md};
  cursor: pointer;
  box-sizing: border-box;
  width: 100%;
  color: ${t=>t.theme.text.neutral};
  background: ${t=>t.theme.bg.elevated};
  transition: 100ms ease;
  &:hover {
    background: ${t=>t.theme.bg.highlighted};
  }
`,YO=_.span`
  padding: ${D.xxs} ${D.xs};
  font-size: ${z.xs};
  background-color: ${t=>t.theme.badge.secondary};
  border-radius: ${re.lg};
  margin-left: auto;
`,zO=_.span`
  font-size: ${z.md};
  font-weight: 500;
`;function qO(){const t=dr();if(!t)return!1;const e=t.walletId;return e===Qe.localWallet||e===Qe.paper||e===Qe.magicLink}const QO=t=>{let{close:e,walletConfig:n,open:a,supportedWallets:r}=t;const i=rI(),s=C.exports.useRef(!1),o=r.length===1;return C.exports.useEffect(()=>{s.current||(s.current=!0,(async()=>{e();try{await i(n)}catch(c){o||a(),console.error(c)}})())},[n,i,e,a,o]),null};_.div`
  display: flex;
  align-items: center;
  color: ${t=>t.theme.text.secondary};
  font-size: ${z.sm};
  &::before,
  &::after {
    content: "";
    flex: 1;
    border-bottom: 1px solid ${t=>t.theme.bg.elevated};
  }

  span {
    margin: 0 1rem;
  }
`;_(TC)`
  background: ${t=>t.theme.bg.highlighted};
  border-radius: 50%;
  padding: ${D.xxs};
  color: ${t=>t.theme.text.neutral};
  position: absolute;
  top: 50%;
  right: ${D.sm};
  transform: translateY(-50%);
  &:hover {
    color: ${t=>t.theme.text.neutral};
  }
`;function b1(t,e){return`${t.substring(0,e?4:6)}...${t.substring(t.length-(e?3:4))}`}function AC(t,e){try{const n=Qt(t);return b1(n,e)}catch{return t}}const jO=_.span`
  font-size: ${z.md};
  color: ${t=>t.theme.text.secondary};
  margin: 0;
`;_.span`
  font-size: ${z.md};
  color: ${t=>t.theme.text.neutral};
  margin: 0;
`;_.span`
  font-size: ${z.md};
  color: ${t=>t.theme.text.danger};
  margin: 0;
`;const VO="ipfs://QmbQzSNGvmNYZzem9jZRuYeLe9K2W4pqbdnVUp7Y6edQ8Y/local-wallet.svg",GO=t=>{const[e,n]=C.exports.useState(""),[a,r]=C.exports.useState(!1),[i,s]=C.exports.useState(!1),[o,c]=C.exports.useState(""),[p,d]=C.exports.useState("loading");C.exports.useEffect(()=>{t.localWallet.getAddress().then(f=>{c(f)})},[t.localWallet]),C.exports.useEffect(()=>{!o||t.localWallet.getSavedData().then(f=>{f&&f.address===o?d(f):d(null)})},[t.localWallet,o]);const u=async()=>{if(!t.localWallet||p==="loading")throw new Error("invalid state");if(p)P5(JSON.parse(p.data),"wallet.json","application/json"),t.onExport();else try{const f=await t.localWallet.export({strategy:"encryptedJson",password:e});P5(JSON.parse(f),"wallet.json","application/json"),t.onExport()}catch{s(!0);return}};if(p==="loading")return h(bn,{justifyContent:"center",alignItems:"center",style:{height:"300px"},children:h(Ht,{size:"md",color:"link"})});const m=i;return A(ve,{children:[h(He,{src:VO,width:O.xl,height:O.xl}),h(q,{y:"lg"}),h(sn,{style:{textAlign:"left"},children:"Backup Wallet"}),h(q,{y:"md"}),h(Mn,{children:"This will download a JSON file containing your wallet information onto your device encrypted with the password."}),h(q,{y:"xl"}),A("form",{onSubmit:f=>{f.preventDefault(),u()},children:[h(wC,{children:"Wallet Address"}),h(q,{y:"sm"}),h(ZO,{children:o?AC(o):"Loading"}),h(q,{y:"lg"}),!p&&A(ve,{children:[h("input",{type:"text",name:"username",autoComplete:"off",value:o,disabled:!0,style:{display:"none"}}),h(hO,{noSave:!0,required:!0,name:"current-password",autocomplete:"current-password",id:"current-password",onChange:f=>{n(f),s(!1)},right:{onClick:()=>r(!a),icon:a?h(Wk,{}):h(Bk,{})},label:"Password",type:a?"text":"password",value:e,error:i?"Wrong Password":""}),h(q,{y:"xl"})]}),h(mO,{children:h(jt,{disabled:m,variant:"inverted",style:{opacity:m?.5:1},type:"submit",children:"Backup"})})]})]})};function P5(t,e,n){const a=new Blob([JSON.stringify(t,null,2)],{type:n}),r=URL.createObjectURL(a),i=document.createElement("a");i.href=r,i.download=e,document.body.appendChild(i),i.style.display="none",i.click(),URL.revokeObjectURL(i.href)}const ZO=_.p`
  font-size: ${z.md};
  color: ${t=>t.theme.text.secondary};
  margin: 0;
`,ua=e2("ipfs://QmcxZHpyJa8T4i63xqjPYrZ6tKrt55tZJpbXcjSDKuKaf9/ethereum/512.png"),T1=t=>{var a,r;const e=(r=(a=t.chain)==null?void 0:a.icon)==null?void 0:r.url,n=e?e2(e):ua;return A("div",{style:{position:"relative",display:"flex",flexShrink:0,alignItems:"center"},children:[h("img",{src:n||ua,onError:i=>{ua&&i.currentTarget.src!==ua&&(i.currentTarget.src=ua)},alt:"",width:t.size,height:t.size,className:t.className,loading:t.loading,style:{objectFit:"contain",width:t.size+"px",height:t.size+"px"}}),t.active&&h(XO,{})]})},XO=_.div`
  width: 28%;
  height: 28%;
  border-radius: 50%;
  position: absolute;
  top: 60%;
  right: 0px;
  background-color: #00d395;
  box-shadow: 0 0 0 2px ${t=>t.theme.bg.elevated};
`;function JO(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const[n,a]=C.exports.useState(!1),{timeout:r=1500,...i}=typeof e=="number"?{timeout:e}:e,s=C.exports.useCallback(()=>{const o=zk(t,i);a(o)},[t,i]);return C.exports.useEffect(()=>{let o=null;return n&&(o=window.setTimeout(()=>{a(!1)},r)),()=>{o&&window.clearTimeout(o)}},[r,n]),{value:t,onCopy:s,hasCopied:n}}const w1=t=>h(Nk,{delayDuration:200,children:A(Dk,{children:[h(Lk,{asChild:!0,children:t.children}),h(Uk,{children:A(t$,{sideOffset:t.sideOffset||6,align:t.align,side:t.side,children:[t.tip,h(n$,{})]})})]})}),e$=_t`
from {
  opacity: 0;
  transform: translateY(2px);
}
to {
  opacity: 1;
  transform: translateY(0);
}
`,t$=_(ok)`
  background: ${t=>t.theme.tooltip.bg};
  color: ${t=>t.theme.tooltip.text};
  border-radius: ${re.sm};
  line-height: 1;
  padding: ${D.sm} ${D.md};
  font-size: ${z.sm};
  box-shadow: ${i2.sm};
  user-select: none;
  will-change: transform, opacity;
  animation: ${e$} 200ms cubic-bezier(0.16, 1, 0.3, 1);
  z-index: 999999999999999;
  max-width: 300px;
  line-height: 1.5;
`,n$=_(ck)`
  fill: ${t=>t.theme.tooltip.bg};
`,a$=t=>{const{hasCopied:e,onCopy:n}=JO(t.text);return h("div",{onClick:n,style:{display:"flex",alignItems:"center",justifyContent:"center"},children:h(w1,{tip:t.tip,side:t.side,align:t.align,children:e?h(r$,{}):h(Fk,{})})})},r$=_(pk)`
  color: ${t=>t.theme.icon.success};
`,PC=t=>{let{track:e,thumb:n,hover:a}=t;return`
&::-webkit-scrollbar {
  width: 6px;
}

&::-webkit-scrollbar-track {
  box-shadow: inset 0 0 5px ${e};
  border-radius: ${re.md};
}

&::-webkit-scrollbar-thumb {
  background: ${n};
  border-radius: ${re.md};
}

&::-webkit-scrollbar-thumb:hover {
  background: ${a};
}`},i$=_t`
 from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
`,s$=_.div`
  background-color: ${t=>t.theme.overlay.subdued};
  z-index: 9999;
  position: fixed;
  inset: 0;
  animation: ${i$} 400ms cubic-bezier(0.16, 1, 0.3, 1);
`,Xa=t=>A(gk,{open:t.open,onOpenChange:t.setOpen,children:[t.trigger&&h(bk,{asChild:!0,children:t.trigger}),A(Tk,{children:[h(wk,{asChild:!0,children:h(s$,{})}),h(Ik,{asChild:!0,children:A(l$,{style:t.style,children:[t.title&&A(d$,{children:[" ",t.title]}),t.children,!t.hideCloseIcon&&h(o$,{children:h(vk,{asChild:!0,children:h(s2,{variant:"secondary",type:"button","aria-label":"Close",children:h(Ck,{style:{width:O.md,height:O.md,color:"inherit"}})})})})]})})]})]}),o$=_.div`
  position: absolute;
  top: ${D.lg};
  right: ${D.lg};

  ${Ye.mobile} {
    right: ${D.md};
  }
`,c$=_t`
  from {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
`,p$=_t`
  from {
    opacity: 0;
    transform: translate(0, 50%);
  }
  to {
    opacity: 1;
    transform: translate(0, 0);
  }
`,l$=_.div`
  z-index: 10000;
  background-color: ${t=>t.theme.bg.base};
  border-radius: ${re.xl};
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: calc(100vw - 40px);
  box-sizing: border-box;
  overflow-y: auto;
  padding: ${D.lg};
  padding-bottom: ${D.xl};
  animation: ${c$} 200ms ease;
  box-shadow: ${i2.lg};
  line-height: 1;

  &:focus {
    outline: none;
  }

  ${t=>PC({track:"transparent",thumb:t.theme.bg.elevated,hover:t.theme.bg.highlighted})}

  /* open from bottom on mobile */
  ${Ye.mobile} {
    top: auto;
    bottom: 0;
    left: 0;
    right: 0;
    max-width: 100vw;
    transform: none;
    width: 100vw;
    animation: ${p$} 0.35s cubic-bezier(0.15, 1.15, 0.6, 1);
    border-radius: ${re.xxl};
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
    max-width: none !important;
  }

  & *::selection {
    background-color: ${t=>t.theme.bg.inverted};
    color: ${t=>t.theme.text.inverted};
  }
`,d$=_(z5)`
  margin: 0;
  font-weight: 500;
  color: ${t=>t.theme.text.neutral};
  font-size: ${z.lg};
`,D2={threshold:.4,keys:[{name:"name",weight:1},{name:"chainId",weight:1}]},u$=t=>{var x;const[e,n]=C.exports.useState(""),a=C.exports.useDeferredValue(e),r=C.exports.useContext(lr),i=t.theme||r||"dark",s=sI(),o=t.chains||s,c=t.recentChains,p=c?(x=t.popularChains)==null?void 0:x.filter(L=>!c.some(H=>H.chainId===L.chainId)):t.popularChains,d=C.exports.useMemo(()=>new v2(o,D2),[o]),u=C.exports.useMemo(()=>new v2(p||[],D2),[p]),m=C.exports.useMemo(()=>new v2(t.recentChains||[],D2),[t.recentChains]),f=C.exports.useMemo(()=>a===""?o:d.search(a).map(L=>L.item),[d,a,o]),g=C.exports.useMemo(()=>a===""?p||[]:u.search(a).map(L=>L.item),[u,a,p]),w=C.exports.useMemo(()=>a===""?t.recentChains||[]:m.search(a).map(L=>L.item),[m,a,t.recentChains]),{onClose:I,onSwitch:M,onCustomClick:R}=t,N=C.exports.useCallback(L=>{M&&M(L),I&&I()},[M,I]);return h(er,{theme:i==="dark"?hr:yr,children:A(Xa,{open:!0,setOpen:L=>{!L&&I&&I()},title:"Select Network",style:{maxWidth:"480px",paddingBottom:t.onCustomClick?D.md:"0px"},children:[h(q,{y:"xl"}),A(Hk,{className:"TabsRoot",defaultValue:"all",children:[A(Kk,{className:"TabsList","aria-label":"Manage your account",style:{display:"flex",gap:D.xxs},children:[h(H2,{className:"TabsTrigger",value:"all",children:"All"}),h(H2,{className:"TabsTrigger",value:"mainnet",children:"Mainnets"}),h(H2,{className:"TabsTrigger",value:"testnet",children:"Testnets"})]}),h(q,{y:"lg"}),A("div",{style:{display:"flex",alignItems:"center",position:"relative"},children:[h(f$,{width:O.md,height:O.md}),h(g$,{style:{boxShadow:"none"},tabIndex:En()?-1:0,variant:"secondary",placeholder:"Search Network or Chain ID",value:e,onChange:L=>{n(L.target.value)}}),a!==e&&h("div",{style:{position:"absolute",right:D.md},children:h(Ht,{size:"md",color:"link"})})]}),h(q,{y:"lg"}),h(I2,{className:"TabsContent",value:"all",children:h(U2,{allChains:f,type:"all",popularChains:g,recentChains:w,onSwitch:N,renderChain:t.renderChain,close:t.onClose})}),h(I2,{className:"TabsContent",value:"mainnet",children:h(U2,{allChains:f,type:"mainnet",popularChains:g,recentChains:w,onSwitch:N,renderChain:t.renderChain,close:t.onClose})}),h(I2,{className:"TabsContent",value:"testnet",children:h(U2,{allChains:f,type:"testnet",popularChains:g,recentChains:w,onSwitch:N,renderChain:t.renderChain,close:t.onClose})}),R&&A(ve,{children:[h(q,{y:"sm"}),h(jt,{variant:"link",onClick:()=>{R(),I&&I()},style:{display:"flex",width:"100%",fontSize:z.sm,boxShadow:"none"},children:"Add Custom Network"})]})]})]})})},L2=(t,e)=>e==="all"?t:e==="testnet"?t.filter(n=>n.testnet):t.filter(n=>!n.testnet),U2=t=>{const e=C.exports.useMemo(()=>L2(t.allChains,t.type),[t.type,t.allChains]),n=C.exports.useMemo(()=>L2(t.recentChains||[],t.type),[t.type,t.recentChains]),a=C.exports.useMemo(()=>L2(t.popularChains||[],t.type),[t.type,t.popularChains]);return A(m$,{style:{height:"330px"},children:[n.length>0&&A("div",{children:[h(K2,{children:"Recently Used"}),h(q,{y:"sm"}),h(F2,{chains:n,onSwitch:t.onSwitch,renderChain:t.renderChain,close:t.close}),h(q,{y:"lg"})]}),a.length>0&&A("div",{children:[h(K2,{children:"Popular"}),h(q,{y:"sm"}),h(F2,{chains:a,onSwitch:t.onSwitch,renderChain:t.renderChain,close:t.close}),h(q,{y:"lg"})]}),(a.length>0||n.length>0)&&A(ve,{children:[h(K2,{children:"All Networks"}),h(q,{y:"sm"})]}),h(F2,{chains:e,onSwitch:t.onSwitch,renderChain:t.renderChain,close:t.close})]})},F2=C.exports.memo(function(e){const n=fC(),a=mr(),[r,i]=C.exports.useState(-1),[s,o]=C.exports.useState(-1),c=async d=>{o(-1),i(d.chainId);try{await n(d.chainId),e.onSwitch(d)}catch(u){o(d.chainId),console.error(u)}finally{i(-1)}},p=e.renderChain;return h(h$,{children:e.chains.map(d=>{const u=r===d.chainId,m=s===d.chainId,f=A("span",{children:[d.name," "]});return p?h("li",{children:h(p,{switchChain:()=>{c(d)},chain:d,switching:r===d.chainId,switchFailed:s===d.chainId,close:e.close})},d.chainId):h("li",{children:A(y$,{"data-active":a===d.chainId,onClick:()=>{c(d)},children:[h(T1,{chain:d,size:O.lg,active:a===d.chainId,loading:"lazy"}),u||m?A("div",{style:{display:"flex",flexDirection:"column",gap:D.xs},children:[f,A("div",{style:{display:"flex",gap:D.xs},children:[u&&A(ve,{children:[h(b$,{children:"Confirm in Wallet"}),h(Ht,{size:"sm",color:"link"})]}),m&&h(T$,{children:"Error: Could not Switch Network"})]})]}):f]})},d.chainId)})})}),H2=_(lk)`
  all: unset;
  font-size: ${z.md};
  font-weight: 500;
  color: ${t=>t.theme.text.secondary};
  cursor: pointer;
  padding: ${D.sm} ${D.sm};
  -webkit-tap-highlight-color: transparent;
  border-radius: ${re.lg};
  transition: background 0.2s ease, color 0.2s ease;
  &[data-state="active"] {
    background: ${t=>t.theme.bg.elevated};
    color: ${t=>t.theme.text.neutral};
  }
`,K2=_.p`
  font-size: ${z.sm};
  color: ${t=>t.theme.text.secondary};
  margin: 0;
`,m$=_.div`
  box-sizing: border-box;
  overflow: auto;
  padding-right: 10px;
  padding-bottom: ${D.lg};
  width: calc(100% + 16px);
  -webkit-mask-image: linear-gradient(to bottom, black 90%, transparent 100%);
  mask-image: linear-gradient(to bottom, black 90%, transparent 100%);
  ${t=>PC({track:"transparent",thumb:t.theme.bg.elevated,hover:t.theme.bg.highlighted})}
`,h$=_.ul`
  padding: 0;
  margin: 0;
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: ${D.xs};
  box-sizing: border-box;
`,y$=_.button`
  all: unset;
  display: flex;
  width: 100%;
  box-sizing: border-box;
  align-items: center;
  gap: ${D.md};
  padding: ${D.sm} ${D.md};
  border-radius: ${re.md};
  cursor: pointer;
  transition: background 0.2s ease;
  background: ${t=>t.theme.bg.elevated};
  color: ${t=>t.theme.text.neutral};
  font-weight: 600;
  font-size: ${z.md};
  &:hover {
    background: ${t=>t.theme.bg.highlighted};
  }

  ${Ye.mobile} {
    font-size: ${z.sm};
  }
`,f$=_(dk)`
  color: ${t=>t.theme.text.secondary};
  position: absolute;
  left: 18px;
`,g$=_(IC)`
  padding: ${D.sm} ${D.md} ${D.sm} 60px;
`,b$=_.div`
  font-size: ${z.sm};
  color: ${t=>t.theme.link.primary};
`,T$=_.div`
  font-size: ${z.sm};
  color: ${t=>t.theme.text.danger};
`,w$=t=>{let{size:e}=t;return h("svg",{width:e,height:e,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:h("path",{fill:"currentColor",d:"M10.79 16.29C11.18 16.68 11.81 16.68 12.2 16.29L15.79 12.7C15.8827 12.6075 15.9563 12.4976 16.0064 12.3766C16.0566 12.2557 16.0824 12.126 16.0824 11.995C16.0824 11.864 16.0566 11.7343 16.0064 11.6134C15.9563 11.4924 15.8827 11.3825 15.79 11.29L12.2 7.7C12.013 7.51302 11.7594 7.40798 11.495 7.40798C11.2306 7.40798 10.977 7.51302 10.79 7.7C10.603 7.88698 10.498 8.14057 10.498 8.405C10.498 8.66943 10.603 8.92302 10.79 9.11L12.67 11H4C3.45 11 3 11.45 3 12C3 12.55 3.45 13 4 13H12.67L10.79 14.88C10.4 15.27 10.41 15.91 10.79 16.29ZM19 3H5C4.46957 3 3.96086 3.21071 3.58579 3.58579C3.21071 3.96086 3 4.46957 3 5V8C3 8.55 3.45 9 4 9C4.55 9 5 8.55 5 8V6C5 5.45 5.45 5 6 5H18C18.55 5 19 5.45 19 6V18C19 18.55 18.55 19 18 19H6C5.45 19 5 18.55 5 18V16C5 15.45 4.55 15 4 15C3.45 15 3 15.45 3 16V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3Z"})})},I$=t=>{let{size:e}=t;return A("svg",{width:e,height:e,viewBox:"0 0 12 12",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[h("circle",{cx:"6",cy:"6",r:"5.335",stroke:"currentColor",strokeWidth:"1.33"}),h("path",{fill:"currentColor",d:"M5.85378 8.54545V3.09091H6.20321V8.54545H5.85378ZM6.78063 4.89134C6.76358 4.71946 6.69043 4.58594 6.56117 4.49077C6.43191 4.3956 6.25648 4.34801 6.03489 4.34801C5.88432 4.34801 5.75719 4.36932 5.6535 4.41193C5.5498 4.45312 5.47026 4.51065 5.41486 4.58452C5.36088 4.65838 5.3339 4.74219 5.3339 4.83594C5.33105 4.91406 5.34739 4.98224 5.3829 5.04048C5.41983 5.09872 5.47026 5.14915 5.53418 5.19176C5.5981 5.23295 5.67196 5.26918 5.75577 5.30043C5.83958 5.33026 5.92907 5.35582 6.02424 5.37713L6.41628 5.47088C6.60662 5.51349 6.78134 5.57031 6.94043 5.64134C7.09952 5.71236 7.2373 5.79972 7.35378 5.90341C7.47026 6.0071 7.56046 6.12926 7.62438 6.26989C7.68972 6.41051 7.7231 6.57173 7.72452 6.75355C7.7231 7.0206 7.65492 7.25213 7.51998 7.44815C7.38645 7.64276 7.19327 7.79403 6.94043 7.90199C6.68901 8.00852 6.38574 8.06179 6.03063 8.06179C5.67836 8.06179 5.37154 8.00781 5.11017 7.89986C4.85023 7.7919 4.64711 7.6321 4.5008 7.42045C4.35591 7.20739 4.27992 6.94389 4.27282 6.62997H5.16557C5.17551 6.77628 5.21742 6.89844 5.29128 6.99645C5.36657 7.09304 5.46671 7.16619 5.59171 7.21591C5.71813 7.2642 5.86088 7.28835 6.01998 7.28835C6.17623 7.28835 6.31188 7.26562 6.42694 7.22017C6.54341 7.17472 6.63361 7.11151 6.69753 7.03054C6.76145 6.94957 6.79341 6.85653 6.79341 6.75142C6.79341 6.65341 6.76429 6.57102 6.70605 6.50426C6.64924 6.4375 6.56543 6.38068 6.45463 6.33381C6.34526 6.28693 6.21103 6.24432 6.05194 6.20597L5.57679 6.08665C5.2089 5.99716 4.91841 5.85724 4.70534 5.6669C4.49228 5.47656 4.38645 5.22017 4.38787 4.89773C4.38645 4.63352 4.45676 4.4027 4.59881 4.20526C4.74228 4.00781 4.93901 3.85369 5.18901 3.7429C5.43901 3.6321 5.7231 3.5767 6.04128 3.5767C6.36515 3.5767 6.64782 3.6321 6.88929 3.7429C7.13219 3.85369 7.32111 4.00781 7.45605 4.20526C7.591 4.4027 7.6606 4.63139 7.66486 4.89134H6.78063Z"})]})},ma="tw-connected-wallet",v$=t=>{var me,dt,Be,he;const e=hC(),n=sI(),a=mr(),r=ur(),i=GK(),s=dr(),o=uC(),[c,p]=C.exports.useState(!1),[d,u]=C.exports.useState(),m=et(),f=ZK(),g=(o==null?void 0:o.meta.iconURL)||"",[w,I]=C.exports.useState(!1),[M,R]=C.exports.useState(!1),N=da(),x=s==null?void 0:s.getPersonalWallet(),L=x&&m.getWalletConfig(x),H=d&&m.getWalletConfig(d),Q=!!x,ne=t.detailsBtn?h("div",{children:h(t.detailsBtn,{})}):A(E$,{type:"button",className:`${ma} ${t.className||""}`,"data-theme":t.theme,style:t.style,children:[h(T1,{chain:f,size:O.lg,className:`${ma}__network-icon`}),A(R$,{children:[i.data?A(A$,{className:`${ma}__balance`,children:[i.data.displayValue.slice(0,5)," ",i.data.symbol]}):h(f1,{height:z.sm,width:"82px"}),h(q,{y:"xs"}),(s==null?void 0:s.walletId)===Qe.localWallet?h(y1,{style:{lineHeight:1,minWidth:"70px",fontSize:z.xs},children:"Guest"}):r?h(x$,{className:`${ma}__address`,children:b1(r||"")}):h(f1,{height:z.xs,width:"88px"})]}),h(He,{width:O.lg,height:O.lg,src:g,className:`${ma}__wallet-icon`})]}),ie=h(w1,{tip:Q?"Network Switching is disabled":"Switch Network",children:A(ba,{type:"button",disabled:Q,onClick:()=>{R(!1),I(!0)},children:[h("div",{style:{display:"flex",alignItems:"center",position:"relative"},children:h(T1,{chain:f,size:O.lg,active:!0})}),(f==null?void 0:f.name)||`Unknown chain #${a}`,h(W$,{width:O.sm,height:O.sm,style:{flexShrink:0,marginLeft:"auto"}})]})}),ue=A("div",{children:[A(bn,{gap:"md",children:[h(He,{width:O.xl,height:O.xl,src:g,alt:""}),A("div",{style:{flexGrow:1},children:[A(bn,{gap:"xs",alignItems:"center",children:[A("div",{style:{display:"flex",gap:D.xs,alignItems:"center"},children:[A(P$,{children:[" ",b1(r||"")]}),h(s2,{variant:"secondary",style:{padding:"3px"},children:h(a$,{text:r||"",tip:"Copy Address",side:"bottom"})})]}),h(w1,{tip:"Disconnect Wallet",side:"bottom",align:"end",sideOffset:10,children:h(B$,{type:"button",variant:"secondary",onClick:()=>{e(),t.onDisconnect()},children:h(w$,{size:O.md})})})]}),A(M$,{children:[" ",(me=i.data)==null?void 0:me.displayValue.slice(0,5)," ",(dt=i.data)==null?void 0:dt.symbol," "]})]})]}),h(q,{y:"lg"}),A("div",{children:[h(_$,{children:"Current Network"}),h(q,{y:"xs"}),ie]}),h(q,{y:"md"}),A(bn,{flexDirection:"column",gap:"sm",children:[x&&L&&h(_5,{wallet:x,name:"Personal Wallet",onSwitch:()=>{u(s)}}),H&&d&&h(_5,{name:H.meta.name,wallet:d,onSwitch:()=>{u(void 0)}}),o&&o.id===Qe.metamask&&o.isInstalled&&o.isInstalled()&&A(ba,{type:"button",onClick:()=>{s.switchAccount(),R(!1)},style:{fontSize:z.sm},children:[h(kk,{width:O.sm,height:O.sm}),"Switch Account"]}),((f==null?void 0:f.faucets)&&f.faucets.length>0||(f==null?void 0:f.chainId)===wn.chainId)&&A(S$,{href:f!=null&&f.faucets?f.faucets[0]:"#",target:"_blank",as:"a",onClick:async $C=>{f.chainId===wn.chainId&&($C.preventDefault(),R(!1),await(N==null?void 0:N.wallet.requestFunds(10)),await i.refetch())},style:{textDecoration:"none",color:"inherit",fontSize:z.sm},children:[h(M5,{children:h(I$,{size:O.sm})}),"Request Testnet Funds"]}),(s==null?void 0:s.walletId)===Qe.localWallet&&A("div",{children:[A(ba,{onClick:()=>{p(!0),R(!1)},style:{fontSize:z.sm},children:[h(M5,{children:h(Ek,{width:O.sm,height:O.sm})}),"Backup wallet"," "]}),h(q,{y:"sm"}),A(y1,{style:{fontSize:z.xs,textAlign:"center"},children:["This is a temporary guest wallet ",h("br",{}),"Backup if you ","don't ","want to lose access to it"]})]})]})]});return A(ve,{children:[En()?h(Xa,{trigger:ne,open:M,setOpen:R,hideCloseIcon:!0,children:h("div",{style:{minHeight:"200px"},children:ue})}):A(xk,{open:M,onOpenChange:R,children:[h(Rk,{asChild:!0,children:ne}),h(Ak,{children:h(k$,{asChild:!0,side:((Be=t.dropdownPosition)==null?void 0:Be.side)||"bottom",align:((he=t.dropdownPosition)==null?void 0:he.align)||"end",sideOffset:10,children:ue})})]}),w&&h(u$,{theme:t.theme,chains:n,...t.networkSelector,onClose:()=>I(!1)}),c&&h(Xa,{open:!0,setOpen:p,style:{maxWidth:"480px"},children:h(GO,{localWallet:s,onBack:()=>{p(!1)},onExport:()=>{p(!1)}})})]})},C$=_t`
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
`,k$=_(uk)`
  width: 360px;
  box-sizing: border-box;
  max-width: 100%;
  border-radius: ${re.lg};
  padding: ${D.lg};
  animation: ${C$} 400ms cubic-bezier(0.16, 1, 0.3, 1);
  will-change: transform, opacity;
  border: 1px solid ${t=>t.theme.border.base};
  background-color: ${t=>t.theme.bg.base};
  z-index: 1000000;
  line-height: 1;
`,E$=_.button`
  all: unset;
  background: ${t=>t.theme.bg.base};
  border: 1px solid ${t=>t.theme.border.base};
  padding: ${D.sm} ${D.sm};
  border-radius: ${re.lg};
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  gap: ${D.md};
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
  line-height: 1;
  animation: ${lI} 300ms ease;

  ${Ye.mobile} {
    gap: ${D.sm};
    padding: ${D.xs} ${D.sm};
    img {
      width: ${O.md}px;
      height: ${O.md}px;
    }
  }

  &:hover {
    transition: background 250ms ease;
    background: ${t=>t.theme.bg.baseHover};
    border-color: ${t=>t.theme.bg.highlighted};
  }
`,x$=_.span`
  color: ${t=>t.theme.text.secondary};
  font-size: ${z.xs};
  font-weight: 500;
`,R$=_.div`
  display: flex;
  flex-direction: column;
`,A$=_.span`
  color: ${t=>t.theme.text.neutral};
  font-size: ${z.sm};
  font-weight: 500;
`,P$=_.span`
  font-size: ${z.md};
  color: ${t=>t.theme.text.neutral};
  font-weight: 500;
`,M$=_.span`
  font-size: ${z.sm};
  color: ${t=>t.theme.text.secondary};
  font-weight: 500;
`,_$=_.label`
  font-size: ${z.sm};
  color: ${t=>t.theme.text.secondary};
  font-weight: 500;
`,ba=_.button`
  all: unset;
  padding: ${D.sm} ${D.sm};
  border-radius: ${re.md};
  background-color: ${t=>t.theme.bg.base};
  border: 1px solid ${t=>t.theme.border.elevated};
  box-sizing: border-box;
  display: flex;
  align-items: center;
  width: 100%;
  cursor: pointer;
  font-size: ${z.md};
  font-weight: 500;
  color: ${t=>t.theme.text.neutral} !important;
  gap: ${D.sm};
  -webkit-tap-highlight-color: transparent;
  line-height: 1.3;

  &:not([disabled]):hover {
    transition: box-shadow 250ms ease, border-color 250ms ease;
    border: 1px solid ${t=>t.theme.link.primary};
    box-shadow: 0 0 0 1px ${t=>t.theme.link.primary};
  }

  &[disabled] {
    cursor: not-allowed;
    svg {
      display: none;
    }
  }

  &[disabled]:hover {
    transition: box-shadow 250ms ease, border-color 250ms ease;
    border: 1px solid ${t=>t.theme.text.danger};
    box-shadow: 0 0 0 1px ${t=>t.theme.text.danger};
  }
`,S$=ba.withComponent("a");_(mk)`
  outline: none;
`;const W$=_(hk)`
  color: ${t=>t.theme.text.secondary};
`,B$=_(s2)`
  margin-right: -${D.xxs};
  margin-left: auto;
  color: ${t=>t.theme.icon.secondary};
  &:hover {
    color: ${t=>t.theme.icon.danger};
    background: none;
  }
`,M5=_.div`
  display: flex;
  align-items: center;
  justify-content: center;
  color: ${t=>t.theme.icon.secondary};
`;function _5(t){let{wallet:e,onSwitch:n,name:a}=t;const r=et();return A(ba,{type:"button",onClick:()=>{r.setConnectedWallet(e),n()},style:{fontSize:z.sm},children:[h(Pk,{width:O.sm,height:O.sm}),"Switch to ",a]})}const N$=t=>h("svg",{width:t.size,height:t.size,viewBox:"0 0 16 21",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:h("path",{d:"M2 21C1.45 21 0.979333 20.8043 0.588 20.413C0.196 20.021 0 19.55 0 19V9C0 8.45 0.196 7.979 0.588 7.587C0.979333 7.19567 1.45 7 2 7H3V5C3 3.61667 3.48767 2.43733 4.463 1.462C5.43767 0.487333 6.61667 0 8 0C9.38333 0 10.5627 0.487333 11.538 1.462C12.5127 2.43733 13 3.61667 13 5V7H14C14.55 7 15.021 7.19567 15.413 7.587C15.8043 7.979 16 8.45 16 9V19C16 19.55 15.8043 20.021 15.413 20.413C15.021 20.8043 14.55 21 14 21H2ZM8 16C8.55 16 9.021 15.8043 9.413 15.413C9.80433 15.021 10 14.55 10 14C10 13.45 9.80433 12.979 9.413 12.587C9.021 12.1957 8.55 12 8 12C7.45 12 6.97933 12.1957 6.588 12.587C6.196 12.979 6 13.45 6 14C6 14.55 6.196 15.021 6.588 15.413C6.97933 15.8043 7.45 16 8 16ZM5 7H11V5C11 4.16667 10.7083 3.45833 10.125 2.875C9.54167 2.29167 8.83333 2 8 2C7.16667 2 6.45833 2.29167 5.875 2.875C5.29167 3.45833 5 4.16667 5 5V7Z",fill:"currentColor"})}),D$=t=>{const e=uC();return h(Xa,{open:t.open,style:{maxWidth:"450px"},setOpen:t.setOpen,children:A(F$,{children:[e&&h(He,{height:O.xl,src:e.meta.iconURL,width:O.xl}),h(q,{y:"xl"}),A(L$,{children:[h(sn,{children:"Signature Request"}),h(Ht,{size:"md",color:"link"})]}),h(q,{y:"md"}),h(U$,{children:"Sign the signature request pop-up in your wallet"}),h(q,{y:"xxl"}),h(fr,{target:"_blank",href:"https://support.thirdweb.com/contact",children:"Having troubles connecting to wallet"})]})})},L$=_.div`
  display: flex;
  align-items: center;
  gap: ${D.sm};

  ${Ye.mobile} {
    justify-content: center;
    flex-direction: column;
    gap: ${D.md};
  }
`,U$=_(Mn)`
  ${Ye.mobile} {
    max-width: 240px;
    margin: 0 auto;
  }
`,F$=_.div`
  ${Ye.mobile} {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
`,S5="tw-connect-wallet",H$=t=>{var R;const e=dr(),n=C.exports.useContext(lr),a=t.theme||n||"dark",r=iI(),i=r==="connecting"||r==="unknown",s=t.btnTitle||"Connect Wallet",o=RC(),c=C.exports.useContext(o2),p=ur(),[d,u]=C.exports.useState(!1),m=t2(),{user:f}=iO(),{login:g}=tO(),{logout:w}=rO(),I=(R=t.auth)!=null&&R.loginOptional?!1:!!(m!=null&&m.authUrl)&&!!p&&!(f!=null&&f.address);return A(er,{theme:a==="dark"?hr:yr,children:[d&&h(D$,{open:d,setOpen:u}),I&&A(jt,{variant:"inverted",onClick:async()=>{var N,x,L;try{u(!0);const H=await g((N=t.auth)==null?void 0:N.loginOptions);(L=(x=t==null?void 0:t.auth)==null?void 0:x.onLogin)==null||L.call(x,H)}catch(H){console.error("failed to log in",H)}u(!1)},"data-theme":a,className:`${S5}--sign-in ${t.className||""}}`,style:t.style,children:[A(bn,{alignItems:"center",gap:"sm",style:{paddingRight:D.xs,borderRight:"1px solid",marginRight:D.xs},children:[h(N$,{size:O.sm}),h("span",{children:" Sign in "})]}),h("span",{children:AC(p||"",!0)})]}),!I&&(e?h(v$,{networkSelector:t.networkSelector,dropdownPosition:t.dropdownPosition,className:t.className,theme:a,style:t.style,detailsBtn:t.detailsBtn,onDisconnect:()=>{var N,x;m!=null&&m.authUrl&&(w(),(x=(N=t==null?void 0:t.auth)==null?void 0:N.onLogout)==null||x.call(N))}}):h(K$,{disabled:i,className:`${t.className||""} ${S5}`,"data-theme":a,"data-is-loading":i,variant:"inverted",type:"button",style:{minWidth:"140px",...t.style},"aria-label":r==="connecting"?"Connecting":s,onClick:()=>{c({title:t.modalTitle||"Choose your wallet",theme:a,data:void 0}),o(!0)},children:i?h(Ht,{size:"sm",color:"inverted"}):s}))]})},K$=_(jt)`
  animation: ${lI} 300ms ease;
`;let O2;function O$(t){return!t||!t.startsWith("video/")?"":(O2||(O2=document.createElement("video")),O2.canPlayType(t))}function $$(t){return!!O$(t)}let $2;function Y$(t){return!t||!t.startsWith("audio/")?"":($2||($2=document.createElement("audio")),$2.canPlayType(t))}function z$(t){return!!Y$(t)}function MC(t){return e=>{t.forEach(n=>{typeof n=="function"?n(e):n!=null&&(n.current=e)})}}const q$=t=>A("svg",{width:"1em",height:"1em",viewBox:"0 0 32 32",...t,children:[h("circle",{cx:"9",cy:"28.5",r:"1.5",fill:"currentColor"}),h("path",{fill:"currentColor",d:"M10 25H8v-4h2a2 2 0 0 0 0-4H8a2.002 2.002 0 0 0-2 2v.5H4V19a4.005 4.005 0 0 1 4-4h2a4 4 0 0 1 0 8Z"}),h("path",{fill:"currentColor",d:"m27.7 9.3l-7-7A.908.908 0 0 0 20 2H10a2.006 2.006 0 0 0-2 2v8h2V4h8v6a2.006 2.006 0 0 0 2 2h6v16H14v2h12a2.006 2.006 0 0 0 2-2V10a.91.91 0 0 0-.3-.7ZM20 10V4.4l5.6 5.6Z"})]}),Q$=t=>A("svg",{width:"1em",height:"1em",viewBox:"0 0 32 32",...t,children:[h("path",{fill:"currentColor",d:"M29 31a.999.999 0 0 1-.625-.22L23.65 27H20a1 1 0 0 1-1-1v-5a1 1 0 0 1 1-1h3.65l4.726-3.78A1 1 0 0 1 30 17v13a1 1 0 0 1-1 1Zm-8-6h3a1 1 0 0 1 .625.22L28 27.92v-8.84l-3.376 2.7A1 1 0 0 1 24 22h-3Z"}),h("path",{fill:"currentColor",d:"M16 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6v3h2v-5a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h8Zm2-23.6l5.6 5.6H18Z"})]}),j$=t=>h("svg",{width:"1em",height:"1em",viewBox:"0 0 32 32",...t,children:h("path",{fill:"currentColor",d:"M12 6h-2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2zm10 0h-2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2z"})}),V$=t=>h("svg",{width:"1em",height:"1em",viewBox:"0 0 32 32",...t,children:h("path",{fill:"currentColor",d:"M7 28a1 1 0 0 1-1-1V5a1 1 0 0 1 1.482-.876l20 11a1 1 0 0 1 0 1.752l-20 11A1 1 0 0 1 7 28Z"})}),G$=C.exports.lazy(()=>j(()=>Promise.resolve().then(()=>Cz),void 0)),uI=t=>{let{onClick:e,isPlaying:n}=t;const[a,r]=C.exports.useState(!1),i=()=>r(!0),s=()=>r(!1),o=()=>r(!1),c=()=>r(!0);return h("button",{style:{position:"absolute",bottom:0,right:0,transform:"translate(-25%, -25%)",maxWidth:"32px",width:"8%",minWidth:"24px",aspectRatio:"1",zIndex:3,backgroundColor:"#fff",color:"rgb(138, 147, 155)",display:"grid",placeItems:"center",borderRadius:"50%",border:"1px solid rgb(229, 232, 235)",cursor:"pointer",...a?{color:"rgb(53, 56, 64)",boxShadow:"rgb(4 17 29 / 25%) 0px 0px 8px 0px"}:{}},onClick:e,onMouseEnter:i,onMouseLeave:s,onMouseDown:o,onMouseUp:c,children:n?h(j$,{style:{width:"66%",height:"66%"}}):h(V$,{style:{width:"66%",height:"66%"}})})},_C=xn.forwardRef((t,e)=>{let{src:n,alt:a,poster:r,requireInteraction:i,style:s,width:o,height:c,controls:p,...d}=t;const u=C.exports.useRef(null),[m,f]=C.exports.useState(!i),[g,w]=C.exports.useState(!0);return C.exports.useEffect(()=>{if(u.current)if(m)try{u.current.play()}catch(I){console.error("error playing video",I)}else try{u.current.pause(),u.current.currentTime=0}catch(I){console.error("error pausing video",I)}},[m]),A("div",{style:{position:"relative",...s},...d,children:[h("video",{ref:MC([u,e]),src:n!=null?n:void 0,poster:r!=null?r:void 0,loop:!0,playsInline:!0,controlsList:"nodownload",muted:g,preload:r?"metadata":"auto",onCanPlay:()=>{var I;m&&((I=u.current)==null||I.play())},width:o,height:c,controls:p,style:{height:"100%",width:"100%",objectFit:"contain",zIndex:1,transition:"opacity .5s",opacity:r?m?1:0:1}}),r&&h("img",{src:r,style:{objectFit:"contain",pointerEvents:"none",position:"absolute",width:"100%",height:"100%",zIndex:2,transition:"opacity .5s",opacity:m?0:1,top:0,left:0,right:0,bottom:0},alt:a}),h(uI,{onClick:()=>{f(I=>!I),w(!1)},isPlaying:m})]})});_C.displayName="VideoPlayer";const SC=xn.forwardRef((t,e)=>{let{src:n,alt:a,poster:r,style:i,height:s,width:o,...c}=t;const p=C.exports.useRef(null),[d,u]=C.exports.useState(!1),[m,f]=C.exports.useState(!0);return C.exports.useEffect(()=>{p.current&&(d?p.current.play():(p.current.pause(),p.current.currentTime=0))},[d]),A("div",{style:{position:"relative",...i},...c,children:[r?h("img",{height:s,width:o,src:r,style:{height:"100%",width:"100%",pointerEvents:"none",objectFit:"contain"},alt:a}):h("div",{style:{width:"100%",height:"100%",display:"grid",placeItems:"center",pointerEvents:"none",backgroundColor:"#fff",color:"rgb(138, 147, 155)"},children:h(Q$,{style:{height:"64px",width:"64px"}})}),h(uI,{onClick:()=>{u(g=>!g),f(!1)},isPlaying:d}),h("audio",{ref:MC([p,e]),src:n!=null?n:void 0,loop:!0,playsInline:!0,muted:m,preload:"none",controlsList:"nodownload",style:{position:"absolute",opacity:0,pointerEvents:"none",zIndex:-1,visibility:"hidden"}})]})});SC.displayName="AudioPlayer";const WC=xn.forwardRef((t,e)=>{let{src:n,alt:a,poster:r,requireInteraction:i,style:s,...o}=t;const[c,p]=C.exports.useState(!i);return A("div",{style:{position:"relative",...s},...o,children:[h("iframe",{src:c&&n!=null?n:void 0,ref:e,style:{objectFit:"contain",zIndex:1,height:"100%",width:"100%",transition:"opacity .5s",opacity:r?c?1:0:1},sandbox:"allow-scripts",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"}),r&&h("img",{src:r,style:{objectFit:"contain",pointerEvents:"none",position:"absolute",width:"100%",height:"100%",zIndex:2,transition:"opacity .5s",opacity:c?0:1,top:0,left:0,right:0,bottom:0},alt:a}),h(uI,{onClick:()=>{p(d=>!d)},isPlaying:c})]})});WC.displayName="IframePlayer";const BC=xn.forwardRef((t,e)=>{let{src:n,alt:a,style:r,...i}=t;return h("div",{style:{position:"relative",...r},...i,children:h("div",{style:{width:"100%",height:"100%",display:"grid",placeItems:"center",backgroundColor:"#fff",color:"rgb(138, 147, 155)"},children:A("div",{style:{display:"flex",flexDirection:"column",gap:"8px",alignItems:"center",flexWrap:"nowrap"},children:[h(q$,{style:{maxWidth:"128px",minWidth:"48px",width:"50%",aspectRatio:"1"}}),h("a",{rel:"noopener noreferrer",style:{textDecoration:"underline",color:"rgb(138, 147, 155)"},href:n!=null?n:void 0,target:"_blank",ref:e,children:a||"File"})]})})})});BC.displayName="LinkPlayer";const NC=xn.forwardRef((t,e)=>{let{src:n,poster:a,alt:r,gatewayUrl:i,requireInteraction:s=!1,width:o="300px",height:c="300px",style:p,mimeType:d,...u}=t;const m={objectFit:"contain",width:o,height:c,...p},f=W5(n!=null?n:void 0,d,i),g=W5(a!=null?a:void 0,void 0,i);if(f.mimeType){if(f.mimeType==="text/html")return h(WC,{style:m,src:f.url,poster:g.url,requireInteraction:s,...u});if(f.mimeType.startsWith("model"))return h(C.exports.Suspense,{fallback:a?h("img",{style:m,src:a,alt:r,ref:e,...u}):null,children:h(G$,{style:m,src:f.url||"",poster:a,alt:r,...u})});if($$(f.mimeType))return h(_C,{style:m,src:f.url,poster:g.url,requireInteraction:s,...u});if(z$(f.mimeType))return h(SC,{style:m,src:f.url,poster:g.url,requireInteraction:s,...u});if(f.mimeType.startsWith("image/"))return h("img",{style:m,src:f.url,alt:r,ref:e,...u})}else return h("img",{style:m,...u,ref:e,alt:r});return h(BC,{style:m,src:f.url,alt:r,ref:e,...u})});NC.displayName="MediaRenderer";function W5(t,e,n){const a=sO(),r=C.exports.useMemo(()=>e2(t,n?{gatewayUrl:n}:a?{gatewayUrl:a.gatewayUrls["ipfs://"][0]}:void 0),[t,a,n]),i=D0(["mime-type",r],()=>UK(r),{enabled:!!r&&!e,initialData:e});return{url:r,mimeType:i.data}}const Z$=xn.forwardRef((t,e)=>{var o;let{metadata:n,width:a="300px",height:r="300px",style:i,...s}=t;return h(NC,{src:n.animation_url||n.image,poster:n.image,alt:((o=n.name)==null?void 0:o.toString())||"",ref:e,width:a,height:r,style:{...i},...s})});Z$.displayName="ThirdwebNftMedia";const X$=t=>A(Mk,{open:t.open,onOpenChange:t.onOpenChange,children:[h(_k,{asChild:!0,children:t.children}),h(Sk,{children:A(eY,{sideOffset:7,side:"top",children:[h(nY,{children:t.content}),h(tY,{})]})})]}),J$=_t`
from {
    opacity: 0;
    transform: translateY(2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
`,eY=_(yk)`
  border-radius: ${re.sm};
  padding: ${D.sm} ${D.md};
  background-color: ${t=>t.theme.bg.inverted};
  box-shadow: ${i2.md};
  animation-duration: 400ms;
  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
  will-change: transform, opacity;
  animation-name: ${J$};
  color: ${t=>t.theme.text.inverted};
  font-size: ${z.md};
`,tY=_(fk)`
  fill: ${t=>t.theme.bg.inverted};
`,nY=_.div`
  display: flex;
  align-items: center;
  gap: ${D.sm};
`,vr="tw-web3button",bq=t=>{let{contractAddress:e,onSuccess:n,onError:a,onSubmit:r,isDisabled:i,contractAbi:s,children:o,action:c,className:p,type:d,theme:u,style:m}=t;const f=ur(),g=n2(),w=fC(),I=oO(),M=iI(),R=N0(),N=!qO(),{contract:x}=eO(e,s||"custom"),L=C.exports.useContext(lr),H=u||L||"dark",[Q,ne]=C.exports.useState("idle"),ie=C1(async()=>(P(x,"contract is not ready yet"),r&&r(),await c(x)),{onSuccess:Be=>{n&&n(Be)},onError:Be=>{a&&a(Be)},onSettled:()=>R.invalidateQueries()});if(!f)return h(H$,{style:m,theme:u,className:`${p||""} ${vr}--connect-wallet`});const ue={minWidth:"150px",minHeight:"43px"};let me=null;const dt=async()=>{if(g){ne("waiting");try{await w(g),ne("idle")}catch(Be){console.error(Be),ne("idle")}}};if(I&&!i){const Be=h(jt,{variant:"inverted",type:d,className:`${p||""} ${vr}--switch-network`,onClick:dt,style:{...ue,...m},"data-is-loading":Q==="waiting","data-theme":u,children:Q==="waiting"?h(Ht,{size:"sm",color:"inverted"}):"Switch Network"});N?me=h(X$,{content:h("span",{children:"Confirm in Wallet"}),open:Q==="waiting",onOpenChange:he=>{he||ne("idle")},children:Be}):me=Be}else!i&&(ie.isLoading||!x||M==="connecting"||M==="unknown")?me=h(jt,{variant:"inverted",type:d,className:`${p||""} ${vr}`,disabled:!0,style:{...ue,...m},"data-is-loading":!0,"data-theme":u,children:h(Ht,{size:"md",color:"inverted"})}):me=h(jt,{variant:"inverted",type:d,className:`${p||""} ${vr}`,onClick:()=>ie.mutate(),disabled:i,style:{...ue,...m},"data-is-loading":"false","data-theme":u,children:o});return h(er,{theme:H==="dark"?hr:yr,children:me})},aY="f9e23156ccfc6173c5267eaabf320fb692ffab1c2d572095a58091cbb67590cd",rY=t=>{var r,i,s;let{onBack:e}=t;const n=mC(),{meta:a}=n[0];return h(dI,{onBack:()=>{e()},walletIconURL:a.iconURL,walletName:a.name,appleStoreLink:(r=a.urls)==null?void 0:r.ios,googlePlayStoreLink:(i=a.urls)==null?void 0:i.android,chromeExtensionLink:(s=a.urls)==null?void 0:s.chrome,header:A(ve,{children:[h(sn,{children:" Get started with EVM wallets "}),h(q,{y:"md"}),h(Mn,{children:"An EVM Wallet is your gateway to interact with web3 apps on Ethereum and other custom blockchains."}),h(q,{y:"xl"}),A("div",{style:{display:"flex",gap:D.md,alignItems:"center"},children:[h(jO,{children:"We recommend"}),A("div",{style:{display:"flex",gap:D.xs,alignItems:"center"},children:[h(He,{src:a.iconURL,width:O.md,height:O.md}),h(iY,{children:a.name})]})]})]}),footer:A(ve,{children:[h(q,{y:"xl"}),h(fr,{target:"_blank",href:"https://ethereum.org/en/wallets/find-wallet/",style:{textAlign:"center"},children:"Learn more about wallets"})," "]})})},iY=_.p`
  font-size: ${z.md};
  color: ${t=>t.theme.text.neutral};
  margin: 0;
`,Cr={main:"main",getStarted:"getStarted"},sY=()=>{const{theme:t,title:e}=C.exports.useContext(g1),n=mC(),a=n.length===1&&!n[0].selectUI?n[0]:Cr.main,[r,i]=C.exports.useState(a),s=FO(),o=RC(),c=iI(),p=dr(),d=C.exports.useContext(g1),u=C.exports.useContext(o2),m=hC(),f=C.exports.useCallback(function(){(arguments.length>0&&arguments[0]!==void 0?arguments[0]:!0)&&i(a),c==="connecting"&&m(),o(!1)},[o,a,c,m]),g=C.exports.useCallback(()=>{i(a)},[i,a]),w=!!(p!=null&&p.getPersonalWallet()),I=typeof r!="string"&&"config"in r&&!!r.config.personalWallets,M=C.exports.useRef(c);C.exports.useEffect(()=>{!w&&I&&!s&&c==="connected"&&M.current==="connecting"&&o(!0),M.current=c},[s,c,o,I,w]);const R=typeof r!="string"&&(r.connectUI||QO);return h(er,{theme:typeof t=="object"?t:t==="light"?yr:hr,children:A(Xa,{style:{maxWidth:"480px"},open:s,setOpen:N=>{o(N),N||i(a),c==="connecting"&&m()},children:[r===Cr.main&&h(HO,{title:e,walletConfigs:n,onGetStarted:()=>{i(Cr.getStarted)},selectWallet:i}),r===Cr.getStarted&&h(rY,{onBack:g}),R&&h(R,{supportedWallets:n,theme:t,goBack:g,close:f,isOpen:s,open:()=>{o(!0)},walletConfig:r,selectionData:d.data,setSelectionData:N=>{u(x=>({...x,data:N}))}})]})})},Tq=t=>{let{thirdwebApiKey:e=aY,supportedWallets:n,theme:a,children:r,...i}=t;return h(UO,{theme:a,children:h(er,{theme:a==="dark"?hr:yr,children:A(jK,{theme:a,thirdwebApiKey:e,supportedWallets:n||LO,...i,children:[r,h(sY,{})]})})})};_.div`
  display: flex;
  align-items: center;
  width: 130px;
  padding: ${D.xs};
`;_.div`
  width: 14px;
  height: 14px;
  border-radius: 50%;
  background-color: ${t=>t.theme.bg.highlighted};
  box-shadow: 0 0 0 3px ${t=>t.theme.bg.base},
    0 0 0 5px ${t=>t.theme.bg.highlighted};

  &[data-active="true"] {
    background-color: ${t=>t.theme.link.primary};
    box-shadow: 0 0 0 3px ${t=>t.theme.bg.base},
      0 0 0 5px ${t=>t.theme.link.primary};

    position: relative;
    z-index: 2;
  }
`;_.div`
  flex-grow: 1;
  height: 4px;
  background-color: ${t=>t.theme.bg.highlighted};
  &[data-active="true"] {
    background-color: ${t=>t.theme.link.primary};
  }
`;_.div`
  margin-top: ${D.lg};
`;_.p`
  font-size: ${z.sm};
  color: ${t=>t.theme.link.primary};
  text-align: right;
`;_.select`
  width: 100%;
  padding: ${D.sm};
  box-sizing: border-box;
  outline: none;
  border: none;
  border-radius: 6px;
  color: ${t=>t.theme.text.neutral};
  background: transparent;
  font-size: ${z.md};
  box-shadow: 0 0 0 1.5px ${t=>t.theme.input.outline};
  appearance: none;

  &:focus {
    box-shadow: 0 0 0 2px ${t=>t.theme.input.focusRing};
  }

  &:invalid {
    color: ${t=>t.theme.text.secondary};
  }
  &[data-error="true"] {
    box-shadow: 0 0 0 1.5px ${t=>t.theme.input.errorRing};
  }

  &[disabled] {
    opacity: 1;
    cursor: not-allowed;
  }
`;_(Ok)`
  color: ${t=>t.theme.text.secondary};
  transition: transform 200ms ease, color 200ms ease;
`;_.div`
  border: 2px solid ${t=>t.theme.bg.elevated};
  border-radius: ${re.md};
  padding: ${D.xl} ${D.md};
  display: flex;
  align-items: center;
  flex-direction: column;
  cursor: pointer;
  transition: border-color 200ms ease;

  &:hover,
  &[data-is-dragging="true"] {
    border-color: ${t=>t.theme.link.primary};
    svg {
      color: ${t=>t.theme.link.primary};
    }
  }

  &[data-error="true"] {
    border-color: ${t=>t.theme.input.errorRing};
  }
`;_.p`
  color: ${t=>t.theme.input.errorRing};
  font-size: ${z.sm};
  margin: 0;
`;_.span`
  color: ${t=>t.theme.text.secondary};
  font-size: ${z.sm};
`;_.p`
  color: ${t=>t.theme.text.neutral};
  font-size: ${z.md};
  margin: 0;
  font-weight: 600;
`;_.p`
  font-size: ${z.sm};
  margin: 0;
  color: ${t=>t.theme.link.primary};
`;_.div`
  margin-top: ${D.lg};
`;var Nn=new WeakMap,ha=new WeakMap,Y2=new WeakSet;class oY extends _1{constructor(e){let{chains:n,options:a}=e;super({chains:n,options:{reloadOnDisconnect:!1,...a}}),In(this,Y2),W(this,"id",Qe.coinbase),W(this,"name","Coinbase Wallet"),W(this,"ready",!0),ze(this,Nn,{writable:!0,value:void 0}),ze(this,ha,{writable:!0,value:void 0}),W(this,"onAccountsChanged",r=>{r.length===0?this.emit("disconnect"):this.emit("change",{account:Ln.getAddress(r[0])})}),W(this,"onChainChanged",r=>{const i=Zn(r),s=this.isChainUnsupported(i);this.emit("change",{chain:{id:i,unsupported:s}})}),W(this,"onDisconnect",()=>{this.emit("disconnect")})}async connect(){let{chainId:e}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};try{const n=await this.getProvider();this.setupListeners(),this.emit("message",{type:"connecting"});const a=await n.enable(),r=Ln.getAddress(a[0]);let i=await this.getChainId(),s=this.isChainUnsupported(i);if(e&&i!==e)try{i=(await this.switchChain(e)).chainId,s=this.isChainUnsupported(i)}catch(o){console.error(`Connected but failed to switch to desired chain ${e}`,o)}return{account:r,chain:{id:i,unsupported:s},provider:new Ia(n)}}catch(n){throw/(user closed modal|accounts received is empty)/i.test(n.message)?new vt(n):n}}async disconnect(){if(!K(this,ha))return;const e=await this.getProvider();e.removeListener("accountsChanged",this.onAccountsChanged),e.removeListener("chainChanged",this.onChainChanged),e.removeListener("disconnect",this.onDisconnect),e.disconnect(),e.close()}async getAccount(){const n=await(await this.getProvider()).request({method:"eth_accounts"});if(n.length===0)throw new Error("No accounts found");return Ln.getAddress(n[0])}async getChainId(){const e=await this.getProvider();return Zn(e.chainId)}async getProvider(){var e;if(!K(this,ha)){let n=(await j(()=>import("./@coinbase.cb80a49c.js").then(o=>o.i),["assets/@coinbase.cb80a49c.js","assets/node-stdlib-browser.6b0e4e0c.js","assets/process.232f0ee3.js","assets/base64-js.663cb12a.js","assets/ieee754.f7290bcc.js","assets/keccak.7b8dcb47.js","assets/readable-stream.9fbf7437.js","assets/@account-abstraction.16fd1566.js","assets/debug.daa7020b.js","assets/events.1ed0639b.js","assets/util.0775b4ff.js","assets/is-arguments.ade658b6.js","assets/has-tostringtag.0722ba29.js","assets/has-symbols.668da340.js","assets/call-bind.75075f34.js","assets/get-intrinsic.3804c57f.js","assets/function-bind.f95c64f1.js","assets/has.6cd3bab2.js","assets/is-generator-function.adf285e2.js","assets/which-typed-array.21fbd60e.js","assets/for-each.17757083.js","assets/is-callable.52d62020.js","assets/available-typed-arrays.6fc8a7f3.js","assets/gopd.4edba3a9.js","assets/is-typed-array.dab6d8b3.js","assets/inherits.44081206.js","assets/util-deprecate.a21c9261.js","assets/string_decoder.d191aa72.js","assets/safe-buffer.3510e1d8.js","assets/bn.js.b2f94f66.js","assets/@metamask.9b2b42ff.js","assets/semver.7ad410de.js","assets/lru-cache.a020576b.js","assets/yallist.34a9262e.js","assets/eth-rpc-errors.b18d9e70.js","assets/fast-safe-stringify.cbdf62a8.js","assets/sha.js.9b95ab78.js","assets/qs.e19a4227.js","assets/side-channel.07a17889.js","assets/object-inspect.2d2200b4.js","assets/eth-block-tracker.a64f7174.js","assets/json-rpc-random-id.51bc6534.js","assets/pify.8425b695.js","assets/eth-json-rpc-filters.5e06a888.js","assets/eth-query.5602d7fb.js","assets/xtend.45b7f156.js","assets/json-rpc-engine.b866986a.js","assets/async-mutex.44eb53c5.js","assets/preact.d568ab7b.js","assets/rxjs.749154aa.js","assets/tslib.1f74f0c7.js","assets/clsx.32166ff1.js","assets/bind-decorator.25661f9a.js"])).default;typeof n!="function"&&typeof n.default=="function"&&(n=n.default),st(this,Nn,new n(this.options));const a=(e=K(this,Nn).walletExtension)==null?void 0:e.getChainId(),r=this.chains.find(o=>this.options.chainId?o.chainId===this.options.chainId:o.chainId===a)||this.chains[0],i=this.options.chainId||(r==null?void 0:r.chainId),s=this.options.jsonRpcUrl||(r==null?void 0:r.rpc[0]);st(this,ha,K(this,Nn).makeWeb3Provider(s,i))}return K(this,ha)}async getSigner(){let{chainId:e}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const[n,a]=await Promise.all([this.getProvider(),this.getAccount()]);return new Ia(n,e).getSigner(a)}async isAuthorized(){try{return!!await this.getAccount()}catch{return!1}}async switchChain(e){var r;const n=await this.getProvider(),a=Ln.hexValue(e);try{return await n.request({method:"wallet_switchEthereumChain",params:[{chainId:a}]}),(r=this.chains.find(i=>i.chainId===e))!=null?r:{chainId:e,name:`Chain ${a}`,slug:`${a}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpc:[""],testnet:!1,chain:"ethereum",shortName:"eth"}}catch(i){const s=this.chains.find(o=>o.chainId===e);if(!s)throw new rv({chainId:e,connectorId:this.id});if(i.code===4902)try{return await n.request({method:"wallet_addEthereumChain",params:[{chainId:a,chainName:s.name,nativeCurrency:s.nativeCurrency,rpcUrls:s.rpc,blockExplorerUrls:this.getBlockExplorerUrls(s)}]}),s}catch(o){throw Dt(this,Y2,B5).call(this,o)?new vt(o):new av}throw Dt(this,Y2,B5).call(this,i)?new vt(i):new zw(i)}}async setupListeners(){const e=await this.getProvider();e.on("accountsChanged",this.onAccountsChanged),e.on("chainChanged",this.onChainChanged),e.on("disconnect",this.onDisconnect)}async getQrUrl(){if(await this.getProvider(),!K(this,Nn))throw new Error("Coinbase Wallet SDK not initialized");return K(this,Nn).getQrUrl()}}function B5(t){return/(user rejected)/i.test(t.message)}const cY=Object.freeze(Object.defineProperty({__proto__:null,CoinbaseWalletConnector:oY},Symbol.toStringTag,{value:"Module"}));function pY(t){var n,a,r;if(!t)return"Injected";const e=i=>{if(i.isAvalanche)return"Core Wallet";if(i.isBitKeep)return"BitKeep";if(i.isBraveWallet)return"Brave Wallet";if(i.isCoinbaseWallet)return"Coinbase Wallet";if(i.isExodus)return"Exodus";if(i.isFrame)return"Frame";if(i.isKuCoinWallet)return"KuCoin Wallet";if(i.isMathWallet)return"MathWallet";if(i.isOneInchIOSWallet||i.isOneInchAndroidWallet)return"1inch Wallet";if(i.isOpera)return"Opera";if(i.isPortal)return"Ripio Portal";if(i.isTally)return"Tally";if(i.isTokenPocket)return"TokenPocket";if(i.isTokenary)return"Tokenary";if(i.isTrust||i.isTrustWallet)return"Trust Wallet";if(i.isMetaMask)return"MetaMask"};if((n=t.providers)!=null&&n.length){const i=new Set;let s=1;for(const c of t.providers){let p=e(c);p||(p=`Unknown Wallet #${s}`,s+=1),i.add(p)}const o=[...i];return o.length?o:(a=o[0])!=null?a:"Injected"}return(r=e(t))!=null?r:"Injected"}var z2=new WeakMap,kr=new WeakMap;class lY extends _1{constructor(e){const a={...{shimDisconnect:!0,shimChainChangedDisconnect:!0,getProvider:()=>{if(ar(globalThis.window))return globalThis.window.ethereum}},...e.options};super({chains:e.chains,options:a}),W(this,"id",void 0),W(this,"name",void 0),W(this,"ready",void 0),ze(this,z2,{writable:!0,value:void 0}),ze(this,kr,{writable:!0,value:void 0}),W(this,"connectorStorage",void 0),W(this,"shimDisconnectKey","injected.shimDisconnect"),W(this,"onAccountsChanged",async i=>{i.length===0?await this.onDisconnect():this.emit("change",{account:Qt(i[0])})}),W(this,"onChainChanged",i=>{const s=Zn(i),o=this.isChainUnsupported(s);this.emit("change",{chain:{id:s,unsupported:o}})}),W(this,"onDisconnect",async()=>{if(this.options.shimChainChangedDisconnect&&K(this,kr)){st(this,kr,!1);return}this.emit("disconnect"),this.options.shimDisconnect&&await this.connectorStorage.removeItem(this.shimDisconnectKey)});const r=a.getProvider();if(typeof a.name=="string")this.name=a.name;else if(r){const i=pY(r);a.name?this.name=a.name(i):typeof i=="string"?this.name=i:this.name=i[0]}else this.name="Injected";this.id="injected",this.ready=!!r,this.connectorStorage=e.connectorStorage}async connect(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};try{const n=await this.getProvider();if(!n)throw new Dn;this.setupListeners(),this.emit("message",{type:"connecting"});const a=await n.request({method:"eth_requestAccounts"}),r=Qt(a[0]);let i=await this.getChainId(),s=this.isChainUnsupported(i);if(e.chainId&&i!==e.chainId)try{await this.switchChain(e.chainId),i=e.chainId,s=this.isChainUnsupported(e.chainId)}catch(c){console.error(`Could not switch to chain id: ${e.chainId}`,c)}this.options.shimDisconnect&&await this.connectorStorage.setItem(this.shimDisconnectKey,"true");const o={account:r,chain:{id:i,unsupported:s},provider:n};return this.emit("connect",o),o}catch(n){throw this.isUserRejectedRequestError(n)?new vt(n):n.code===-32002?new iv(n):n}}async disconnect(){const e=await this.getProvider();!(e!=null&&e.removeListener)||(e.removeListener("accountsChanged",this.onAccountsChanged),e.removeListener("chainChanged",this.onChainChanged),e.removeListener("disconnect",this.onDisconnect),this.options.shimDisconnect&&await this.connectorStorage.removeItem(this.shimDisconnectKey))}async getAccount(){const e=await this.getProvider();if(!e)throw new Dn;const n=await e.request({method:"eth_accounts"});return Qt(n[0])}async getChainId(){const e=await this.getProvider();if(!e)throw new Dn;return e.request({method:"eth_chainId"}).then(Zn)}async getProvider(){const e=this.options.getProvider();return e&&st(this,z2,e),K(this,z2)}async getSigner(){let{chainId:e}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const[n,a]=await Promise.all([this.getProvider(),this.getAccount()]);return new Ia(n,e).getSigner(a)}async isAuthorized(){try{if(this.options.shimDisconnect&&!Boolean(await this.connectorStorage.getItem(this.shimDisconnectKey)))return!1;if(!await this.getProvider())throw new Dn;return!!await this.getAccount()}catch{return!1}}async switchChain(e){var r,i;this.options.shimChainChangedDisconnect&&st(this,kr,!0);const n=await this.getProvider();if(!n)throw new Dn;const a=$5(e);try{await n.request({method:"wallet_switchEthereumChain",params:[{chainId:a}]});const s=this.chains.find(o=>o.chainId===e);return s||{chainId:e,name:`Chain ${a}`,slug:`${a}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpc:[""],chain:"",shortName:"",testnet:!0}}catch(s){const o=this.chains.find(c=>c.chainId===e);if(!o)throw new rv({chainId:e,connectorId:this.id});if(s.code===4902||((i=(r=s==null?void 0:s.data)==null?void 0:r.originalError)==null?void 0:i.code)===4902)try{return await n.request({method:"wallet_addEthereumChain",params:[{chainId:a,chainName:o.name,nativeCurrency:o.nativeCurrency,rpcUrls:o.rpc,blockExplorerUrls:this.getBlockExplorerUrls(o)}]}),o}catch(c){throw this.isUserRejectedRequestError(c)?new vt(s):new av}throw this.isUserRejectedRequestError(s)?new vt(s):new zw(s)}}async setupListeners(){const e=await this.getProvider();e.on&&(e.on("accountsChanged",this.onAccountsChanged),e.on("chainChanged",this.onChainChanged),e.on("disconnect",this.onDisconnect))}isUserRejectedRequestError(e){return e.code===4001}}var q2=new WeakMap;class dY extends lY{constructor(e){const a={...{name:"MetaMask",shimDisconnect:!0,shimChainChangedDisconnect:!0,getProvider(){var i;function r(s){if(!!(s!=null&&s.isMetaMask)&&!(s.isBraveWallet&&!s._events&&!s._state)&&!s.isAvalanche&&!s.isKuCoinWallet&&!s.isPortal&&!s.isTokenPocket&&!s.isTokenary)return s}if(ar(globalThis.window))return(i=globalThis.window.ethereum)!=null&&i.providers?globalThis.window.ethereum.providers.find(r):r(globalThis.window.ethereum)}},...e.options};super({chains:e.chains,options:a,connectorStorage:e.connectorStorage}),W(this,"id",Qe.metamask),ze(this,q2,{writable:!0,value:void 0}),st(this,q2,a.UNSTABLE_shimOnConnectSelectAccount)}async connect(){var n,a;let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};try{const r=await this.getProvider();if(!r)throw new Dn;this.setupListeners(),this.emit("message",{type:"connecting"});let i=null;if(K(this,q2)&&((n=this.options)==null?void 0:n.shimDisconnect)&&!Boolean(this.connectorStorage.getItem(this.shimDisconnectKey))&&(i=await this.getAccount().catch(()=>null),!!i))try{await r.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}catch(d){if(this.isUserRejectedRequestError(d))throw new vt(d)}if(!i){const p=await r.request({method:"eth_requestAccounts"});i=Qt(p[0])}let s=await this.getChainId(),o=this.isChainUnsupported(s);if(e.chainId&&s!==e.chainId)try{await this.switchChain(e.chainId),s=e.chainId,o=this.isChainUnsupported(e.chainId)}catch(p){console.error(`Could not switch to chain id : ${e.chainId}`,p)}(a=this.options)!=null&&a.shimDisconnect&&await this.connectorStorage.setItem(this.shimDisconnectKey,"true");const c={chain:{id:s,unsupported:o},provider:r,account:i};return this.emit("connect",c),c}catch(r){throw this.isUserRejectedRequestError(r)?new vt(r):r.code===-32002?new iv(r):r}}async switchAccount(){await(await this.getProvider()).request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}}const uY=Object.freeze(Object.defineProperty({__proto__:null,MetaMaskConnector:dY},Symbol.toStringTag,{value:"Module"})),Q2="last-used-chain-id",I1="last-session";var de=new WeakMap,Yt=new WeakMap,N5=new WeakSet,D5=new WeakSet;class mY extends _1{constructor(e){super(e),In(this,D5),In(this,N5),W(this,"id",Qe.walletConnectV1),W(this,"name","WalletConnectV1"),W(this,"ready",!0),ze(this,de,{writable:!0,value:void 0}),ze(this,Yt,{writable:!0,value:void 0}),W(this,"walletName",void 0),W(this,"onSwitchChain",()=>{this.emit("message",{type:"switch_chain"})}),W(this,"onDisplayUri",async(n,a)=>{n&&this.emit("message",{data:n,type:"display_uri_error"}),this.emit("message",{data:a.params[0],type:"display_uri"})}),W(this,"onRequestSent",(n,a)=>{n&&this.emit("message",{data:n,type:"request"}),this.emit("message",{data:a.params[0],type:"request"})}),W(this,"onMessage",n=>{this.emit("message",n)}),W(this,"onAccountsChanged",n=>{n.length===0?this.emit("disconnect"):this.emit("change",{account:Qt(n[0])})}),W(this,"onChainChanged",n=>{const a=Zn(n),r=this.isChainUnsupported(a);K(this,Yt).setItem(Q2,String(n)),this.emit("change",{chain:{id:a,unsupported:r}})}),W(this,"onDisconnect",async()=>{this.walletName=void 0,K(this,Yt).removeItem(Q2),K(this,Yt).removeItem(I1),Dt(this,D5,yY).call(this),this.emit("disconnect")}),st(this,Yt,e.storage)}async connect(){var n,a,r;let{chainId:e}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};try{let i=e;if(!i){const u=await K(this,Yt).getItem(Q2),m=u?parseInt(u):void 0;m&&!this.isChainUnsupported(m)&&(i=m)}const s=await this.getProvider({chainId:i,create:!0});this.setupListeners(),setTimeout(()=>this.emit("message",{type:"connecting"}),0);const o=await s.enable(),c=Qt(o[0]);let p=await this.getChainId(),d=this.isChainUnsupported(p);if(this.walletName=(r=(a=(n=s.connector)==null?void 0:n.peerMeta)==null?void 0:a.name)!=null?r:"",e)try{await this.switchChain(e),p=e,d=this.isChainUnsupported(p)}catch(u){console.error(`could not switch to desired chain id: ${e} `,u)}return Dt(this,N5,hY).call(this),this.emit("connect",{account:c,chain:{id:p,unsupported:d},provider:s}),{account:c,chain:{id:p,unsupported:d},provider:new Ia(s)}}catch(i){throw/user closed modal/i.test(i.message)?new vt(i):i}}async disconnect(){await(await this.getProvider()).disconnect()}async getAccount(){const n=(await this.getProvider()).accounts;return Qt(n[0])}async getChainId(){const e=await this.getProvider();return Zn(e.chainId)}async getProvider(){var a,r,i;let{chainId:e,create:n}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(!K(this,de)||e||n){const s=(a=this.options)!=null&&a.infuraId?{}:this.chains.reduce((d,u)=>({...d,[u.chainId]:u.rpc[0]}),{}),o=(await j(()=>Promise.resolve().then(()=>Rz),void 0)).default,c=await K(this,Yt).getItem(I1),p=c?JSON.parse(c):void 0;this.walletName=((r=p==null?void 0:p.peerMeta)==null?void 0:r.name)||void 0,st(this,de,new o({...this.options,chainId:e,rpc:{...s,...(i=this.options)==null?void 0:i.rpc},session:p||void 0}))}return K(this,de)}async getSigner(){let{chainId:e}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const[n,a]=await Promise.all([this.getProvider({chainId:e}),this.getAccount()]);return new Ia(n,e).getSigner(a)}async isAuthorized(){try{return!!await this.getAccount()}catch{return!1}}async switchChain(e){var r;const n=await this.getProvider(),a=$5(e);try{return await Promise.race([n.request({method:"wallet_switchEthereumChain",params:[{chainId:a}]}),new Promise(i=>this.on("change",s=>{let{chain:o}=s;(o==null?void 0:o.id)===e&&i(e)}))]),(r=this.chains.find(i=>i.chainId===e))!=null?r:{chainId:e,name:`Chain ${a}`,network:`${a}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpc:[""],shortName:"eth",chain:"ETH",slug:"ethereum",testnet:!1}}catch(i){const s=typeof i=="string"?i:i==null?void 0:i.message;if(/user rejected request/i.test(s))throw new vt(i);const o=this.chains.find(c=>c.chainId===e);if(!o)throw new zw(`Chain ${e} is not added in the list of supported chains`);if(/Unrecognized chain ID/i.test(s)){this.emit("message",{type:"add_chain"});const c=this.getBlockExplorerUrls(o);return await n.request({method:"wallet_addEthereumChain",params:[{chainId:a,chainName:o.name,nativeCurrency:o.nativeCurrency,rpcUrls:o.rpc,blockExplorerUrls:c}]}),o}else throw new zw(i)}}async setupListeners(){!K(this,de)||(K(this,de).on("accountsChanged",this.onAccountsChanged),K(this,de).on("chainChanged",this.onChainChanged),K(this,de).on("disconnect",this.onDisconnect),K(this,de).on("message",this.onMessage),K(this,de).on("switchChain",this.onSwitchChain),K(this,de).on("display_uri",this.onDisplayUri),K(this,de).on("call_request_sent",this.onRequestSent))}}async function hY(){var n,a;const t=(n=K(this,de))==null?void 0:n.connector.session;this.walletName=((a=t==null?void 0:t.peerMeta)==null?void 0:a.name)||"";const e=JSON.stringify(t);K(this,Yt).setItem(I1,e)}function yY(){!K(this,de)||(K(this,de).removeListener("accountsChanged",this.onAccountsChanged),K(this,de).removeListener("chainChanged",this.onChainChanged),K(this,de).removeListener("disconnect",this.onDisconnect),K(this,de).removeListener("message",this.onMessage),K(this,de).removeListener("switchChain",this.onSwitchChain),K(this,de).removeListener("display_uri",this.onDisplayUri),K(this,de).removeListener("call_request_sent",this.onRequestSent))}const DC=Object.freeze(Object.defineProperty({__proto__:null,WalletConnectV1Connector:mY},Symbol.toStringTag,{value:"Module"}));class c2 extends tI{constructor(e,n,a){var r;let i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,c=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,s,i);super(c,a,o),r=this,l(this,"abi",void 0),l(this,"sales",void 0),l(this,"platformFees",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"events",void 0),l(this,"metadata",void 0),l(this,"app",void 0),l(this,"roles",void 0),l(this,"royalties",void 0),l(this,"claimConditions",void 0),l(this,"checkout",void 0),l(this,"history",void 0),l(this,"interceptor",void 0),l(this,"owner",void 0),l(this,"createBatch",T(async(p,d)=>this.erc1155.lazyMint.prepare(p,d))),l(this,"claimTo",T(async function(p,d,u){let m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;return r.erc1155.claimTo.prepare(p,d,u,{checkERC20Allowance:m})})),l(this,"claim",T(async function(p,d){let u=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;const m=await r.contractWrapper.getSignerAddress();return r.claimTo.prepare(m,p,d,u)})),l(this,"burnTokens",T(async(p,d)=>this.erc1155.burn.prepare(p,d))),this.abi=G.parse(s),this.metadata=new ge(this.contractWrapper,Uv,this.storage),this.app=new $e(this.contractWrapper,this.metadata,this.storage),this.roles=new Xe(this.contractWrapper,c2.contractRoles),this.royalties=new nn(this.contractWrapper,this.metadata),this.sales=new an(this.contractWrapper),this.claimConditions=new B6(this.contractWrapper,this.metadata,this.storage),this.events=new Pe(this.contractWrapper),this.history=new EK(this.events),this.encoder=new Ae(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.platformFees=new St(this.contractWrapper),this.interceptor=new Le(this.contractWrapper),this.checkout=new nI(this.contractWrapper),this.owner=new rn(this.contractWrapper)}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async getAll(e){return this.erc1155.getAll(e)}async getOwned(e){return this.erc1155.getOwned(e)}async getTotalCount(){return this.erc1155.totalCount()}async isTransferRestricted(){return!await this.contractWrapper.readContract.hasRole(we("transfer"),B)}async getClaimTransaction(e,n,a){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;return this.erc1155.getClaimTransaction(e,n,a,{checkERC20Allowance:r})}async prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}}l(c2,"contractRoles",["admin","minter","transfer"]);const fY=Object.freeze(Object.defineProperty({__proto__:null,EditionDrop:c2},Symbol.toStringTag,{value:"Module"})),gY=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"operator",type:"address"}],name:"OperatorNotAllowed",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],indexed:!1,internalType:"struct IClaimCondition.ClaimCondition[]",name:"claimConditions",type:"tuple[]"},{indexed:!1,internalType:"bool",name:"resetEligibility",type:"bool"}],name:"ClaimConditionsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"prevURI",type:"string"},{indexed:!1,internalType:"string",name:"newURI",type:"string"}],name:"ContractURIUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newRoyaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"newRoyaltyBps",type:"uint256"}],name:"DefaultRoyalty",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxTotalSupply",type:"uint256"}],name:"MaxTotalSupplyUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"restriction",type:"bool"}],name:"OperatorRestriction",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"prevOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"}],name:"PrimarySaleRecipientUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"royaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"royaltyBps",type:"uint256"}],name:"RoyaltyForToken",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"saleRecipient",type:"address"}],name:"SaleRecipientForTokenUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"claimConditionIndex",type:"uint256"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTokenId",type:"uint256"},{indexed:!1,internalType:"string",name:"baseURI",type:"string"},{indexed:!1,internalType:"bytes",name:"encryptedBaseURI",type:"bytes"}],name:"TokensLazyMinted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256[]",name:"ids",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"TransferBatch",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"TransferSingle",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"value",type:"string"},{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"URI",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"ids",type:"uint256[]"}],name:"balanceOfBatch",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"burnBatch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDrop1155.AllowlistProof",name:"_allowlistProof",type:"tuple"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"claimCondition",outputs:[{internalType:"uint256",name:"currentStartId",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getActiveClaimConditionId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBaseURICount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"getBatchIdAtIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_conditionId",type:"uint256"}],name:"getClaimConditionById",outputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],internalType:"struct IClaimCondition.ClaimCondition",name:"condition",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDefaultRoyaltyInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFlatPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeType",outputs:[{internalType:"enum IPlatformFee.PlatformFeeType",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"member",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getRoyaltyInfoForToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"}],name:"getSupplyClaimedByWallet",outputs:[{internalType:"uint256",name:"supplyClaimedByWallet",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRoleWithSwitch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_saleRecipient",type:"address"},{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint128",name:"_royaltyBps",type:"uint128"},{internalType:"uint128",name:"_platformFeeBps",type:"uint128"},{internalType:"address",name:"_platformFeeRecipient",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"string",name:"_baseURIForTokens",type:"string"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"lazyMint",outputs:[{internalType:"uint256",name:"batchId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"maxTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextTokenIdToMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"operatorRestriction",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"primarySaleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"salePrice",type:"uint256"}],name:"royaltyInfo",outputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"royaltyAmount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeBatchTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"saleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],internalType:"struct IClaimCondition.ClaimCondition[]",name:"_conditions",type:"tuple[]"},{internalType:"bool",name:"_resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint256",name:"_royaltyBps",type:"uint256"}],name:"setDefaultRoyaltyInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_flatFee",type:"uint256"}],name:"setFlatPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_maxTotalSupply",type:"uint256"}],name:"setMaxTotalSupply",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_restriction",type:"bool"}],name:"setOperatorRestriction",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IPlatformFee.PlatformFeeType",name:"_feeType",type:"uint8"}],name:"setPlatformFeeType",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setPrimarySaleRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_bps",type:"uint256"}],name:"setRoyaltyInfoForToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setSaleRecipientForToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_subscription",type:"address"}],name:"subscribeToRegistry",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"uri",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDrop1155.AllowlistProof",name:"_allowlistProof",type:"tuple"}],name:"verifyClaim",outputs:[{internalType:"bool",name:"isOverride",type:"bool"}],stateMutability:"view",type:"function"}],bY=Object.freeze(Object.defineProperty({__proto__:null,default:gY},Symbol.toStringTag,{value:"Module"})),TY=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],indexed:!1,internalType:"struct IDropClaimCondition_V2.ClaimCondition[]",name:"claimConditions",type:"tuple[]"}],name:"ClaimConditionsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newRoyaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"newRoyaltyBps",type:"uint256"}],name:"DefaultRoyalty",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxTotalSupply",type:"uint256"}],name:"MaxTotalSupplyUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"count",type:"uint256"}],name:"MaxWalletClaimCountUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"prevOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"}],name:"PrimarySaleRecipientUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"royaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"royaltyBps",type:"uint256"}],name:"RoyaltyForToken",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"saleRecipient",type:"address"}],name:"SaleRecipientForTokenUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"claimConditionIndex",type:"uint256"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTokenId",type:"uint256"},{indexed:!1,internalType:"string",name:"baseURI",type:"string"}],name:"TokensLazyMinted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256[]",name:"ids",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"TransferBatch",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"TransferSingle",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"value",type:"string"},{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"URI",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"wallet",type:"address"},{indexed:!1,internalType:"uint256",name:"count",type:"uint256"}],name:"WalletClaimCountUpdated",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"ids",type:"uint256[]"}],name:"balanceOfBatch",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"burnBatch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{internalType:"bytes32[]",name:"_proofs",type:"bytes32[]"},{internalType:"uint256",name:"_proofMaxQuantityPerTransaction",type:"uint256"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"claimCondition",outputs:[{internalType:"uint256",name:"currentStartId",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getActiveClaimConditionId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_conditionId",type:"uint256"}],name:"getClaimConditionById",outputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDropClaimCondition_V2.ClaimCondition",name:"condition",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"}],name:"getClaimTimestamp",outputs:[{internalType:"uint256",name:"lastClaimTimestamp",type:"uint256"},{internalType:"uint256",name:"nextValidClaimTimestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDefaultRoyaltyInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getRoyaltyInfoForToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_saleRecipient",type:"address"},{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint128",name:"_royaltyBps",type:"uint128"},{internalType:"uint128",name:"_platformFeeBps",type:"uint128"},{internalType:"address",name:"_platformFeeRecipient",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"string",name:"_baseURIForTokens",type:"string"}],name:"lazyMint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"maxTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"maxWalletClaimCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextTokenIdToMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"primarySaleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"salePrice",type:"uint256"}],name:"royaltyInfo",outputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"royaltyAmount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeBatchTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"saleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDropClaimCondition_V2.ClaimCondition[]",name:"_phases",type:"tuple[]"},{internalType:"bool",name:"_resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint256",name:"_royaltyBps",type:"uint256"}],name:"setDefaultRoyaltyInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_maxTotalSupply",type:"uint256"}],name:"setMaxTotalSupply",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_count",type:"uint256"}],name:"setMaxWalletClaimCount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setPrimarySaleRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_bps",type:"uint256"}],name:"setRoyaltyInfoForToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setSaleRecipientForToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_count",type:"uint256"}],name:"setWalletClaimCount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"uri",outputs:[{internalType:"string",name:"_tokenURI",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{internalType:"bool",name:"verifyMaxQuantityPerTransaction",type:"bool"}],name:"verifyClaim",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"bytes32[]",name:"_proofs",type:"bytes32[]"},{internalType:"uint256",name:"_proofMaxQuantityPerTransaction",type:"uint256"}],name:"verifyClaimMerkleProof",outputs:[{internalType:"bool",name:"validMerkleProof",type:"bool"},{internalType:"uint256",name:"merkleProofIndex",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"walletClaimCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],wY=Object.freeze(Object.defineProperty({__proto__:null,default:TY},Symbol.toStringTag,{value:"Module"}));class p2 extends tI{constructor(e,n,a){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,i,r);super(o,a,s),l(this,"abi",void 0),l(this,"metadata",void 0),l(this,"app",void 0),l(this,"roles",void 0),l(this,"sales",void 0),l(this,"platformFees",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"events",void 0),l(this,"royalties",void 0),l(this,"signature",void 0),l(this,"interceptor",void 0),l(this,"owner",void 0),l(this,"mint",T(async c=>this.erc1155.mint.prepare(c))),l(this,"mintTo",T(async(c,p)=>this.erc1155.mintTo.prepare(c,p))),l(this,"mintAdditionalSupply",T(async(c,p)=>this.erc1155.mintAdditionalSupply.prepare(c,p))),l(this,"mintAdditionalSupplyTo",T(async(c,p,d)=>this.erc1155.mintAdditionalSupplyTo.prepare(c,p,d))),l(this,"mintBatch",T(async c=>this.erc1155.mintBatch.prepare(c))),l(this,"mintBatchTo",T(async(c,p)=>this.erc1155.mintBatchTo.prepare(c,p))),l(this,"burn",T(async(c,p)=>this.erc1155.burn.prepare(c,p))),this.abi=G.parse(i||[]),this.metadata=new ge(this.contractWrapper,Vv,this.storage),this.app=new $e(this.contractWrapper,this.metadata,this.storage),this.roles=new Xe(this.contractWrapper,p2.contractRoles),this.royalties=new nn(this.contractWrapper,this.metadata),this.sales=new an(this.contractWrapper),this.encoder=new Ae(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.events=new Pe(this.contractWrapper),this.platformFees=new St(this.contractWrapper),this.interceptor=new Le(this.contractWrapper),this.signature=new L6(this.contractWrapper,this.storage,this.roles),this.owner=new rn(this.contractWrapper)}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async getAll(e){return this.erc1155.getAll(e)}async getOwned(e){return this.erc1155.getOwned(e)}async getTotalCount(){return this.erc1155.totalCount()}async isTransferRestricted(){return!await this.contractWrapper.readContract.hasRole(we("transfer"),B)}async getMintTransaction(e,n){return this.erc1155.getMintTransaction(e,n)}async prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}}l(p2,"contractRoles",["admin","minter","transfer"]);const IY=Object.freeze(Object.defineProperty({__proto__:null,Edition:p2},Symbol.toStringTag,{value:"Module"})),vY=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"operator",type:"address"}],name:"OperatorNotAllowed",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newRoyaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"newRoyaltyBps",type:"uint256"}],name:"DefaultRoyalty",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"restriction",type:"bool"}],name:"OperatorRestriction",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"prevOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"}],name:"PrimarySaleRecipientUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"royaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"royaltyBps",type:"uint256"}],name:"RoyaltyForToken",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenIdMinted",type:"uint256"},{indexed:!1,internalType:"string",name:"uri",type:"string"},{indexed:!1,internalType:"uint256",name:"quantityMinted",type:"uint256"}],name:"TokensMinted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"signer",type:"address"},{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenIdMinted",type:"uint256"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],indexed:!1,internalType:"struct ITokenERC1155.MintRequest",name:"mintRequest",type:"tuple"}],name:"TokensMintedWithSignature",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256[]",name:"ids",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"TransferBatch",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"TransferSingle",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"value",type:"string"},{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"URI",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"ids",type:"uint256[]"}],name:"balanceOfBatch",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"burnBatch",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDefaultRoyaltyInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFlatPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeType",outputs:[{internalType:"enum IPlatformFee.PlatformFeeType",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getRoyaltyInfoForToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_primarySaleRecipient",type:"address"},{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint128",name:"_royaltyBps",type:"uint128"},{internalType:"uint128",name:"_platformFeeBps",type:"uint128"},{internalType:"address",name:"_platformFeeRecipient",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"string",name:"_uri",type:"string"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mintTo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ITokenERC1155.MintRequest",name:"_req",type:"tuple"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"mintWithSignature",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextTokenIdToMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"operatorRestriction",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"platformFeeRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"primarySaleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"salePrice",type:"uint256"}],name:"royaltyInfo",outputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"royaltyAmount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeBatchTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"saleRecipientForToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint256",name:"_royaltyBps",type:"uint256"}],name:"setDefaultRoyaltyInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_flatFee",type:"uint256"}],name:"setFlatPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_restriction",type:"bool"}],name:"setOperatorRestriction",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IPlatformFee.PlatformFeeType",name:"_feeType",type:"uint8"}],name:"setPlatformFeeType",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setPrimarySaleRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_bps",type:"uint256"}],name:"setRoyaltyInfoForToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_subscription",type:"address"}],name:"subscribeToRegistry",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"uri",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ITokenERC1155.MintRequest",name:"_req",type:"tuple"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"verify",outputs:[{internalType:"bool",name:"",type:"bool"},{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}],CY=Object.freeze(Object.defineProperty({__proto__:null,default:vY},Symbol.toStringTag,{value:"Module"}));class l2{get chainId(){return this._chainId}constructor(e,n,a){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,i,r);l(this,"abi",void 0),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"encoder",void 0),l(this,"events",void 0),l(this,"estimator",void 0),l(this,"platformFees",void 0),l(this,"metadata",void 0),l(this,"app",void 0),l(this,"roles",void 0),l(this,"interceptor",void 0),l(this,"direct",void 0),l(this,"auction",void 0),l(this,"_chainId",void 0),l(this,"getAll",this.getAllListings),l(this,"buyoutListing",T(async(c,p,d)=>{const u=await this.contractWrapper.readContract.listings(c);if(u.listingId.toString()!==c.toString())throw new Fn(this.getAddress(),c.toString());switch(u.listingType){case Fe.Direct:return P(p!==void 0,"quantityDesired is required when buying out a direct listing"),await this.direct.buyoutListing.prepare(c,p,d);case Fe.Auction:return await this.auction.buyoutListing.prepare(c);default:throw Error(`Unknown listing type: ${u.listingType}`)}})),l(this,"makeOffer",T(async(c,p,d)=>{const u=await this.contractWrapper.readContract.listings(c);if(u.listingId.toString()!==c.toString())throw new Fn(this.getAddress(),c.toString());const m=await this.contractWrapper.getChainID();switch(u.listingType){case Fe.Direct:return P(d,"quantity is required when making an offer on a direct listing"),await this.direct.makeOffer.prepare(c,d,ct(u.currency)?La[m].wrapped.address:u.currency,p);case Fe.Auction:return await this.auction.makeBid.prepare(c,p);default:throw Error(`Unknown listing type: ${u.listingType}`)}})),l(this,"setBidBufferBps",T(async c=>{await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const p=await this.getTimeBufferInSeconds();return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAuctionBuffers",args:[p,b.from(c)]})})),l(this,"setTimeBufferInSeconds",T(async c=>{await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const p=await this.getBidBufferBps();return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAuctionBuffers",args:[b.from(c),p]})})),l(this,"allowListingFromSpecificAssetOnly",T(async c=>{const p=[];return(await this.roles.get("asset")).includes(B)&&p.push(this.encoder.encode("revokeRole",[we("asset"),B])),p.push(this.encoder.encode("grantRole",[we("asset"),c])),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[p]})})),l(this,"allowListingFromAnyAsset",T(async()=>{const c=[],p=await this.roles.get("asset");for(const d in p)c.push(this.encoder.encode("revokeRole",[we("asset"),d]));return c.push(this.encoder.encode("grantRole",[we("asset"),B])),v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[c]})})),this._chainId=s,this.abi=G.parse(i||[]),this.contractWrapper=o,this.storage=a,this.metadata=new ge(this.contractWrapper,$0,this.storage),this.app=new $e(this.contractWrapper,this.metadata,this.storage),this.roles=new Xe(this.contractWrapper,l2.contractRoles),this.encoder=new Ae(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.direct=new RK(this.contractWrapper,this.storage),this.auction=new AK(this.contractWrapper,this.storage),this.events=new Pe(this.contractWrapper),this.platformFees=new St(this.contractWrapper),this.interceptor=new Le(this.contractWrapper)}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async getListing(e){const n=await this.contractWrapper.readContract.listings(e);if(n.assetContract===B)throw new Fn(this.getAddress(),e.toString());switch(n.listingType){case Fe.Auction:return await this.auction.mapListing(n);case Fe.Direct:return await this.direct.mapListing(n);default:throw new Error(`Unknown listing type: ${n.listingType}`)}}async getActiveListings(e){const n=await this.getAllListingsNoFilter(!0),a=this.applyFilter(n,e),r=b.from(Math.floor(Date.now()/1e3));return a.filter(i=>i.type===Fe.Auction&&b.from(i.endTimeInEpochSeconds).gt(r)&&b.from(i.startTimeInEpochSeconds).lte(r)||i.type===Fe.Direct&&i.quantity>0)}async getAllListings(e){const n=await this.getAllListingsNoFilter(!1);return this.applyFilter(n,e)}async getTotalCount(){return await this.contractWrapper.readContract.totalListings()}async isRestrictedToListerRoleOnly(){return!await this.contractWrapper.readContract.hasRole(we("lister"),B)}async getBidBufferBps(){return this.contractWrapper.readContract.bidBufferBps()}async getTimeBufferInSeconds(){return this.contractWrapper.readContract.timeBuffer()}async getOffers(e){const n=await this.events.getEvents("NewOffer",{order:"desc",filters:{listingId:e}});return await Promise.all(n.map(async a=>await eI(this.contractWrapper.getProvider(),b.from(e),{quantityWanted:a.data.quantityWanted,pricePerToken:a.data.quantityWanted.gt(0)?a.data.totalOfferAmount.div(a.data.quantityWanted):a.data.totalOfferAmount,currency:a.data.currency,offeror:a.data.offeror})))}async getAllListingsNoFilter(e){return(await Promise.all(Array.from(Array((await this.contractWrapper.readContract.totalListings()).toNumber()).keys()).map(async a=>{let r;try{r=await this.getListing(a)}catch(i){if(i instanceof Fn)return;console.warn(`Failed to get listing ${a}' - skipping. Try 'marketplace.getListing(${a})' to get the underlying error.`);return}if(r.type===Fe.Auction)return r;if(e){const{valid:i}=await this.direct.isStillValidListing(r);if(!i)return}return r}))).filter(a=>a!==void 0)}applyFilter(e,n){let a=[...e];const r=b.from((n==null?void 0:n.start)||0).toNumber(),i=b.from((n==null?void 0:n.count)||ot).toNumber();return n&&(n.seller&&(a=a.filter(s=>{var o;return s.sellerAddress.toString().toLowerCase()===((o=n==null?void 0:n.seller)==null?void 0:o.toString().toLowerCase())})),n.tokenContract&&(a=a.filter(s=>{var o;return s.assetContractAddress.toString().toLowerCase()===((o=n==null?void 0:n.tokenContract)==null?void 0:o.toString().toLowerCase())})),n.tokenId!==void 0&&(a=a.filter(s=>{var o;return s.tokenId.toString()===((o=n==null?void 0:n.tokenId)==null?void 0:o.toString())})),a=a.filter((s,o)=>o>=r),a=a.slice(0,i)),a}async prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}}l(l2,"contractRoles",["admin","lister","asset"]);const kY=Object.freeze(Object.defineProperty({__proto__:null,Marketplace:l2},Symbol.toStringTag,{value:"Module"})),EY=[{inputs:[{internalType:"address",name:"_nativeTokenWrapper",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"timeBuffer",type:"uint256"},{indexed:!1,internalType:"uint256",name:"bidBufferBps",type:"uint256"}],name:"AuctionBuffersUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"listingId",type:"uint256"},{indexed:!0,internalType:"address",name:"closer",type:"address"},{indexed:!0,internalType:"bool",name:"cancelled",type:"bool"},{indexed:!1,internalType:"address",name:"auctionCreator",type:"address"},{indexed:!1,internalType:"address",name:"winningBidder",type:"address"}],name:"AuctionClosed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"listingId",type:"uint256"},{indexed:!0,internalType:"address",name:"assetContract",type:"address"},{indexed:!0,internalType:"address",name:"lister",type:"address"},{components:[{internalType:"uint256",name:"listingId",type:"uint256"},{internalType:"address",name:"tokenOwner",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"reservePricePerToken",type:"uint256"},{internalType:"uint256",name:"buyoutPricePerToken",type:"uint256"},{internalType:"enum IMarketplace.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IMarketplace.ListingType",name:"listingType",type:"uint8"}],indexed:!1,internalType:"struct IMarketplace.Listing",name:"listing",type:"tuple"}],name:"ListingAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"listingId",type:"uint256"},{indexed:!0,internalType:"address",name:"listingCreator",type:"address"}],name:"ListingRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"listingId",type:"uint256"},{indexed:!0,internalType:"address",name:"listingCreator",type:"address"}],name:"ListingUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"listingId",type:"uint256"},{indexed:!0,internalType:"address",name:"offeror",type:"address"},{indexed:!0,internalType:"enum IMarketplace.ListingType",name:"listingType",type:"uint8"},{indexed:!1,internalType:"uint256",name:"quantityWanted",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalOfferAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"currency",type:"address"}],name:"NewOffer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"listingId",type:"uint256"},{indexed:!0,internalType:"address",name:"assetContract",type:"address"},{indexed:!0,internalType:"address",name:"lister",type:"address"},{indexed:!1,internalType:"address",name:"buyer",type:"address"},{indexed:!1,internalType:"uint256",name:"quantityBought",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalPricePaid",type:"uint256"}],name:"NewSale",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"MAX_BPS",outputs:[{internalType:"uint64",name:"",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_listingId",type:"uint256"},{internalType:"address",name:"_offeror",type:"address"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"}],name:"acceptOffer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"bidBufferBps",outputs:[{internalType:"uint64",name:"",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_listingId",type:"uint256"},{internalType:"address",name:"_buyFor",type:"address"},{internalType:"uint256",name:"_quantityToBuy",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_totalPrice",type:"uint256"}],name:"buy",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"_listingId",type:"uint256"}],name:"cancelDirectListing",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_listingId",type:"uint256"},{internalType:"address",name:"_closeFor",type:"address"}],name:"closeAuction",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"secondsUntilEndTime",type:"uint256"},{internalType:"uint256",name:"quantityToList",type:"uint256"},{internalType:"address",name:"currencyToAccept",type:"address"},{internalType:"uint256",name:"reservePricePerToken",type:"uint256"},{internalType:"uint256",name:"buyoutPricePerToken",type:"uint256"},{internalType:"enum IMarketplace.ListingType",name:"listingType",type:"uint8"}],internalType:"struct IMarketplace.ListingParameters",name:"_params",type:"tuple"}],name:"createListing",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"listings",outputs:[{internalType:"uint256",name:"listingId",type:"uint256"},{internalType:"address",name:"tokenOwner",type:"address"},{internalType:"address",name:"assetContract",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"reservePricePerToken",type:"uint256"},{internalType:"uint256",name:"buyoutPricePerToken",type:"uint256"},{internalType:"enum IMarketplace.TokenType",name:"tokenType",type:"uint8"},{internalType:"enum IMarketplace.ListingType",name:"listingType",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_listingId",type:"uint256"},{internalType:"uint256",name:"_quantityWanted",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"}],name:"offer",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"offers",outputs:[{internalType:"uint256",name:"listingId",type:"uint256"},{internalType:"address",name:"offeror",type:"address"},{internalType:"uint256",name:"quantityWanted",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC1155BatchReceived",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC1155Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC721Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_timeBuffer",type:"uint256"},{internalType:"uint256",name:"_bidBufferBps",type:"uint256"}],name:"setAuctionBuffers",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"timeBuffer",outputs:[{internalType:"uint64",name:"",type:"uint64"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalListings",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_listingId",type:"uint256"},{internalType:"uint256",name:"_quantityToList",type:"uint256"},{internalType:"uint256",name:"_reservePricePerToken",type:"uint256"},{internalType:"uint256",name:"_buyoutPricePerToken",type:"uint256"},{internalType:"address",name:"_currencyToAccept",type:"address"},{internalType:"uint256",name:"_startTime",type:"uint256"},{internalType:"uint256",name:"_secondsUntilEndTime",type:"uint256"}],name:"updateListing",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"winningBid",outputs:[{internalType:"uint256",name:"listingId",type:"uint256"},{internalType:"address",name:"offeror",type:"address"},{internalType:"uint256",name:"quantityWanted",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"uint256",name:"expirationTimestamp",type:"uint256"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],xY=Object.freeze(Object.defineProperty({__proto__:null,default:EY},Symbol.toStringTag,{value:"Module"}));class d2{get directListings(){return $(this.detectDirectListings(),$a)}get englishAuctions(){return $(this.detectEnglishAuctions(),Ya)}get offers(){return $(this.detectOffers(),za)}get chainId(){return this._chainId}constructor(e,n,a){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,i,r);l(this,"abi",void 0),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"encoder",void 0),l(this,"events",void 0),l(this,"estimator",void 0),l(this,"platformFees",void 0),l(this,"metadata",void 0),l(this,"app",void 0),l(this,"roles",void 0),l(this,"interceptor",void 0),l(this,"_chainId",void 0),this._chainId=s,this.abi=G.parse(i||[]),this.contractWrapper=o,this.storage=a,this.metadata=new ge(this.contractWrapper,$0,this.storage),this.app=new $e(this.contractWrapper,this.metadata,this.storage),this.roles=new Xe(this.contractWrapper,d2.contractRoles),this.encoder=new Ae(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.events=new Pe(this.contractWrapper),this.platformFees=new St(this.contractWrapper),this.interceptor=new Le(this.contractWrapper)}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}detectDirectListings(){if(U(this.contractWrapper,"DirectListings"))return new H6(this.contractWrapper,this.storage)}detectEnglishAuctions(){if(U(this.contractWrapper,"EnglishAuctions"))return new K6(this.contractWrapper,this.storage)}detectOffers(){if(U(this.contractWrapper,"Offers"))return new O6(this.contractWrapper,this.storage)}}l(d2,"contractRoles",["admin","lister","asset"]);const RY=Object.freeze(Object.defineProperty({__proto__:null,MarketplaceV3:d2},Symbol.toStringTag,{value:"Module"})),AY=[{inputs:[{internalType:"address",name:"_pluginMap",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"prevURI",type:"string"},{indexed:!1,internalType:"string",name:"newURI",type:"string"}],name:"ContractURIUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes4",name:"functionSelector",type:"bytes4"},{indexed:!0,internalType:"address",name:"pluginAddress",type:"address"}],name:"PluginAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes4",name:"functionSelector",type:"bytes4"},{indexed:!0,internalType:"address",name:"pluginAddress",type:"address"}],name:"PluginRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes4",name:"functionSelector",type:"bytes4"},{indexed:!0,internalType:"string",name:"functionSignature",type:"string"},{indexed:!0,internalType:"address",name:"pluginAddress",type:"address"}],name:"PluginSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes4",name:"functionSelector",type:"bytes4"},{indexed:!0,internalType:"address",name:"oldPluginAddress",type:"address"},{indexed:!0,internalType:"address",name:"newPluginAddress",type:"address"}],name:"PluginUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{stateMutability:"payable",type:"fallback"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"_selector",type:"bytes4"}],name:"_getPluginForFunction",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bytes4",name:"functionSelector",type:"bytes4"},{internalType:"string",name:"functionSignature",type:"string"},{internalType:"address",name:"pluginAddress",type:"address"}],internalType:"struct IPluginMap.Plugin",name:"_plugin",type:"tuple"}],name:"addPlugin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"_pluginAddress",type:"address"}],name:"getAllFunctionsOfPlugin",outputs:[{internalType:"bytes4[]",name:"registered",type:"bytes4[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAllPlugins",outputs:[{components:[{internalType:"bytes4",name:"functionSelector",type:"bytes4"},{internalType:"string",name:"functionSignature",type:"string"},{internalType:"address",name:"pluginAddress",type:"address"}],internalType:"struct IPluginMap.Plugin[]",name:"registered",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"_selector",type:"bytes4"}],name:"getPluginForFunction",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"member",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRoleWithSwitch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint16",name:"_platformFeeBps",type:"uint16"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC1155BatchReceived",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC1155Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC721Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"pure",type:"function"},{inputs:[],name:"pluginMap",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"_selector",type:"bytes4"}],name:"removePlugin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bytes4",name:"functionSelector",type:"bytes4"},{internalType:"string",name:"functionSignature",type:"string"},{internalType:"address",name:"pluginAddress",type:"address"}],internalType:"struct IPluginMap.Plugin",name:"_plugin",type:"tuple"}],name:"updatePlugin",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],PY=Object.freeze(Object.defineProperty({__proto__:null,default:AY},Symbol.toStringTag,{value:"Module"}));class u2 extends J0{constructor(e,n,a){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,i,r);super(o,a,s),l(this,"abi",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"metadata",void 0),l(this,"app",void 0),l(this,"events",void 0),l(this,"roles",void 0),l(this,"royalties",void 0),l(this,"owner",void 0),l(this,"wrap",T(async(c,p,d)=>{const u=await Q0(p,this.storage),m=await k(d||await this.contractWrapper.getSignerAddress()),f=await this.toTokenStructList(c);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"wrap",args:[f,u,m],parse:g=>{const w=this.contractWrapper.parseLogs("TokensWrapped",g==null?void 0:g.logs);if(w.length===0)throw new Error("TokensWrapped event not found");const I=w[0].args.tokenIdOfWrappedToken;return{id:I,receipt:g,data:()=>this.get(I)}}})})),l(this,"unwrap",T(async(c,p)=>{const d=await k(p||await this.contractWrapper.getSignerAddress());return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"unwrap",args:[c,d]})})),this.abi=G.parse(i||[]),this.metadata=new ge(this.contractWrapper,q6,this.storage),this.app=new $e(this.contractWrapper,this.metadata,this.storage),this.roles=new Xe(this.contractWrapper,u2.contractRoles),this.encoder=new Ae(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.events=new Pe(this.contractWrapper),this.royalties=new nn(this.contractWrapper,this.metadata),this.owner=new rn(this.contractWrapper)}async getWrappedContents(e){const n=await this.contractWrapper.readContract.getWrappedContents(e),a=[],r=[],i=[];for(const s of n)switch(s.tokenType){case 0:{const o=await gt(this.contractWrapper.getProvider(),s.assetContract);a.push({contractAddress:s.assetContract,quantity:Ge(s.totalAmount,o.decimals)});break}case 1:{r.push({contractAddress:s.assetContract,tokenId:s.tokenId});break}case 2:{i.push({contractAddress:s.assetContract,tokenId:s.tokenId,quantity:s.totalAmount.toString()});break}}return{erc20Tokens:a,erc721Tokens:r,erc1155Tokens:i}}async toTokenStructList(e){const n=[],a=this.contractWrapper.getProvider(),r=await this.contractWrapper.getSignerAddress();if(e.erc20Tokens)for(const i of e.erc20Tokens){const s=await se(a,i.quantity,i.contractAddress);if(!await c6(this.contractWrapper,i.contractAddress,s))throw new Error(`ERC20 token with contract address "${i.contractAddress}" does not have enough allowance to transfer.

You can set allowance to the multiwrap contract to transfer these tokens by running:

await sdk.getToken("${i.contractAddress}").setAllowance("${this.getAddress()}", ${i.quantity});

`);n.push({assetContract:i.contractAddress,totalAmount:s,tokenId:0,tokenType:0})}if(e.erc721Tokens)for(const i of e.erc721Tokens){if(!await ra(this.contractWrapper.getProvider(),this.getAddress(),i.contractAddress,i.tokenId,r))throw new Error(`ERC721 token "${i.tokenId}" with contract address "${i.contractAddress}" is not approved for transfer.

You can give approval the multiwrap contract to transfer this token by running:

await sdk.getNFTCollection("${i.contractAddress}").setApprovalForToken("${this.getAddress()}", ${i.tokenId});

`);n.push({assetContract:i.contractAddress,totalAmount:0,tokenId:i.tokenId,tokenType:1})}if(e.erc1155Tokens)for(const i of e.erc1155Tokens){if(!await ra(this.contractWrapper.getProvider(),this.getAddress(),i.contractAddress,i.tokenId,r))throw new Error(`ERC1155 token "${i.tokenId}" with contract address "${i.contractAddress}" is not approved for transfer.

You can give approval the multiwrap contract to transfer this token by running:

await sdk.getEdition("${i.contractAddress}").setApprovalForAll("${this.getAddress()}", true);

`);n.push({assetContract:i.contractAddress,totalAmount:i.quantity,tokenId:i.tokenId,tokenType:2})}return n}async prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}}l(u2,"contractRoles",["admin","transfer","minter","unwrap","asset"]);const MY=Object.freeze(Object.defineProperty({__proto__:null,Multiwrap:u2},Symbol.toStringTag,{value:"Module"})),_Y=[{inputs:[{internalType:"address",name:"_nativeTokenWrapper",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"prevURI",type:"string"},{indexed:!1,internalType:"string",name:"newURI",type:"string"}],name:"ContractURIUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newRoyaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"newRoyaltyBps",type:"uint256"}],name:"DefaultRoyalty",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"prevOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"royaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"royaltyBps",type:"uint256"}],name:"RoyaltyForToken",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"unwrapper",type:"address"},{indexed:!0,internalType:"address",name:"recipientOfWrappedContents",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenIdOfWrappedToken",type:"uint256"}],name:"TokensUnwrapped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"wrapper",type:"address"},{indexed:!0,internalType:"address",name:"recipientOfWrappedToken",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenIdOfWrappedToken",type:"uint256"},{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"enum ITokenBundle.TokenType",name:"tokenType",type:"uint8"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],indexed:!1,internalType:"struct ITokenBundle.Token[]",name:"wrappedContents",type:"tuple[]"}],name:"TokensWrapped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDefaultRoyaltyInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"member",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getRoyaltyInfoForToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_bundleId",type:"uint256"}],name:"getTokenCountOfBundle",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_bundleId",type:"uint256"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getTokenOfBundle",outputs:[{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"enum ITokenBundle.TokenType",name:"tokenType",type:"uint8"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],internalType:"struct ITokenBundle.Token",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_bundleId",type:"uint256"}],name:"getUriOfBundle",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getWrappedContents",outputs:[{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"enum ITokenBundle.TokenType",name:"tokenType",type:"uint8"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],internalType:"struct ITokenBundle.Token[]",name:"contents",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRoleWithSwitch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint256",name:"_royaltyBps",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextTokenIdToMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC1155BatchReceived",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC1155Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC721Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"salePrice",type:"uint256"}],name:"royaltyInfo",outputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"royaltyAmount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint256",name:"_royaltyBps",type:"uint256"}],name:"setDefaultRoyaltyInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_bps",type:"uint256"}],name:"setRoyaltyInfoForToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"}],name:"unwrap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"enum ITokenBundle.TokenType",name:"tokenType",type:"uint8"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],internalType:"struct ITokenBundle.Token[]",name:"_tokensToWrap",type:"tuple[]"},{internalType:"string",name:"_uriForWrappedToken",type:"string"},{internalType:"address",name:"_recipient",type:"address"}],name:"wrap",outputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}],SY=Object.freeze(Object.defineProperty({__proto__:null,default:_Y},Symbol.toStringTag,{value:"Module"}));class m2 extends J0{constructor(e,n,a){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,i,r);super(o,a,s),l(this,"abi",void 0),l(this,"metadata",void 0),l(this,"app",void 0),l(this,"roles",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"events",void 0),l(this,"sales",void 0),l(this,"platformFees",void 0),l(this,"royalties",void 0),l(this,"owner",void 0),l(this,"signature",void 0),l(this,"interceptor",void 0),l(this,"mint",T(async c=>this.erc721.mint.prepare(c))),l(this,"mintTo",T(async(c,p)=>this.erc721.mintTo.prepare(c,p))),l(this,"mintBatch",T(async c=>this.erc721.mintBatch.prepare(c))),l(this,"mintBatchTo",T(async(c,p)=>this.erc721.mintBatchTo.prepare(c,p))),l(this,"burn",T(c=>this.erc721.burn.prepare(c))),this.abi=G.parse(i||[]),this.metadata=new ge(this.contractWrapper,Qv,this.storage),this.app=new $e(this.contractWrapper,this.metadata,this.storage),this.roles=new Xe(this.contractWrapper,m2.contractRoles),this.royalties=new nn(this.contractWrapper,this.metadata),this.sales=new an(this.contractWrapper),this.encoder=new Ae(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.events=new Pe(this.contractWrapper),this.platformFees=new St(this.contractWrapper),this.interceptor=new Le(this.contractWrapper),this.signature=new W0(this.contractWrapper,this.storage),this.owner=new rn(this.contractWrapper)}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async isTransferRestricted(){return!await this.contractWrapper.readContract.hasRole(we("transfer"),B)}async getMintTransaction(e,n){return this.erc721.getMintTransaction(e,n)}async prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}}l(m2,"contractRoles",["admin","minter","transfer"]);const WY=Object.freeze(Object.defineProperty({__proto__:null,NFTCollection:m2},Symbol.toStringTag,{value:"Module"})),BY=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"operator",type:"address"}],name:"OperatorNotAllowed",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newRoyaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"newRoyaltyBps",type:"uint256"}],name:"DefaultRoyalty",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"restriction",type:"bool"}],name:"OperatorRestriction",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"prevOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"}],name:"PrimarySaleRecipientUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"royaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"royaltyBps",type:"uint256"}],name:"RoyaltyForToken",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenIdMinted",type:"uint256"},{indexed:!1,internalType:"string",name:"uri",type:"string"}],name:"TokensMinted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"signer",type:"address"},{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenIdMinted",type:"uint256"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],indexed:!1,internalType:"struct ITokenERC721.MintRequest",name:"mintRequest",type:"tuple"}],name:"TokensMintedWithSignature",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDefaultRoyaltyInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getRoyaltyInfoForToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_saleRecipient",type:"address"},{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint128",name:"_royaltyBps",type:"uint128"},{internalType:"uint128",name:"_platformFeeBps",type:"uint128"},{internalType:"address",name:"_platformFeeRecipient",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"string",name:"_uri",type:"string"}],name:"mintTo",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ITokenERC721.MintRequest",name:"_req",type:"tuple"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"mintWithSignature",outputs:[{internalType:"uint256",name:"tokenIdMinted",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextTokenIdToMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"operatorRestriction",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"platformFeeRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"primarySaleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"salePrice",type:"uint256"}],name:"royaltyInfo",outputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"royaltyAmount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint256",name:"_royaltyBps",type:"uint256"}],name:"setDefaultRoyaltyInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_restriction",type:"bool"}],name:"setOperatorRestriction",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setPrimarySaleRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_bps",type:"uint256"}],name:"setRoyaltyInfoForToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_subscription",type:"address"}],name:"subscribeToRegistry",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ITokenERC721.MintRequest",name:"_req",type:"tuple"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"verify",outputs:[{internalType:"bool",name:"",type:"bool"},{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}],NY=Object.freeze(Object.defineProperty({__proto__:null,default:BY},Symbol.toStringTag,{value:"Module"}));class h2 extends J0{constructor(e,n,a){var r;let i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,c=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,s,i);super(c,a,o),r=this,l(this,"abi",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"metadata",void 0),l(this,"app",void 0),l(this,"sales",void 0),l(this,"platformFees",void 0),l(this,"events",void 0),l(this,"roles",void 0),l(this,"interceptor",void 0),l(this,"royalties",void 0),l(this,"claimConditions",void 0),l(this,"revealer",void 0),l(this,"checkout",void 0),l(this,"owner",void 0),l(this,"createBatch",T(async(p,d)=>this.erc721.lazyMint.prepare(p,d))),l(this,"claimTo",T(async function(p,d){let u=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;return r.erc721.claimTo.prepare(p,d,{checkERC20Allowance:u})})),l(this,"claim",T(async function(p){let d=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return r.claimTo.prepare(await r.contractWrapper.getSignerAddress(),p,d)})),l(this,"burn",T(async p=>this.erc721.burn.prepare(p))),l(this,"transfer",T(async(p,d)=>this.erc721.transfer.prepare(p,d))),l(this,"setApprovalForAll",T(async(p,d)=>this.erc721.setApprovalForAll.prepare(p,d))),l(this,"setApprovalForToken",T(async(p,d)=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approve",args:[p,d]}))),this.abi=G.parse(s||[]),this.metadata=new ge(this.contractWrapper,O0,this.storage),this.app=new $e(this.contractWrapper,this.metadata,this.storage),this.roles=new Xe(this.contractWrapper,h2.contractRoles),this.royalties=new nn(this.contractWrapper,this.metadata),this.sales=new an(this.contractWrapper),this.claimConditions=new pr(this.contractWrapper,this.metadata,this.storage),this.encoder=new Ae(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.events=new Pe(this.contractWrapper),this.platformFees=new St(this.contractWrapper),this.revealer=new j0(this.contractWrapper,this.storage,ea.name,()=>this.erc721.nextTokenIdToMint()),this.interceptor=new Le(this.contractWrapper),this.owner=new rn(this.contractWrapper),this.checkout=new nI(this.contractWrapper)}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async totalSupply(){const e=await this.totalClaimedSupply(),n=await this.totalUnclaimedSupply();return e.add(n)}async getAllClaimed(e){const n=b.from((e==null?void 0:e.start)||0).toNumber(),a=b.from((e==null?void 0:e.count)||ot).toNumber(),r=Math.min((await this.contractWrapper.readContract.nextTokenIdToClaim()).toNumber(),n+a);return await Promise.all(Array.from(Array(r).keys()).map(i=>this.get(i.toString())))}async getAllUnclaimed(e){const n=b.from((e==null?void 0:e.start)||0).toNumber(),a=b.from((e==null?void 0:e.count)||ot).toNumber(),r=b.from(Math.max((await this.contractWrapper.readContract.nextTokenIdToClaim()).toNumber(),n)),i=b.from(Math.min((await this.contractWrapper.readContract.nextTokenIdToMint()).toNumber(),r.toNumber()+a));return await Promise.all(Array.from(Array(i.sub(r).toNumber()).keys()).map(s=>this.erc721.getTokenMetadata(r.add(s).toString())))}async totalClaimedSupply(){return this.erc721.totalClaimedSupply()}async totalUnclaimedSupply(){return this.erc721.totalUnclaimedSupply()}async isTransferRestricted(){return!await this.contractWrapper.readContract.hasRole(we("transfer"),B)}async getClaimTransaction(e,n){let a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;return this.erc721.getClaimTransaction(e,n,{checkERC20Allowance:a})}async get(e){return this.erc721.get(e)}async ownerOf(e){return this.erc721.ownerOf(e)}async balanceOf(e){return this.erc721.balanceOf(e)}async balance(){return this.erc721.balance()}async isApproved(e,n){return this.erc721.isApproved(e,n)}async prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}}l(h2,"contractRoles",["admin","minter","transfer"]);const DY=Object.freeze(Object.defineProperty({__proto__:null,NFTDrop:h2},Symbol.toStringTag,{value:"Module"})),LY=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"ApprovalCallerNotOwnerNorApproved",type:"error"},{inputs:[],name:"ApprovalQueryForNonexistentToken",type:"error"},{inputs:[],name:"ApprovalToCurrentOwner",type:"error"},{inputs:[],name:"ApproveToCaller",type:"error"},{inputs:[],name:"BalanceQueryForZeroAddress",type:"error"},{inputs:[],name:"MintToZeroAddress",type:"error"},{inputs:[],name:"MintZeroQuantity",type:"error"},{inputs:[{internalType:"address",name:"operator",type:"address"}],name:"OperatorNotAllowed",type:"error"},{inputs:[],name:"OwnerQueryForNonexistentToken",type:"error"},{inputs:[],name:"TransferCallerNotOwnerNorApproved",type:"error"},{inputs:[],name:"TransferFromIncorrectOwner",type:"error"},{inputs:[],name:"TransferToNonERC721ReceiverImplementer",type:"error"},{inputs:[],name:"TransferToZeroAddress",type:"error"},{inputs:[],name:"URIQueryForNonexistentToken",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],indexed:!1,internalType:"struct IClaimCondition.ClaimCondition[]",name:"claimConditions",type:"tuple[]"},{indexed:!1,internalType:"bool",name:"resetEligibility",type:"bool"}],name:"ClaimConditionsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"prevURI",type:"string"},{indexed:!1,internalType:"string",name:"newURI",type:"string"}],name:"ContractURIUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newRoyaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"newRoyaltyBps",type:"uint256"}],name:"DefaultRoyalty",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"maxTotalSupply",type:"uint256"}],name:"MaxTotalSupplyUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"restriction",type:"bool"}],name:"OperatorRestriction",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"prevOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"}],name:"PrimarySaleRecipientUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"royaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"royaltyBps",type:"uint256"}],name:"RoyaltyForToken",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"index",type:"uint256"},{indexed:!1,internalType:"string",name:"revealedURI",type:"string"}],name:"TokenURIRevealed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"claimConditionIndex",type:"uint256"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTokenId",type:"uint256"},{indexed:!1,internalType:"string",name:"baseURI",type:"string"},{indexed:!1,internalType:"bytes",name:"encryptedBaseURI",type:"bytes"}],name:"TokensLazyMinted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDrop.AllowlistProof",name:"_allowlistProof",type:"tuple"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"claimCondition",outputs:[{internalType:"uint256",name:"currentStartId",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"key",type:"bytes"}],name:"encryptDecrypt",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"encryptedData",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActiveClaimConditionId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBaseURICount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"getBatchIdAtIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"}],name:"getClaimConditionById",outputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],internalType:"struct IClaimCondition.ClaimCondition",name:"condition",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDefaultRoyaltyInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFlatPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeType",outputs:[{internalType:"enum IPlatformFee.PlatformFeeType",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_batchId",type:"uint256"},{internalType:"bytes",name:"_key",type:"bytes"}],name:"getRevealURI",outputs:[{internalType:"string",name:"revealedURI",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"member",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getRoyaltyInfoForToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"}],name:"getSupplyClaimedByWallet",outputs:[{internalType:"uint256",name:"supplyClaimedByWallet",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRoleWithSwitch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_saleRecipient",type:"address"},{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint128",name:"_royaltyBps",type:"uint128"},{internalType:"uint128",name:"_platformFeeBps",type:"uint128"},{internalType:"address",name:"_platformFeeRecipient",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_batchId",type:"uint256"}],name:"isEncryptedBatch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"string",name:"_baseURIForTokens",type:"string"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"lazyMint",outputs:[{internalType:"uint256",name:"batchId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"maxTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextTokenIdToClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextTokenIdToMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"operatorRestriction",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"primarySaleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_index",type:"uint256"},{internalType:"bytes",name:"_key",type:"bytes"}],name:"reveal",outputs:[{internalType:"string",name:"revealedURI",type:"string"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"salePrice",type:"uint256"}],name:"royaltyInfo",outputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"royaltyAmount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],internalType:"struct IClaimCondition.ClaimCondition[]",name:"_conditions",type:"tuple[]"},{internalType:"bool",name:"_resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint256",name:"_royaltyBps",type:"uint256"}],name:"setDefaultRoyaltyInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_flatFee",type:"uint256"}],name:"setFlatPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_maxTotalSupply",type:"uint256"}],name:"setMaxTotalSupply",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_restriction",type:"bool"}],name:"setOperatorRestriction",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IPlatformFee.PlatformFeeType",name:"_feeType",type:"uint8"}],name:"setPlatformFeeType",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setPrimarySaleRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_bps",type:"uint256"}],name:"setRoyaltyInfoForToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_subscription",type:"address"}],name:"subscribeToRegistry",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalMinted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDrop.AllowlistProof",name:"_allowlistProof",type:"tuple"}],name:"verifyClaim",outputs:[{internalType:"bool",name:"isOverride",type:"bool"}],stateMutability:"view",type:"function"}],UY=Object.freeze(Object.defineProperty({__proto__:null,default:LY},Symbol.toStringTag,{value:"Module"})),FY=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],indexed:!1,internalType:"struct IDropClaimCondition_V2.ClaimCondition[]",name:"claimConditions",type:"tuple[]"}],name:"ClaimConditionsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newRoyaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"newRoyaltyBps",type:"uint256"}],name:"DefaultRoyalty",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"maxTotalSupply",type:"uint256"}],name:"MaxTotalSupplyUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"count",type:"uint256"}],name:"MaxWalletClaimCountUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"endTokenId",type:"uint256"},{indexed:!1,internalType:"string",name:"revealedURI",type:"string"}],name:"NFTRevealed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"prevOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"}],name:"PrimarySaleRecipientUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"royaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"royaltyBps",type:"uint256"}],name:"RoyaltyForToken",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"claimConditionIndex",type:"uint256"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTokenId",type:"uint256"},{indexed:!1,internalType:"string",name:"baseURI",type:"string"},{indexed:!1,internalType:"bytes",name:"encryptedBaseURI",type:"bytes"}],name:"TokensLazyMinted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"wallet",type:"address"},{indexed:!1,internalType:"uint256",name:"count",type:"uint256"}],name:"WalletClaimCountUpdated",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"baseURIIndices",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{internalType:"bytes32[]",name:"_proofs",type:"bytes32[]"},{internalType:"uint256",name:"_proofMaxQuantityPerTransaction",type:"uint256"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"claimCondition",outputs:[{internalType:"uint256",name:"currentStartId",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"key",type:"bytes"}],name:"encryptDecrypt",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"encryptedData",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActiveClaimConditionId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBaseURICount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"}],name:"getClaimConditionById",outputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDropClaimCondition_V2.ClaimCondition",name:"condition",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"}],name:"getClaimTimestamp",outputs:[{internalType:"uint256",name:"lastClaimTimestamp",type:"uint256"},{internalType:"uint256",name:"nextValidClaimTimestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDefaultRoyaltyInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getRoyaltyInfoForToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_saleRecipient",type:"address"},{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint128",name:"_royaltyBps",type:"uint128"},{internalType:"uint128",name:"_platformFeeBps",type:"uint128"},{internalType:"address",name:"_platformFeeRecipient",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"string",name:"_baseURIForTokens",type:"string"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"lazyMint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"maxTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletClaimCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextTokenIdToClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextTokenIdToMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"primarySaleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"bytes",name:"_key",type:"bytes"}],name:"reveal",outputs:[{internalType:"string",name:"revealedURI",type:"string"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"salePrice",type:"uint256"}],name:"royaltyInfo",outputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"royaltyAmount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDropClaimCondition_V2.ClaimCondition[]",name:"_phases",type:"tuple[]"},{internalType:"bool",name:"_resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint256",name:"_royaltyBps",type:"uint256"}],name:"setDefaultRoyaltyInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_maxTotalSupply",type:"uint256"}],name:"setMaxTotalSupply",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_count",type:"uint256"}],name:"setMaxWalletClaimCount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setPrimarySaleRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_bps",type:"uint256"}],name:"setRoyaltyInfoForToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_count",type:"uint256"}],name:"setWalletClaimCount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{internalType:"bool",name:"verifyMaxQuantityPerTransaction",type:"bool"}],name:"verifyClaim",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"bytes32[]",name:"_proofs",type:"bytes32[]"},{internalType:"uint256",name:"_proofMaxQuantityPerTransaction",type:"uint256"}],name:"verifyClaimMerkleProof",outputs:[{internalType:"bool",name:"validMerkleProof",type:"bool"},{internalType:"uint256",name:"merkleProofIndex",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"walletClaimCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],HY=Object.freeze(Object.defineProperty({__proto__:null,default:FY},Symbol.toStringTag,{value:"Module"})),KY=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],mI=y.object({contractAddress:ae}),OY=mI.extend({quantity:Ne}),$Y=mI.extend({tokenId:te}),YY=mI.extend({tokenId:te,quantity:te}),LC=OY.omit({quantity:!0}).extend({quantityPerReward:Ne}),UC=$Y,FC=YY.omit({quantity:!0}).extend({quantityPerReward:te}),zY=LC.extend({totalRewards:te.default("1")}),qY=UC,QY=FC.extend({totalRewards:te.default("1")});y.object({erc20Rewards:y.array(LC).default([]),erc721Rewards:y.array(UC).default([]),erc1155Rewards:y.array(FC).default([])});const HC=y.object({erc20Rewards:y.array(zY).default([]),erc721Rewards:y.array(qY).default([]),erc1155Rewards:y.array(QY).default([])}),jY=HC.extend({packMetadata:ca,rewardsPerPack:te.default("1"),openStartTime:or.default(new Date)});class VY{constructor(e,n,a,r,i){var s=this;let o=arguments.length>5&&arguments[5]!==void 0?arguments[5]:new Z(e,n,bv,r);l(this,"featureName",b0.name),l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"chainId",void 0),l(this,"events",void 0),l(this,"open",T(async function(c){let p=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1,d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:5e5;return v.fromContractWrapper({contractWrapper:s.contractWrapper,method:"openPack",args:[c,p],overrides:{gasLimit:d},parse:u=>{let m=b.from(0);try{m=s.contractWrapper.parseLogs("PackOpenRequested",u==null?void 0:u.logs)[0].args.requestId}catch{}return{receipt:u,id:m}}})})),l(this,"claimRewards",T(async function(){let c=arguments.length>0&&arguments[0]!==void 0?arguments[0]:5e5;return v.fromContractWrapper({contractWrapper:s.contractWrapper,method:"claimRewards",args:[],overrides:{gasLimit:c},parse:async p=>{const d=s.contractWrapper.parseLogs("PackOpened",p==null?void 0:p.logs);if(d.length===0)throw new Error("PackOpened event not found");const u=d[0].args.rewardUnitsDistributed;return await s.parseRewards(u)}})})),this.contractWrapper=o,this.storage=a,this.chainId=i,this.events=new Pe(this.contractWrapper)}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async parseRewards(e){const n=[],a=[],r=[];for(const i of e)switch(i.tokenType){case 0:{const s=await gt(this.contractWrapper.getProvider(),i.assetContract);n.push({contractAddress:i.assetContract,quantityPerReward:Ge(i.totalAmount,s.decimals).toString()});break}case 1:{a.push({contractAddress:i.assetContract,tokenId:i.tokenId.toString()});break}case 2:{r.push({contractAddress:i.assetContract,tokenId:i.tokenId.toString(),quantityPerReward:i.totalAmount.toString()});break}}return{erc20Rewards:n,erc721Rewards:a,erc1155Rewards:r}}async addPackOpenEventListener(e){return this.events.addEventListener("PackOpened",async n=>{e(n.data.packId.toString(),n.data.opener,await this.parseRewards(n.data.rewardUnitsDistributed))})}async canClaimRewards(e){const n=await k(e||await this.contractWrapper.getSignerAddress());return await this.contractWrapper.readContract.canClaimRewards(n)}async openAndClaim(e){let n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1,a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:5e5;const r=await this.contractWrapper.sendTransaction("openPackAndClaimRewards",[e,n,a],{gasLimit:b.from(5e5)});let i=b.from(0);try{i=this.contractWrapper.parseLogs("PackOpenRequested",r==null?void 0:r.logs)[0].args.requestId}catch{}return{receipt:r,id:i}}async getLinkBalance(){return this.getLinkContract().balanceOf(this.contractWrapper.readContract.address)}async transferLink(e){await this.getLinkContract().transfer(this.contractWrapper.readContract.address,e)}getLinkContract(){const e=aU[this.chainId];if(!e)throw new Error(`No LINK token address found for chainId ${this.chainId}`);const n=new Z(this.contractWrapper.getSignerOrProvider(),e,KY,this.contractWrapper.options);return new X1(n,this.storage,this.chainId)}}class y2 extends tI{get vrf(){return $(this._vrf,b0)}constructor(e,n,a){var r;let i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,c=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,s,i.gasless&&"openzeppelin"in i.gasless?{...i,gasless:{...i.gasless,openzeppelin:{...i.gasless.openzeppelin,useEOAForwarder:!0}}}:i);super(c,a,o),r=this,l(this,"abi",void 0),l(this,"metadata",void 0),l(this,"app",void 0),l(this,"roles",void 0),l(this,"encoder",void 0),l(this,"events",void 0),l(this,"estimator",void 0),l(this,"royalties",void 0),l(this,"interceptor",void 0),l(this,"owner",void 0),l(this,"_vrf",void 0),l(this,"create",T(async p=>{const d=await this.contractWrapper.getSignerAddress();return this.createTo.prepare(d,p)})),l(this,"addPackContents",T(async(p,d)=>{const u=await this.contractWrapper.getSignerAddress(),m=await HC.parseAsync(d),{contents:f,numOfRewardUnits:g}=await this.toPackContentArgs(m);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"addPackContents",args:[p,f,g,u],parse:w=>{const I=this.contractWrapper.parseLogs("PackUpdated",w==null?void 0:w.logs);if(I.length===0)throw new Error("PackUpdated event not found");const M=I[0].args.packId;return{id:M,receipt:w,data:()=>this.erc1155.get(M)}}})})),l(this,"createTo",T(async(p,d)=>{const u=await Q0(d.packMetadata,this.storage),m=await jY.parseAsync(d),{erc20Rewards:f,erc721Rewards:g,erc1155Rewards:w}=m,I={erc20Rewards:f,erc721Rewards:g,erc1155Rewards:w},{contents:M,numOfRewardUnits:R}=await this.toPackContentArgs(I);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createPack",args:[M,R,u,m.openStartTime,m.rewardsPerPack,await k(p)],parse:N=>{const x=this.contractWrapper.parseLogs("PackCreated",N==null?void 0:N.logs);if(x.length===0)throw new Error("PackCreated event not found");const L=x[0].args.packId;return{id:L,receipt:N,data:()=>this.erc1155.get(L)}}})})),l(this,"open",T(async function(p){let d=arguments.length>1&&arguments[1]!==void 0?arguments[1]:1,u=arguments.length>2&&arguments[2]!==void 0?arguments[2]:5e5;if(r._vrf)throw new Error("This contract is using Chainlink VRF, use `contract.vrf.open()` or `contract.vrf.openAndClaim()` instead");return v.fromContractWrapper({contractWrapper:r.contractWrapper,method:"openPack",args:[p,d],overrides:{gasLimit:u},parse:async m=>{const f=r.contractWrapper.parseLogs("PackOpened",m==null?void 0:m.logs);if(f.length===0)throw new Error("PackOpened event not found");const g=f[0].args.rewardUnitsDistributed,w=[],I=[],M=[];for(const R of g)switch(R.tokenType){case 0:{const N=await gt(r.contractWrapper.getProvider(),R.assetContract);w.push({contractAddress:R.assetContract,quantityPerReward:Ge(R.totalAmount,N.decimals).toString()});break}case 1:{I.push({contractAddress:R.assetContract,tokenId:R.tokenId.toString()});break}case 2:{M.push({contractAddress:R.assetContract,tokenId:R.tokenId.toString(),quantityPerReward:R.totalAmount.toString()});break}}return{erc20Rewards:w,erc721Rewards:I,erc1155Rewards:M}}})})),this.abi=G.parse(s||[]),this.metadata=new ge(this.contractWrapper,Kv,this.storage),this.app=new $e(this.contractWrapper,this.metadata,this.storage),this.roles=new Xe(this.contractWrapper,y2.contractRoles),this.royalties=new nn(this.contractWrapper,this.metadata),this.encoder=new Ae(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.events=new Pe(this.contractWrapper),this.interceptor=new Le(this.contractWrapper),this.owner=new rn(this.contractWrapper),this._vrf=this.detectVrf()}onNetworkUpdated(e){var n;this.contractWrapper.updateSignerOrProvider(e),(n=this._vrf)==null||n.onNetworkUpdated(e)}getAddress(){return this.contractWrapper.readContract.address}async get(e){return this.erc1155.get(e)}async getAll(e){return this.erc1155.getAll(e)}async getOwned(e){return this.erc1155.getOwned(e)}async getTotalCount(){return this.erc1155.totalCount()}async isTransferRestricted(){return!await this.contractWrapper.readContract.hasRole(we("transfer"),B)}async getPackContents(e){const{contents:n,perUnitAmounts:a}=await this.contractWrapper.readContract.getPackContents(e),r=[],i=[],s=[];for(let o=0;o<n.length;o++){const c=n[o],p=a[o];switch(c.tokenType){case 0:{const d=await gt(this.contractWrapper.getProvider(),c.assetContract),u=Ge(p,d.decimals),m=Ge(b.from(c.totalAmount).div(p),d.decimals);r.push({contractAddress:c.assetContract,quantityPerReward:u,totalRewards:m});break}case 1:{i.push({contractAddress:c.assetContract,tokenId:c.tokenId.toString()});break}case 2:{s.push({contractAddress:c.assetContract,tokenId:c.tokenId.toString(),quantityPerReward:p.toString(),totalRewards:b.from(c.totalAmount).div(p).toString()});break}}}return{erc20Rewards:r,erc721Rewards:i,erc1155Rewards:s}}async toPackContentArgs(e){const n=[],a=[],{erc20Rewards:r,erc721Rewards:i,erc1155Rewards:s}=e,o=this.contractWrapper.getProvider(),c=await this.contractWrapper.getSignerAddress();for(const p of r){const u=(await se(o,p.quantityPerReward,p.contractAddress)).mul(p.totalRewards);if(!await c6(this.contractWrapper,p.contractAddress,u))throw new Error(`ERC20 token with contract address "${p.contractAddress}" does not have enough allowance to transfer.

You can set allowance to the multiwrap contract to transfer these tokens by running:

await sdk.getToken("${p.contractAddress}").setAllowance("${this.getAddress()}", ${u});

`);a.push(p.totalRewards),n.push({assetContract:p.contractAddress,tokenType:0,totalAmount:u,tokenId:0})}for(const p of i){if(!await ra(this.contractWrapper.getProvider(),this.getAddress(),p.contractAddress,p.tokenId,c))throw new Error(`ERC721 token "${p.tokenId}" with contract address "${p.contractAddress}" is not approved for transfer.

You can give approval the multiwrap contract to transfer this token by running:

await sdk.getNFTCollection("${p.contractAddress}").setApprovalForToken("${this.getAddress()}", ${p.tokenId});

`);a.push("1"),n.push({assetContract:p.contractAddress,tokenType:1,totalAmount:1,tokenId:p.tokenId})}for(const p of s){if(!await ra(this.contractWrapper.getProvider(),this.getAddress(),p.contractAddress,p.tokenId,c))throw new Error(`ERC1155 token "${p.tokenId}" with contract address "${p.contractAddress}" is not approved for transfer.

You can give approval the multiwrap contract to transfer this token by running:

await sdk.getEdition("${p.contractAddress}").setApprovalForAll("${this.getAddress()}", true);

`);a.push(p.totalRewards),n.push({assetContract:p.contractAddress,tokenType:2,totalAmount:b.from(p.quantityPerReward).mul(b.from(p.totalRewards)),tokenId:p.tokenId})}return{contents:n,numOfRewardUnits:a}}async prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}detectVrf(){if(U(this.contractWrapper,"PackVRF"))return new VY(this.contractWrapper.getSignerOrProvider(),this.contractWrapper.readContract.address,this.storage,this.contractWrapper.options,this.chainId)}}l(y2,"contractRoles",["admin","minter","asset","transfer"]);const GY=Object.freeze(Object.defineProperty({__proto__:null,Pack:y2},Symbol.toStringTag,{value:"Module"})),ZY=[{inputs:[{internalType:"address",name:"_nativeTokenWrapper",type:"address"},{internalType:"address",name:"_trustedForwarder",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"prevURI",type:"string"},{indexed:!1,internalType:"string",name:"newURI",type:"string"}],name:"ContractURIUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newRoyaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"newRoyaltyBps",type:"uint256"}],name:"DefaultRoyalty",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"prevOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"packId",type:"uint256"},{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"totalPacksCreated",type:"uint256"}],name:"PackCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"packId",type:"uint256"},{indexed:!0,internalType:"address",name:"opener",type:"address"},{indexed:!1,internalType:"uint256",name:"numOfPacksOpened",type:"uint256"},{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"enum ITokenBundle.TokenType",name:"tokenType",type:"uint8"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],indexed:!1,internalType:"struct ITokenBundle.Token[]",name:"rewardUnitsDistributed",type:"tuple[]"}],name:"PackOpened",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"packId",type:"uint256"},{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"totalPacksCreated",type:"uint256"}],name:"PackUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"royaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"royaltyBps",type:"uint256"}],name:"RoyaltyForToken",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256[]",name:"ids",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"TransferBatch",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"TransferSingle",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"value",type:"string"},{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"URI",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_packId",type:"uint256"},{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"enum ITokenBundle.TokenType",name:"tokenType",type:"uint8"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],internalType:"struct ITokenBundle.Token[]",name:"_contents",type:"tuple[]"},{internalType:"uint256[]",name:"_numOfRewardUnits",type:"uint256[]"},{internalType:"address",name:"_recipient",type:"address"}],name:"addPackContents",outputs:[{internalType:"uint256",name:"packTotalSupply",type:"uint256"},{internalType:"uint256",name:"newSupplyAdded",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"ids",type:"uint256[]"}],name:"balanceOfBatch",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"canUpdatePack",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"enum ITokenBundle.TokenType",name:"tokenType",type:"uint8"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],internalType:"struct ITokenBundle.Token[]",name:"_contents",type:"tuple[]"},{internalType:"uint256[]",name:"_numOfRewardUnits",type:"uint256[]"},{internalType:"string",name:"_packUri",type:"string"},{internalType:"uint128",name:"_openStartTimestamp",type:"uint128"},{internalType:"uint128",name:"_amountDistributedPerOpen",type:"uint128"},{internalType:"address",name:"_recipient",type:"address"}],name:"createPack",outputs:[{internalType:"uint256",name:"packId",type:"uint256"},{internalType:"uint256",name:"packTotalSupply",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[],name:"getDefaultRoyaltyInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_packId",type:"uint256"}],name:"getPackContents",outputs:[{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"enum ITokenBundle.TokenType",name:"tokenType",type:"uint8"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],internalType:"struct ITokenBundle.Token[]",name:"contents",type:"tuple[]"},{internalType:"uint256[]",name:"perUnitAmounts",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"member",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getRoyaltyInfoForToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_bundleId",type:"uint256"}],name:"getTokenCountOfBundle",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_bundleId",type:"uint256"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getTokenOfBundle",outputs:[{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"enum ITokenBundle.TokenType",name:"tokenType",type:"uint8"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],internalType:"struct ITokenBundle.Token",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_bundleId",type:"uint256"}],name:"getUriOfBundle",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRoleWithSwitch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint256",name:"_royaltyBps",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextTokenIdToMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC1155BatchReceived",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC1155Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC721Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_packId",type:"uint256"},{internalType:"uint256",name:"_amountToOpen",type:"uint256"}],name:"openPack",outputs:[{components:[{internalType:"address",name:"assetContract",type:"address"},{internalType:"enum ITokenBundle.TokenType",name:"tokenType",type:"uint8"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],internalType:"struct ITokenBundle.Token[]",name:"",type:"tuple[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"salePrice",type:"uint256"}],name:"royaltyInfo",outputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"royaltyAmount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeBatchTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint256",name:"_royaltyBps",type:"uint256"}],name:"setDefaultRoyaltyInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_bps",type:"uint256"}],name:"setRoyaltyInfoForToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"uri",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],XY=Object.freeze(Object.defineProperty({__proto__:null,default:ZY},Symbol.toStringTag,{value:"Module"}));class f2 extends J0{constructor(e,n,a){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,i,r);super(o,a,s),l(this,"abi",void 0),l(this,"owner",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"metadata",void 0),l(this,"app",void 0),l(this,"sales",void 0),l(this,"platformFees",void 0),l(this,"events",void 0),l(this,"roles",void 0),l(this,"interceptor",void 0),l(this,"royalties",void 0),l(this,"claimConditions",void 0),l(this,"revealer",void 0),l(this,"signature",void 0),l(this,"checkout",void 0),l(this,"createBatch",T(async(c,p)=>this.erc721.lazyMint.prepare(c,p))),l(this,"claimTo",T(async(c,p,d)=>this.erc721.claimTo.prepare(c,p,d))),l(this,"claim",T(async(c,p)=>this.erc721.claim.prepare(c,p))),l(this,"burn",T(async c=>this.erc721.burn.prepare(c))),this.abi=G.parse(i||[]),this.metadata=new ge(this.contractWrapper,O0,this.storage),this.app=new $e(this.contractWrapper,this.metadata,this.storage),this.roles=new Xe(this.contractWrapper,f2.contractRoles),this.royalties=new nn(this.contractWrapper,this.metadata),this.sales=new an(this.contractWrapper),this.encoder=new Ae(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.events=new Pe(this.contractWrapper),this.platformFees=new St(this.contractWrapper),this.interceptor=new Le(this.contractWrapper),this.claimConditions=new pr(this.contractWrapper,this.metadata,this.storage),this.signature=new W0(this.contractWrapper,this.storage),this.revealer=new j0(this.contractWrapper,this.storage,ea.name,()=>this.erc721.nextTokenIdToMint()),this.signature=new W0(this.contractWrapper,this.storage),this.owner=new rn(this.contractWrapper),this.checkout=new nI(this.contractWrapper)}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async totalSupply(){const e=await this.totalClaimedSupply(),n=await this.totalUnclaimedSupply();return e.add(n)}async getAllClaimed(e){const n=b.from((e==null?void 0:e.start)||0).toNumber(),a=b.from((e==null?void 0:e.count)||ot).toNumber(),r=Math.min((await this.totalClaimedSupply()).toNumber(),n+a);return await Promise.all(Array.from(Array(r).keys()).map(i=>this.get(i.toString())))}async getAllUnclaimed(e){const n=b.from((e==null?void 0:e.start)||0).toNumber(),a=b.from((e==null?void 0:e.count)||ot).toNumber(),r=b.from(Math.max((await this.totalClaimedSupply()).toNumber(),n)),i=b.from(Math.min((await this.contractWrapper.readContract.nextTokenIdToMint()).toNumber(),r.toNumber()+a));return await Promise.all(Array.from(Array(i.sub(r).toNumber()).keys()).map(s=>this.erc721.getTokenMetadata(r.add(s).toString())))}async totalClaimedSupply(){return this.erc721.totalClaimedSupply()}async totalUnclaimedSupply(){return this.erc721.totalUnclaimedSupply()}async isTransferRestricted(){return!await this.contractWrapper.readContract.hasRole(we("transfer"),B)}async getClaimTransaction(e,n,a){return this.erc721.getClaimTransaction(e,n,a)}async prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}}l(f2,"contractRoles",["admin","minter","transfer"]);const JY=Object.freeze(Object.defineProperty({__proto__:null,SignatureDrop:f2},Symbol.toStringTag,{value:"Module"})),ez=[{inputs:[],name:"ApprovalCallerNotOwnerNorApproved",type:"error"},{inputs:[],name:"ApprovalQueryForNonexistentToken",type:"error"},{inputs:[],name:"ApprovalToCurrentOwner",type:"error"},{inputs:[],name:"ApproveToCaller",type:"error"},{inputs:[],name:"BalanceQueryForZeroAddress",type:"error"},{inputs:[],name:"MintToZeroAddress",type:"error"},{inputs:[],name:"MintZeroQuantity",type:"error"},{inputs:[],name:"OwnerQueryForNonexistentToken",type:"error"},{inputs:[],name:"TransferCallerNotOwnerNorApproved",type:"error"},{inputs:[],name:"TransferFromIncorrectOwner",type:"error"},{inputs:[],name:"TransferToNonERC721ReceiverImplementer",type:"error"},{inputs:[],name:"TransferToZeroAddress",type:"error"},{inputs:[],name:"URIQueryForNonexistentToken",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],indexed:!1,internalType:"struct IClaimCondition.ClaimCondition",name:"condition",type:"tuple"},{indexed:!1,internalType:"bool",name:"resetEligibility",type:"bool"}],name:"ClaimConditionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"prevURI",type:"string"},{indexed:!1,internalType:"string",name:"newURI",type:"string"}],name:"ContractURIUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newRoyaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"newRoyaltyBps",type:"uint256"}],name:"DefaultRoyalty",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"prevOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"}],name:"PrimarySaleRecipientUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"royaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"royaltyBps",type:"uint256"}],name:"RoyaltyForToken",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"index",type:"uint256"},{indexed:!1,internalType:"string",name:"revealedURI",type:"string"}],name:"TokenURIRevealed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTokenId",type:"uint256"},{indexed:!1,internalType:"string",name:"baseURI",type:"string"},{indexed:!1,internalType:"bytes",name:"encryptedBaseURI",type:"bytes"}],name:"TokensLazyMinted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"signer",type:"address"},{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenIdMinted",type:"uint256"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],indexed:!1,internalType:"struct ISignatureMintERC721.MintRequest",name:"mintRequest",type:"tuple"}],name:"TokensMintedWithSignature",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDropSinglePhase.AllowlistProof",name:"_allowlistProof",type:"tuple"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"claimCondition",outputs:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"key",type:"bytes"}],name:"encryptDecrypt",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"encryptedData",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBaseURICount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"getBatchIdAtIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDefaultRoyaltyInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFlatPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeType",outputs:[{internalType:"enum IPlatformFee.PlatformFeeType",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_batchId",type:"uint256"},{internalType:"bytes",name:"_key",type:"bytes"}],name:"getRevealURI",outputs:[{internalType:"string",name:"revealedURI",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"member",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getRoyaltyInfoForToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_claimer",type:"address"}],name:"getSupplyClaimedByWallet",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRoleWithSwitch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_saleRecipient",type:"address"},{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint128",name:"_royaltyBps",type:"uint128"},{internalType:"uint128",name:"_platformFeeBps",type:"uint128"},{internalType:"address",name:"_platformFeeRecipient",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_batchId",type:"uint256"}],name:"isEncryptedBatch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"string",name:"_baseURIForTokens",type:"string"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"lazyMint",outputs:[{internalType:"uint256",name:"batchId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ISignatureMintERC721.MintRequest",name:"_req",type:"tuple"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"mintWithSignature",outputs:[{internalType:"address",name:"signer",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextTokenIdToMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"primarySaleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_index",type:"uint256"},{internalType:"bytes",name:"_key",type:"bytes"}],name:"reveal",outputs:[{internalType:"string",name:"revealedURI",type:"string"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"salePrice",type:"uint256"}],name:"royaltyInfo",outputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"royaltyAmount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],internalType:"struct IClaimCondition.ClaimCondition",name:"_condition",type:"tuple"},{internalType:"bool",name:"_resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint256",name:"_royaltyBps",type:"uint256"}],name:"setDefaultRoyaltyInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_flatFee",type:"uint256"}],name:"setFlatPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IPlatformFee.PlatformFeeType",name:"_feeType",type:"uint8"}],name:"setPlatformFeeType",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setPrimarySaleRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_bps",type:"uint256"}],name:"setRoyaltyInfoForToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalMinted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ISignatureMintERC721.MintRequest",name:"_req",type:"tuple"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"verify",outputs:[{internalType:"bool",name:"success",type:"bool"},{internalType:"address",name:"signer",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDropSinglePhase.AllowlistProof",name:"_allowlistProof",type:"tuple"}],name:"verifyClaim",outputs:[{internalType:"bool",name:"isOverride",type:"bool"}],stateMutability:"view",type:"function"}],tz=Object.freeze(Object.defineProperty({__proto__:null,default:ez},Symbol.toStringTag,{value:"Module"})),nz=[{inputs:[],name:"ApprovalCallerNotOwnerNorApproved",type:"error"},{inputs:[],name:"ApprovalQueryForNonexistentToken",type:"error"},{inputs:[],name:"ApprovalToCurrentOwner",type:"error"},{inputs:[],name:"ApproveToCaller",type:"error"},{inputs:[],name:"BalanceQueryForZeroAddress",type:"error"},{inputs:[],name:"MintToZeroAddress",type:"error"},{inputs:[],name:"MintZeroQuantity",type:"error"},{inputs:[],name:"OwnerQueryForNonexistentToken",type:"error"},{inputs:[],name:"TransferCallerNotOwnerNorApproved",type:"error"},{inputs:[],name:"TransferFromIncorrectOwner",type:"error"},{inputs:[],name:"TransferToNonERC721ReceiverImplementer",type:"error"},{inputs:[],name:"TransferToZeroAddress",type:"error"},{inputs:[],name:"URIQueryForNonexistentToken",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],indexed:!1,internalType:"struct IClaimCondition_V1.ClaimCondition",name:"condition",type:"tuple"},{indexed:!1,internalType:"bool",name:"resetEligibility",type:"bool"}],name:"ClaimConditionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"prevURI",type:"string"},{indexed:!1,internalType:"string",name:"newURI",type:"string"}],name:"ContractURIUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newRoyaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"newRoyaltyBps",type:"uint256"}],name:"DefaultRoyalty",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"prevOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"}],name:"PrimarySaleRecipientUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"royaltyRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"royaltyBps",type:"uint256"}],name:"RoyaltyForToken",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"index",type:"uint256"},{indexed:!1,internalType:"string",name:"revealedURI",type:"string"}],name:"TokenURIRevealed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTokenId",type:"uint256"},{indexed:!1,internalType:"string",name:"baseURI",type:"string"},{indexed:!1,internalType:"bytes",name:"encryptedBaseURI",type:"bytes"}],name:"TokensLazyMinted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"signer",type:"address"},{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenIdMinted",type:"uint256"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],indexed:!1,internalType:"struct ISignatureMintERC721.MintRequest",name:"mintRequest",type:"tuple"}],name:"TokensMintedWithSignature",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"maxQuantityInAllowlist",type:"uint256"}],internalType:"struct IDropSinglePhase_V1.AllowlistProof",name:"_allowlistProof",type:"tuple"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"claimCondition",outputs:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"key",type:"bytes"}],name:"encryptDecrypt",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"encryptedData",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBaseURICount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"getBatchIdAtIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_claimer",type:"address"}],name:"getClaimTimestamp",outputs:[{internalType:"uint256",name:"lastClaimedAt",type:"uint256"},{internalType:"uint256",name:"nextValidClaimTimestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDefaultRoyaltyInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFlatPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeType",outputs:[{internalType:"enum IPlatformFee.PlatformFeeType",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_batchId",type:"uint256"},{internalType:"bytes",name:"_key",type:"bytes"}],name:"getRevealURI",outputs:[{internalType:"string",name:"revealedURI",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"member",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getRoyaltyInfoForToken",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRoleWithSwitch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_saleRecipient",type:"address"},{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint128",name:"_royaltyBps",type:"uint128"},{internalType:"uint128",name:"_platformFeeBps",type:"uint128"},{internalType:"address",name:"_platformFeeRecipient",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_batchId",type:"uint256"}],name:"isEncryptedBatch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"string",name:"_baseURIForTokens",type:"string"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"lazyMint",outputs:[{internalType:"uint256",name:"batchId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ISignatureMintERC721.MintRequest",name:"_req",type:"tuple"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"mintWithSignature",outputs:[{internalType:"address",name:"signer",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"nextTokenIdToMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"primarySaleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_index",type:"uint256"},{internalType:"bytes",name:"_key",type:"bytes"}],name:"reveal",outputs:[{internalType:"string",name:"revealedURI",type:"string"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"salePrice",type:"uint256"}],name:"royaltyInfo",outputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"royaltyAmount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IClaimCondition_V1.ClaimCondition",name:"_condition",type:"tuple"},{internalType:"bool",name:"_resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_royaltyRecipient",type:"address"},{internalType:"uint256",name:"_royaltyBps",type:"uint256"}],name:"setDefaultRoyaltyInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_flatFee",type:"uint256"}],name:"setFlatPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"setOwner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IPlatformFee.PlatformFeeType",name:"_feeType",type:"uint8"}],name:"setPlatformFeeType",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setPrimarySaleRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_bps",type:"uint256"}],name:"setRoyaltyInfoForToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalMinted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"royaltyRecipient",type:"address"},{internalType:"uint256",name:"royaltyBps",type:"uint256"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ISignatureMintERC721.MintRequest",name:"_req",type:"tuple"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"verify",outputs:[{internalType:"bool",name:"success",type:"bool"},{internalType:"address",name:"signer",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{internalType:"bool",name:"verifyMaxQuantityPerTransaction",type:"bool"}],name:"verifyClaim",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"maxQuantityInAllowlist",type:"uint256"}],internalType:"struct IDropSinglePhase_V1.AllowlistProof",name:"_allowlistProof",type:"tuple"}],name:"verifyClaimMerkleProof",outputs:[{internalType:"bool",name:"validMerkleProof",type:"bool"},{internalType:"uint256",name:"merkleProofIndex",type:"uint256"}],stateMutability:"view",type:"function"}],az=Object.freeze(Object.defineProperty({__proto__:null,default:nz},Symbol.toStringTag,{value:"Module"}));class g2{get chainId(){return this._chainId}constructor(e,n,a){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,i,r);l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"abi",void 0),l(this,"metadata",void 0),l(this,"app",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"events",void 0),l(this,"roles",void 0),l(this,"interceptor",void 0),l(this,"_chainId",void 0),l(this,"withdraw",T(async c=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"release(address)",args:[await k(c)]}))),l(this,"withdrawToken",T(async(c,p)=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"release(address,address)",args:[await k(p),await k(c)]}))),l(this,"distribute",T(async()=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"distribute()",args:[]}))),l(this,"distributeToken",T(async c=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"distribute(address)",args:[await k(c)]}))),this._chainId=s,this.abi=G.parse(i||[]),this.contractWrapper=o,this.storage=a,this.metadata=new ge(this.contractWrapper,$v,this.storage),this.app=new $e(this.contractWrapper,this.metadata,this.storage),this.roles=new Xe(this.contractWrapper,g2.contractRoles),this.encoder=new Ae(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.events=new Pe(this.contractWrapper),this.interceptor=new Le(this.contractWrapper)}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async getAllRecipients(){const e=[];let n=b.from(0);const a=await this.contractWrapper.readContract.payeeCount();for(;n.lt(a);)try{const r=await this.contractWrapper.readContract.payee(n);e.push(await this.getRecipientSplitPercentage(r)),n=n.add(1)}catch(r){if("method"in r&&r.method.toLowerCase().includes("payee(uint256)"))break;throw r}return e}async balanceOfAllRecipients(){const e=await this.getAllRecipients(),n={};for(const a of e)n[a.address]=await this.balanceOf(a.address);return n}async balanceOfTokenAllRecipients(e){const n=await k(e),a=await this.getAllRecipients(),r={};for(const i of a)r[i.address]=await this.balanceOfToken(i.address,n);return r}async balanceOf(e){const n=await k(e),a=await this.contractWrapper.readContract.provider.getBalance(this.getAddress()),r=await this.contractWrapper.readContract["totalReleased()"](),i=a.add(r);return this._pendingPayment(n,i,await this.contractWrapper.readContract["released(address)"](n))}async balanceOfToken(e,n){const a=await k(n),r=await k(e),s=await new J(a,Ee,this.contractWrapper.getProvider()).balanceOf(this.getAddress()),o=await this.contractWrapper.readContract["totalReleased(address)"](a),c=s.add(o),p=await this._pendingPayment(r,c,await this.contractWrapper.readContract["released(address,address)"](a,r));return await Ce(this.contractWrapper.getProvider(),a,p)}async getRecipientSplitPercentage(e){const n=await k(e),[a,r]=await Promise.all([this.contractWrapper.readContract.totalShares(),this.contractWrapper.readContract.shares(e)]);return{address:n,splitPercentage:r.mul(b.from(1e7)).div(a).toNumber()/1e5}}async _pendingPayment(e,n,a){return n.mul(await this.contractWrapper.readContract.shares(await k(e))).div(await this.contractWrapper.readContract.totalShares()).sub(a)}async prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}}l(g2,"contractRoles",["admin"]);const rz=Object.freeze(Object.defineProperty({__proto__:null,Split:g2},Symbol.toStringTag,{value:"Module"})),iz=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ERC20PaymentReleased",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"shares",type:"uint256"}],name:"PayeeAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PaymentReceived",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PaymentReleased",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"}],name:"distribute",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"distribute",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address[]",name:"_payees",type:"address[]"},{internalType:"uint256[]",name:"_shares",type:"uint256[]"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"payee",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"payeeCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"releasable",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"address",name:"account",type:"address"}],name:"releasable",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address payable",name:"account",type:"address"}],name:"release",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"address",name:"account",type:"address"}],name:"release",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"address",name:"account",type:"address"}],name:"released",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"released",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"shares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"}],name:"totalReleased",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalReleased",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],sz=Object.freeze(Object.defineProperty({__proto__:null,default:iz},Symbol.toStringTag,{value:"Module"}));class b2 extends aC{constructor(e,n,a){var r;let i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,c=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,s,i);super(c,a,o),r=this,l(this,"abi",void 0),l(this,"metadata",void 0),l(this,"app",void 0),l(this,"roles",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"sales",void 0),l(this,"platformFees",void 0),l(this,"events",void 0),l(this,"claimConditions",void 0),l(this,"interceptor",void 0),l(this,"claim",T(async function(p){let d=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return r.claimTo.prepare(await r.contractWrapper.getSignerAddress(),p,d)})),l(this,"claimTo",T(async function(p,d){let u=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;return r.erc20.claimTo.prepare(p,d,{checkERC20Allowance:u})})),l(this,"delegateTo",T(async p=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"delegate",args:[await k(p)]}))),l(this,"burnTokens",T(async p=>this.erc20.burn.prepare(p))),l(this,"burnFrom",T(async(p,d)=>this.erc20.burnFrom.prepare(p,d))),this.abi=G.parse(s||[]),this.metadata=new ge(this.contractWrapper,Y6,this.storage),this.app=new $e(this.contractWrapper,this.metadata,this.storage),this.roles=new Xe(this.contractWrapper,b2.contractRoles),this.encoder=new Ae(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.events=new Pe(this.contractWrapper),this.sales=new an(this.contractWrapper),this.platformFees=new St(this.contractWrapper),this.interceptor=new Le(this.contractWrapper),this.claimConditions=new pr(this.contractWrapper,this.metadata,this.storage)}async getVoteBalance(){return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress())}async getVoteBalanceOf(e){return await this.erc20.getValue(await this.contractWrapper.readContract.getVotes(await k(e)))}async getDelegation(){return await this.getDelegationOf(await this.contractWrapper.getSignerAddress())}async getDelegationOf(e){return await this.contractWrapper.readContract.delegates(await k(e))}async isTransferRestricted(){return!await this.contractWrapper.readContract.hasRole(we("transfer"),B)}async prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}}l(b2,"contractRoles",["admin","transfer"]);const oz=Object.freeze(Object.defineProperty({__proto__:null,TokenDrop:b2},Symbol.toStringTag,{value:"Module"})),cz=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],indexed:!1,internalType:"struct IClaimCondition.ClaimCondition[]",name:"claimConditions",type:"tuple[]"},{indexed:!1,internalType:"bool",name:"resetEligibility",type:"bool"}],name:"ClaimConditionsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"prevURI",type:"string"},{indexed:!1,internalType:"string",name:"newURI",type:"string"}],name:"ContractURIUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateVotesChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"maxTotalSupply",type:"uint256"}],name:"MaxTotalSupplyUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"}],name:"PrimarySaleRecipientUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"claimConditionIndex",type:"uint256"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"startTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burnFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint32",name:"pos",type:"uint32"}],name:"checkpoints",outputs:[{components:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint224",name:"votes",type:"uint224"}],internalType:"struct ERC20VotesUpgradeable.Checkpoint",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDrop.AllowlistProof",name:"_allowlistProof",type:"tuple"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"claimCondition",outputs:[{internalType:"uint256",name:"currentStartId",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"delegatee",type:"address"}],name:"delegate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActiveClaimConditionId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"}],name:"getClaimConditionById",outputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],internalType:"struct IClaimCondition.ClaimCondition",name:"condition",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFlatPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPastTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPastVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeType",outputs:[{internalType:"enum IPlatformFee.PlatformFeeType",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"member",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"}],name:"getSupplyClaimedByWallet",outputs:[{internalType:"uint256",name:"supplyClaimedByWallet",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRoleWithSwitch",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_saleRecipient",type:"address"},{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint128",name:"_platformFeeBps",type:"uint128"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"numCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"primarySaleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"string",name:"metadata",type:"string"}],internalType:"struct IClaimCondition.ClaimCondition[]",name:"_conditions",type:"tuple[]"},{internalType:"bool",name:"_resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_flatFee",type:"uint256"}],name:"setFlatPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_maxTotalSupply",type:"uint256"}],name:"setMaxTotalSupply",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IPlatformFee.PlatformFeeType",name:"_feeType",type:"uint8"}],name:"setPlatformFeeType",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setPrimarySaleRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{components:[{internalType:"bytes32[]",name:"proof",type:"bytes32[]"},{internalType:"uint256",name:"quantityLimitPerWallet",type:"uint256"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDrop.AllowlistProof",name:"_allowlistProof",type:"tuple"}],name:"verifyClaim",outputs:[{internalType:"bool",name:"isOverride",type:"bool"}],stateMutability:"view",type:"function"}],pz=Object.freeze(Object.defineProperty({__proto__:null,default:cz},Symbol.toStringTag,{value:"Module"})),lz=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],indexed:!1,internalType:"struct IDropClaimCondition_V2.ClaimCondition[]",name:"claimConditions",type:"tuple[]"}],name:"ClaimConditionsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"prevURI",type:"string"},{indexed:!1,internalType:"string",name:"newURI",type:"string"}],name:"ContractURIUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateVotesChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"maxTotalSupply",type:"uint256"}],name:"MaxTotalSupplyUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"count",type:"uint256"}],name:"MaxWalletClaimCountUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"}],name:"PrimarySaleRecipientUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"claimConditionIndex",type:"uint256"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"quantityClaimed",type:"uint256"}],name:"TokensClaimed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"wallet",type:"address"},{indexed:!1,internalType:"uint256",name:"count",type:"uint256"}],name:"WalletClaimCountUpdated",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burnFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint32",name:"pos",type:"uint32"}],name:"checkpoints",outputs:[{components:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint224",name:"votes",type:"uint224"}],internalType:"struct ERC20VotesUpgradeable.Checkpoint",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{internalType:"bytes32[]",name:"_proofs",type:"bytes32[]"},{internalType:"uint256",name:"_proofMaxQuantityPerTransaction",type:"uint256"}],name:"claim",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"claimCondition",outputs:[{internalType:"uint256",name:"currentStartId",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"delegatee",type:"address"}],name:"delegate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActiveClaimConditionId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"}],name:"getClaimConditionById",outputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDropClaimCondition_V2.ClaimCondition",name:"condition",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"}],name:"getClaimTimestamp",outputs:[{internalType:"uint256",name:"lastClaimTimestamp",type:"uint256"},{internalType:"uint256",name:"nextValidClaimTimestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPastTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPastVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_primarySaleRecipient",type:"address"},{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxWalletClaimCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"numCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"primarySaleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"maxClaimableSupply",type:"uint256"},{internalType:"uint256",name:"supplyClaimed",type:"uint256"},{internalType:"uint256",name:"quantityLimitPerTransaction",type:"uint256"},{internalType:"uint256",name:"waitTimeInSecondsBetweenClaims",type:"uint256"},{internalType:"bytes32",name:"merkleRoot",type:"bytes32"},{internalType:"uint256",name:"pricePerToken",type:"uint256"},{internalType:"address",name:"currency",type:"address"}],internalType:"struct IDropClaimCondition_V2.ClaimCondition[]",name:"_phases",type:"tuple[]"},{internalType:"bool",name:"_resetClaimEligibility",type:"bool"}],name:"setClaimConditions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_maxTotalSupply",type:"uint256"}],name:"setMaxTotalSupply",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_count",type:"uint256"}],name:"setMaxWalletClaimCount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setPrimarySaleRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_count",type:"uint256"}],name:"setWalletClaimCount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"address",name:"_currency",type:"address"},{internalType:"uint256",name:"_pricePerToken",type:"uint256"},{internalType:"bool",name:"verifyMaxQuantityPerTransaction",type:"bool"}],name:"verifyClaim",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_conditionId",type:"uint256"},{internalType:"address",name:"_claimer",type:"address"},{internalType:"uint256",name:"_quantity",type:"uint256"},{internalType:"bytes32[]",name:"_proofs",type:"bytes32[]"},{internalType:"uint256",name:"_proofMaxQuantityPerTransaction",type:"uint256"}],name:"verifyClaimMerkleProof",outputs:[{internalType:"bool",name:"validMerkleProof",type:"bool"},{internalType:"uint256",name:"merkleProofIndex",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"walletClaimCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],dz=Object.freeze(Object.defineProperty({__proto__:null,default:lz},Symbol.toStringTag,{value:"Module"}));class T2 extends aC{constructor(e,n,a){let r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,i,r);super(o,a,s),l(this,"abi",void 0),l(this,"metadata",void 0),l(this,"app",void 0),l(this,"roles",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"history",void 0),l(this,"events",void 0),l(this,"platformFees",void 0),l(this,"sales",void 0),l(this,"signature",void 0),l(this,"interceptor",void 0),l(this,"mint",T(async c=>this.erc20.mint.prepare(c))),l(this,"mintTo",T(async(c,p)=>this.erc20.mintTo.prepare(c,p))),l(this,"mintBatchTo",T(async c=>this.erc20.mintBatchTo.prepare(c))),l(this,"delegateTo",T(async c=>v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"delegate",args:[await k(c)]}))),l(this,"burn",T(c=>this.erc20.burn.prepare(c))),l(this,"burnFrom",T(async(c,p)=>this.erc20.burnFrom.prepare(c,p))),this.abi=G.parse(i||[]),this.metadata=new ge(this.contractWrapper,zv,this.storage),this.app=new $e(this.contractWrapper,this.metadata,this.storage),this.roles=new Xe(this.contractWrapper,T2.contractRoles),this.sales=new an(this.contractWrapper),this.events=new Pe(this.contractWrapper),this.history=new xK(this.contractWrapper,this.events),this.encoder=new Ae(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.platformFees=new St(this.contractWrapper),this.interceptor=new Le(this.contractWrapper),this.signature=new N6(this.contractWrapper,this.roles)}async getVoteBalance(){return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress())}async getVoteBalanceOf(e){return await this.erc20.getValue(await this.contractWrapper.readContract.getVotes(e))}async getDelegation(){return await this.getDelegationOf(await this.contractWrapper.getSignerAddress())}async getDelegationOf(e){return await this.contractWrapper.readContract.delegates(await k(e))}async isTransferRestricted(){return!await this.contractWrapper.readContract.hasRole(we("transfer"),B)}async getMintTransaction(e,n){return this.erc20.getMintTransaction(e,n)}async prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}}l(T2,"contractRoles",["admin","minter","transfer"]);const uz=Object.freeze(Object.defineProperty({__proto__:null,Token:T2},Symbol.toStringTag,{value:"Module"})),mz=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateVotesChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"flatFee",type:"uint256"}],name:"FlatPlatformFeeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"platformFeeRecipient",type:"address"},{indexed:!1,internalType:"uint256",name:"platformFeeBps",type:"uint256"}],name:"PlatformFeeInfoUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum IPlatformFee.PlatformFeeType",name:"feeType",type:"uint8"}],name:"PlatformFeeTypeUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"}],name:"PrimarySaleRecipientUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{indexed:!1,internalType:"uint256",name:"quantityMinted",type:"uint256"}],name:"TokensMinted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"signer",type:"address"},{indexed:!0,internalType:"address",name:"mintedTo",type:"address"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],indexed:!1,internalType:"struct ITokenERC20.MintRequest",name:"mintRequest",type:"tuple"}],name:"TokensMintedWithSignature",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burnFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint32",name:"pos",type:"uint32"}],name:"checkpoints",outputs:[{components:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint224",name:"votes",type:"uint224"}],internalType:"struct ERC20VotesUpgradeable.Checkpoint",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"delegatee",type:"address"}],name:"delegate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPastTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPastVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlatformFeeInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_defaultAdmin",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_primarySaleRecipient",type:"address"},{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mintTo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ITokenERC20.MintRequest",name:"_req",type:"tuple"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"mintWithSignature",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"numCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"primarySaleRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_platformFeeRecipient",type:"address"},{internalType:"uint256",name:"_platformFeeBps",type:"uint256"}],name:"setPlatformFeeInfo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_saleRecipient",type:"address"}],name:"setPrimarySaleRecipient",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"to",type:"address"},{internalType:"address",name:"primarySaleRecipient",type:"address"},{internalType:"uint256",name:"quantity",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"address",name:"currency",type:"address"},{internalType:"uint128",name:"validityStartTimestamp",type:"uint128"},{internalType:"uint128",name:"validityEndTimestamp",type:"uint128"},{internalType:"bytes32",name:"uid",type:"bytes32"}],internalType:"struct ITokenERC20.MintRequest",name:"_req",type:"tuple"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"verify",outputs:[{internalType:"bool",name:"",type:"bool"},{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}],hz=Object.freeze(Object.defineProperty({__proto__:null,default:mz},Symbol.toStringTag,{value:"Module"}));class yz{get chainId(){return this._chainId}constructor(e,n,a){var r=this;let i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,c=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new Z(e,n,s,i);l(this,"contractWrapper",void 0),l(this,"storage",void 0),l(this,"abi",void 0),l(this,"metadata",void 0),l(this,"app",void 0),l(this,"encoder",void 0),l(this,"estimator",void 0),l(this,"events",void 0),l(this,"interceptor",void 0),l(this,"_chainId",void 0),l(this,"propose",T(async(p,d)=>{d||(d=[{toAddress:this.contractWrapper.readContract.address,nativeTokenValue:0,transactionData:"0x"}]);const u=d.map(g=>g.toAddress),m=d.map(g=>g.nativeTokenValue),f=d.map(g=>g.transactionData);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"propose",args:[u,m,f,p],parse:g=>({id:this.contractWrapper.parseLogs("ProposalCreated",g==null?void 0:g.logs)[0].args.proposalId,receipt:g})})})),l(this,"vote",T(async function(p,d){let u=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"";return await r.ensureExists(p),v.fromContractWrapper({contractWrapper:r.contractWrapper,method:"castVoteWithReason",args:[p,d,u]})})),l(this,"execute",T(async p=>{await this.ensureExists(p);const d=await this.get(p),u=d.executions.map(w=>w.toAddress),m=d.executions.map(w=>w.nativeTokenValue),f=d.executions.map(w=>w.transactionData),g=wa(d.description);return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:"execute",args:[u,m,f,g]})})),this._chainId=o,this.abi=G.parse(s||[]),this.contractWrapper=c,this.storage=a,this.metadata=new ge(this.contractWrapper,Xv,this.storage),this.app=new $e(this.contractWrapper,this.metadata,this.storage),this.encoder=new Ae(this.contractWrapper),this.estimator=new We(this.contractWrapper),this.events=new Pe(this.contractWrapper),this.interceptor=new Le(this.contractWrapper)}onNetworkUpdated(e){this.contractWrapper.updateSignerOrProvider(e)}getAddress(){return this.contractWrapper.readContract.address}async get(e){const a=(await this.getAll()).filter(r=>r.proposalId.eq(b.from(e)));if(a.length===0)throw new Error("proposal not found");return a[0]}async getAll(){return Promise.all((await this.contractWrapper.readContract.getAllProposals()).map(async e=>({proposalId:e.proposalId,proposer:e.proposer,description:e.description,startBlock:e.startBlock,endBlock:e.endBlock,state:await this.contractWrapper.readContract.state(e.proposalId),votes:await this.getProposalVotes(e.proposalId),executions:e[3].map((n,a)=>({toAddress:e.targets[a],nativeTokenValue:n,transactionData:e.calldatas[a]}))})))}async getProposalVotes(e){const n=await this.contractWrapper.readContract.proposalVotes(e);return[{type:B2.Against,label:"Against",count:n.againstVotes},{type:B2.For,label:"For",count:n.forVotes},{type:B2.Abstain,label:"Abstain",count:n.abstainVotes}]}async hasVoted(e,n){return n||(n=await this.contractWrapper.getSignerAddress()),this.contractWrapper.readContract.hasVoted(e,await k(n))}async canExecute(e){await this.ensureExists(e);const n=await this.get(e),a=n.executions.map(o=>o.toAddress),r=n.executions.map(o=>o.nativeTokenValue),i=n.executions.map(o=>o.transactionData),s=wa(n.description);try{return await this.contractWrapper.callStatic().execute(a,r,i,s),!0}catch{return!1}}async balance(){const e=await this.contractWrapper.readContract.provider.getBalance(this.contractWrapper.readContract.address);return{name:"",symbol:"",decimals:18,value:e,displayValue:Ge(e,18)}}async balanceOfToken(e){const n=new J(await k(e),Ee,this.contractWrapper.getProvider());return await Ce(this.contractWrapper.getProvider(),e,await n.balanceOf(this.contractWrapper.readContract.address))}async ensureExists(e){try{await this.contractWrapper.readContract.state(e)}catch{throw Error(`Proposal ${e} not found`)}}async settings(){const[e,n,a,r,i]=await Promise.all([this.contractWrapper.readContract.votingDelay(),this.contractWrapper.readContract.votingPeriod(),this.contractWrapper.readContract.token(),this.contractWrapper.readContract["quorumNumerator()"](),this.contractWrapper.readContract.proposalThreshold()]),s=await gt(this.contractWrapper.getProvider(),a);return{votingDelay:e.toString(),votingPeriod:n.toString(),votingTokenAddress:a,votingTokenMetadata:s,votingQuorumFraction:r.toString(),proposalTokenThreshold:i.toString()}}async prepare(e,n,a){return v.fromContractWrapper({contractWrapper:this.contractWrapper,method:e,args:n,overrides:a})}async call(e,n,a){return this.contractWrapper.call(e,n,a)}}const fz=Object.freeze(Object.defineProperty({__proto__:null,Vote:yz},Symbol.toStringTag,{value:"Module"})),gz=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"Empty",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"}],name:"ProposalCanceled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"address",name:"proposer",type:"address"},{indexed:!1,internalType:"address[]",name:"targets",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"},{indexed:!1,internalType:"string[]",name:"signatures",type:"string[]"},{indexed:!1,internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{indexed:!1,internalType:"uint256",name:"startBlock",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endBlock",type:"uint256"},{indexed:!1,internalType:"string",name:"description",type:"string"}],name:"ProposalCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"}],name:"ProposalExecuted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldProposalThreshold",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newProposalThreshold",type:"uint256"}],name:"ProposalThresholdSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldQuorumNumerator",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newQuorumNumerator",type:"uint256"}],name:"QuorumNumeratorUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"voter",type:"address"},{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"uint8",name:"support",type:"uint8"},{indexed:!1,internalType:"uint256",name:"weight",type:"uint256"},{indexed:!1,internalType:"string",name:"reason",type:"string"}],name:"VoteCast",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"voter",type:"address"},{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"uint8",name:"support",type:"uint8"},{indexed:!1,internalType:"uint256",name:"weight",type:"uint256"},{indexed:!1,internalType:"string",name:"reason",type:"string"},{indexed:!1,internalType:"bytes",name:"params",type:"bytes"}],name:"VoteCastWithParams",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldVotingDelay",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newVotingDelay",type:"uint256"}],name:"VotingDelaySet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldVotingPeriod",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newVotingPeriod",type:"uint256"}],name:"VotingPeriodSet",type:"event"},{inputs:[],name:"BALLOT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"COUNTING_MODE",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},{inputs:[],name:"EXTENDED_BALLOT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"uint8",name:"support",type:"uint8"}],name:"castVote",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"uint8",name:"support",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"castVoteBySig",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"uint8",name:"support",type:"uint8"},{internalType:"string",name:"reason",type:"string"}],name:"castVoteWithReason",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"uint8",name:"support",type:"uint8"},{internalType:"string",name:"reason",type:"string"},{internalType:"bytes",name:"params",type:"bytes"}],name:"castVoteWithReasonAndParams",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"uint8",name:"support",type:"uint8"},{internalType:"string",name:"reason",type:"string"},{internalType:"bytes",name:"params",type:"bytes"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"castVoteWithReasonAndParamsBySig",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"contractType",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[],name:"contractURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"contractVersion",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{internalType:"bytes32",name:"descriptionHash",type:"bytes32"}],name:"execute",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[],name:"getAllProposals",outputs:[{components:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"address",name:"proposer",type:"address"},{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"string",name:"description",type:"string"}],internalType:"struct VoteERC20.Proposal[]",name:"allProposals",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes",name:"params",type:"bytes"}],name:"getVotesWithParams",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"hasVoted",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{internalType:"bytes32",name:"descriptionHash",type:"bytes32"}],name:"hashProposal",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_contractURI",type:"string"},{internalType:"address[]",name:"_trustedForwarders",type:"address[]"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_initialVotingDelay",type:"uint256"},{internalType:"uint256",name:"_initialVotingPeriod",type:"uint256"},{internalType:"uint256",name:"_initialProposalThreshold",type:"uint256"},{internalType:"uint256",name:"_initialVoteQuorumFraction",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC1155BatchReceived",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC1155Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"",type:"bytes"}],name:"onERC721Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"proposalDeadline",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"proposalIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"proposalSnapshot",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"proposalThreshold",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"proposalVotes",outputs:[{internalType:"uint256",name:"againstVotes",type:"uint256"},{internalType:"uint256",name:"forVotes",type:"uint256"},{internalType:"uint256",name:"abstainVotes",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"proposals",outputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"address",name:"proposer",type:"address"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"string",name:"description",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{internalType:"string",name:"description",type:"string"}],name:"propose",outputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"quorum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"quorumDenominator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"quorumNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"quorumNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"relay",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"uri",type:"string"}],name:"setContractURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newProposalThreshold",type:"uint256"}],name:"setProposalThreshold",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newVotingDelay",type:"uint256"}],name:"setVotingDelay",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newVotingPeriod",type:"uint256"}],name:"setVotingPeriod",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"state",outputs:[{internalType:"enum IGovernorUpgradeable.ProposalState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"token",outputs:[{internalType:"contract IVotesUpgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"newQuorumNumerator",type:"uint256"}],name:"updateQuorumNumerator",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"votingDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"votingPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],bz=Object.freeze(Object.defineProperty({__proto__:null,default:gz},Symbol.toStringTag,{value:"Module"}));function Tz(t,e){if(typeof t!="object"||t===null)return t;var n=t[Symbol.toPrimitive];if(n!==void 0){var a=n.call(t,e||"default");if(typeof a!="object")return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(t)}function wz(t){var e=Tz(t,"string");return typeof e=="symbol"?e:String(e)}function KC(t,e,n){return e=wz(e),e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}const Pr=[{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],stateMutability:"payable",type:"constructor"},{stateMutability:"payable",type:"fallback"},{stateMutability:"payable",type:"receive"}],OC="0x60806040526040516106ab3803806106ab83398101604081905261002291610261565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd61032f565b6000805160206106648339815191521461006957610069610354565b8161008e60008051602061066483398151915260001b6100d060201b6100521760201c565b80546001600160a01b0319166001600160a01b03929092169190911790558051156100c9576100c782826100d360201b6100551760201c565b505b50506103b9565b90565b60606100f88383604051806060016040528060278152602001610684602791396100ff565b9392505050565b60606001600160a01b0384163b61016c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b031685604051610187919061036a565b600060405180830381855af49150503d80600081146101c2576040519150601f19603f3d011682016040523d82523d6000602084013e6101c7565b606091505b5090925090506101d88282866101e2565b9695505050505050565b606083156101f15750816100f8565b8251156102015782518084602001fd5b8160405162461bcd60e51b81526004016101639190610386565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561024c578181015183820152602001610234565b8381111561025b576000848401525b50505050565b6000806040838503121561027457600080fd5b82516001600160a01b038116811461028b57600080fd5b60208401519092506001600160401b03808211156102a857600080fd5b818501915085601f8301126102bc57600080fd5b8151818111156102ce576102ce61021b565b604051601f8201601f19908116603f011681019083821181831017156102f6576102f661021b565b8160405282815288602084870101111561030f57600080fd5b610320836020830160208801610231565b80955050505050509250929050565b60008282101561034f57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825161037c818460208701610231565b9190910192915050565b60208152600082518060208401526103a5816040850160208701610231565b601f01601f19169190910160400192915050565b61029c806103c86000396000f3fe60806040523661001357610011610017565b005b6100115b61005061004b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b610081565b565b90565b606061007a8383604051806060016040528060278152602001610240602791396100a5565b9392505050565b3660008037600080366000845af43d6000803e8080156100a0573d6000f35b3d6000fd5b60606001600160a01b0384163b6101125760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161012d91906101f0565b600060405180830381855af49150503d8060008114610168576040519150601f19603f3d011682016040523d82523d6000602084013e61016d565b606091505b509150915061017d828286610187565b9695505050505050565b6060831561019657508161007a565b8251156101a65782518084602001fd5b8160405162461bcd60e51b8152600401610109919061020c565b60005b838110156101db5781810151838201526020016101c3565b838111156101ea576000848401525b50505050565b600082516102028184602087016101c0565b9190910192915050565b602081526000825180602084015261022b8160408501602087016101c0565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122006108c1246a0a89b20e860cd835de4e438789f40f69cfafd9cd667687d38322564736f6c634300080c0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",Iz=t=>t.length>1;class hI extends R1{constructor(){for(var e=arguments.length,n=new Array(e),a=0;a<e;a++)n[a]=arguments[a];Iz(n)?super(...n):super(Pr,OC,n[0])}deploy(e,n,a){return super.deploy(e,n,a||{})}getDeployTransaction(e,n,a){return super.getDeployTransaction(e,n,a||{})}attach(e){return super.attach(e)}connect(e){return super.connect(e)}static createInterface(){return new A1(Pr)}static connect(e,n){return new J(e,Pr,n)}}KC(hI,"bytecode",OC);KC(hI,"abi",Pr);const vz=Object.freeze(Object.defineProperty({__proto__:null,TWProxy__factory:hI},Symbol.toStringTag,{value:"Module"})),v1=xn.forwardRef((t,e)=>{let{src:n,alt:a,poster:r,style:i}=t;return h("div",{style:{...i},ref:e,children:n?h("model-viewer",{src:n,alt:a||"3D Model","camera-controls":!0,poster:r||null,style:{width:"100%",height:"100%"}}):null})});v1.displayName="ModelViewer";const Cz=Object.freeze(Object.defineProperty({__proto__:null,ModelViewer:v1,default:v1},Symbol.toStringTag,{value:"Module"}));class kz extends Zk{constructor(e){super(),W(this,"events",new Nt),W(this,"accounts",[]),W(this,"chainId",1),W(this,"pending",!1),W(this,"wc",void 0),W(this,"bridge","https://bridge.walletconnect.org"),W(this,"qrcode",!0),W(this,"qrcodeModalOptions",void 0),W(this,"opts",void 0),this.opts=e,this.chainId=(e==null?void 0:e.chainId)||this.chainId,this.wc=this.register(e)}get connected(){return typeof this.wc<"u"&&this.wc.connected}get connecting(){return this.pending}get connector(){return this.wc=this.register(this.opts),this.wc}on(e,n){this.events.on(e,n)}once(e,n){this.events.once(e,n)}off(e,n){this.events.off(e,n)}removeListener(e,n){this.events.removeListener(e,n)}async open(e){if(this.connected){this.onOpen();return}return new Promise((n,a)=>{this.on("error",r=>{a(r)}),this.on("open",()=>{n()}),this.create(e)})}async close(){typeof this.wc>"u"||(this.wc.connected&&this.wc.killSession(),this.onClose())}async send(e){this.wc=this.register(this.opts),this.connected||await this.open(),this.sendPayload(e).then(n=>this.events.emit("payload",n)).catch(n=>this.events.emit("payload",bI(e.id,n.message)))}async sendAsync(e){console.log("sendAsync",e)}register(e){if(this.wc)return this.wc;this.opts=e||this.opts,this.bridge=e!=null&&e.connector?e.connector.bridge:(e==null?void 0:e.bridge)||"https://bridge.walletconnect.org",this.qrcode=typeof(e==null?void 0:e.qrcode)>"u"||e.qrcode!==!1,this.chainId=typeof(e==null?void 0:e.chainId)<"u"?e.chainId:this.chainId,this.qrcodeModalOptions=e==null?void 0:e.qrcodeModalOptions;const n={bridge:this.bridge,qrcodeModal:this.qrcode?Xk:void 0,qrcodeModalOptions:this.qrcodeModalOptions,storageId:e==null?void 0:e.storageId,signingMethods:e==null?void 0:e.signingMethods,clientMeta:e==null?void 0:e.clientMeta,session:e==null?void 0:e.session};if(this.wc=typeof(e==null?void 0:e.connector)<"u"?e.connector:new Jk(n),typeof this.wc>"u")throw new Error("Failed to register WalletConnect connector");return this.wc.accounts.length&&(this.accounts=this.wc.accounts),this.wc.chainId&&(this.chainId=this.wc.chainId),this.registerConnectorEvents(),this.wc}onOpen(e){this.pending=!1,e&&(this.wc=e),this.events.emit("open")}onClose(){this.pending=!1,this.wc&&(this.wc=void 0),this.events.emit("close")}onError(e){let n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"Failed or Rejected Request",a=arguments.length>2&&arguments[2]!==void 0?arguments[2]:-32e3;const r={id:e.id,jsonrpc:e.jsonrpc,error:{code:a,message:n}};return this.events.emit("payload",r),r}create(e){this.wc=this.register(this.opts),this.chainId=e||this.chainId,!(this.connected||this.pending)&&(this.pending=!0,this.registerConnectorEvents(),this.wc.createSession({chainId:this.chainId}).then(()=>this.events.emit("created")).catch(n=>this.events.emit("error",n)))}registerConnectorEvents(){this.wc=this.register(this.opts),this.wc.on("connect",e=>{var n,a;if(e){this.events.emit("error",e);return}this.accounts=((n=this.wc)==null?void 0:n.accounts)||[],this.chainId=((a=this.wc)==null?void 0:a.chainId)||this.chainId,this.onOpen()}),this.wc.on("disconnect",e=>{if(e){this.events.emit("error",e);return}this.onClose()}),this.wc.on("modal_closed",()=>{this.events.emit("error",new Error("User closed modal"))}),this.wc.on("session_update",(e,n)=>{const{accounts:a,chainId:r}=n.params[0];(!this.accounts||a&&this.accounts!==a)&&(this.accounts=a,this.events.emit("accountsChanged",a)),(!this.chainId||r&&this.chainId!==r)&&(this.chainId=r,this.events.emit("chainChanged",r))})}async sendPayload(e){this.wc=this.register(this.opts);try{const n=await this.wc.unsafeSend(e);return this.sanitizeResponse(n)}catch(n){return this.onError(e,n.message)}}sanitizeResponse(e){return typeof e.error<"u"&&typeof e.error.code>"u"?bI(e.id,e.error.message):e}}var Ez=kz;class xz{constructor(e){W(this,"events",new Nt),W(this,"rpc",void 0),W(this,"signer",void 0),W(this,"http",void 0),this.rpc={infuraId:e==null?void 0:e.infuraId,custom:e==null?void 0:e.rpc},this.signer=new gI(new Ez(e));const n=this.signer.connection.chainId||(e==null?void 0:e.chainId)||1;this.http=this.setHttpProvider(n),this.registerEventListeners()}get connected(){return this.signer.connection.connected}get connector(){return this.signer.connection.connector}get accounts(){return this.signer.connection.accounts}get chainId(){return this.signer.connection.chainId}get rpcUrl(){var e;return((e=this.http)==null?void 0:e.connection).url||""}async request(e){switch(e.method){case"eth_requestAccounts":return await this.connect(),this.signer.connection.accounts;case"eth_accounts":return this.signer.connection.accounts;case"eth_chainId":return this.signer.connection.chainId}if(jk.includes(e.method))return this.signer.request(e);if(typeof this.http>"u")throw new Error(`Cannot request JSON-RPC method (${e.method}) without provided rpc url`);return this.http.request(e)}async enable(){return await this.request({method:"eth_requestAccounts"})}async connect(){this.signer.connection.connected||await this.signer.connect()}async disconnect(){this.signer.connection.connected&&await this.signer.disconnect()}on(e,n){this.events.on(e,n)}once(e,n){this.events.once(e,n)}removeListener(e,n){this.events.removeListener(e,n)}off(e,n){this.events.off(e,n)}get isWalletConnect(){return!0}registerEventListeners(){this.signer.connection.on("accountsChanged",e=>{this.events.emit("accountsChanged",e)}),this.signer.connection.on("chainChanged",e=>{this.http=this.setHttpProvider(e),this.events.emit("chainChanged",e)}),this.connector.on("display_uri",(e,n)=>{this.events.emit("display_uri",e,n)}),this.connector.on("call_request_sent",(e,n)=>{this.events.emit("call_request_sent",e,n)}),this.signer.on("disconnect",()=>{this.events.emit("disconnect")})}setHttpProvider(e){const n=Vk(e,this.rpc);return typeof n>"u"?void 0:new gI(new Gk(n))}}const Rz=Object.freeze(Object.defineProperty({__proto__:null,default:xz},Symbol.toStringTag,{value:"Module"}));export{H$ as C,Tq as T,bq as W,eO as a,gq as b,ur as u};
