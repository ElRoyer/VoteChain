const a=(i,t)=>function(){const f=t.promiseModule,r=new Array(arguments.length);for(let e=0;e<arguments.length;e++)r[e]=arguments[e];return new f((e,s)=>{t.errorFirst?r.push(function(n,l){if(t.multiArgs){const u=new Array(arguments.length-1);for(let c=1;c<arguments.length;c++)u[c-1]=arguments[c];n?(u.unshift(n),s(u)):e(u)}else n?s(n):e(l)}):r.push(function(n){if(t.multiArgs){const l=new Array(arguments.length-1);for(let u=0;u<arguments.length;u++)l[u]=arguments[u];e(l)}else e(n)}),i.apply(this,r)})};var g=(i,t)=>{t=Object.assign({exclude:[/.+(Sync|Stream)$/],errorFirst:!0,promiseModule:Promise},t);const f=e=>{const s=n=>typeof n=="string"?e===n:n.test(e);return t.include?t.include.some(s):!t.exclude.some(s)};let r;typeof i=="function"?r=function(){return t.excludeMain?i.apply(this,arguments):a(i,t).apply(this,arguments)}:r=Object.create(Object.getPrototypeOf(i));for(const e in i){const s=i[e];r[e]=typeof s=="function"&&f(e)?a(s,t):s}return r};export{g as p};
